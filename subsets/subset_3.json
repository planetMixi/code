{
    "schema":{
        "fields":[
            {
                "name":"index",
                "type":"integer"
            },
            {
                "name":"vuln_id",
                "type":"string"
            },
            {
                "name":"cwe_id",
                "type":"string"
            },
            {
                "name":"score",
                "type":"number"
            },
            {
                "name":"chain",
                "type":"string"
            },
            {
                "name":"dataset",
                "type":"string"
            },
            {
                "name":"summary",
                "type":"string"
            },
            {
                "name":"published_date",
                "type":"string"
            },
            {
                "name":"chain_len",
                "type":"integer"
            },
            {
                "name":"project",
                "type":"string"
            },
            {
                "name":"commit_href",
                "type":"string"
            },
            {
                "name":"commit_sha",
                "type":"string"
            },
            {
                "name":"patch",
                "type":"string"
            },
            {
                "name":"chain_ord",
                "type":"string"
            },
            {
                "name":"before_first_fix_commit",
                "type":"string"
            },
            {
                "name":"last_fix_commit",
                "type":"string"
            },
            {
                "name":"chain_ord_pos",
                "type":"number"
            },
            {
                "name":"commit_datetime",
                "type":"string"
            },
            {
                "name":"message",
                "type":"string"
            },
            {
                "name":"author",
                "type":"string"
            },
            {
                "name":"comments",
                "type":"string"
            },
            {
                "name":"stats",
                "type":"string"
            },
            {
                "name":"files",
                "type":"string"
            },
            {
                "name":"message_norm",
                "type":"string"
            },
            {
                "name":"language",
                "type":"string"
            },
            {
                "name":"entities",
                "type":"string"
            },
            {
                "name":"classification_level_1",
                "type":"string"
            },
            {
                "name":"classification_level_2",
                "type":"string"
            },
            {
                "name":"list_files",
                "type":"string"
            },
            {
                "name":"num_files",
                "type":"number"
            }
        ],
        "primaryKey":[
            "index"
        ],
        "pandas_version":"1.4.0"
    },
    "data":[
        {
            "index":399,
            "vuln_id":"GHSA-49x3-8228-3w3m",
            "cwe_id":"{'CWE-1333'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/cdr\/code-server\/commit\/ca617df135e78833f93c8320cb2d2cf8bba809f5'}",
            "dataset":"osv",
            "summary":"Inefficient Regular Expression Complexity in code-server code-server is vulnerable to Inefficient Regular Expression Complexity",
            "published_date":"2021-09-20",
            "chain_len":1,
            "project":"https:\/\/github.com\/cdr\/code-server",
            "commit_href":"https:\/\/github.com\/cdr\/code-server\/commit\/ca617df135e78833f93c8320cb2d2cf8bba809f5",
            "commit_sha":"ca617df135e78833f93c8320cb2d2cf8bba809f5",
            "patch":"SINGLE",
            "chain_ord":"['ca617df135e78833f93c8320cb2d2cf8bba809f5']",
            "before_first_fix_commit":"{'bc3acb071e5393944627e16b2b54dc296a17d2d6'}",
            "last_fix_commit":"ca617df135e78833f93c8320cb2d2cf8bba809f5",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/11\/2021, 13:10:47",
            "message":"[Security] Fix ReDoS\n\nFix potential ReDoS",
            "author":"ready-research",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/node\/util.ts': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/coder\/code-server\/raw\/ca617df135e78833f93c8320cb2d2cf8bba809f5\/src%2Fnode%2Futil.ts', 'patch': '@@ -20,7 +20,7 @@ export interface Paths {\\n \\n \/\/ From https:\/\/github.com\/chalk\/ansi-regex\\n const pattern = [\\n-  \"[\\\\\\\\u001B\\\\\\\\u009B][[\\\\\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\\\\\d]*(?:;[-a-zA-Z\\\\\\\\d\\\\\\\\\/#&.:=?%@~_]*)*)?\\\\\\\\u0007)\",\\n+  \"[\\\\\\\\u001B\\\\\\\\u009B][[\\\\\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\\\\\d\\\\\\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\\\\\d]+(?:;[-a-zA-Z\\\\\\\\d\\\\\\\\\/#&.:=?%@~_]*)*)?\\\\\\\\u0007)\",\\n   \"(?:(?:\\\\\\\\d{1,4}(?:;\\\\\\\\d{0,4})*)?[\\\\\\\\dA-PR-TZcf-ntqry=><~]))\",\\n ].join(\"|\")\\n const re = new RegExp(pattern, \"g\")'}}",
            "message_norm":"[security] fix redos\n\nfix potential redos",
            "language":"es",
            "entities":"[('security', 'SECWORD', ''), ('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('fix', 'ACTION', ''), ('redos', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/node\/util.ts'])",
            "num_files":1.0
        },
        {
            "index":1009,
            "vuln_id":"GHSA-7c82-mp33-r854",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/snapappointments\/bootstrap-select\/commit\/ab6e068748040cf3cda5859f6349b382402b8767'}",
            "dataset":"osv",
            "summary":"Cross-site scripting in bootstrap-select bootstrap-select before 1.13.6 allows Cross-Site Scripting (XSS). It does not escape title values in OPTION elements. This may allow attackers to execute arbitrary JavaScript in a victim's browser.",
            "published_date":"2021-05-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/snapappointments\/bootstrap-select",
            "commit_href":"https:\/\/github.com\/snapappointments\/bootstrap-select\/commit\/ab6e068748040cf3cda5859f6349b382402b8767",
            "commit_sha":"ab6e068748040cf3cda5859f6349b382402b8767",
            "patch":"SINGLE",
            "chain_ord":"['ab6e068748040cf3cda5859f6349b382402b8767']",
            "before_first_fix_commit":"{'bbd306de22fbcede9016cf7e335fd8ce34d6629d'}",
            "last_fix_commit":"ab6e068748040cf3cda5859f6349b382402b8767",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/07\/2019, 23:05:50",
            "message":"add sanitize option for data-content (#2199)",
            "author":"Casey Holzer",
            "comments":null,
            "stats":"{'additions': 167, 'deletions': 6, 'total': 173}",
            "files":"{'js\/bootstrap-select.js': {'additions': 167, 'deletions': 6, 'changes': 173, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snapappointments\/bootstrap-select\/raw\/ab6e068748040cf3cda5859f6349b382402b8767\/js%2Fbootstrap-select.js', 'patch': \"@@ -1,6 +1,128 @@\\n (function ($) {\\n   'use strict';\\n \\n+  var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];\\n+\\n+  var uriAttrs = [\\n+    'background',\\n+    'cite',\\n+    'href',\\n+    'itemtype',\\n+    'longdesc',\\n+    'poster',\\n+    'src',\\n+    'xlink:href'\\n+  ];\\n+\\n+  var ARIA_ATTRIBUTE_PATTERN = \/^aria-[\\\\w-]*$\/i;\\n+\\n+  var DefaultWhitelist = {\\n+    \/\/ Global attributes allowed on any supplied element below.\\n+    '*': ['class', 'dir', 'id', 'lang', 'role', 'tabindex', 'style', ARIA_ATTRIBUTE_PATTERN],\\n+    a: ['target', 'href', 'title', 'rel'],\\n+    area: [],\\n+    b: [],\\n+    br: [],\\n+    col: [],\\n+    code: [],\\n+    div: [],\\n+    em: [],\\n+    hr: [],\\n+    h1: [],\\n+    h2: [],\\n+    h3: [],\\n+    h4: [],\\n+    h5: [],\\n+    h6: [],\\n+    i: [],\\n+    img: ['src', 'alt', 'title', 'width', 'height'],\\n+    li: [],\\n+    ol: [],\\n+    p: [],\\n+    pre: [],\\n+    s: [],\\n+    small: [],\\n+    span: [],\\n+    sub: [],\\n+    sup: [],\\n+    strong: [],\\n+    u: [],\\n+    ul: []\\n+  }\\n+\\n+  \/**\\n+   * A pattern that recognizes a commonly useful subset of URLs that are safe.\\n+   *\\n+   * Shoutout to Angular 7 https:\/\/github.com\/angular\/angular\/blob\/7.2.4\/packages\/core\/src\/sanitization\/url_sanitizer.ts\\n+   *\/\\n+  var SAFE_URL_PATTERN = \/^(?:(?:https?|mailto|ftp|tel|file):|[^&:\/?#]*(?:[\/?#]|$))\/gi;\\n+\\n+  \/**\\n+   * A pattern that matches safe data URLs. Only matches image, video and audio types.\\n+   *\\n+   * Shoutout to Angular 7 https:\/\/github.com\/angular\/angular\/blob\/7.2.4\/packages\/core\/src\/sanitization\/url_sanitizer.ts\\n+   *\/\\n+  var DATA_URL_PATTERN = \/^data:(?:image\\\\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\\\\/(?:mpeg|mp4|ogg|webm)|audio\\\\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$\/i;\\n+\\n+  function allowedAttribute (attr, allowedAttributeList) {\\n+    var attrName = attr.nodeName.toLowerCase()\\n+\\n+    if ($.inArray(attrName, allowedAttributeList) !== -1) {\\n+      if ($.inArray(attrName, uriAttrs) !== -1) {\\n+        return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN))\\n+      }\\n+\\n+      return true\\n+    }\\n+\\n+    var regExp = $(allowedAttributeList).filter(function (index, value) {\\n+      return value instanceof RegExp\\n+    })\\n+\\n+    \/\/ Check if a regular expression validates the attribute.\\n+    for (var i = 0, l = regExp.length; i < l; i++) {\\n+      if (attrName.match(regExp[i])) {\\n+        return true\\n+      }\\n+    }\\n+\\n+    return false\\n+  }\\n+\\n+  function sanitizeHtml (unsafeElements, whiteList, sanitizeFn) {\\n+    if (sanitizeFn && typeof sanitizeFn === 'function') {\\n+      return sanitizeFn(unsafeElements);\\n+    }\\n+\\n+    var whitelistKeys = Object.keys(whiteList);\\n+\\n+    for (var i = 0, len = unsafeElements.length; i < len; i++) {\\n+      var elements = unsafeElements[i].querySelectorAll('*');\\n+\\n+      for (var j = 0, len2 = elements.length; j < len2; j++) {\\n+        var el = elements[j];\\n+        var elName = el.nodeName.toLowerCase();\\n+\\n+        if (whitelistKeys.indexOf(elName) === -1) {\\n+          el.parentNode.removeChild(el);\\n+\\n+          continue;\\n+        }\\n+\\n+        var attributeList = [].slice.call(el.attributes);\\n+        var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);\\n+\\n+        for (var k = 0, len3 = attributeList.length; k < len3; k++) {\\n+          var attr = attributeList[k];\\n+\\n+          if (!allowedAttribute(attr, whitelistedAttributes)) {\\n+            el.removeAttribute(attr.nodeName);\\n+          }\\n+        }\\n+      }\\n+    }\\n+  }\\n+\\n   \/\/ Polyfill for browsers with no classList support\\n   \/\/ Remove in v2\\n   if (!('classList' in document.createElement('_'))) {\\n@@ -745,7 +867,10 @@\\n     dropdownAlignRight: false,\\n     windowPadding: 0,\\n     virtualScroll: 600,\\n-    display: false\\n+    display: false,\\n+    sanitize: true,\\n+    sanitizeFn: null,\\n+    whiteList: DefaultWhitelist\\n   };\\n \\n   if (version.major === '4') {\\n@@ -1100,13 +1225,35 @@\\n                 emptyMenu = menuInner.firstChild.cloneNode(false),\\n                 marginTop,\\n                 marginBottom,\\n-                elements = isVirtual === true ? that.selectpicker.view.visibleElements : that.selectpicker.current.elements;\\n+                elements = isVirtual === true ? that.selectpicker.view.visibleElements : that.selectpicker.current.elements,\\n+                toSanitize = [];\\n \\n             \/\/ replace the existing UL with an empty one - this is faster than $.empty()\\n             menuInner.replaceChild(emptyMenu, menuInner.firstChild);\\n \\n             for (var i = 0, visibleElementsLen = elements.length; i < visibleElementsLen; i++) {\\n-              menuFragment.appendChild(elements[i]);\\n+              var element = elements[i],\\n+                  elText,\\n+                  elementData;\\n+\\n+              if (that.options.sanitize) {\\n+                elText = element.lastChild;\\n+\\n+                if (elText) {\\n+                  elementData = that.selectpicker.current.data[i + that.selectpicker.view.position0].data;\\n+\\n+                  if (elementData && elementData.content && !elementData.sanitized) {\\n+                    toSanitize.push(elText);\\n+                    elementData.sanitized = true;\\n+                  }\\n+                }\\n+              }\\n+\\n+              menuFragment.appendChild(element);\\n+            }\\n+\\n+            if (that.options.sanitize && toSanitize.length) {\\n+              sanitizeHtml(toSanitize, that.options.whiteList, that.options.sanitizeFn);\\n             }\\n \\n             if (isVirtual === true) {\\n@@ -1469,7 +1616,8 @@\\n           multipleSeparator = document.createTextNode(this.options.multipleSeparator),\\n           titleFragment = elementTemplates.fragment.cloneNode(false),\\n           showCount,\\n-          countMax;\\n+          countMax,\\n+          hasContent = false;\\n \\n       this.togglePlaceholder();\\n \\n@@ -1506,6 +1654,7 @@\\n                 titleOptions.text = option.title;\\n               } else if (thisData.content && that.options.showContent) {\\n                 titleOptions.optionContent = thisData.content.toString();\\n+                hasContent = true;\\n               } else {\\n                 if (that.options.showIcon) {\\n                   titleOptions.optionIcon = thisData.icon;\\n@@ -1554,6 +1703,10 @@\\n       \/\/ strip all HTML tags and trim the result, then unescape any escaped tags\\n       this.$button[0].title = titleFragment.textContent.replace(\/<[^>]*>?\/g, '').trim();\\n \\n+      if (this.options.sanitize && hasContent) {\\n+        sanitizeHtml([titleFragment], that.options.whiteList, that.options.sanitizeFn);\\n+      }\\n+\\n       buttonInner.innerHTML = '';\\n       buttonInner.appendChild(titleFragment);\\n \\n@@ -2833,8 +2986,16 @@\\n             options = typeof _option == 'object' && _option;\\n \\n         if (!data) {\\n-          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, $this.data(), options);\\n-          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), $this.data().template, options.template);\\n+          var dataAttributes = $this.data();\\n+\\n+          for (var dataAttr in dataAttributes) {\\n+            if (dataAttributes.hasOwnProperty(dataAttr) && $.inArray(dataAttr, DISALLOWED_ATTRIBUTES) !== -1) {\\n+              delete dataAttributes[dataAttr];\\n+            }\\n+          }\\n+\\n+          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, dataAttributes, options);\\n+          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), dataAttributes.template, options.template);\\n           $this.data('selectpicker', (data = new Selectpicker(this, config)));\\n         } else if (options) {\\n           for (var i in options) {\"}}",
            "message_norm":"add sanitize option for data-content (#2199)",
            "language":"it",
            "entities":"[('add', 'ACTION', ''), ('sanitize', 'SECWORD', ''), ('#2199', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['js\/bootstrap-select.js'])",
            "num_files":1.0
        },
        {
            "index":2928,
            "vuln_id":"GHSA-rf66-hmqf-q3fc",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/snipe\/snipe-it\/pull\/6831\/commits\/5848d9a10c7d62c73ff6a3858edfae96a429402a'}",
            "dataset":"osv",
            "summary":"Improper Neutralization of Input During Web Page Generation in Select2 In Select2 through 4.0.5, as used in Snipe-IT and other products, rich selectlists allow XSS. This affects use cases with Ajax remote data loading when HTML templates are used to display listbox data.",
            "published_date":"2022-05-14",
            "chain_len":1,
            "project":"https:\/\/github.com\/snipe\/snipe-it",
            "commit_href":"https:\/\/github.com\/snipe\/snipe-it\/pull\/6831\/commits\/5848d9a10c7d62c73ff6a3858edfae96a429402a",
            "commit_sha":"5848d9a10c7d62c73ff6a3858edfae96a429402a",
            "patch":"SINGLE",
            "chain_ord":"['5848d9a10c7d62c73ff6a3858edfae96a429402a']",
            "before_first_fix_commit":"{'bd8548325d6b4210015bd0ddeb144c61ae8949be'}",
            "last_fix_commit":"5848d9a10c7d62c73ff6a3858edfae96a429402a",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/19\/2019, 02:29:30",
            "message":"Janky fix for Select2 bug",
            "author":"snipe",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 1, 'total': 13}",
            "files":"{'resources\/assets\/js\/snipeit.js': {'additions': 12, 'deletions': 1, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/5848d9a10c7d62c73ff6a3858edfae96a429402a\/resources%2Fassets%2Fjs%2Fsnipeit.js', 'patch': '@@ -260,7 +260,18 @@ $(document).ready(function () {\\n     }\\n \\n     function formatDataSelection (datalist) {\\n-        return datalist.text;\\n+        \/\/ This a heinous workaround for a known bug in Select2.\\n+        \/\/ Without this, the rich selectlists are vulnerable to XSS.\\n+        \/\/ Many thanks to @uberbrady for this fix. It ain\\'t pretty,\\n+        \/\/ but it resolves the issue until Select2 addresses it on their end.\\n+        \/\/\\n+        \/\/ Bug was reported in 2016 :{\\n+        \/\/ https:\/\/github.com\/select2\/select2\/issues\/4587\\n+\\n+        return datalist.text.replace(\/>\/g, \\'&gt;\\')\\n+            .replace(\/<\/g, \\'&lt;\\')\\n+            .replace(\/\"\/g, \\'&quot;\\')\\n+            .replace(\/\\'\/g, \\'&#039;\\');\\n     }\\n \\n     \/\/ This handles the radio button selectors for the checkout-to-foo options'}}",
            "message_norm":"janky fix for select2 bug",
            "language":"en",
            "entities":"[('bug', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['resources\/assets\/js\/snipeit.js'])",
            "num_files":1.0
        },
        {
            "index":2011,
            "vuln_id":"GHSA-h6xx-pmxh-3wgp",
            "cwe_id":"{'CWE-285', 'CWE-287'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/etcd-io\/etcd\/commit\/bf9d0d8291dc71ecbfb2690612954e1a298154b2', 'https:\/\/github.com\/etcd-io\/etcd\/commit\/0191509637546621d6f2e18e074e955ab8ef374d'}",
            "dataset":"osv",
            "summary":"Improper Authentication in etcd etcd versions 3.2.x before 3.2.26 and 3.3.x before 3.3.11 are vulnerable to an improper authentication issue when role-based access control (RBAC) is used and client-cert-auth is enabled. If an etcd client server TLS certificate contains a Common Name (CN) which matches a valid RBAC username, a remote attacker may authenticate as that user with any valid (trusted) client certificate in a REST API request to the gRPC-gateway.",
            "published_date":"2022-02-15",
            "chain_len":2,
            "project":"https:\/\/github.com\/etcd-io\/etcd",
            "commit_href":"https:\/\/github.com\/etcd-io\/etcd\/commit\/bf9d0d8291dc71ecbfb2690612954e1a298154b2",
            "commit_sha":"bf9d0d8291dc71ecbfb2690612954e1a298154b2",
            "patch":"MULTI",
            "chain_ord":"['0191509637546621d6f2e18e074e955ab8ef374d', 'bf9d0d8291dc71ecbfb2690612954e1a298154b2']",
            "before_first_fix_commit":"{'9c6b407e7d45b89c72c45a065294b6eac91888ab'}",
            "last_fix_commit":"bf9d0d8291dc71ecbfb2690612954e1a298154b2",
            "chain_ord_pos":2.0,
            "commit_datetime":"01\/02\/2019, 20:54:40",
            "message":"auth: disable CommonName auth for gRPC-gateway\n\nSigned-off-by: Sam Batschelet <sbatsche@redhat.com>",
            "author":"Sam Batschelet",
            "comments":null,
            "stats":"{'additions': 21, 'deletions': 0, 'total': 21}",
            "files":"{'auth\/store.go': {'additions': 21, 'deletions': 0, 'changes': 21, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/etcd-io\/etcd\/raw\/bf9d0d8291dc71ecbfb2690612954e1a298154b2\/auth%2Fstore.go', 'patch': '@@ -1166,6 +1166,27 @@ func (as *authStore) AuthInfoFromTLS(ctx context.Context) (ai *AuthInfo) {\\n \\t\\t\\tUsername: chains[0].Subject.CommonName,\\n \\t\\t\\tRevision: as.Revision(),\\n \\t\\t}\\n+\\t\\tmd, ok := metadata.FromIncomingContext(ctx)\\n+\\t\\tif !ok {\\n+\\t\\t\\treturn nil\\n+\\t\\t}\\n+\\n+\\t\\t\/\/ gRPC-gateway proxy request to etcd server includes Grpcgateway-Accept\\n+\\t\\t\/\/ header. The proxy uses etcd client server certificate. If the certificate\\n+\\t\\t\/\/ has a CommonName we should never use this for authentication.\\n+\\t\\tif gw := md[\"grpcgateway-accept\"]; len(gw) > 0 {\\n+\\t\\t\\tif as.lg != nil {\\n+\\t\\t\\t\\tas.lg.Warn(\\n+\\t\\t\\t\\t\\t\"ignoring common name in gRPC-gateway proxy request\",\\n+\\t\\t\\t\\t\\tzap.String(\"common-name\", ai.Username),\\n+\\t\\t\\t\\t\\tzap.String(\"user-name\", ai.Username),\\n+\\t\\t\\t\\t\\tzap.Uint64(\"revision\", ai.Revision),\\n+\\t\\t\\t\\t)\\n+\\t\\t\\t} else {\\n+\\t\\t\\t\\tplog.Warningf(\"ignoring common name in gRPC-gateway proxy request %s\", ai.Username)\\n+\\t\\t\\t}\\n+\\t\\t\\treturn nil\\n+\\t\\t}\\n \\t\\tif as.lg != nil {\\n \\t\\t\\tas.lg.Debug(\\n \\t\\t\\t\\t\"found command name\",'}}",
            "message_norm":"auth: disable commonname auth for grpc-gateway\n\nsigned-off-by: sam batschelet <sbatsche@redhat.com>",
            "language":"en",
            "entities":"[('auth', 'SECWORD', ''), ('auth', 'SECWORD', ''), ('sbatsche@redhat.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['auth\/store.go'])",
            "num_files":1.0
        },
        {
            "index":2603,
            "vuln_id":"GHSA-pm9p-9926-w68m",
            "cwe_id":"{'CWE-20'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/jfhbrook\/node-ecstatic\/commit\/71ce93988ead4b561a8592168c72143907189f01'}",
            "dataset":"osv",
            "summary":"Denial of Service in ecstatic `ecstatic`, a simple static file server middleware, is vulnerable to denial of service. If a payload with a large number of null bytes (`%00`) is provided by an attacker it can crash ecstatic by running it out of memory.\n\n\n[Results from the original advisory](https:\/\/www.checkmarx.com\/advisories\/denial-of-service-dos-vulnerability-in-ecstatic-npm-package\/)\n\n```\nA payload of 22kB caused a lag of 1 second,\nA payload of 35kB caused a lag of 3 seconds,\nA payload of 86kB caused the server to crash\n```\n\n\n## Recommendation\n\nUpdate to version 2.0.0 or later.",
            "published_date":"2017-12-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/jfhbrook\/node-ecstatic",
            "commit_href":"https:\/\/github.com\/jfhbrook\/node-ecstatic\/commit\/71ce93988ead4b561a8592168c72143907189f01",
            "commit_sha":"71ce93988ead4b561a8592168c72143907189f01",
            "patch":"SINGLE",
            "chain_ord":"['71ce93988ead4b561a8592168c72143907189f01']",
            "before_first_fix_commit":"{'2fceb40fb9eeaaba29f5d2c3b63583fefb04a130'}",
            "last_fix_commit":"71ce93988ead4b561a8592168c72143907189f01",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/09\/2016, 16:37:39",
            "message":"Remove stripping of null bytes\n\nThis was at one point necessary because of an old bug in url.parse\n\nSee: https:\/\/github.com\/jfhbrook\/node-ecstatic\/issues\/16#issuecomment-3039914\nSee: https:\/\/github.com\/jfhbrook\/node-ecstatic\/commit\/43f7e72a31524f88f47e367c3cc3af710e67c9f4\n\nBut this opens up a regex dos attack vector! D:\n\nBased on some research (ie asking #node-dev if this is still an issue),\nit's *probably* not an issue. :)",
            "author":"Joshua Holbrook",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 0, 'total': 12}",
            "files":"{'lib\/ecstatic.js': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jfhbrook\/node-ecstatic\/raw\/71ce93988ead4b561a8592168c72143907189f01\/lib%2Fecstatic.js', 'patch': \"@@ -52,9 +52,21 @@ var ecstatic = module.exports = function (dir, options) {\\n   return function middleware (req, res, next) {\\n \\n     \/\/ Strip any null bytes from the url\\n+    \/\/ This was at one point necessary because of an old bug in url.parse\\n+    \/\/\\n+    \/\/ See: https:\/\/github.com\/jfhbrook\/node-ecstatic\/issues\/16#issuecomment-3039914\\n+    \/\/ See: https:\/\/github.com\/jfhbrook\/node-ecstatic\/commit\/43f7e72a31524f88f47e367c3cc3af710e67c9f4\\n+    \/\/\\n+    \/\/ But this opens up a regex dos attack vector! D:\\n+    \/\/\\n+    \/\/ Based on some research (ie asking #node-dev if this is still an issue),\\n+    \/\/ it's *probably* not an issue. :)\\n+    \/*\\n     while(req.url.indexOf('%00') !== -1) {\\n       req.url = req.url.replace(\/\\\\%00\/g, '');\\n     }\\n+    *\/\\n+\\n     \/\/ Figure out the path for the file from the given url\\n     var parsed = url.parse(req.url);\\n     try {\"}}",
            "message_norm":"remove stripping of null bytes\n\nthis was at one point necessary because of an old bug in url.parse\n\nsee: https:\/\/github.com\/jfhbrook\/node-ecstatic\/issues\/16#issuecomment-3039914\nsee: https:\/\/github.com\/jfhbrook\/node-ecstatic\/commit\/43f7e72a31524f88f47e367c3cc3af710e67c9f4\n\nbut this opens up a regex dos attack vector! d:\n\nbased on some research (ie asking #node-dev if this is still an issue),\nit's *probably* not an issue. :)",
            "language":"en",
            "entities":"[('remove', 'ACTION', ''), ('bug', 'FLAW', ''), ('https:\/\/github.com\/jfhbrook\/node-ecstatic\/issues\/16#issuecomment-3039914', 'FLAW', ''), ('https:\/\/github.com\/jfhbrook\/node-ecstatic\/commit\/43f7e72a31524f88f47e367c3cc3af710e67c9f4', 'SHA', 'github_url_sha'), ('dos', 'SECWORD', ''), ('attack vector', 'SECWORD', ''), ('issue', 'FLAW', ''), ('issue', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/ecstatic.js'])",
            "num_files":1.0
        },
        {
            "index":3418,
            "vuln_id":"GHSA-xfhh-g9f5-x4m4",
            "cwe_id":"{'CWE-400'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/socketio\/socket.io-parser\/commit\/dcb942d24db97162ad16a67c2a0cf30875342d55'}",
            "dataset":"osv",
            "summary":"Resource exhaustion in socket.io-parser The `socket.io-parser` npm package before versions 3.3.2 and 3.4.1 allows attackers to cause a denial of service (memory consumption) via a large packet because a concatenation approach is used.",
            "published_date":"2021-06-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/socketio\/socket.io-parser",
            "commit_href":"https:\/\/github.com\/socketio\/socket.io-parser\/commit\/dcb942d24db97162ad16a67c2a0cf30875342d55",
            "commit_sha":"dcb942d24db97162ad16a67c2a0cf30875342d55",
            "patch":"SINGLE",
            "chain_ord":"['dcb942d24db97162ad16a67c2a0cf30875342d55']",
            "before_first_fix_commit":"{'a5d04354e6e98b5318d5276123b0b5a5e698bf8e'}",
            "last_fix_commit":"dcb942d24db97162ad16a67c2a0cf30875342d55",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/13\/2020, 05:37:32",
            "message":"fix: prevent DoS (OOM) via massive packets (#95)\n\nWhen maxHttpBufferSize is large (1e8 bytes), a payload of length 100MB\r\ncan be sent like so:\r\n\r\n99999991:422222222222222222222222222222222222222222222...\r\n\r\nThis massive packet can cause OOM via building up many many\r\n`ConsOneByteString` objects due to concatenation:\r\n99999989 `ConsOneByteString`s and then converting the massive integer to\r\na `Number`.\r\n\r\nThe performance can be improved to avoid this by using `substring`\r\nrather than building the string via concatenation.\r\n\r\nBelow I tried one payload of length 7e7 as the 1e8 payload took so\r\nlong to process that it timed out before running out of memory.\r\n\r\n```\r\n==== JS stack trace =========================================\r\n\r\n    0: ExitFrame [pc: 0x13c5b79]\r\nSecurity context: 0x152fe7b808d1 <JSObject>\r\n    1: decodeString [0x2dd385fb5d1] [\/node_modules\/socket.io-parser\/index.js:~276] [pc=0xf59746881be](this=0x175d34c42b69 <JSGlobal Object>,0x14eccff10fe1 <Very long string[69999990]>)\r\n    2: add [0x31fc2693da29] [\/node_modules\/socket.io-parser\/index.js:242] [bytecode=0xa7ed6554889 offset=11](this=0x0a2881be5069 <Decoder map = 0x3ceaa8bf48c9>,0x14eccff10fe1 <Very...\r\n\r\nFATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory\r\n 1: 0xa09830 node::Abort() [node]\r\n 2: 0xa09c55 node::OnFatalError(char const*, char const*) [node]\r\n 3: 0xb7d71e v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [node]\r\n 4: 0xb7da99 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [node]\r\n 5: 0xd2a1f5  [node]\r\n 6: 0xd2a886 v8::internal::Heap::RecomputeLimits(v8::internal::GarbageCollector) [node]\r\n 7: 0xd37105 v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::GCCallbackFlags) [node]\r\n 8: 0xd37fb5 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) [node]\r\n 9: 0xd3965f v8::internal::Heap::HandleGCRequest() [node]\r\n10: 0xce8395 v8::internal::StackGuard::HandleInterrupts() [node]\r\n11: 0x1042cb6 v8::internal::Runtime_StackGuard(int, unsigned long*, v8::internal::Isolate*) [node]\r\n12: 0x13c5b79  [node]\r\n```",
            "author":"bcaller",
            "comments":"{'com_1': {'author': 'abergmann', 'datetime': '01\/08\/2021, 09:15:14', 'body': '[CVE-2020-36049](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2020-36049) was assigned to this commit.'}}",
            "stats":"{'additions': 7, 'deletions': 10, 'total': 17}",
            "files":"{'index.js': {'additions': 7, 'deletions': 10, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/socketio\/socket.io-parser\/raw\/dcb942d24db97162ad16a67c2a0cf30875342d55\/index.js', 'patch': \"@@ -286,11 +286,9 @@ function decodeString(str) {\\n \\n   \/\/ look up attachments if type binary\\n   if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\\n-    var buf = '';\\n-    while (str.charAt(++i) !== '-') {\\n-      buf += str.charAt(i);\\n-      if (i == str.length) break;\\n-    }\\n+    var start = i + 1;\\n+    while (str.charAt(++i) !== '-' && i != str.length) {}\\n+    var buf = str.substring(start, i);\\n     if (buf != Number(buf) || str.charAt(i) !== '-') {\\n       throw new Error('Illegal attachments');\\n     }\\n@@ -299,31 +297,30 @@ function decodeString(str) {\\n \\n   \/\/ look up namespace (if any)\\n   if ('\/' === str.charAt(i + 1)) {\\n-    p.nsp = '';\\n+    var start = i + 1;\\n     while (++i) {\\n       var c = str.charAt(i);\\n       if (',' === c) break;\\n-      p.nsp += c;\\n       if (i === str.length) break;\\n     }\\n+    p.nsp = str.substring(start, i);\\n   } else {\\n     p.nsp = '\/';\\n   }\\n \\n   \/\/ look up id\\n   var next = str.charAt(i + 1);\\n   if ('' !== next && Number(next) == next) {\\n-    p.id = '';\\n+    var start = i + 1;\\n     while (++i) {\\n       var c = str.charAt(i);\\n       if (null == c || Number(c) != c) {\\n         --i;\\n         break;\\n       }\\n-      p.id += str.charAt(i);\\n       if (i === str.length) break;\\n     }\\n-    p.id = Number(p.id);\\n+    p.id = Number(str.substring(start, i + 1));\\n   }\\n \\n   \/\/ look up json data\"}}",
            "message_norm":"fix: prevent dos (oom) via massive packets (#95)\n\nwhen maxhttpbuffersize is large (1e8 bytes), a payload of length 100mb\r\ncan be sent like so:\r\n\r\n99999991:422222222222222222222222222222222222222222222...\r\n\r\nthis massive packet can cause oom via building up many many\r\n`consonebytestring` objects due to concatenation:\r\n99999989 `consonebytestring`s and then converting the massive integer to\r\na `number`.\r\n\r\nthe performance can be improved to avoid this by using `substring`\r\nrather than building the string via concatenation.\r\n\r\nbelow i tried one payload of length 7e7 as the 1e8 payload took so\r\nlong to process that it timed out before running out of memory.\r\n\r\n```\r\n==== js stack trace =========================================\r\n\r\n    0: exitframe [pc: 0x13c5b79]\r\nsecurity context: 0x152fe7b808d1 <jsobject>\r\n    1: decodestring [0x2dd385fb5d1] [\/node_modules\/socket.io-parser\/index.js:~276] [pc=0xf59746881be](this=0x175d34c42b69 <jsglobal object>,0x14eccff10fe1 <very long string[69999990]>)\r\n    2: add [0x31fc2693da29] [\/node_modules\/socket.io-parser\/index.js:242] [bytecode=0xa7ed6554889 offset=11](this=0x0a2881be5069 <decoder map = 0x3ceaa8bf48c9>,0x14eccff10fe1 <very...\r\n\r\nfatal error: ineffective mark-compacts near heap limit allocation failed - javascript heap out of memory\r\n 1: 0xa09830 node::abort() [node]\r\n 2: 0xa09c55 node::onfatalerror(char const*, char const*) [node]\r\n 3: 0xb7d71e v8::utils::reportoomfailure(v8::internal::isolate*, char const*, bool) [node]\r\n 4: 0xb7da99 v8::internal::v8::fatalprocessoutofmemory(v8::internal::isolate*, char const*, bool) [node]\r\n 5: 0xd2a1f5  [node]\r\n 6: 0xd2a886 v8::internal::heap::recomputelimits(v8::internal::garbagecollector) [node]\r\n 7: 0xd37105 v8::internal::heap::performgarbagecollection(v8::internal::garbagecollector, v8::gccallbackflags) [node]\r\n 8: 0xd37fb5 v8::internal::heap::collectgarbage(v8::internal::allocationspace, v8::internal::garbagecollectionreason, v8::gccallbackflags) [node]\r\n 9: 0xd3965f v8::internal::heap::handlegcrequest() [node]\r\n10: 0xce8395 v8::internal::stackguard::handleinterrupts() [node]\r\n11: 0x1042cb6 v8::internal::runtime_stackguard(int, unsigned long*, v8::internal::isolate*) [node]\r\n12: 0x13c5b79  [node]\r\n```",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('dos', 'SECWORD', ''), ('#95', 'ISSUE', ''), ('99999989', 'SHA', 'generic_sha'), ('improved', 'ACTION', ''), ('out of memory', 'SECWORD', ''), ('security', 'SECWORD', ''), ('decodestring', 'SECWORD', ''), ('add', 'ACTION', ''), ('decoder', 'SECWORD', ''), ('error', 'FLAW', ''), ('out of memory', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0
        },
        {
            "index":3314,
            "vuln_id":"GHSA-wrp6-9w7f-3wxg",
            "cwe_id":"{'CWE-79'}",
            "score":7.3,
            "chain":"{'https:\/\/github.com\/janeczku\/calibre-web\/commit\/7ad419dc8c12180e842a82118f4866ac3d074bc5'}",
            "dataset":"osv",
            "summary":"calibre-web is vulnerable to Cross-site Scripting calibre-web is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "published_date":"2022-01-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/janeczku\/calibre-web",
            "commit_href":"https:\/\/github.com\/janeczku\/calibre-web\/commit\/7ad419dc8c12180e842a82118f4866ac3d074bc5",
            "commit_sha":"7ad419dc8c12180e842a82118f4866ac3d074bc5",
            "patch":"SINGLE",
            "chain_ord":"['7ad419dc8c12180e842a82118f4866ac3d074bc5']",
            "before_first_fix_commit":"{'bcdc97641447965af486964537f3821f47b28874'}",
            "last_fix_commit":"7ad419dc8c12180e842a82118f4866ac3d074bc5",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/20\/2021, 12:40:23",
            "message":"Fix upload of cover and book formats containing html characters",
            "author":"Ozzie Isaacs",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'cps\/static\/js\/edit_books.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/janeczku\/calibre-web\/raw\/7ad419dc8c12180e842a82118f4866ac3d074bc5\/cps%2Fstatic%2Fjs%2Fedit_books.js', 'patch': '@@ -248,15 +248,15 @@ $(\"#btn-upload-format\").on(\"change\", function () {\\n     if (filename.substring(3, 11) === \"fakepath\") {\\n         filename = filename.substring(12);\\n     } \/\/ Remove c:\\\\fake at beginning from localhost chrome\\n-    $(\"#upload-format\").html(filename);\\n+    $(\"#upload-format\").text(filename);\\n });\\n \\n $(\"#btn-upload-cover\").on(\"change\", function () {\\n     var filename = $(this).val();\\n     if (filename.substring(3, 11) === \"fakepath\") {\\n         filename = filename.substring(12);\\n     } \/\/ Remove c:\\\\fake at beginning from localhost chrome\\n-    $(\"#upload-cover\").html(filename);\\n+    $(\"#upload-cover\").text(filename);\\n });\\n \\n $(\"#xchange\").click(function () {'}}",
            "message_norm":"fix upload of cover and book formats containing html characters",
            "language":"en",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['cps\/static\/js\/edit_books.js'])",
            "num_files":1.0
        },
        {
            "index":865,
            "vuln_id":"GHSA-6m26-25q2-cq46",
            "cwe_id":"{'CWE-79'}",
            "score":4.8,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/c897d0dc159849763a813184d9b75b966c6360bf'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in microweber Microweber Cross-site Scripting (XSS) - Stored XSS vulnerability on admin page up to version 1.3.",
            "published_date":"2022-02-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/c897d0dc159849763a813184d9b75b966c6360bf",
            "commit_sha":"c897d0dc159849763a813184d9b75b966c6360bf",
            "patch":"SINGLE",
            "chain_ord":"['c897d0dc159849763a813184d9b75b966c6360bf']",
            "before_first_fix_commit":"{'7d3e768be798979e82778c47fbabfbd944ec8ea7'}",
            "last_fix_commit":"c897d0dc159849763a813184d9b75b966c6360bf",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/25\/2022, 09:57:42",
            "message":"add xss clean to create media dir method",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 1, 'total': 7}",
            "files":"{'src\/MicroweberPackages\/Media\/MediaManager.php': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/c897d0dc159849763a813184d9b75b966c6360bf\/src%2FMicroweberPackages%2FMedia%2FMediaManager.php', 'patch': \"@@ -4,6 +4,7 @@\\n \\n use Conner\\\\Tagging\\\\Model\\\\Tagged;\\n use \\\\Intervention\\\\Image\\\\ImageManagerStatic as Image;\\n+use MicroweberPackages\\\\Helper\\\\HTMLClean;\\n use MicroweberPackages\\\\Media\\\\Models\\\\Media;\\n use MicroweberPackages\\\\Media\\\\Models\\\\MediaThumbnail;\\n use MicroweberPackages\\\\Utils\\\\Media\\\\Thumbnailer;\\n@@ -1184,6 +1185,10 @@ public function thumbnail_img($params)\\n \\n     public function create_media_dir($params)\\n     {\\n+\\n+        $clean = new HTMLClean();\\n+        $_REQUEST = $clean->cleanArray($_REQUEST);\\n+\\n         must_have_access();\\n         $resp = array();\\n         \/\/ $target_path = media_base_path() . 'uploaded' . DS;\\n@@ -1198,7 +1203,7 @@ public function create_media_dir($params)\\n \\n             $target_path = $fn_path;\\n         }\\n-        if (!isset($_REQUEST['name'])) {\\n+        if (!isset($_REQUEST['name']) || empty($_REQUEST['name'])) {\\n             $resp = array('error' => 'You must send new_folder parameter');\\n         } else {\\n             $fn_new_folder_path = $_REQUEST['name'];\"}}",
            "message_norm":"add xss clean to create media dir method",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('xss', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/Media\/MediaManager.php'])",
            "num_files":1.0
        },
        {
            "index":2348,
            "vuln_id":"GHSA-m4hj-wg2r-qpcr",
            "cwe_id":"{'CWE-352'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/67093c879a6563aa6ee08003177777d1975e2351'}",
            "dataset":"osv",
            "summary":"showdoc is vulnerable to Cross-Site Request Forgery (CSRF) showdoc is vulnerable to Cross-Site Request Forgery (CSRF).",
            "published_date":"2021-11-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/67093c879a6563aa6ee08003177777d1975e2351",
            "commit_sha":"67093c879a6563aa6ee08003177777d1975e2351",
            "patch":"SINGLE",
            "chain_ord":"['67093c879a6563aa6ee08003177777d1975e2351']",
            "before_first_fix_commit":"{'7e6b547ac23be296f0a6066382eb1fd389af0439'}",
            "last_fix_commit":"67093c879a6563aa6ee08003177777d1975e2351",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/19\/2021, 14:19:10",
            "message":"Strict cookie",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 16, 'deletions': 5, 'total': 21}",
            "files":"{'server\/Application\/Api\/Controller\/UserController.class.php': {'additions': 16, 'deletions': 5, 'changes': 21, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/67093c879a6563aa6ee08003177777d1975e2351\/server%2FApplication%2FApi%2FController%2FUserController.class.php', 'patch': '@@ -42,8 +42,12 @@ public function register(){\\n                     unset($ret[\\'password\\']);\\n                     session(\"login_user\" , $ret );\\n                     $token = D(\"UserToken\")->createToken($ret[\\'uid\\']);\\n-                    cookie(\\'cookie_token\\',$token,array(\\'expire\\'=>60*60*24*90,\\'httponly\\'=>\\'httponly\\'));\/\/\u6b64\u5904\u7531\u670d\u52a1\u7aef\u63a7\u5236token\u662f\u5426\u8fc7\u671f\uff0c\u6240\u4ee5cookies\u8fc7\u671f\u65f6\u95f4\u8bbe\u7f6e\u591a\u4e45\u90fd\u65e0\u6240\u8c13\\n-                  $this->sendResult(array(\\n+                    if(version_compare(PHP_VERSION,\\'7.3.0\\',\\'>\\')){\\n+                        setcookie(\\'cookie_token\\',$token,array(\\'expires\\'=>time()+60*60*24*180,\\'httponly\\'=>\\'httponly\\',\\'samesite\\' => \\'Strict\\',\\'path\\'=>\\'\/\\'));\\n+                      }else{\\n+                        cookie(\\'cookie_token\\',$token,array(\\'expire\\'=>60*60*24*180,\\'httponly\\'=>\\'httponly\\'));\\n+                    }\\n+                    $this->sendResult(array(\\n                     \"uid\" => $ret[\\'uid\\'] ,\\n                     \"username\" => $ret[\\'username\\'] ,\\n                     \"name\" => $ret[\\'name\\'] ,\\n@@ -134,7 +138,11 @@ public function login(){\\n           session(\"login_user\" , $ret );\\n           D(\"User\")->setLastTime($ret[\\'uid\\']);\\n           $token = D(\"UserToken\")->createToken($ret[\\'uid\\'],60*60*24*180);\\n-          cookie(\\'cookie_token\\',$token,array(\\'expire\\'=>60*60*24*180,\\'httponly\\'=>\\'httponly\\'));\/\/\u6b64\u5904\u7531\u670d\u52a1\u7aef\u63a7\u5236token\u662f\u5426\u8fc7\u671f\uff0c\u6240\u4ee5cookies\u8fc7\u671f\u65f6\u95f4\u8bbe\u7f6e\u591a\u4e45\u90fd\u65e0\u6240\u8c13\\n+          if(version_compare(PHP_VERSION,\\'7.3.0\\',\\'>\\')){\\n+            setcookie(\\'cookie_token\\',$token,array(\\'expires\\'=>time()+60*60*24*180,\\'httponly\\'=>\\'httponly\\',\\'samesite\\' => \\'Strict\\',\\'path\\'=>\\'\/\\'));\\n+          }else{\\n+            cookie(\\'cookie_token\\',$token,array(\\'expire\\'=>60*60*24*180,\\'httponly\\'=>\\'httponly\\'));\\n+          }\\n           $this->sendResult(array(\\n             \"uid\" => $ret[\\'uid\\'] ,\\n             \"username\" => $ret[\\'username\\'] ,\\n@@ -247,8 +255,11 @@ public function registerByVerify(){\\n                     unset($ret[\\'password\\']);\\n                     session(\"login_user\" , $ret );\\n                     $token = D(\"UserToken\")->createToken($ret[\\'uid\\']);\\n-                    cookie(\\'cookie_token\\',$token,array(\\'expire\\'=>60*60*24*90,\\'httponly\\'=>\\'httponly\\'));\/\/\u6b64\u5904\u7531\u670d\u52a1\u7aef\u63a7\u5236token\u662f\u5426\u8fc7\u671f\uff0c\u6240\u4ee5cookies\u8fc7\u671f\u65f6\u95f4\u8bbe\u7f6e\u591a\u4e45\u90fd\u65e0\u6240\u8c13\\n-                    \\n+                    if(version_compare(PHP_VERSION,\\'7.3.0\\',\\'>\\')){\\n+                        setcookie(\\'cookie_token\\',$token,array(\\'expires\\'=>time()+60*60*24*180,\\'httponly\\'=>\\'httponly\\',\\'samesite\\' => \\'Strict\\',\\'path\\'=>\\'\/\\'));\\n+                      }else{\\n+                        cookie(\\'cookie_token\\',$token,array(\\'expire\\'=>60*60*24*180,\\'httponly\\'=>\\'httponly\\'));\\n+                    }                    \\n                     $this->sendResult(array(\\n                         \"uid\" => $ret[\\'uid\\'] ,\\n                         \"username\" => $ret[\\'username\\'] ,'}}",
            "message_norm":"strict cookie",
            "language":"en",
            "entities":"[('cookie', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Controller\/UserController.class.php'])",
            "num_files":1.0
        },
        {
            "index":2873,
            "vuln_id":"GHSA-r626-fc64-3q28",
            "cwe_id":"{'CWE-362', 'CWE-119'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/SonicFrog\/abox\/commit\/34c2b9e51cd7b85a3366104092ca4e5e9fab227d'}",
            "dataset":"osv",
            "summary":"Data race in abox An issue was discovered in the abox crate before 0.4.1 for Rust. \n\nAffected versions of this crate implements `Send`\/`Sync` for `AtomicBox<T>` without requiring `T: Send`\/`T: Sync`. This allows to create data races to `T: !Sync` and send `T: !Send` to another thread.\n\nSuch behavior breaks the compile-time thread safety guarantees of Rust, and allows users to incur undefined behavior using safe Rust (e.g. memory corruption from data race).\n\nThe flaw was corrected in commit 34c2b9e by adding trait bound `T: Send` to `Send` impl for `AtomicBox<T>` and trait bound `T: Sync` to `Sync` impl for `AtomicBox<T>`.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/SonicFrog\/abox",
            "commit_href":"https:\/\/github.com\/SonicFrog\/abox\/commit\/34c2b9e51cd7b85a3366104092ca4e5e9fab227d",
            "commit_sha":"34c2b9e51cd7b85a3366104092ca4e5e9fab227d",
            "patch":"SINGLE",
            "chain_ord":"['34c2b9e51cd7b85a3366104092ca4e5e9fab227d']",
            "before_first_fix_commit":"{'5abe75222bc49af6b62ea37f87d7be0c56973310'}",
            "last_fix_commit":"34c2b9e51cd7b85a3366104092ca4e5e9fab227d",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/23\/2021, 02:40:32",
            "message":"send\/sync fix to prevent misuse",
            "author":"JOE1994",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'src\/lib.rs': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/SonicFrog\/abox\/raw\/34c2b9e51cd7b85a3366104092ca4e5e9fab227d\/src%2Flib.rs', 'patch': '@@ -89,8 +89,8 @@ impl<T: Sized> Drop for AtomicBox<T> {\\n     }\\n }\\n \\n-unsafe impl<T: Sized> Sync for AtomicBox<T> {}\\n-unsafe impl<T: Sized> Send for AtomicBox<T> {}\\n+unsafe impl<T: Sized + Sync> Sync for AtomicBox<T> {}\\n+unsafe impl<T: Sized + Send> Send for AtomicBox<T> {}\\n \\n #[cfg(test)]\\n mod tests {'}}",
            "message_norm":"send\/sync fix to prevent misuse",
            "language":"en",
            "entities":"[('prevent', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lib.rs'])",
            "num_files":1.0
        },
        {
            "index":124,
            "vuln_id":"GHSA-2p9q-h29j-3f5v",
            "cwe_id":"{'CWE-20'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/290bb05c80c327ed74fae1d089f1001b1e2a4ef7'}",
            "dataset":"osv",
            "summary":"Missing validation causes `TensorSummaryV2` to crash ### Impact\nThe implementation of [`tf.raw_ops.TensorSummaryV2`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/summary_tensor_op.cc#L33-L58) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport numpy as np\nimport tensorflow as tf\n\ntf.raw_ops.TensorSummaryV2(\n  tag=np.array('test'),\n  tensor=np.array(3),\n  serialized_summary_metadata=tf.io.encode_base64(np.empty((0))))\n```\n\nThe code assumes `axis` is a scalar but there is no validation for this.\n\n```cc\n    const Tensor& serialized_summary_metadata_tensor = c->input(2);\n    \/\/ ...\n    ParseFromTString(serialized_summary_metadata_tensor.scalar<tstring>()(),\n                     v->mutable_metadata());\n``` \n\n### Patches\nWe have patched the issue in GitHub commit [290bb05c80c327ed74fae1d089f1001b1e2a4ef7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/290bb05c80c327ed74fae1d089f1001b1e2a4ef7).\n    \nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n    \n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n  \n### Attribution\nThis vulnerability has been reported by Neophytos Christou from Secure Systems Lab at Brown University and Hong Jin from Singapore Management University.",
            "published_date":"2022-05-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/290bb05c80c327ed74fae1d089f1001b1e2a4ef7",
            "commit_sha":"290bb05c80c327ed74fae1d089f1001b1e2a4ef7",
            "patch":"SINGLE",
            "chain_ord":"['290bb05c80c327ed74fae1d089f1001b1e2a4ef7']",
            "before_first_fix_commit":"{'263ad6ad211921b34c5fa5c3460e177d855d1101'}",
            "last_fix_commit":"290bb05c80c327ed74fae1d089f1001b1e2a4ef7",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2022, 18:02:25",
            "message":"Fix tf.raw_ops.TensorSummaryV2 vulnerability with invalid serialized_summary_metadata.\n\nCheck that input is actually a scalar before treating it as such.\n\nPiperOrigin-RevId: 445197183",
            "author":"Alan Liu",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'tensorflow\/core\/kernels\/summary_tensor_op.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/290bb05c80c327ed74fae1d089f1001b1e2a4ef7\/tensorflow%2Fcore%2Fkernels%2Fsummary_tensor_op.cc', 'patch': '@@ -36,6 +36,10 @@ class SummaryTensorOpV2 : public OpKernel {\\n                 errors::InvalidArgument(\"tag must be scalar\"));\\n     const Tensor& tensor = c->input(1);\\n     const Tensor& serialized_summary_metadata_tensor = c->input(2);\\n+    OP_REQUIRES(\\n+        c,\\n+        TensorShapeUtils::IsScalar(serialized_summary_metadata_tensor.shape()),\\n+        errors::InvalidArgument(\"serialized_summary_metadata must be scalar\"));\\n \\n     Summary s;\\n     Summary::Value* v = s.add_value();'}}",
            "message_norm":"fix tf.raw_ops.tensorsummaryv2 vulnerability with invalid serialized_summary_metadata.\n\ncheck that input is actually a scalar before treating it as such.\n\npiperorigin-revid: 445197183",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', ''), ('serialized_summary_metadata', 'SECWORD', ''), ('445197183', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/summary_tensor_op.cc'])",
            "num_files":1.0
        },
        {
            "index":3392,
            "vuln_id":"GHSA-x7jg-6pwg-fx5h",
            "cwe_id":"{'CWE-444'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/puma\/puma\/commit\/f24d5521295a2152c286abb0a45a1e1e2bd275bd'}",
            "dataset":"osv",
            "summary":"HTTP Smuggling via Transfer-Encoding Header in Puma ### Impact\n\nBy using an invalid transfer-encoding header, an attacker could [smuggle an HTTP response.](https:\/\/portswigger.net\/web-security\/request-smuggling)\n\nOriginally reported by @ZeddYu, who has our thanks for the detailed report.\n\n### Patches\n\nThe problem has been fixed in Puma 3.12.5 and Puma 4.3.4.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [Puma](https:\/\/github.com\/puma\/puma)\n* See our [security policy](https:\/\/github.com\/puma\/puma\/security\/policy)",
            "published_date":"2020-05-22",
            "chain_len":1,
            "project":"https:\/\/github.com\/puma\/puma",
            "commit_href":"https:\/\/github.com\/puma\/puma\/commit\/f24d5521295a2152c286abb0a45a1e1e2bd275bd",
            "commit_sha":"f24d5521295a2152c286abb0a45a1e1e2bd275bd",
            "patch":"SINGLE",
            "chain_ord":"['f24d5521295a2152c286abb0a45a1e1e2bd275bd']",
            "before_first_fix_commit":"{'7a6593760d667dff95953e15c2327892e2da673c'}",
            "last_fix_commit":"f24d5521295a2152c286abb0a45a1e1e2bd275bd",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/18\/2020, 23:01:53",
            "message":"Better handle client input",
            "author":"Evan Phoenix",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 2, 'total': 12}",
            "files":"{'lib\/puma\/client.rb': {'additions': 10, 'deletions': 2, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/puma\/puma\/raw\/f24d5521295a2152c286abb0a45a1e1e2bd275bd\/lib%2Fpuma%2Fclient.rb', 'patch': '@@ -285,8 +285,16 @@ def setup_body\\n \\n       te = @env[TRANSFER_ENCODING2]\\n \\n-      if te && CHUNKED.casecmp(te) == 0\\n-        return setup_chunked_body(body)\\n+      if te\\n+        if te.include?(\",\")\\n+          te.split(\",\").each do |part|\\n+            if CHUNKED.casecmp(part.strip) == 0\\n+              return setup_chunked_body(body)\\n+            end\\n+          end\\n+        elsif CHUNKED.casecmp(te) == 0\\n+          return setup_chunked_body(body)\\n+        end\\n       end\\n \\n       @chunked_body = false'}}",
            "message_norm":"better handle client input",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/puma\/client.rb'])",
            "num_files":1.0
        },
        {
            "index":325,
            "vuln_id":"GHSA-3x62-x456-q2vm",
            "cwe_id":"{'CWE-77', 'CWE-78'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/feross\/git-pull-or-clone\/commit\/f9ce092be13cc32e685dfa26e7705e9c6e3108a3'}",
            "dataset":"osv",
            "summary":"OS Command Injection in git-pull-or-clone The package git-pull-or-clone before 2.0.2 is vulnerable to Command Injection due to the use of the --upload-pack feature of git which is also supported for git clone. The source includes the use of the secure child process API spawn(). However, the outpath parameter passed to it may be a command-line argument to the git clone command and result in arbitrary command injection.",
            "published_date":"2022-05-03",
            "chain_len":1,
            "project":"https:\/\/github.com\/feross\/git-pull-or-clone",
            "commit_href":"https:\/\/github.com\/feross\/git-pull-or-clone\/commit\/f9ce092be13cc32e685dfa26e7705e9c6e3108a3",
            "commit_sha":"f9ce092be13cc32e685dfa26e7705e9c6e3108a3",
            "patch":"SINGLE",
            "chain_ord":"['f9ce092be13cc32e685dfa26e7705e9c6e3108a3']",
            "before_first_fix_commit":"{'4f8b9baf295e6d2e5dd987abca820987afb7643c'}",
            "last_fix_commit":"f9ce092be13cc32e685dfa26e7705e9c6e3108a3",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/06\/2022, 10:13:53",
            "message":"fix: fix command injection vector",
            "author":"Liran Tal",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/feross\/git-pull-or-clone\/raw\/f9ce092be13cc32e685dfa26e7705e9c6e3108a3\/index.js', 'patch': \"@@ -28,7 +28,7 @@ function gitPullOrClone (url, outPath, opts, cb) {\\n   function gitClone () {\\n     \/\/ --depth implies --single-branch\\n     const flag = depth < Infinity ? '--depth=' + depth : '--single-branch'\\n-    const args = ['clone', flag, url, outPath]\\n+    const args = ['clone', flag, '--', url, outPath]\\n     debug('git ' + args.join(' '))\\n     spawn('git', args, {}, function (err) {\\n       if (err) err.message += ' (git clone) (' + url + ')'\"}}",
            "message_norm":"fix: fix command injection vector",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('command injection', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0
        },
        {
            "index":2380,
            "vuln_id":"GHSA-m87f-9fvv-2mgg",
            "cwe_id":"{'CWE-502'}",
            "score":8.4,
            "chain":"{'https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/4374fa2aba383db6526ab36e939eb1cf8ef99879', 'https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/507d066ef432ea27d3e201da08009872a2f37725'}",
            "dataset":"osv",
            "summary":"Deserialization of Untrusted Data in parlai ### Impact\nDue to use of unsafe YAML deserialization logic, an attacker with the ability to modify local YAML configuration files could provide malicious input, resulting in remote code execution or similar risks.\n\n### Patches\nThe issue can be patched by upgrading to v1.1.0 or later. It can also be patched by replacing YAML deserialization with equivalent safe_load calls.\n\n### References\n\n- https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/507d066ef432ea27d3e201da08009872a2f37725\n- https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/4374fa2aba383db6526ab36e939eb1cf8ef99879\n- https:\/\/anon-artist.github.io\/blogs\/blog3.html",
            "published_date":"2021-09-13",
            "chain_len":2,
            "project":"https:\/\/github.com\/facebookresearch\/ParlAI",
            "commit_href":"https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/507d066ef432ea27d3e201da08009872a2f37725",
            "commit_sha":"507d066ef432ea27d3e201da08009872a2f37725",
            "patch":"MULTI",
            "chain_ord":"['507d066ef432ea27d3e201da08009872a2f37725', '4374fa2aba383db6526ab36e939eb1cf8ef99879']",
            "before_first_fix_commit":"{'15fbf55f32e64722c452c907425e10fdb977f62e'}",
            "last_fix_commit":"4374fa2aba383db6526ab36e939eb1cf8ef99879",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/26\/2021, 21:06:01",
            "message":"RCE Fixed (#3402)\n\nCo-authored-by: Anon-Artist <61599526+Anon-Artist@users.noreply.github.com>\r\nCo-authored-by: Jamie Slome <jamie@418sec.com>",
            "author":"huntr.dev | the place to protect open source",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'parlai\/chat_service\/utils\/config.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/facebookresearch\/ParlAI\/raw\/507d066ef432ea27d3e201da08009872a2f37725\/parlai%2Fchat_service%2Futils%2Fconfig.py', 'patch': '@@ -36,7 +36,7 @@ def parse_configuration_file(config_path):\\n     result = {}\\n     result[\"configs\"] = {}\\n     with open(config_path) as f:\\n-        cfg = yaml.load(f.read(), Loader=yaml.FullLoader)\\n+        cfg = yaml.load(f.read(), Loader=yaml.SafeLoader)\\n         # get world path\\n         result[\"world_path\"] = cfg.get(\"world_module\")\\n         if not result[\"world_path\"]:'}}",
            "message_norm":"rce fixed (#3402)\n\nco-authored-by: anon-artist <61599526+anon-artist@users.noreply.github.com>\r\nco-authored-by: jamie slome <jamie@418sec.com>",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('#3402', 'ISSUE', ''), ('jamie@418sec.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['parlai\/chat_service\/utils\/config.py'])",
            "num_files":1.0
        },
        {
            "index":2756,
            "vuln_id":"GHSA-qh9q-34h6-hcv9",
            "cwe_id":"{'CWE-12', 'CWE-22'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/mkdocs\/mkdocs\/pull\/2604\/commits\/cddc453c9d49298e60e7d56fb71130c151cbcbe5'}",
            "dataset":"osv",
            "summary":"Directory traversal in mkdocs The mkdocs 1.2.2 built-in dev-server allows directory traversal using the port 8000, enabling remote exploitation to obtain :sensitive information.",
            "published_date":"2021-10-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/mkdocs\/mkdocs",
            "commit_href":"https:\/\/github.com\/mkdocs\/mkdocs\/pull\/2604\/commits\/cddc453c9d49298e60e7d56fb71130c151cbcbe5",
            "commit_sha":"cddc453c9d49298e60e7d56fb71130c151cbcbe5",
            "patch":"SINGLE",
            "chain_ord":"['cddc453c9d49298e60e7d56fb71130c151cbcbe5']",
            "before_first_fix_commit":"{'c426455878556baa34cc829c579337236d335581'}",
            "last_fix_commit":"cddc453c9d49298e60e7d56fb71130c151cbcbe5",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/10\/2021, 08:52:05",
            "message":"Prevent directory traversal in the dev server",
            "author":"Oleh Prypin",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 1, 'total': 5}",
            "files":"{'mkdocs\/livereload\/__init__.py': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mkdocs\/mkdocs\/raw\/cddc453c9d49298e60e7d56fb71130c151cbcbe5\/mkdocs%2Flivereload%2F__init__.py', 'patch': '@@ -4,6 +4,7 @@\\n import mimetypes\\n import os\\n import os.path\\n+import posixpath\\n import re\\n import socketserver\\n import threading\\n@@ -183,9 +184,11 @@ def condition():\\n         if path == \"\/js\/livereload.js\":\\n             file_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), \"livereload.js\")\\n         elif path.startswith(self.mount_path):\\n-            rel_file_path = path[len(self.mount_path):].lstrip(\"\/\")\\n+            rel_file_path = path[len(self.mount_path):]\\n             if path.endswith(\"\/\"):\\n                 rel_file_path += \"index.html\"\\n+            # Prevent directory traversal - normalize the path.\\n+            rel_file_path = posixpath.normpath(\"\/\" + rel_file_path).lstrip(\"\/\")\\n             file_path = os.path.join(self.root, rel_file_path)\\n         elif path == \"\/\":\\n             start_response(\"302 Found\", [(\"Location\", self.mount_path)])'}}",
            "message_norm":"prevent directory traversal in the dev server",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('directory traversal', 'SECWORD', ''), ('server', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['mkdocs\/livereload\/__init__.py'])",
            "num_files":1.0
        },
        {
            "index":2209,
            "vuln_id":"GHSA-j7rm-8ww4-xx2g",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0d45ea1ca641b21b73bcf9c00e0179cda284e7e7'}",
            "dataset":"osv",
            "summary":"Division by zero in TFLite's implementation of `SpaceToDepth` ### Impact\nThe `Prepare` step of the `SpaceToDepth` TFLite operator [does not check for 0 before division](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5f7975d09eac0f10ed8a17dbb6f5964977725adc\/tensorflow\/lite\/kernels\/space_to_depth.cc#L63-L67).\n\n```cc \nconst int block_size = params->block_size;\nconst int input_height = input->dims->data[1];\nconst int input_width = input->dims->data[2];\nint output_height = input_height \/ block_size;\nint output_width = input_width \/ block_size;\n```   \n\nAn attacker can craft a model such that `params->block_size` would be zero.\n\n### Patches\nWe have patched the issue in GitHub commit [0d45ea1ca641b21b73bcf9c00e0179cda284e7e7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0d45ea1ca641b21b73bcf9c00e0179cda284e7e7).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0d45ea1ca641b21b73bcf9c00e0179cda284e7e7",
            "commit_sha":"0d45ea1ca641b21b73bcf9c00e0179cda284e7e7",
            "patch":"SINGLE",
            "chain_ord":"['0d45ea1ca641b21b73bcf9c00e0179cda284e7e7']",
            "before_first_fix_commit":"{'5f7975d09eac0f10ed8a17dbb6f5964977725adc'}",
            "last_fix_commit":"0d45ea1ca641b21b73bcf9c00e0179cda284e7e7",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 00:45:57",
            "message":"Prevent one more div by 0 in TFLite\n\nPiperOrigin-RevId: 370800114\nChange-Id: I6b956aeb8c458cc6f514408d2e89ffacfe249e57",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'tensorflow\/lite\/kernels\/space_to_depth.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0d45ea1ca641b21b73bcf9c00e0179cda284e7e7\/tensorflow%2Flite%2Fkernels%2Fspace_to_depth.cc', 'patch': '@@ -61,6 +61,7 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\\n   TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);\\n \\n   const int block_size = params->block_size;\\n+  TF_LITE_ENSURE(context, block_size > 0);\\n   const int input_height = input->dims->data[1];\\n   const int input_width = input->dims->data[2];\\n   int output_height = input_height \/ block_size;'}}",
            "message_norm":"prevent one more div by 0 in tflite\n\npiperorigin-revid: 370800114\nchange-id: i6b956aeb8c458cc6f514408d2e89ffacfe249e57",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('div by 0', 'SECWORD', ''), ('370800114', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/space_to_depth.cc'])",
            "num_files":1.0
        },
        {
            "index":2214,
            "vuln_id":"GHSA-j86v-p27c-73fm",
            "cwe_id":"{'CWE-824'}",
            "score":7.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f09caa532b6e1ac8d2aa61b7832c78c5b79300c6'}",
            "dataset":"osv",
            "summary":"Unitialized access in `EinsumHelper::ParseEquation` ### Impact\nDuring execution, [`EinsumHelper::ParseEquation()`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e0b6e58c328059829c3eb968136f17aa72b6c876\/tensorflow\/core\/kernels\/linalg\/einsum_op_impl.h#L126-L181) is supposed to set the flags in `input_has_ellipsis` vector and `*output_has_ellipsis` boolean to indicate whether there is ellipsis in the corresponding inputs and output.\n\nHowever, the code only changes these flags to `true` and never assigns `false`.\n\n```cc\nfor (int i = 0; i < num_inputs; ++i) {\n  input_label_counts->at(i).resize(num_labels);\n  for (const int label : input_labels->at(i)) {\n    if (label != kEllipsisLabel)\n      input_label_counts->at(i)[label] += 1;\n    else\n      input_has_ellipsis->at(i) = true;\n  }\n}\noutput_label_counts->resize(num_labels);\nfor (const int label : *output_labels) {\n  if (label != kEllipsisLabel)\n    output_label_counts->at(label) += 1;\n  else\n    *output_has_ellipsis = true;\n}\n```\n\nThis results in unitialized variable access if callers assume that `EinsumHelper::ParseEquation()` always sets these flags.\n\n\n### Patches\nWe have patched the issue in GitHub commit [f09caa532b6e1ac8d2aa61b7832c78c5b79300c6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f09caa532b6e1ac8d2aa61b7832c78c5b79300c6).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2021-11-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f09caa532b6e1ac8d2aa61b7832c78c5b79300c6",
            "commit_sha":"f09caa532b6e1ac8d2aa61b7832c78c5b79300c6",
            "patch":"SINGLE",
            "chain_ord":"['f09caa532b6e1ac8d2aa61b7832c78c5b79300c6']",
            "before_first_fix_commit":"{'a81f78d35ecabae6ba61c1a65279bcb5ff9c7d95'}",
            "last_fix_commit":"f09caa532b6e1ac8d2aa61b7832c78c5b79300c6",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/19\/2021, 16:05:04",
            "message":"Fix EinsumHelper::ParseEquation to avoid uninitialized accesses.\n\nEinsumHelper::ParseEquation is supposed to return true or false in\ninput_has_ellipsis and output_has_ellipsis to indicate whether there is\nellipsis in the inputs and output. Previously, when there is no ellipsis in the\ninputs or output, the routine doesn't assign false to the variables. This\nchange initializes the two variables with false to fix the problem.\nPiperOrigin-RevId: 391772004\nChange-Id: I17b6c88aadef4131470378e48cced054bf252e86",
            "author":"Bixia Zheng",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/linalg\/einsum_op_impl.h': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f09caa532b6e1ac8d2aa61b7832c78c5b79300c6\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Feinsum_op_impl.h', 'patch': '@@ -153,6 +153,7 @@ struct EinsumHelper {\\n     input_has_ellipsis->resize(num_inputs);\\n     for (int i = 0; i < num_inputs; ++i) {\\n       input_label_counts->at(i).resize(num_labels);\\n+      input_has_ellipsis->at(i) = false;\\n       for (const int label : input_labels->at(i)) {\\n         if (label != kEllipsisLabel)\\n           input_label_counts->at(i)[label] += 1;\\n@@ -161,6 +162,7 @@ struct EinsumHelper {\\n       }\\n     }\\n     output_label_counts->resize(num_labels);\\n+    *output_has_ellipsis = false;\\n     for (const int label : *output_labels) {\\n       if (label != kEllipsisLabel)\\n         output_label_counts->at(label) += 1;'}}",
            "message_norm":"fix einsumhelper::parseequation to avoid uninitialized accesses.\n\neinsumhelper::parseequation is supposed to return true or false in\ninput_has_ellipsis and output_has_ellipsis to indicate whether there is\nellipsis in the inputs and output. previously, when there is no ellipsis in the\ninputs or output, the routine doesn't assign false to the variables. this\nchange initializes the two variables with false to fix the problem.\npiperorigin-revid: 391772004\nchange-id: i17b6c88aadef4131470378e48cced054bf252e86",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('uninitialized', 'SECWORD', ''), ('initializes', 'SECWORD', ''), ('fix', 'ACTION', ''), ('problem', 'FLAW', ''), ('391772004', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/einsum_op_impl.h'])",
            "num_files":1.0
        },
        {
            "index":2838,
            "vuln_id":"GHSA-r24h-634p-m72x",
            "cwe_id":"{'CWE-668'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/Atinux\/schema-inspector\/commit\/345a7b2eed11bb6128421150d65f4f83fdbb737d'}",
            "dataset":"osv",
            "summary":"Validation Bypass in schema-inspector In schema-inspector before 1.6.9, a maliciously crafted JavaScript object can bypass the `sanitize()` and the `validate()` function used within schema-inspector.",
            "published_date":"2020-06-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/Atinux\/schema-inspector",
            "commit_href":"https:\/\/github.com\/Atinux\/schema-inspector\/commit\/345a7b2eed11bb6128421150d65f4f83fdbb737d",
            "commit_sha":"345a7b2eed11bb6128421150d65f4f83fdbb737d",
            "patch":"SINGLE",
            "chain_ord":"['345a7b2eed11bb6128421150d65f4f83fdbb737d']",
            "before_first_fix_commit":"{'7f67b2a95f85ecb76d0dc5326d76d082a2b99e1f'}",
            "last_fix_commit":"345a7b2eed11bb6128421150d65f4f83fdbb737d",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/20\/2020, 15:01:42",
            "message":"fix: Issue #75",
            "author":"S\u00e9bastien Chopin",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'lib\/schema-inspector.js': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/schema-inspector\/schema-inspector\/raw\/345a7b2eed11bb6128421150d65f4f83fdbb737d\/lib%2Fschema-inspector.js', 'patch': \"@@ -80,7 +80,7 @@\\n \\t\\tthis._custom = {};\\n \\t\\tif (custom != null) {\\n \\t\\t\\tfor (var key in custom) {\\n-\\t\\t\\t\\tif (custom.hasOwnProperty(key)){\\n+\\t\\t\\t\\tif (Object.prototype.hasOwnProperty.call(custom, key)) {\\n \\t\\t\\t\\t\\tthis._custom['$' + key] = custom[key];\\n \\t\\t\\t\\t}\\n \\t\\t\\t}\\n@@ -480,7 +480,7 @@\\n \\t\\t\\t}\\n \\t\\t\\telse {\\n \\t\\t\\t\\tfor (var key in candidate) {\\n-\\t\\t\\t\\t\\tif (candidate.hasOwnProperty(key)){\\n+\\t\\t\\t\\t\\tif (Object.prototype.hasOwnProperty.call(candidate, key)) {\\n \\t\\t\\t\\t\\t\\tthis._deeperArray(key);\\n \\t\\t\\t\\t\\t\\tthis._validate(items, candidate[key]);\\n \\t\\t\\t\\t\\t\\tthis._back();\\n@@ -1011,7 +1011,7 @@\\n \\t\\t\\t}\\n \\t\\t\\telse {\\n \\t\\t\\t\\tfor (i in post) {\\n-\\t\\t\\t\\t\\tif(post.hasOwnProperty(i)){\\n+\\t\\t\\t\\t\\tif (Object.prototype.hasOwnProperty.call(post, i)) {\\n \\t\\t\\t\\t\\t\\tthis._deeperArray(i);\\n \\t\\t\\t\\t\\t\\tpost[i] = this._sanitize(schema.items, post[i]);\\n \\t\\t\\t\\t\\t\\tthis._back();\\n@@ -1430,7 +1430,7 @@\\n \\t\\t\\tvar prop = schema.properties || {};\\n \\n \\t\\t\\tfor (var key in prop) {\\n-\\t\\t\\t\\tif (prop.hasOwnProperty(key)){\\n+\\t\\t\\t\\tif (Object.prototype.hasOwnProperty.call(prop, key)) {\\n \\t\\t\\t\\t\\tif (prop[key].optional === true && _rand.bool() === true) {\\n \\t\\t\\t\\t\\t\\tcontinue;\\n \\t\\t\\t\\t\\t}\"}}",
            "message_norm":"fix: issue #75",
            "language":"fr",
            "entities":"[('#75', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/schema-inspector.js'])",
            "num_files":1.0
        },
        {
            "index":642,
            "vuln_id":"GHSA-5hj3-vjjf-f5m7",
            "cwe_id":"{'CWE-125'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a4e138660270e7599793fa438cd7b2fc2ce215a6'}",
            "dataset":"osv",
            "summary":"Heap OOB in `SdcaOptimizerV2` ### Impact\nAn attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to `tf.raw_ops.SdcaOptimizerV2`:\n\n```python\nimport tensorflow as tf\n  \ntf.raw_ops.SdcaOptimizerV2(\n  sparse_example_indices=[[1]],\n  sparse_feature_indices=[[1]],\n  sparse_feature_values=[[1.0,2.0]],\n  dense_features=[[1.0]],\n  example_weights=[1.0],\n  example_labels=[],\n  sparse_indices=[1],\n  sparse_weights=[1.0],\n  dense_weights=[[1.0]],\n  example_state_data=[[100.0,100.0,100.0,100.0]],\n  loss_type='logistic_loss',\n  l1=100.0,\n  l2=100.0,\n  num_loss_partitions=1,\n  num_inner_iterations=1,\n  adaptive=True)       \n``` \n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/sdca_internal.cc#L320-L353) does not check that the length of `example_labels` is the same as the number of examples.\n\n### Patches\nWe have patched the issue in GitHub commit [a4e138660270e7599793fa438cd7b2fc2ce215a6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a4e138660270e7599793fa438cd7b2fc2ce215a6).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a4e138660270e7599793fa438cd7b2fc2ce215a6",
            "commit_sha":"a4e138660270e7599793fa438cd7b2fc2ce215a6",
            "patch":"SINGLE",
            "chain_ord":"['a4e138660270e7599793fa438cd7b2fc2ce215a6']",
            "before_first_fix_commit":"{'578e634b4f1c1c684d4b4294f9e5281b2133b3ed'}",
            "last_fix_commit":"a4e138660270e7599793fa438cd7b2fc2ce215a6",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/30\/2021, 05:24:27",
            "message":"Add remaining validation to `sdca_internal.cc`\n\nPiperOrigin-RevId: 387738010\nChange-Id: I28eedcfd87a53aaf34deb075acea1f8c95470808",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/sdca_internal.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a4e138660270e7599793fa438cd7b2fc2ce215a6\/tensorflow%2Fcore%2Fkernels%2Fsdca_internal.cc', 'patch': '@@ -380,6 +380,11 @@ Status Examples::Initialize(OpKernelContext* const context,\\n   const Tensor* example_labels_t;\\n   TF_RETURN_IF_ERROR(context->input(\"example_labels\", &example_labels_t));\\n   auto example_labels = example_labels_t->flat<float>();\\n+  if (example_labels.size() != num_examples) {\\n+    return errors::InvalidArgument(\"Expected \", num_examples,\\n+                                   \" example labels but got \",\\n+                                   example_labels.size());\\n+  }\\n \\n   OpInputList dense_features_inputs;\\n   TF_RETURN_IF_ERROR('}}",
            "message_norm":"add remaining validation to `sdca_internal.cc`\n\npiperorigin-revid: 387738010\nchange-id: i28eedcfd87a53aaf34deb075acea1f8c95470808",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('387738010', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sdca_internal.cc'])",
            "num_files":1.0
        },
        {
            "index":3082,
            "vuln_id":"GHSA-v923-w3x8-wh69",
            "cwe_id":"{'CWE-384'}",
            "score":4.8,
            "chain":"{'https:\/\/github.com\/jaredhanson\/passport\/commit\/7e9b9cf4d7be02428e963fc729496a45baeea608'}",
            "dataset":"osv",
            "summary":"Passport before 0.6.0 vulnerable to session regeneration when a users logs in or out This affects the package passport before 0.6.0. When a user logs in or logs out, the session is regenerated instead of being closed.",
            "published_date":"2022-07-02",
            "chain_len":1,
            "project":"https:\/\/github.com\/jaredhanson\/passport",
            "commit_href":"https:\/\/github.com\/jaredhanson\/passport\/commit\/7e9b9cf4d7be02428e963fc729496a45baeea608",
            "commit_sha":"7e9b9cf4d7be02428e963fc729496a45baeea608",
            "patch":"SINGLE",
            "chain_ord":"['7e9b9cf4d7be02428e963fc729496a45baeea608']",
            "before_first_fix_commit":"{'5e6d92f1ef2adf21b54492cc86a7c066ef3f1e98'}",
            "last_fix_commit":"7e9b9cf4d7be02428e963fc729496a45baeea608",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/17\/2022, 15:15:54",
            "message":"Regenerate session on login.",
            "author":"Jared Hanson",
            "comments":null,
            "stats":"{'additions': 20, 'deletions': 10, 'total': 30}",
            "files":"{'lib\/sessionmanager.js': {'additions': 20, 'deletions': 10, 'changes': 30, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jaredhanson\/passport\/raw\/7e9b9cf4d7be02428e963fc729496a45baeea608\/lib%2Fsessionmanager.js', 'patch': \"@@ -10,24 +10,34 @@ function SessionManager(options, serializeUser) {\\n }\\n \\n SessionManager.prototype.logIn = function(req, user, cb) {\\n+  console.log('SM: logIn');\\n+  \\n   var self = this;\\n-  this._serializeUser(user, req, function(err, obj) {\\n+  req.session.regenerate(function(err) {\\n     if (err) {\\n       return cb(err);\\n     }\\n-    \/\/ TODO: Error if session isn't available here.\\n-    if (!req.session) {\\n-      req.session = {};\\n-    }\\n-    if (!req.session[self._key]) {\\n-      req.session[self._key] = {};\\n-    }\\n-    req.session[self._key].user = obj;\\n-    cb();\\n+    \\n+    self._serializeUser(user, req, function(err, obj) {\\n+      if (err) {\\n+        return cb(err);\\n+      }\\n+      \/\/ TODO: Error if session isn't available here.\\n+      if (!req.session) {\\n+        req.session = {};\\n+      }\\n+      if (!req.session[self._key]) {\\n+        req.session[self._key] = {};\\n+      }\\n+      req.session[self._key].user = obj;\\n+      cb();\\n+    });\\n   });\\n }\\n \\n SessionManager.prototype.logOut = function(req, cb) {\\n+  console.log('SM: logOut');\\n+  \\n   if (req.session && req.session[this._key]) {\\n     delete req.session[this._key].user;\\n   }\"}}",
            "message_norm":"regenerate session on login.",
            "language":"en",
            "entities":"[('login', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/sessionmanager.js'])",
            "num_files":1.0
        },
        {
            "index":1995,
            "vuln_id":"GHSA-h5g4-ppwx-48q2",
            "cwe_id":"{'CWE-20'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cff267650c6a1b266e4b4500f69fbc49cdd773c5'}",
            "dataset":"osv",
            "summary":"Missing validation causes denial of service via `DeleteSessionTensor` ### Impact\nThe implementation of [`tf.raw_ops.DeleteSessionTensor`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/session_ops.cc#L128-L144) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport tensorflow as tf\n\nhandle = tf.constant(\"[]\", shape=[0], dtype=tf.string)\ntf.raw_ops.DeleteSessionTensor(handle=handle)\n```\n  \nThe code assumes `handle` is a scalar but there is no validation for this:\n  \n```cc\n    const Tensor& handle = ctx->input(0);\n    const string& name = handle.scalar<tstring>()();\n```\n\n### Patches\nWe have patched the issue in GitHub commit [cff267650c6a1b266e4b4500f69fbc49cdd773c5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cff267650c6a1b266e4b4500f69fbc49cdd773c5).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Neophytos Christou from Secure Systems Lab at Brown University.",
            "published_date":"2022-05-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cff267650c6a1b266e4b4500f69fbc49cdd773c5",
            "commit_sha":"cff267650c6a1b266e4b4500f69fbc49cdd773c5",
            "patch":"SINGLE",
            "chain_ord":"['cff267650c6a1b266e4b4500f69fbc49cdd773c5']",
            "before_first_fix_commit":"{'339d5de981acaa8580da62c5de8c0da64ae88ad4'}",
            "last_fix_commit":"cff267650c6a1b266e4b4500f69fbc49cdd773c5",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2022, 20:08:57",
            "message":"Fix tf.raw_ops.DeleteSessionTensor vulnerability with invalid `handle`.\n\nCheck that `handle` input is actually a scalar before treating it as such.\n\nPiperOrigin-RevId: 445228994",
            "author":"Alan Liu",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/session_ops.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/cff267650c6a1b266e4b4500f69fbc49cdd773c5\/tensorflow%2Fcore%2Fkernels%2Fsession_ops.cc', 'patch': '@@ -134,6 +134,8 @@ class DeleteSessionTensorOp : public OpKernel {\\n \\n   void Compute(OpKernelContext* ctx) override {\\n     const Tensor& handle = ctx->input(0);\\n+    OP_REQUIRES(ctx, TensorShapeUtils::IsScalar(handle.shape()),\\n+                errors::InvalidArgument(\"`handle` must be scalar\"));\\n     const string& name = handle.scalar<tstring>()();\\n     auto session_state = ctx->session_state();\\n     OP_REQUIRES(ctx, session_state != nullptr,'}}",
            "message_norm":"fix tf.raw_ops.deletesessiontensor vulnerability with invalid `handle`.\n\ncheck that `handle` input is actually a scalar before treating it as such.\n\npiperorigin-revid: 445228994",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', ''), ('445228994', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/session_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":3400,
            "vuln_id":"GHSA-x92h-wmg2-6hp7",
            "cwe_id":"{'CWE-89', 'CWE-79'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/symfony\/symfony\/commit\/944e60f083c3bffbc6a0b5112db127a10a66a8ec'}",
            "dataset":"osv",
            "summary":"Invalid HTTP method overrides allow possible XSS or other attacks in Symfony In Symfony before 2.7.51, 2.8.x before 2.8.50, 3.x before 3.4.26, 4.x before 4.1.12, and 4.2.x before 4.2.7, HTTP Methods provided as verbs or using the override header may be treated as trusted input, but they are not validated, possibly causing SQL injection or XSS. This is related to symfony\/http-foundation.",
            "published_date":"2019-12-02",
            "chain_len":1,
            "project":"https:\/\/github.com\/symfony\/symfony",
            "commit_href":"https:\/\/github.com\/symfony\/symfony\/commit\/944e60f083c3bffbc6a0b5112db127a10a66a8ec",
            "commit_sha":"944e60f083c3bffbc6a0b5112db127a10a66a8ec",
            "patch":"SINGLE",
            "chain_ord":"['944e60f083c3bffbc6a0b5112db127a10a66a8ec']",
            "before_first_fix_commit":"{'b7bdf2ce435b0aeb8edb8349f0456f7ca3d21035'}",
            "last_fix_commit":"944e60f083c3bffbc6a0b5112db127a10a66a8ec",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/02\/2019, 16:28:16",
            "message":"[HttpFoundation] reject invalid method override",
            "author":"Nicolas Grekas",
            "comments":"{'com_1': {'author': 'jirayutza1', 'datetime': '12\/04\/2019, 20:11:46', 'body': '944e60f'}}",
            "stats":"{'additions': 29, 'deletions': 14, 'total': 43}",
            "files":"{'src\/Symfony\/Component\/HttpFoundation\/Request.php': {'additions': 29, 'deletions': 14, 'changes': 43, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/symfony\/symfony\/raw\/944e60f083c3bffbc6a0b5112db127a10a66a8ec\/src%2FSymfony%2FComponent%2FHttpFoundation%2FRequest.php', 'patch': '@@ -1346,22 +1346,37 @@ public function setMethod($method)\\n      *\/\\n     public function getMethod()\\n     {\\n-        if (null === $this->method) {\\n-            $this->method = strtoupper($this->server->get(\\'REQUEST_METHOD\\', \\'GET\\'));\\n-\\n-            if (\\'POST\\' === $this->method) {\\n-                if ($method = $this->headers->get(\\'X-HTTP-METHOD-OVERRIDE\\')) {\\n-                    $this->method = strtoupper($method);\\n-                } elseif (self::$httpMethodParameterOverride) {\\n-                    $method = $this->request->get(\\'_method\\', $this->query->get(\\'_method\\', \\'POST\\'));\\n-                    if (\\\\is_string($method)) {\\n-                        $this->method = strtoupper($method);\\n-                    }\\n-                }\\n-            }\\n+        if (null !== $this->method) {\\n+            return $this->method;\\n+        }\\n+\\n+        $this->method = strtoupper($this->server->get(\\'REQUEST_METHOD\\', \\'GET\\'));\\n+\\n+        if (\\'POST\\' !== $this->method) {\\n+            return $this->method;\\n+        }\\n+\\n+        $method = $this->headers->get(\\'X-HTTP-METHOD-OVERRIDE\\');\\n+\\n+        if (!$method && self::$httpMethodParameterOverride) {\\n+            $method = $this->request->get(\\'_method\\', $this->query->get(\\'_method\\', \\'POST\\'));\\n+        }\\n+\\n+        if (!\\\\is_string($method)) {\\n+            return $this->method;\\n+        }\\n+\\n+        $method = strtoupper($method);\\n+\\n+        if (\\\\in_array($method, [\\'GET\\', \\'HEAD\\', \\'POST\\', \\'PUT\\', \\'DELETE\\', \\'CONNECT\\', \\'OPTIONS\\', \\'PATCH\\', \\'PURGE\\', \\'TRACE\\'], true)) {\\n+            return $this->method = $method;\\n+        }\\n+\\n+        if (!preg_match(\\'\/^[A-Z]++$\/D\\', $method)) {\\n+            throw new SuspiciousOperationException(sprintf(\\'Invalid method override \"%s\".\\', $method));\\n         }\\n \\n-        return $this->method;\\n+        return $this->method = $method;\\n     }\\n \\n     \/**'}}",
            "message_norm":"[httpfoundation] reject invalid method override",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Symfony\/Component\/HttpFoundation\/Request.php'])",
            "num_files":1.0
        },
        {
            "index":5250,
            "vuln_id":"GHSA-v5c9-mmw9-829q",
            "cwe_id":"{'CWE-94'}",
            "score":null,
            "chain":"{'https:\/\/github.com\/PHPMailer\/PHPMailer\/commit\/8beacc646acb67c995aea10ac5585970efc7355a'}",
            "dataset":"osv",
            "summary":"PHPMailer susceptible to arbitrary code execution html2text.php in Chuggnutt HTML to Text Converter, as used in PHPMailer before 5.2.10, RoundCube Webmail (roundcubemail) 0.2-1.alpha and 0.2-3.beta, Mahara, and AtMail Open 1.03, allows remote attackers to execute arbitrary code via crafted input that is processed by the preg_replace function with the eval switch.",
            "published_date":"2022-05-14",
            "chain_len":1,
            "project":"https:\/\/github.com\/PHPMailer\/PHPMailer",
            "commit_href":"https:\/\/github.com\/PHPMailer\/PHPMailer\/commit\/8beacc646acb67c995aea10ac5585970efc7355a",
            "commit_sha":"8beacc646acb67c995aea10ac5585970efc7355a",
            "patch":"SINGLE",
            "chain_ord":"['8beacc646acb67c995aea10ac5585970efc7355a']",
            "before_first_fix_commit":"{'d7c9ad524c3bf519985a7f257fc831b52a20ec69'}",
            "last_fix_commit":"8beacc646acb67c995aea10ac5585970efc7355a",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/22\/2016, 10:05:21",
            "message":"Add security notices",
            "author":"Marcus Bointon",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 0, 'total': 8}",
            "files":"{'README.md': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/PHPMailer\/PHPMailer\/raw\/8beacc646acb67c995aea10ac5585970efc7355a\/README.md', 'patch': \"@@ -139,6 +139,14 @@ Build status: [![Build Status](https:\/\/travis-ci.org\/PHPMailer\/PHPMailer.svg)](h\\n \\n If this isn't passing, is there something you can do to help?\\n \\n+## Security\\n+\\n+Please follow responsible disclosure - report any security problems found to the maintainers privately.\\n+\\n+PHPMailer versions prior to 5.2.14 (released November 2015) are vulnerable to [CVE-2015-8476](https:\/\/web.nvd.nist.gov\/view\/vuln\/detail?vulnId=) an SMTP injection bug.\\n+\\n+PHPMailer versions prior to 5.2.10 (released May 2015) are vulnerable to [CVE-2008-5619](https:\/\/web.nvd.nist.gov\/view\/vuln\/detail?vulnId=CVE-2008-5619), a remote code execution vulnerability in the bundled html2text library. This file was removed in 5.2.10, so if you are using a version prior to that and make use of the html2text function, it's vitally important that you upgrade and remove this file.\\n+\\n ## Contributing\\n \\n Please submit bug reports, suggestions and pull requests to the [GitHub issue tracker](https:\/\/github.com\/PHPMailer\/PHPMailer\/issues).\"}}",
            "message_norm":"add security notices",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('security', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['README.md'])",
            "num_files":1.0
        },
        {
            "index":2707,
            "vuln_id":"GHSA-q67f-3jq4-mww2",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/e786fd44aac46febdbf916ed6c328fbe645d80bf'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in Pimcore Pimcore version 10.3.2 and prior is vulnerable to stored cross-site scripting. A patch is available and anticipated to be part of version 10.3.3.",
            "published_date":"2022-03-05",
            "chain_len":1,
            "project":"https:\/\/github.com\/pimcore\/pimcore",
            "commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/e786fd44aac46febdbf916ed6c328fbe645d80bf",
            "commit_sha":"e786fd44aac46febdbf916ed6c328fbe645d80bf",
            "patch":"SINGLE",
            "chain_ord":"['e786fd44aac46febdbf916ed6c328fbe645d80bf']",
            "before_first_fix_commit":"{'ce5c01f4c9f477444aeceb640b60f3b6199e7c22'}",
            "last_fix_commit":"e786fd44aac46febdbf916ed6c328fbe645d80bf",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/02\/2022, 20:15:07",
            "message":"escaping 'key' custom property field in elements",
            "author":"JiaJia Ji",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 2, 'total': 5}",
            "files":"{'bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/element\/properties.js': {'additions': 3, 'deletions': 2, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/e786fd44aac46febdbf916ed6c328fbe645d80bf\/bundles%2FAdminBundle%2FResources%2Fpublic%2Fjs%2Fpimcore%2Felement%2Fproperties.js', 'patch': '@@ -568,10 +568,11 @@ pimcore.element.properties = Class.create({\\n \\n     addSetFromUserDefined: function (customKey, customType) {\\n         try {\\n-            if (in_array(customKey.getValue(), this.disallowedKeys)) {\\n+            let key = htmlspecialchars(customKey.getValue());\\n+            if (in_array(key, this.disallowedKeys)) {\\n                 Ext.MessageBox.alert(t(\"error\"), t(\"name_is_not_allowed\"));\\n             }\\n-            this.add(customKey.getValue(), customType.getValue(), false, false, false, true);\\n+            this.add(key, customType.getValue(), false, false, false, true);\\n         } catch (e) {\\n             console.log(e);\\n         }'}}",
            "message_norm":"escaping 'key' custom property field in elements",
            "language":"en",
            "entities":"[('escaping', 'SECWORD', ''), ('key', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/element\/properties.js'])",
            "num_files":1.0
        },
        {
            "index":1228,
            "vuln_id":"GHSA-8m49-2xj8-67v9",
            "cwe_id":"{'CWE-59'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/waycrate\/swhkd\/commit\/0b620a09605afb815c6d8d8953bbb7a10a8c0575'}",
            "dataset":"osv",
            "summary":"Data Loss\/Denial of Service in SWHKD SWHKD 1.1.5 unsafely uses the \/tmp\/swhks.pid pathname. There can be data loss or a denial of service. A patch is available on the `1.1.0` branch of the repository.",
            "published_date":"2022-03-31",
            "chain_len":1,
            "project":"https:\/\/github.com\/waycrate\/swhkd",
            "commit_href":"https:\/\/github.com\/waycrate\/swhkd\/commit\/0b620a09605afb815c6d8d8953bbb7a10a8c0575",
            "commit_sha":"0b620a09605afb815c6d8d8953bbb7a10a8c0575",
            "patch":"SINGLE",
            "chain_ord":"['0b620a09605afb815c6d8d8953bbb7a10a8c0575']",
            "before_first_fix_commit":"{'f70b99dd575fab79d8a942111a6980431f006818'}",
            "last_fix_commit":"0b620a09605afb815c6d8d8953bbb7a10a8c0575",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/25\/2022, 15:20:01",
            "message":"[patch] CVE-2022-27816",
            "author":"Shinyzenith",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/server.rs': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/waycrate\/swhkd\/raw\/0b620a09605afb815c6d8d8953bbb7a10a8c0575\/src%2Fserver.rs', 'patch': '@@ -12,7 +12,7 @@ fn main() -> std::io::Result<()> {\\n     env::set_var(\"RUST_LOG\", \"swhks=trace\");\\n     env_logger::init();\\n \\n-    let pid_file_path = String::from(\"\/tmp\/swhks.pid\");\\n+    let pid_file_path = String::from(format!(\"\/run\/user\/{}\/swhks.pid\", unistd::Uid::current()));\\n     let sock_file_path = String::from(format!(\"\/run\/user\/{}\/swhkd.sock\", unistd::Uid::current()));\\n \\n     if Path::new(&pid_file_path).exists() {'}}",
            "message_norm":"[patch] cve-2022-27816",
            "language":"en",
            "entities":"[('cve-2022-27816', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/server.rs'])",
            "num_files":1.0
        },
        {
            "index":3261,
            "vuln_id":"GHSA-wc9w-wvq2-ffm9",
            "cwe_id":"{'CWE-918'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/grafana\/grafana\/commit\/ba953be95f0302c2ea80d23f1e5f2c1847365192'}",
            "dataset":"osv",
            "summary":"Server Side Request Forgery in Grafana The avatar feature in Grafana 3.0.1 through 7.0.1 has an SSRF Incorrect Access Control issue that allows remote code execution. This vulnerability allows any unauthenticated user\/client to make Grafana send HTTP requests to any URL and return its result to the user\/client. This can be used to gain information about the network that Grafana is running on.",
            "published_date":"2022-02-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/grafana\/grafana",
            "commit_href":"https:\/\/github.com\/grafana\/grafana\/commit\/ba953be95f0302c2ea80d23f1e5f2c1847365192",
            "commit_sha":"ba953be95f0302c2ea80d23f1e5f2c1847365192",
            "patch":"SINGLE",
            "chain_ord":"['ba953be95f0302c2ea80d23f1e5f2c1847365192']",
            "before_first_fix_commit":"{'e5414f44aa2728cce0dbbc7698fddb514fa8193a'}",
            "last_fix_commit":"ba953be95f0302c2ea80d23f1e5f2c1847365192",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/03\/2020, 13:56:13",
            "message":"Only allow 32 hexadecimal digits for the avatar hash (#25322)\n\n(cherry picked from commit 7a9c0e31eca4958f5fba053cfea9e64a2ea58509)",
            "author":"Marcus Efraimsson",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 5, 'total': 16}",
            "files":"{'pkg\/api\/avatar\/avatar.go': {'additions': 11, 'deletions': 5, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/grafana\/grafana\/raw\/ba953be95f0302c2ea80d23f1e5f2c1847365192\/pkg%2Fapi%2Favatar%2Favatar.go', 'patch': '@@ -15,14 +15,14 @@ import (\\n \\t\"net\/http\"\\n \\t\"net\/url\"\\n \\t\"path\/filepath\"\\n+\\t\"regexp\"\\n \\t\"strconv\"\\n-\\t\"strings\"\\n \\t\"sync\"\\n \\t\"time\"\\n \\n \\t\"github.com\/grafana\/grafana\/pkg\/infra\/log\"\\n+\\t\"github.com\/grafana\/grafana\/pkg\/models\"\\n \\t\"github.com\/grafana\/grafana\/pkg\/setting\"\\n-\\t\"gopkg.in\/macaron.v1\"\\n \\n \\tgocache \"github.com\/patrickmn\/go-cache\"\\n )\\n@@ -73,9 +73,15 @@ type CacheServer struct {\\n \\tcache    *gocache.Cache\\n }\\n \\n-func (this *CacheServer) Handler(ctx *macaron.Context) {\\n-\\turlPath := ctx.Req.URL.Path\\n-\\thash := urlPath[strings.LastIndex(urlPath, \"\/\")+1:]\\n+var validMD5 = regexp.MustCompile(\"^[a-fA-F0-9]{32}$\")\\n+\\n+func (this *CacheServer) Handler(ctx *models.ReqContext) {\\n+\\thash := ctx.Params(\"hash\")\\n+\\n+\\tif len(hash) != 32 || !validMD5.MatchString(hash) {\\n+\\t\\tctx.JsonApiErr(404, \"Avatar not found\", nil)\\n+\\t\\treturn\\n+\\t}\\n \\n \\tvar avatar *Avatar\\n \\tobj, exists := this.cache.Get(hash)'}}",
            "message_norm":"only allow 32 hexadecimal digits for the avatar hash (#25322)\n\n(cherry picked from commit 7a9c0e31eca4958f5fba053cfea9e64a2ea58509)",
            "language":"en",
            "entities":"[('hash', 'SECWORD', ''), ('#25322', 'ISSUE', ''), ('commit 7a9c0e31eca4958f5fba053cfea9e64a2ea58509', 'SHA', 'prefix_colon_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['pkg\/api\/avatar\/avatar.go'])",
            "num_files":1.0
        },
        {
            "index":1745,
            "vuln_id":"GHSA-fjqr-fx3f-g4rv",
            "cwe_id":"{'CWE-78'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/electron\/electron\/commit\/ce361a12e355f9e1e99c989f1ea056c9e502dbe7'}",
            "dataset":"osv",
            "summary":"Electron protocol handler browser vulnerable to Command Injection Github Electron version Electron 1.8.2-beta.4 and earlier contains a Command Injection vulnerability in Protocol Handler that can result in command execute. This attack appear to be exploitable via the victim opening an electron protocol handler in their browser. This vulnerability appears to have been fixed in Electron 1.8.2-beta.5. This issue is due to an incomplete fix for CVE-2018-1000006, specifically the black list used was not case insensitive allowing an attacker to potentially bypass it.",
            "published_date":"2018-03-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/electron\/electron",
            "commit_href":"https:\/\/github.com\/electron\/electron\/commit\/ce361a12e355f9e1e99c989f1ea056c9e502dbe7",
            "commit_sha":"ce361a12e355f9e1e99c989f1ea056c9e502dbe7",
            "patch":"SINGLE",
            "chain_ord":"['ce361a12e355f9e1e99c989f1ea056c9e502dbe7']",
            "before_first_fix_commit":"{'278c58055ed36f6f22cea05a9cd85a5ab4fb3010'}",
            "last_fix_commit":"ce361a12e355f9e1e99c989f1ea056c9e502dbe7",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/01\/2018, 00:35:09",
            "message":"Use case-insensitive switch comparisons",
            "author":"Samuel Attard",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'atom\/app\/command_line_args.cc': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/electron\/electron\/raw\/ce361a12e355f9e1e99c989f1ea056c9e502dbe7\/atom%2Fapp%2Fcommand_line_args.cc', 'patch': '@@ -1390,7 +1390,8 @@ bool IsBlacklistedArg(const base::CommandLine::CharType* arg) {\\n \\n   if (prefix_length > 0) {\\n     a += prefix_length;\\n-    std::string switch_name(a, strcspn(a, \"=\"));\\n+    std::string switch_name =\\n+        base::ToLowerASCII(base::StringPiece(a, strcspn(a, \"=\")));\\n     auto* iter = std::lower_bound(std::begin(kBlacklist), std::end(kBlacklist),\\n                                   switch_name);\\n     if (iter != std::end(kBlacklist) && switch_name == *iter) {'}}",
            "message_norm":"use case-insensitive switch comparisons",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['atom\/app\/command_line_args.cc'])",
            "num_files":1.0
        },
        {
            "index":2050,
            "vuln_id":"GHSA-hf79-8hjp-rrvq",
            "cwe_id":"{'CWE-416'}",
            "score":8.5,
            "chain":"{'https:\/\/github.com\/bytecodealliance\/lucet\/commit\/7c7757c772fb709c61b1442bcc1e1fbee97bf4a8'}",
            "dataset":"osv",
            "summary":"Use After Free in lucet ### Impact\nThere is a bug in the main branch of Lucet's `lucet-runtime` that allows a use-after-free in an `Instance` object that could result in memory corruption, data race, or other related issues.  This bug was introduced early in the development of Lucet and is present in all releases.  As a result of this bug, and dependent on the memory backing for the `Instance` objects, it is possible to trigger a use-after-free when the `Instance` is dropped.\n\n### Patches\nUsers should upgrade to the `main` branch of the Lucet repository. Lucet does not provide versioned releases on crates.io.\n\n### Workarounds\nThere is no way to remediate this vulnerability without upgrading.\n\n### Description\nLucet uses a \"pool\" allocator for new WebAssembly instances that are created. This pool allocator manages everything from the linear memory of the wasm instance, the runtime stack for async switching, as well as the memory behind the Instance itself. `Instances` are referred to via an `InstanceHandle` type which will, on drop, release the memory backing the Instance back to the pool.\n\nWhen an Instance is dropped, the fields of the `Instance` are destructed top-to-bottom, however when the `alloc: Alloc` field is destructed, the memory backing the `Instance` is released back to the pool before the destructors of the remaining fields are run. If another thread allocates the same memory from the pool while these destructors are still running, a race condition occurs that can lead to use-after-free errors.\n\nThe bug was corrected by changing how the `InstanceHandle` destructor operates to ensure that the memory backing an Instance is only returned to the pool once the `Instance` has been completely destroyed.\n\nThis security advisory has been assigned CVE-2021-43790.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [lucet repository](https:\/\/github.com\/bytecodealliance\/lucet)\n* Email [the lucet team](mailto:lucet@fastly.com)\n* See the [Bytecode Alliance security policy](https:\/\/bytecodealliance.org\/security)",
            "published_date":"2021-11-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/bytecodealliance\/lucet",
            "commit_href":"https:\/\/github.com\/bytecodealliance\/lucet\/commit\/7c7757c772fb709c61b1442bcc1e1fbee97bf4a8",
            "commit_sha":"7c7757c772fb709c61b1442bcc1e1fbee97bf4a8",
            "patch":"SINGLE",
            "chain_ord":"['7c7757c772fb709c61b1442bcc1e1fbee97bf4a8']",
            "before_first_fix_commit":"{'8fb1fece339927e178f6cfef4eb67328b500237d'}",
            "last_fix_commit":"7c7757c772fb709c61b1442bcc1e1fbee97bf4a8",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/29\/2021, 23:00:02",
            "message":"Merge pull request from GHSA-hf79-8hjp-rrvq\n\n* Use manual drop\n\n* Add some comments to `ManuallyDrop` usage\n\n* rustfmt\n\nCo-authored-by: Aaron Turon <aturon@fastly.com>\nCo-authored-by: Alex Crichton <alex@alexcrichton.com>",
            "author":"Pat Hickey",
            "comments":null,
            "stats":"{'additions': 26, 'deletions': 13, 'total': 39}",
            "files":"{'lucet-runtime\/lucet-runtime-internals\/src\/instance.rs': {'additions': 26, 'deletions': 13, 'changes': 39, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bytecodealliance\/lucet\/raw\/7c7757c772fb709c61b1442bcc1e1fbee97bf4a8\/lucet-runtime%2Flucet-runtime-internals%2Fsrc%2Finstance.rs', 'patch': '@@ -14,7 +14,6 @@ use crate::error::Error;\\n #[cfg(feature = \"concurrent_testpoints\")]\\n use crate::lock_testpoints::LockTestpoints;\\n use crate::module::{self, FunctionHandle, Global, GlobalValue, Module, TrapCode};\\n-use crate::region::RegionInternal;\\n use crate::sysdeps::HOST_PAGE_SIZE_EXPECTED;\\n use crate::val::{UntypedRetVal, Val};\\n use crate::vmctx::Vmctx;\\n@@ -27,6 +26,7 @@ use std::cell::{BorrowError, BorrowMutError, Ref, RefCell, RefMut, UnsafeCell};\\n use std::convert::TryFrom;\\n use std::marker::PhantomData;\\n use std::mem;\\n+use std::mem::ManuallyDrop;\\n use std::ops::{Deref, DerefMut};\\n use std::ptr::{self, NonNull};\\n use std::sync::Arc;\\n@@ -147,20 +147,29 @@ impl Drop for InstanceHandle {\\n             unsafe {\\n                 let inst = self.inst.as_mut();\\n \\n-                \/\/ Grab a handle to the region to ensure it outlives `inst`.\\n+                \/\/ The `inst.alloc` field manages the memory of the instance\\n+                \/\/ itself. Note, though, that this field is in a `ManuallyDrop`\\n+                \/\/ so it won\\'t get dropped automatically in `drop_in_place`.\\n+                \/\/ This is the point where we take over that precise drop.\\n                 \/\/\\n-                \/\/ This ensures that the region won\\'t be dropped by `inst` being\\n-                \/\/ dropped, which could result in `inst` being unmapped by the\\n-                \/\/ Region *during* drop of the Instance\\'s fields.\\n-                let region: Arc<dyn RegionInternal> = inst.alloc().region.clone();\\n+                \/\/ By using `take` here we\\'re basically calling `ptr::read`\\n+                \/\/ which \"duplicates\" the `alloc` since the `alloc` local\\n+                \/\/ variable here is the exact same as `inst.alloc`. All we do\\n+                \/\/ with `inst`, though, is call `drop_in_place`, which\\n+                \/\/ invalidates every other field in `inst`.\\n+                let alloc: Alloc = ManuallyDrop::take(&mut inst.alloc);\\n \\n                 \/\/ drop the actual instance\\n                 std::ptr::drop_in_place(inst);\\n \\n-                \/\/ and now we can drop what may be the last Arc<Region>. If it is\\n-                \/\/ it can safely do what it needs with memory; we\\'re not running\\n-                \/\/ destructors on it anymore.\\n-                mem::drop(region);\\n+                \/\/ Now that we\\'re 100% done with the instance, destructors and\\n+                \/\/ all, we can release the memory of the instance back to the\\n+                \/\/ original allocator from whence it came (be it mmap or uffd\\n+                \/\/ based). This will run the \"official\" destructor for `Alloc`\\n+                \/\/ which internally does the release. Note that after this\\n+                \/\/ operation the `inst` pointer is invalid and can no longer be\\n+                \/\/ used.\\n+                drop(alloc);\\n             }\\n         }\\n     }\\n@@ -233,8 +242,12 @@ pub struct Instance {\\n     \/\/\/ Conditionally-present helpers to force permutations of possible races in testing.\\n     pub lock_testpoints: Arc<LockTestpoints>,\\n \\n-    \/\/\/ The memory allocated for this instance\\n-    alloc: Alloc,\\n+    \/\/\/ The memory allocated for this instance.\\n+    \/\/\/\\n+    \/\/\/ Note that this is in a `ManuallyDrop` because this manages the memory of\\n+    \/\/\/ this `Instance` itself. To have precise control over this memory we\\n+    \/\/\/ handle this in `Drop for InstanceHandle`.\\n+    alloc: ManuallyDrop<Alloc>,\\n \\n     \/\/\/ Handler run for signals that do not arise from a known WebAssembly trap, or that involve\\n     \/\/\/ memory outside of the current instance.\\n@@ -1055,7 +1068,7 @@ impl Instance {\\n             kill_state,\\n             #[cfg(feature = \"concurrent_testpoints\")]\\n             lock_testpoints,\\n-            alloc,\\n+            alloc: ManuallyDrop::new(alloc),\\n             fatal_handler: default_fatal_handler,\\n             c_fatal_handler: None,\\n             signal_handler: Box::new(signal_handler_none) as Box<SignalHandler>,'}}",
            "message_norm":"merge pull request from ghsa-hf79-8hjp-rrvq\n\n* use manual drop\n\n* add some comments to `manuallydrop` usage\n\n* rustfmt\n\nco-authored-by: aaron turon <aturon@fastly.com>\nco-authored-by: alex crichton <alex@alexcrichton.com>",
            "language":"en",
            "entities":"[('ghsa-hf79-8hjp-rrvq', 'VULNID', 'GHSA'), ('add', 'ACTION', ''), ('aturon@fastly.com', 'EMAIL', ''), ('alex@alexcrichton.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lucet-runtime\/lucet-runtime-internals\/src\/instance.rs'])",
            "num_files":1.0
        },
        {
            "index":2919,
            "vuln_id":"GHSA-rcjj-h6gh-jf3r",
            "cwe_id":"{'CWE-379'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/apache\/groovy\/commit\/bcbe5c4c76db83736166530647c024ac1e47ef28'}",
            "dataset":"osv",
            "summary":"Information Disclosure in Apache Groovy Apache Groovy provides extension methods to aid with creating temporary directories. Prior to this fix, Groovy's implementation of those extension methods was using a now superseded Java JDK method call that is potentially not secure on some operating systems in some contexts. Users not using the extension methods mentioned in the advisory are not affected, but may wish to read the advisory for further details. Versions Affected: 2.0 to 2.4.20, 2.5.0 to 2.5.13, 3.0.0 to 3.0.6, and 4.0.0-alpha-1. Fixed in versions 2.4.21, 2.5.14, 3.0.7, 4.0.0-alpha-2.",
            "published_date":"2020-12-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/apache\/groovy",
            "commit_href":"https:\/\/github.com\/apache\/groovy\/commit\/bcbe5c4c76db83736166530647c024ac1e47ef28",
            "commit_sha":"bcbe5c4c76db83736166530647c024ac1e47ef28",
            "patch":"SINGLE",
            "chain_ord":"['bcbe5c4c76db83736166530647c024ac1e47ef28']",
            "before_first_fix_commit":"{'e5aabb3a88974a6176a0fe76356c6a0415b5d183'}",
            "last_fix_commit":"bcbe5c4c76db83736166530647c024ac1e47ef28",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/18\/2020, 13:08:16",
            "message":"GROOVY-9824: replace some old api usage with newer available variants (closes #1425)",
            "author":"Paul King",
            "comments":null,
            "stats":"{'additions': 14, 'deletions': 33, 'total': 47}",
            "files":"{'src\/main\/java\/org\/codehaus\/groovy\/runtime\/DefaultGroovyStaticMethods.java': {'additions': 14, 'deletions': 33, 'changes': 47, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/groovy\/raw\/bcbe5c4c76db83736166530647c024ac1e47ef28\/src%2Fmain%2Fjava%2Forg%2Fcodehaus%2Fgroovy%2Fruntime%2FDefaultGroovyStaticMethods.java', 'patch': '@@ -27,6 +27,8 @@\\n import java.lang.management.ManagementFactory;\\n import java.lang.management.ThreadInfo;\\n import java.lang.management.ThreadMXBean;\\n+import java.nio.file.Files;\\n+import java.nio.file.Path;\\n import java.util.Arrays;\\n import java.util.Locale;\\n import java.util.ResourceBundle;\\n@@ -211,42 +213,21 @@ public static ResourceBundle getBundle(ResourceBundle self, String bundleName, L\\n     }\\n \\n     public static File createTempDir(File self) throws IOException {\\n-        return createTempDir(self, \"groovy-generated-\", \"-tmpdir\");\\n+        return createTempDir(self, \"groovy-generated-\", \"tmpdir-\");\\n+    }\\n+\\n+    public static File createTempDir(File self, final String prefix) throws IOException {\\n+        return createTempDirNio(prefix);\\n     }\\n \\n     public static File createTempDir(File self, final String prefix, final String suffix) throws IOException {\\n-        final int MAXTRIES = 3;\\n-        int accessDeniedCounter = 0;\\n-        File tempFile=null;\\n-        for (int i=0; i<MAXTRIES; i++) {\\n-            try {\\n-                tempFile = File.createTempFile(prefix, suffix);\\n-                tempFile.delete();\\n-                tempFile.mkdirs();\\n-                break;\\n-            } catch (IOException ioe) {\\n-                if (ioe.getMessage().startsWith(\"Access is denied\")) {\\n-                    accessDeniedCounter++;\\n-                    try {\\n-                        Thread.sleep(100);\\n-                    } catch (InterruptedException ignore) {\\n-                    }\\n-                }\\n-                if (i == MAXTRIES - 1) {\\n-                    if (accessDeniedCounter == MAXTRIES) {\\n-                        String msg = \"Access is denied.\\\\nWe tried \" + accessDeniedCounter +\\n-                                \" times to create a temporary directory and failed each time.\" +\\n-                                \" If you are on Windows, you are possibly victim to\" +\\n-                                \" http:\/\/bugs.sun.com\/bugdatabase\/view_bug.do?bug_id=6325169.\" +\\n-                                \" This is not a bug in Groovy.\";\\n-                        throw new IOException(msg);\\n-                    } else {\\n-                        throw ioe;\\n-                    }\\n-                }\\n-            }\\n-        }\\n-        return tempFile;\\n+        \/\/ more secure Files api doesn\\'t support suffix, so just append it to the prefix\\n+        return createTempDirNio(prefix + suffix);\\n+    }\\n+\\n+    private static File createTempDirNio(String prefix) throws IOException {\\n+        Path tempPath = Files.createTempDirectory(prefix);\\n+        return tempPath.toFile();\\n     }\\n \\n     \/**'}}",
            "message_norm":"groovy-9824: replace some old api usage with newer available variants (closes #1425)",
            "language":"en",
            "entities":"[('#1425', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/org\/codehaus\/groovy\/runtime\/DefaultGroovyStaticMethods.java'])",
            "num_files":1.0
        },
        {
            "index":3447,
            "vuln_id":"GHSA-xjfw-5vv5-vjq2",
            "cwe_id":"{'CWE-79', 'CWE-116'}",
            "score":7.4,
            "chain":"{'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/21906acb5ee2304552f56f9bbdbf8e7d368f7f3a'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in Filter Stream Converter Application in XWiki Platform ### Impact\nWe found a possible XSS vector in the `Filter.FilterStreamDescriptorForm` wiki page related to pretty much all the form fields printed in the home page of the application.\n\n### Patches\nThe issue is patched in versions 12.10.11, 14.0-rc-1, 13.4.7, 13.10.3.\n\n### Workarounds\nThe easiest workaround is to edit the wiki page `Filter.FilterStreamDescriptorForm` (with wiki editor) and change the lines\n\n```\n          <input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$request.get($descriptorId)#else$descriptor.defaultValue#end\"\/>\n        #else\n          <input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$request.get($descriptorId)\"#end\/>\n```\n\ninto\n\n```\n          <input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$escapetool.xml($request.get($descriptorId))#else$descriptor.defaultValue#end\"\/>\n        #else\n          <input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$escapetool.xml($request.get($descriptorId))\"#end\/>\n```",
            "published_date":"2022-06-01",
            "chain_len":1,
            "project":"https:\/\/github.com\/xwiki\/xwiki-platform",
            "commit_href":"https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/21906acb5ee2304552f56f9bbdbf8e7d368f7f3a",
            "commit_sha":"21906acb5ee2304552f56f9bbdbf8e7d368f7f3a",
            "patch":"SINGLE",
            "chain_ord":"['21906acb5ee2304552f56f9bbdbf8e7d368f7f3a']",
            "before_first_fix_commit":"{'eed842a0ea9e263548805b908ebbd362213ce0ea'}",
            "last_fix_commit":"21906acb5ee2304552f56f9bbdbf8e7d368f7f3a",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/04\/2022, 10:33:53",
            "message":"XWIKI-19293: Fix bad escaping",
            "author":"Thomas Mortagne",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'xwiki-platform-core\/xwiki-platform-filter\/xwiki-platform-filter-ui\/src\/main\/resources\/Filter\/FilterStreamDescriptorForm.xml': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/xwiki\/xwiki-platform\/raw\/21906acb5ee2304552f56f9bbdbf8e7d368f7f3a\/xwiki-platform-core%2Fxwiki-platform-filter%2Fxwiki-platform-filter-ui%2Fsrc%2Fmain%2Fresources%2FFilter%2FFilterStreamDescriptorForm.xml', 'patch': '@@ -58,9 +58,9 @@\\n       &lt;dd&gt;\\n         ## TODO: design a real framework to generate form by type\\n         #if (($descriptor.defaultValue || \"$!descriptor.defaultValue\" != \\'\\') &amp;&amp; ($descriptor.type.getName() == \\'boolean\\' || $descriptor.type.getName() == \\'int\\' || $descriptor.type.getName() == \\'java.lang.String\\'))\\n-          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$request.get($descriptorId)#else$descriptor.defaultValue#end\"\/&gt;\\n+          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$escapetool.xml($request.get($descriptorId))#else$descriptor.defaultValue#end\"\/&gt;\\n         #else\\n-          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$request.get($descriptorId)\"#end\/&gt;\\n+          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$escapetool.xml($request.get($descriptorId))\"#end\/&gt;\\n         #end\\n       &lt;\/dd&gt;\\n     #end'}}",
            "message_norm":"xwiki-19293: fix bad escaping",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('escaping', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['xwiki-platform-core\/xwiki-platform-filter\/xwiki-platform-filter-ui\/src\/main\/resources\/Filter\/FilterStreamDescriptorForm.xml'])",
            "num_files":1.0
        },
        {
            "index":70,
            "vuln_id":"GHSA-2927-hv3p-f3vp",
            "cwe_id":"{'CWE-601'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/caddyserver\/caddy\/pull\/4499\/commits\/b23bdcf99cfbd09d50555a999a16468404789230'}",
            "dataset":"osv",
            "summary":"Open redirect in caddy Caddy v2.4 was discovered to contain an open redirect vulnerability. A remote unauthenticated attacker may exploit this vulnerability to redirect users to arbitrary web URLs by tricking the victim users to click on crafted links.",
            "published_date":"2022-06-03",
            "chain_len":1,
            "project":"https:\/\/github.com\/caddyserver\/caddy",
            "commit_href":"https:\/\/github.com\/caddyserver\/caddy\/pull\/4499\/commits\/b23bdcf99cfbd09d50555a999a16468404789230",
            "commit_sha":"b23bdcf99cfbd09d50555a999a16468404789230",
            "patch":"SINGLE",
            "chain_ord":"['b23bdcf99cfbd09d50555a999a16468404789230']",
            "before_first_fix_commit":"{'5333c3528bd2badf1676efcced322d151e3706c8'}",
            "last_fix_commit":"b23bdcf99cfbd09d50555a999a16468404789230",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/30\/2021, 04:31:51",
            "message":"caddyhttp: Fix `MatchPath` sanitizing\n\nThis is a followup to #4407, in response to a report on the forums: https:\/\/caddy.community\/t\/php-fastcgi-phishing-redirection\/14542\n\nTurns out that doing `TrimRight` to remove trailing dots, _before_ cleaning the path, will cause double-dots at the end of the path to not be cleaned away as they should. We should instead remove the dots _after_ cleaning.",
            "author":"Francis Lavoie",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 5, 'total': 10}",
            "files":"{'modules\/caddyhttp\/matchers.go': {'additions': 5, 'deletions': 5, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/caddyserver\/caddy\/raw\/b23bdcf99cfbd09d50555a999a16468404789230\/modules%2Fcaddyhttp%2Fmatchers.go', 'patch': '@@ -325,18 +325,18 @@ func (m MatchPath) Match(r *http.Request) bool {\\n \\n \\tlowerPath := strings.ToLower(unescapedPath)\\n \\n+\\t\/\/ Clean the path, merges doubled slashes, etc.\\n+\\t\/\/ This ensures maliciously crafted requests can\\'t bypass\\n+\\t\/\/ the path matcher. See #4407\\n+\\tlowerPath = path.Clean(lowerPath)\\n+\\n \\t\/\/ see #2917; Windows ignores trailing dots and spaces\\n \\t\/\/ when accessing files (sigh), potentially causing a\\n \\t\/\/ security risk (cry) if PHP files end up being served\\n \\t\/\/ as static files, exposing the source code, instead of\\n \\t\/\/ being matched by *.php to be treated as PHP scripts\\n \\tlowerPath = strings.TrimRight(lowerPath, \". \")\\n \\n-\\t\/\/ Clean the path, merges doubled slashes, etc.\\n-\\t\/\/ This ensures maliciously crafted requests can\\'t bypass\\n-\\t\/\/ the path matcher. See #4407\\n-\\tlowerPath = path.Clean(lowerPath)\\n-\\n \\t\/\/ Cleaning may remove the trailing slash, but we want to keep it\\n \\tif lowerPath != \"\/\" && strings.HasSuffix(r.URL.Path, \"\/\") {\\n \\t\\tlowerPath = lowerPath + \"\/\"'}}",
            "message_norm":"caddyhttp: fix `matchpath` sanitizing\n\nthis is a followup to #4407, in response to a report on the forums: https:\/\/caddy.community\/t\/php-fastcgi-phishing-redirection\/14542\n\nturns out that doing `trimright` to remove trailing dots, _before_ cleaning the path, will cause double-dots at the end of the path to not be cleaned away as they should. we should instead remove the dots _after_ cleaning.",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('sanitizing', 'SECWORD', ''), ('#4407', 'ISSUE', ''), ('https:\/\/caddy.community\/t\/php-fastcgi-phishing-redirection\/14542', 'URL', ''), ('remove', 'ACTION', ''), ('remove', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/caddyhttp\/matchers.go'])",
            "num_files":1.0
        },
        {
            "index":1058,
            "vuln_id":"GHSA-7q4h-pj78-j7vg",
            "cwe_id":"{'CWE-400', 'CWE-918'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/apache\/cxf\/commit\/aa789c5c4686597a7bdef2443909ab491fc2bc04', 'https:\/\/github.com\/apache\/cxf\/commit\/40503a53914758759894f704bbf139ae89ace286'}",
            "dataset":"osv",
            "summary":"Authorization service vulnerable to DDos attacks in Apache CFX CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a \"request\" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the \"request_uri\" parameter. CXF was not validating the \"request_uri\" parameter (apart from ensuring it uses \"https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",
            "published_date":"2021-05-13",
            "chain_len":2,
            "project":"https:\/\/github.com\/apache\/cxf",
            "commit_href":"https:\/\/github.com\/apache\/cxf\/commit\/aa789c5c4686597a7bdef2443909ab491fc2bc04",
            "commit_sha":"aa789c5c4686597a7bdef2443909ab491fc2bc04",
            "patch":"MULTI",
            "chain_ord":"['40503a53914758759894f704bbf139ae89ace286', 'aa789c5c4686597a7bdef2443909ab491fc2bc04']",
            "before_first_fix_commit":"{'40503a53914758759894f704bbf139ae89ace286'}",
            "last_fix_commit":"aa789c5c4686597a7bdef2443909ab491fc2bc04",
            "chain_ord_pos":2.0,
            "commit_datetime":"01\/06\/2021, 10:38:21",
            "message":"Make sure both a request + request_uri can't be specified",
            "author":"Colm O hEigeartaigh",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 1, 'total': 12}",
            "files":"{'rt\/rs\/security\/oauth-parent\/oauth2\/src\/main\/java\/org\/apache\/cxf\/rs\/security\/oauth2\/grants\/code\/JwtRequestCodeFilter.java': {'additions': 11, 'deletions': 1, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/cxf\/raw\/aa789c5c4686597a7bdef2443909ab491fc2bc04\/rt%2Frs%2Fsecurity%2Foauth-parent%2Foauth2%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fcxf%2Frs%2Fsecurity%2Foauth2%2Fgrants%2Fcode%2FJwtRequestCodeFilter.java', 'patch': '@@ -21,9 +21,11 @@\\n import java.security.cert.X509Certificate;\\n import java.util.List;\\n import java.util.Map;\\n+import java.util.logging.Logger;\\n \\n import javax.ws.rs.core.MultivaluedMap;\\n \\n+import org.apache.cxf.common.logging.LogUtils;\\n import org.apache.cxf.helpers.CastUtils;\\n import org.apache.cxf.jaxrs.client.WebClient;\\n import org.apache.cxf.jaxrs.impl.MetadataMap;\\n@@ -42,23 +44,31 @@\\n import org.apache.cxf.rt.security.crypto.CryptoUtils;\\n \\n public class JwtRequestCodeFilter extends OAuthJoseJwtConsumer implements AuthorizationRequestFilter {\\n+    protected static final Logger LOG = LogUtils.getL7dLogger(JwtRequestCodeFilter.class);\\n     private static final String REQUEST_URI_CONTENT_TYPE = \"application\/oauth-authz-req+jwt\";\\n     private static final String REQUEST_PARAM = \"request\";\\n     private static final String REQUEST_URI_PARAM = \"request_uri\";\\n+\\n     private boolean verifyWithClientCertificates;\\n     private String issuer;\\n     private JsonMapObjectReaderWriter jsonHandler = new JsonMapObjectReaderWriter();\\n+\\n     @Override\\n     public MultivaluedMap<String, String> process(MultivaluedMap<String, String> params,\\n                                                   UserSubject endUser,\\n                                                   Client client) {\\n         String requestToken = params.getFirst(REQUEST_PARAM);\\n+        String requestUri = params.getFirst(REQUEST_URI_PARAM);\\n+\\n         if (requestToken == null) {\\n-            String requestUri = params.getFirst(REQUEST_URI_PARAM);\\n             if (isRequestUriValid(client, requestUri)) {\\n                 requestToken = WebClient.create(requestUri).accept(REQUEST_URI_CONTENT_TYPE).get(String.class);\\n             }\\n+        } else if (requestUri != null) {\\n+            LOG.warning(\"It is not valid to specify both a request and request_uri value\");\\n+            throw new SecurityException();\\n         }\\n+\\n         if (requestToken != null) {\\n             JweDecryptionProvider theDecryptor = super.getInitializedDecryptionProvider(client.getClientSecret());\\n             JwsSignatureVerifier theSigVerifier = getInitializedSigVerifier(client);'}}",
            "message_norm":"make sure both a request + request_uri can't be specified",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['rt\/rs\/security\/oauth-parent\/oauth2\/src\/main\/java\/org\/apache\/cxf\/rs\/security\/oauth2\/grants\/code\/JwtRequestCodeFilter.java'])",
            "num_files":1.0
        },
        {
            "index":1141,
            "vuln_id":"GHSA-85rr-4rh9-hhwh",
            "cwe_id":"{'CWE-119', 'CWE-20'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/nanopb\/nanopb\/commit\/4fe23595732b6f1254cfc11a9b8d6da900b55b0c'}",
            "dataset":"osv",
            "summary":"Memory leak in Nanopb ### Impact\nDecoding specifically formed message can leak memory if dynamic allocation is enabled and an oneof field contains a static submessage that contains a dynamic field, and the message being decoded contains the submessage multiple times. This is rare in normal messages, but it is a concern when untrusted data is parsed.\n\n### Patches\nPreliminary patch is [available on git](https:\/\/github.com\/nanopb\/nanopb\/commit\/edf6dcbffee4d614ac0c2c1b258ab95185bdb6e9) and problem will be patched in versions 0.3.9.7 and 0.4.4 once testing has been completed.\n\n### Workarounds\nFollowing workarounds are available:\n* Set the option `no_unions` for the oneof field. This will generate fields as separate instead of C union, and avoids triggering the problematic code.\n* Set the type of the submessage field inside oneof to `FT_POINTER`. This way the whole submessage will be dynamically allocated and the problematic code is not executed.\n* Use an arena allocator for nanopb, to make sure all memory can be released afterwards.\n\n### References\nBug report: https:\/\/github.com\/nanopb\/nanopb\/issues\/615\n\n### For more information\nIf you have any questions or comments about this advisory, comment on the bug report linked above.",
            "published_date":"2020-11-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/nanopb\/nanopb",
            "commit_href":"https:\/\/github.com\/nanopb\/nanopb\/commit\/4fe23595732b6f1254cfc11a9b8d6da900b55b0c",
            "commit_sha":"4fe23595732b6f1254cfc11a9b8d6da900b55b0c",
            "patch":"SINGLE",
            "chain_ord":"['4fe23595732b6f1254cfc11a9b8d6da900b55b0c']",
            "before_first_fix_commit":"{'d9d5dfd869aca4d00a81f671b2445fb4cea0352f'}",
            "last_fix_commit":"4fe23595732b6f1254cfc11a9b8d6da900b55b0c",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/25\/2020, 09:38:40",
            "message":"Fix memory leak with oneofs and PB_ENABLE_MALLOC (#615)\n\nNanopb would leak memory when all of the following conditions were true:\n- PB_ENABLE_MALLOC is defined at the compile time\n- Message definitions contains an oneof field,\n  the oneof contains a static submessage, and\n  the static submessage contains a pointer field.\n- Data being decoded contains two values for the submessage.\n\nThe logic in pb_release_union_field would detect that the same\nsubmessage occurs twice, and wouldn't release it because keeping\nthe old values is necessary to match the C++ library behavior\nregarding message merges.\n\nBut then decode_static_field() would go to memset() the whole\nsubmessage to zero, because it unconditionally assumed it to\nbe uninitialized memory. This would normally happen when the\ncontents of the union field is switched to a different oneof\nitem, instead of merging with the same one.\n\nThis commit changes it so that the field is memset() only when\n`which_field` contains a different tag.",
            "author":"Petteri Aimonen",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 3, 'total': 9}",
            "files":"{'pb_decode.c': {'additions': 6, 'deletions': 3, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nanopb\/nanopb\/raw\/4fe23595732b6f1254cfc11a9b8d6da900b55b0c\/pb_decode.c', 'patch': '@@ -464,14 +464,17 @@ static bool checkreturn decode_static_field(pb_istream_t *stream, pb_wire_type_t\\n             }\\n \\n         case PB_HTYPE_ONEOF:\\n-            *(pb_size_t*)iter->pSize = iter->pos->tag;\\n-            if (PB_LTYPE(type) == PB_LTYPE_SUBMESSAGE)\\n+            if (PB_LTYPE(type) == PB_LTYPE_SUBMESSAGE &&\\n+                *(pb_size_t*)iter->pSize != iter->pos->tag)\\n             {\\n                 \/* We memset to zero so that any callbacks are set to NULL.\\n-                 * Then set any default values. *\/\\n+                 * This is because the callbacks might otherwise have values\\n+                 * from some other union field. *\/\\n                 memset(iter->pData, 0, iter->pos->data_size);\\n                 pb_message_set_to_defaults((const pb_field_t*)iter->pos->ptr, iter->pData);\\n             }\\n+            *(pb_size_t*)iter->pSize = iter->pos->tag;\\n+\\n             return func(stream, iter->pos, iter->pData);\\n \\n         default:'}}",
            "message_norm":"fix memory leak with oneofs and pb_enable_malloc (#615)\n\nnanopb would leak memory when all of the following conditions were true:\n- pb_enable_malloc is defined at the compile time\n- message definitions contains an oneof field,\n  the oneof contains a static submessage, and\n  the static submessage contains a pointer field.\n- data being decoded contains two values for the submessage.\n\nthe logic in pb_release_union_field would detect that the same\nsubmessage occurs twice, and wouldn't release it because keeping\nthe old values is necessary to match the c++ library behavior\nregarding message merges.\n\nbut then decode_static_field() would go to memset() the whole\nsubmessage to zero, because it unconditionally assumed it to\nbe uninitialized memory. this would normally happen when the\ncontents of the union field is switched to a different oneof\nitem, instead of merging with the same one.\n\nthis commit changes it so that the field is memset() only when\n`which_field` contains a different tag.",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('memory leak', 'SECWORD', ''), ('#615', 'ISSUE', ''), ('leak', 'SECWORD', ''), ('decoded', 'SECWORD', ''), ('decode_static_field', 'SECWORD', ''), ('uninitialized memory', 'SECWORD', ''), ('changes', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['pb_decode.c'])",
            "num_files":1.0
        },
        {
            "index":152,
            "vuln_id":"GHSA-2wc6-2rcj-8v76",
            "cwe_id":"{'CWE-1240'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/sodiumoxide\/sodiumoxide\/commit\/24c7a5550807ac8a09648b5878f19d14c3a69135'}",
            "dataset":"osv",
            "summary":"scalarmult() vulnerable to degenerate public keys The `scalarmult()` function included in previous versions of this crate\naccepted all-zero public keys, for which the resulting Diffie-Hellman shared\nsecret will always be zero regardless of the private key used.\n\nThis issue was fixed by checking for this class of keys and rejecting them\nif they are used.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/sodiumoxide\/sodiumoxide",
            "commit_href":"https:\/\/github.com\/sodiumoxide\/sodiumoxide\/commit\/24c7a5550807ac8a09648b5878f19d14c3a69135",
            "commit_sha":"24c7a5550807ac8a09648b5878f19d14c3a69135",
            "patch":"SINGLE",
            "chain_ord":"['24c7a5550807ac8a09648b5878f19d14c3a69135']",
            "before_first_fix_commit":"{'12d49e8ed1b53821465f24312695376eb86c89d2'}",
            "last_fix_commit":"24c7a5550807ac8a09648b5878f19d14c3a69135",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/26\/2017, 19:24:31",
            "message":"Check the return value of `scalarmult()`. Closes #154",
            "author":"Daniel Ashhami",
            "comments":null,
            "stats":"{'additions': 55, 'deletions': 46, 'total': 101}",
            "files":"{'src\/crypto\/scalarmult\/curve25519.rs': {'additions': 55, 'deletions': 46, 'changes': 101, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sodiumoxide\/sodiumoxide\/raw\/24c7a5550807ac8a09648b5878f19d14c3a69135\/src%2Fcrypto%2Fscalarmult%2Fcurve25519.rs', 'patch': '@@ -23,14 +23,20 @@ new_type! {\\n \\n \/\/\/ `scalarmult()` multiplies a group element `p`\\n \/\/\/ by an integer `n`. It returns the resulting group element\\n-\/\/\/ `q`.\\n+\/\/\/ `Ok(q)`.\\n+\/\/\/ If the the `GroupElement` is all zero, `scalarmult()` returns `Err(())` since\\n+\/\/\/ the resulting `GroupElement` would be all zero, no matter the `Scalar`.\\n pub fn scalarmult(&Scalar(ref n): &Scalar,\\n-                  &GroupElement(ref p): &GroupElement) -> GroupElement {\\n+                  &GroupElement(ref p): &GroupElement)\\n+                  -> Result<GroupElement, ()> {\\n     let mut q = [0; GROUPELEMENTBYTES];\\n     unsafe {\\n-        ffi::crypto_scalarmult_curve25519(&mut q, n, p);\\n+        if ffi::crypto_scalarmult_curve25519(&mut q, n, p) != 0 {\\n+            Err(())\\n+        } else {\\n+            Ok(GroupElement(q))\\n+        }\\n     }\\n-    GroupElement(q)\\n }\\n \\n \/\/\/ `scalarmult_base()` computes the scalar product of a standard\\n@@ -47,74 +53,77 @@ pub fn scalarmult_base(&Scalar(ref n): &Scalar) -> GroupElement {\\n #[cfg(test)]\\n mod test {\\n     use super::*;\\n+    use randombytes::randombytes_into;\\n \\n     #[test]\\n     fn test_vector_1() {\\n         \/\/ corresponding to tests\/scalarmult.c and tests\/scalarmult3.cpp from NaCl\\n-        let alicesk = Scalar([0x77,0x07,0x6d,0x0a,0x73,0x18,0xa5,0x7d\\n-                             ,0x3c,0x16,0xc1,0x72,0x51,0xb2,0x66,0x45\\n-                             ,0xdf,0x4c,0x2f,0x87,0xeb,0xc0,0x99,0x2a\\n-                             ,0xb1,0x77,0xfb,0xa5,0x1d,0xb9,0x2c,0x2a]);\\n-        let alicepk_expected = [0x85,0x20,0xf0,0x09,0x89,0x30,0xa7,0x54\\n-                               ,0x74,0x8b,0x7d,0xdc,0xb4,0x3e,0xf7,0x5a\\n-                               ,0x0d,0xbf,0x3a,0x0d,0x26,0x38,0x1a,0xf4\\n-                               ,0xeb,0xa4,0xa9,0x8e,0xaa,0x9b,0x4e,0x6a];\\n+        let alicesk = Scalar([0x77, 0x07, 0x6d, 0x0a, 0x73, 0x18, 0xa5, 0x7d, 0x3c, 0x16, 0xc1,\\n+                              0x72, 0x51, 0xb2, 0x66, 0x45, 0xdf, 0x4c, 0x2f, 0x87, 0xeb, 0xc0,\\n+                              0x99, 0x2a, 0xb1, 0x77, 0xfb, 0xa5, 0x1d, 0xb9, 0x2c, 0x2a]);\\n+        let alicepk_expected = [0x85, 0x20, 0xf0, 0x09, 0x89, 0x30, 0xa7, 0x54, 0x74, 0x8b, 0x7d,\\n+                                0xdc, 0xb4, 0x3e, 0xf7, 0x5a, 0x0d, 0xbf, 0x3a, 0x0d, 0x26, 0x38,\\n+                                0x1a, 0xf4, 0xeb, 0xa4, 0xa9, 0x8e, 0xaa, 0x9b, 0x4e, 0x6a];\\n         let GroupElement(alicepk) = scalarmult_base(&alicesk);\\n         assert!(alicepk == alicepk_expected);\\n     }\\n \\n     #[test]\\n     fn test_vector_2() {\\n         \/\/ corresponding to tests\/scalarmult2.c and tests\/scalarmult4.cpp from NaCl\\n-        let bobsk = Scalar([0x5d,0xab,0x08,0x7e,0x62,0x4a,0x8a,0x4b\\n-                           ,0x79,0xe1,0x7f,0x8b,0x83,0x80,0x0e,0xe6\\n-                           ,0x6f,0x3b,0xb1,0x29,0x26,0x18,0xb6,0xfd\\n-                           ,0x1c,0x2f,0x8b,0x27,0xff,0x88,0xe0,0xeb]);\\n-        let bobpk_expected = [0xde,0x9e,0xdb,0x7d,0x7b,0x7d,0xc1,0xb4\\n-                             ,0xd3,0x5b,0x61,0xc2,0xec,0xe4,0x35,0x37\\n-                             ,0x3f,0x83,0x43,0xc8,0x5b,0x78,0x67,0x4d\\n-                             ,0xad,0xfc,0x7e,0x14,0x6f,0x88,0x2b,0x4f];\\n+        let bobsk = Scalar([0x5d, 0xab, 0x08, 0x7e, 0x62, 0x4a, 0x8a, 0x4b, 0x79, 0xe1, 0x7f,\\n+                            0x8b, 0x83, 0x80, 0x0e, 0xe6, 0x6f, 0x3b, 0xb1, 0x29, 0x26, 0x18,\\n+                            0xb6, 0xfd, 0x1c, 0x2f, 0x8b, 0x27, 0xff, 0x88, 0xe0, 0xeb]);\\n+        let bobpk_expected = [0xde, 0x9e, 0xdb, 0x7d, 0x7b, 0x7d, 0xc1, 0xb4, 0xd3, 0x5b, 0x61,\\n+                              0xc2, 0xec, 0xe4, 0x35, 0x37, 0x3f, 0x83, 0x43, 0xc8, 0x5b, 0x78,\\n+                              0x67, 0x4d, 0xad, 0xfc, 0x7e, 0x14, 0x6f, 0x88, 0x2b, 0x4f];\\n         let GroupElement(bobpk) = scalarmult_base(&bobsk);\\n         assert!(bobpk == bobpk_expected);\\n     }\\n \\n     #[test]\\n     fn test_vector_3() {\\n         \/\/ corresponding to tests\/scalarmult5.c and tests\/scalarmult7.cpp from NaCl\\n-        let alicesk = Scalar([0x77,0x07,0x6d,0x0a,0x73,0x18,0xa5,0x7d\\n-                             ,0x3c,0x16,0xc1,0x72,0x51,0xb2,0x66,0x45\\n-                             ,0xdf,0x4c,0x2f,0x87,0xeb,0xc0,0x99,0x2a\\n-                             ,0xb1,0x77,0xfb,0xa5,0x1d,0xb9,0x2c,0x2a]);\\n-        let bobpk = GroupElement([0xde,0x9e,0xdb,0x7d,0x7b,0x7d,0xc1,0xb4\\n-                                 ,0xd3,0x5b,0x61,0xc2,0xec,0xe4,0x35,0x37\\n-                                 ,0x3f,0x83,0x43,0xc8,0x5b,0x78,0x67,0x4d\\n-                                 ,0xad,0xfc,0x7e,0x14,0x6f,0x88,0x2b,0x4f]);\\n-        let k_expected = [0x4a,0x5d,0x9d,0x5b,0xa4,0xce,0x2d,0xe1\\n-                         ,0x72,0x8e,0x3b,0xf4,0x80,0x35,0x0f,0x25\\n-                         ,0xe0,0x7e,0x21,0xc9,0x47,0xd1,0x9e,0x33\\n-                         ,0x76,0xf0,0x9b,0x3c,0x1e,0x16,0x17,0x42];\\n-        let GroupElement(k) = scalarmult(&alicesk, &bobpk);\\n+        let alicesk = Scalar([0x77, 0x07, 0x6d, 0x0a, 0x73, 0x18, 0xa5, 0x7d, 0x3c, 0x16, 0xc1,\\n+                              0x72, 0x51, 0xb2, 0x66, 0x45, 0xdf, 0x4c, 0x2f, 0x87, 0xeb, 0xc0,\\n+                              0x99, 0x2a, 0xb1, 0x77, 0xfb, 0xa5, 0x1d, 0xb9, 0x2c, 0x2a]);\\n+        let bobpk = GroupElement([0xde, 0x9e, 0xdb, 0x7d, 0x7b, 0x7d, 0xc1, 0xb4, 0xd3, 0x5b,\\n+                                  0x61, 0xc2, 0xec, 0xe4, 0x35, 0x37, 0x3f, 0x83, 0x43, 0xc8,\\n+                                  0x5b, 0x78, 0x67, 0x4d, 0xad, 0xfc, 0x7e, 0x14, 0x6f, 0x88,\\n+                                  0x2b, 0x4f]);\\n+        let k_expected = [0x4a, 0x5d, 0x9d, 0x5b, 0xa4, 0xce, 0x2d, 0xe1, 0x72, 0x8e, 0x3b, 0xf4,\\n+                          0x80, 0x35, 0x0f, 0x25, 0xe0, 0x7e, 0x21, 0xc9, 0x47, 0xd1, 0x9e, 0x33,\\n+                          0x76, 0xf0, 0x9b, 0x3c, 0x1e, 0x16, 0x17, 0x42];\\n+        let GroupElement(k) = scalarmult(&alicesk, &bobpk).unwrap();\\n         assert!(k == k_expected);\\n     }\\n \\n     #[test]\\n     fn test_vector_4() {\\n         \/\/ corresponding to tests\/scalarmult6.c from NaCl\\n-        let bobsk = Scalar([0x5d,0xab,0x08,0x7e,0x62,0x4a,0x8a,0x4b\\n-                           ,0x79,0xe1,0x7f,0x8b,0x83,0x80,0x0e,0xe6\\n-                           ,0x6f,0x3b,0xb1,0x29,0x26,0x18,0xb6,0xfd\\n-                           ,0x1c,0x2f,0x8b,0x27,0xff,0x88,0xe0,0xeb]);\\n-        let alicepk = GroupElement([0x85,0x20,0xf0,0x09,0x89,0x30,0xa7,0x54\\n-                                   ,0x74,0x8b,0x7d,0xdc,0xb4,0x3e,0xf7,0x5a\\n-                                   ,0x0d,0xbf,0x3a,0x0d,0x26,0x38,0x1a,0xf4\\n-                                   ,0xeb,0xa4,0xa9,0x8e,0xaa,0x9b,0x4e,0x6a]);\\n-        let k_expected = [0x4a,0x5d,0x9d,0x5b,0xa4,0xce,0x2d,0xe1\\n-                         ,0x72,0x8e,0x3b,0xf4,0x80,0x35,0x0f,0x25\\n-                         ,0xe0,0x7e,0x21,0xc9,0x47,0xd1,0x9e,0x33\\n-                         ,0x76,0xf0,0x9b,0x3c,0x1e,0x16,0x17,0x42];\\n-        let GroupElement(k) = scalarmult(&bobsk, &alicepk);\\n+        let bobsk = Scalar([0x5d, 0xab, 0x08, 0x7e, 0x62, 0x4a, 0x8a, 0x4b, 0x79, 0xe1, 0x7f,\\n+                            0x8b, 0x83, 0x80, 0x0e, 0xe6, 0x6f, 0x3b, 0xb1, 0x29, 0x26, 0x18,\\n+                            0xb6, 0xfd, 0x1c, 0x2f, 0x8b, 0x27, 0xff, 0x88, 0xe0, 0xeb]);\\n+        let alicepk = GroupElement([0x85, 0x20, 0xf0, 0x09, 0x89, 0x30, 0xa7, 0x54, 0x74, 0x8b,\\n+                                    0x7d, 0xdc, 0xb4, 0x3e, 0xf7, 0x5a, 0x0d, 0xbf, 0x3a, 0x0d,\\n+                                    0x26, 0x38, 0x1a, 0xf4, 0xeb, 0xa4, 0xa9, 0x8e, 0xaa, 0x9b,\\n+                                    0x4e, 0x6a]);\\n+        let k_expected = [0x4a, 0x5d, 0x9d, 0x5b, 0xa4, 0xce, 0x2d, 0xe1, 0x72, 0x8e, 0x3b, 0xf4,\\n+                          0x80, 0x35, 0x0f, 0x25, 0xe0, 0x7e, 0x21, 0xc9, 0x47, 0xd1, 0x9e, 0x33,\\n+                          0x76, 0xf0, 0x9b, 0x3c, 0x1e, 0x16, 0x17, 0x42];\\n+        let GroupElement(k) = scalarmult(&bobsk, &alicepk).unwrap();\\n         assert!(k == k_expected);\\n     }\\n+\\n+    #[test]\\n+    #[should_panic]\\n+    fn test_all_zero() {\\n+        let mut sk = [0; SCALARBYTES];\\n+        randombytes_into(&mut sk);\\n+        let sk = Scalar(sk);\\n+        let pk = GroupElement([0; GROUPELEMENTBYTES]);\\n+        let _ = scalarmult(&sk, &pk).unwrap();\\n+    }\\n }\\n \\n #[cfg(feature = \"benchmarks\")]'}}",
            "message_norm":"check the return value of `scalarmult()`. closes #154",
            "language":"en",
            "entities":"[('#154', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/crypto\/scalarmult\/curve25519.rs'])",
            "num_files":1.0
        },
        {
            "index":2120,
            "vuln_id":"GHSA-hrg5-737c-2p56",
            "cwe_id":"{'CWE-20'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/13d38a07ce9143e044aa737cfd7bb759d0e9b400'}",
            "dataset":"osv",
            "summary":"Missing validation causes denial of service via `UnsortedSegmentJoin` ### Impact\nThe implementation of [`tf.raw_ops.UnsortedSegmentJoin`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/unsorted_segment_join_op.cc#L92-L95) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.UnsortedSegmentJoin(\n  inputs=tf.constant(\"this\", shape=[12], dtype=tf.string),\n  segment_ids=tf.constant(0, shape=[12], dtype=tf.int64),\n  num_segments=tf.constant(0, shape=[12], dtype=tf.int64))\n``` \n  \nThe code assumes `num_segments` is a scalar but there is no validation for this before accessing its value:\n\n```cc\nconst Tensor& num_segments_tensor = context->input(2);\nOP_REQUIRES(context, num_segments_tensor.NumElements() != 0,\n            errors::InvalidArgument(\"Number of segments cannot be empty.\"));\nauto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\n``` \n\n### Patches\nWe have patched the issue in GitHub commit [13d38a07ce9143e044aa737cfd7bb759d0e9b400](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/13d38a07ce9143e044aa737cfd7bb759d0e9b400).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Neophytos Christou from Secure Systems Lab at Brown University.",
            "published_date":"2022-05-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/13d38a07ce9143e044aa737cfd7bb759d0e9b400",
            "commit_sha":"13d38a07ce9143e044aa737cfd7bb759d0e9b400",
            "patch":"SINGLE",
            "chain_ord":"['13d38a07ce9143e044aa737cfd7bb759d0e9b400']",
            "before_first_fix_commit":"{'fa57990ccca1fb2b9a1f296183985931746914d3'}",
            "last_fix_commit":"13d38a07ce9143e044aa737cfd7bb759d0e9b400",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2022, 18:37:31",
            "message":"Fix tf.raw_ops.UnsortedSegmentJoin vulnerability with invalid num_segments.\n\nCheck that input is actually a scalar before treating it as such.\n\nPiperOrigin-RevId: 445206880",
            "author":"Alan Liu",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/core\/kernels\/unsorted_segment_join_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/13d38a07ce9143e044aa737cfd7bb759d0e9b400\/tensorflow%2Fcore%2Fkernels%2Funsorted_segment_join_op.cc', 'patch': '@@ -92,6 +92,9 @@ class UnsortedSegmentJoinOp : public OpKernel {\\n     const Tensor& num_segments_tensor = context->input(2);\\n     OP_REQUIRES(context, num_segments_tensor.NumElements() != 0,\\n                 errors::InvalidArgument(\"Number of segments cannot be empty.\"));\\n+    OP_REQUIRES(context,\\n+                TensorShapeUtils::IsScalar(num_segments_tensor.shape()),\\n+                errors::InvalidArgument(\"Number of segments must be a scalar\"));\\n     auto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\\n \\n     OP_REQUIRES('}}",
            "message_norm":"fix tf.raw_ops.unsortedsegmentjoin vulnerability with invalid num_segments.\n\ncheck that input is actually a scalar before treating it as such.\n\npiperorigin-revid: 445206880",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', ''), ('445206880', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/unsorted_segment_join_op.cc'])",
            "num_files":1.0
        },
        {
            "index":974,
            "vuln_id":"GHSA-763j-q7wv-vf3m",
            "cwe_id":"{'CWE-601'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/DSpace\/DSpace\/commit\/f7758457b7ec3489d525e39aa753cc70809d9ad9', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/5f72424a478f59061dcc516b866dcc687bc3f9de'}",
            "dataset":"osv",
            "summary":"JSPUI's controlled vocabulary feature vulnerable to Open Redirect before v6.4 and v5.11 ### Impact\nThe JSPUI controlled vocabulary servlet is vulnerable to an open redirect attack, where an attacker can craft a malicious URL that looks like a legitimate DSpace\/repository URL.  When that URL is clicked by the target, it redirects them to a site of the attacker's choice.\n\n_This vulnerability does NOT impact the XMLUI or 7.x._\n\n### Patches\n_DSpace 6.x:_\n* Fixed in 6.x via commit: https:\/\/github.com\/DSpace\/DSpace\/commit\/f7758457b7ec3489d525e39aa753cc70809d9ad9\n* 6.x patch file: https:\/\/github.com\/DSpace\/DSpace\/commit\/f7758457b7ec3489d525e39aa753cc70809d9ad9.patch (may be applied manually if an immediate upgrade to 6.4 or above is not possible)\n\n_DSpace 5.x:_\n* Fixed in 5.x via commit: https:\/\/github.com\/DSpace\/DSpace\/commit\/5f72424a478f59061dcc516b866dcc687bc3f9de\n* 5.x patch file: https:\/\/github.com\/DSpace\/DSpace\/commit\/5f72424a478f59061dcc516b866dcc687bc3f9de.patch (may be applied manually if an immediate upgrade to 5.11 or 6,4 or above is not possible)\n\n#### Apply the patch to your DSpace\nIf at all possible, we recommend upgrading your DSpace site based on the upgrade instructions. However, if you are unable to do so, you can manually apply the above patches as follows:\n1. Download the appropriate patch file to the machine where DSpace is running\n2. From the `[dspace-src]` folder, apply the patch, e.g. `git apply [name-of-file].patch`\n3. Now, update your DSpace site (based loosely on the Upgrade instructions). This generally involves three steps:\n    1. Rebuild DSpace, e.g. `mvn -U clean package`  (This will recompile all DSpace code)\n    2. Redeploy DSpace, e.g. `ant update`  (This will copy all updated WARs \/ configs to your installation directory). Depending on your setup you also may need to copy the updated WARs over to your Tomcat webapps folder.\n    3. Restart Tomcat\n\n### References\nDiscovered and reported by Johannes Moritz of Ripstech.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@dspace.org",
            "published_date":"2022-08-06",
            "chain_len":2,
            "project":"https:\/\/github.com\/DSpace\/DSpace",
            "commit_href":"https:\/\/github.com\/DSpace\/DSpace\/commit\/f7758457b7ec3489d525e39aa753cc70809d9ad9",
            "commit_sha":"f7758457b7ec3489d525e39aa753cc70809d9ad9",
            "patch":"MULTI",
            "chain_ord":"['f7758457b7ec3489d525e39aa753cc70809d9ad9', '5f72424a478f59061dcc516b866dcc687bc3f9de']",
            "before_first_fix_commit":"{'3b0cdee734d0ee3f2c2cbdcc07c1135c1c048be8'}",
            "last_fix_commit":"5f72424a478f59061dcc516b866dcc687bc3f9de",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/08\/2020, 00:48:56",
            "message":"[DS-4133] Improve URL handling in Controlled Vocab JSPUI servlet",
            "author":"Kim Shepherd",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 2, 'total': 12}",
            "files":"{'dspace-jspui\/src\/main\/java\/org\/dspace\/app\/webui\/servlet\/ControlledVocabularyServlet.java': {'additions': 10, 'deletions': 2, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DSpace\/DSpace\/raw\/f7758457b7ec3489d525e39aa753cc70809d9ad9\/dspace-jspui%2Fsrc%2Fmain%2Fjava%2Forg%2Fdspace%2Fapp%2Fwebui%2Fservlet%2FControlledVocabularyServlet.java', 'patch': '@@ -14,6 +14,7 @@\\n import javax.servlet.http.HttpServletRequest;\\n import javax.servlet.http.HttpServletResponse;\\n \\n+import org.apache.log4j.Logger;\\n import org.dspace.authorize.AuthorizeException;\\n import org.dspace.core.Context;\\n \\n@@ -25,8 +26,8 @@\\n  *\/\\n public class ControlledVocabularyServlet extends DSpaceServlet\\n {\\n-    \/\/ private static Logger log =\\n-    \/\/ Logger.getLogger(ControlledVocabularyServlet.class);\\n+    private static Logger log =\\n+    Logger.getLogger(ControlledVocabularyServlet.class);\\n \\n     protected void doDSGet(Context context, HttpServletRequest request,\\n             HttpServletResponse response) throws ServletException, IOException,\\n@@ -37,6 +38,13 @@ protected void doDSGet(Context context, HttpServletRequest request,\\n         String filter = \"\";\\n         String callerUrl = request.getParameter(\"callerUrl\");\\n \\n+        \/\/ callerUrl must starts with URL outside DSpace request context path\\n+        if(!callerUrl.startsWith(request.getContextPath())) {\\n+            log.error(\"Controlled vocabulary caller URL would result in redirect outside DSpace web app: \" + callerUrl + \". Rejecting request with 400 Bad Request.\");\\n+            response.sendError(400, \"The caller URL must be within the DSpace base URL of \" + request.getContextPath());\\n+            return;\\n+        }\\n+\\n         if (request.getParameter(\"ID\") != null)\\n         {\\n             ID = request.getParameter(\"ID\");'}}",
            "message_norm":"[ds-4133] improve url handling in controlled vocab jspui servlet",
            "language":"en",
            "entities":"[('improve', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['dspace-jspui\/src\/main\/java\/org\/dspace\/app\/webui\/servlet\/ControlledVocabularyServlet.java'])",
            "num_files":1.0
        },
        {
            "index":219,
            "vuln_id":"GHSA-3872-f48p-pxqj",
            "cwe_id":"{'CWE-88', 'CWE-77'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/d83672a3e7415da1490334e2c9431e5da1966842', 'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/35d59f1f040541c358cece0a8d4a63183ca919b8'}",
            "dataset":"osv",
            "summary":"Improper Neutralization of Special Elements used in a Command ('Command Injection') in Weblate ### Impact\nWeblate didn't correctly sanitize some arguments passed to Git and Mercurial, which allowed changing their behavior in an unintended way.\n\n### Patches\n\nThe issues were fixed in the 4.11.1 release. The following commits are addressing it:\n\n* 35d59f1f040541c358cece0a8d4a63183ca919b8\n* d83672a3e7415da1490334e2c9431e5da1966842\n\n### Workarounds\n\nInstances in which untrusted users cannot create new components are not affected.\n\n### References\n* [SNYK-PYTHON-WEBLATE-2414088](https:\/\/security.snyk.io\/vuln\/SNYK-PYTHON-WEBLATE-2414088)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a topic in [discussions](https:\/\/github.com\/WeblateOrg\/weblate\/discussions)\n* Email us at [care@weblate.org](mailto:care@weblate.org)",
            "published_date":"2022-03-04",
            "chain_len":2,
            "project":"https:\/\/github.com\/WeblateOrg\/weblate",
            "commit_href":"https:\/\/github.com\/WeblateOrg\/weblate\/commit\/35d59f1f040541c358cece0a8d4a63183ca919b8",
            "commit_sha":"35d59f1f040541c358cece0a8d4a63183ca919b8",
            "patch":"MULTI",
            "chain_ord":"['35d59f1f040541c358cece0a8d4a63183ca919b8', 'd83672a3e7415da1490334e2c9431e5da1966842']",
            "before_first_fix_commit":"{'9a5a09781e5a19ab9a24878afb08c9fcafb21ca7'}",
            "last_fix_commit":"d83672a3e7415da1490334e2c9431e5da1966842",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/03\/2022, 07:25:01",
            "message":"vcs: Improve mercurial parameters handling\n\nMake sure that all user provided input is handled as expected.",
            "author":"Michal \u010ciha\u0159",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'weblate\/vcs\/mercurial.py': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/WeblateOrg\/weblate\/raw\/35d59f1f040541c358cece0a8d4a63183ca919b8\/weblate%2Fvcs%2Fmercurial.py', 'patch': '@@ -70,7 +70,7 @@ def check_config(self):\\n     @classmethod\\n     def _clone(cls, source: str, target: str, branch: str):\\n         \"\"\"Clone repository.\"\"\"\\n-        cls._popen([\"clone\", \"--branch\", branch, source, target])\\n+        cls._popen([\"clone\", f\"--branch={branch}\", \"--\", source, target])\\n \\n     def get_config(self, path):\\n         \"\"\"Read entry from configuration.\"\"\"\\n@@ -323,7 +323,7 @@ def on_branch(self, branch):\\n     def configure_branch(self, branch):\\n         \"\"\"Configure repository branch.\"\"\"\\n         if not self.on_branch(branch):\\n-            self.execute([\"update\", branch])\\n+            self.execute([\"update\", \"--\", branch])\\n         self.branch = branch\\n \\n     def describe(self):\\n@@ -343,7 +343,7 @@ def describe(self):\\n     def push(self, branch):\\n         \"\"\"Push given branch to remote repository.\"\"\"\\n         try:\\n-            self.execute([\"push\", \"-b\", self.branch])\\n+            self.execute([\"push\", f\"--branch={self.branch}\"])\\n         except RepositoryException as error:\\n             if error.retcode == 1:\\n                 # No changes found\\n@@ -363,7 +363,7 @@ def cleanup(self):\\n \\n     def update_remote(self):\\n         \"\"\"Update remote repository.\"\"\"\\n-        self.execute([\"pull\", \"--branch\", self.branch])\\n+        self.execute([\"pull\", f\"--branch={self.branch}\"])\\n         self.clean_revision_cache()\\n \\n     def parse_changed_files(self, lines: List[str]) -> Iterator[str]:'}}",
            "message_norm":"vcs: improve mercurial parameters handling\n\nmake sure that all user provided input is handled as expected.",
            "language":"en",
            "entities":"[('improve', 'ACTION', ''), ('user provided input', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['weblate\/vcs\/mercurial.py'])",
            "num_files":1.0
        },
        {
            "index":1880,
            "vuln_id":"GHSA-gh6x-4whr-2qv4",
            "cwe_id":"{'CWE-476', 'CWE-125'}",
            "score":8.4,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9e82dce6e6bd1f36a57e08fa85af213e2b2f2622'}",
            "dataset":"osv",
            "summary":"Null pointer dereference and heap OOB read in operations restoring tensors ### Impact\nWhen restoring tensors via raw APIs, if the tensor name is not provided, TensorFlow can be tricked into dereferencing a null pointer:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.Restore(\n  file_pattern=['\/tmp'],\n  tensor_name=[], \n  default_value=21,\n  dt=tf.int,\n  preferred_shard=1)\n```\n  \nThe same undefined behavior can be triggered by `tf.raw_ops.RestoreSlice`:\n  \n```python\nimport tensorflow as tf\n\ntf.raw_ops.RestoreSlice(\n  file_pattern=['\/tmp'],\n  tensor_name=[], \n  shape_and_slice='2',\n  dt=inp.array([tf.int]),\n  preferred_shard=1)\n```\n\nAlternatively, attackers can read memory outside the bounds of heap allocated data by providing some tensor names but not enough for a successful restoration:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.Restore(\n  file_pattern=['\/tmp'],\n  tensor_name=['x'], \n  default_value=21,\n  dt=tf.int,\n  preferred_shard=42)\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/47a06f40411a69c99f381495f490536972152ac0\/tensorflow\/core\/kernels\/save_restore_tensor.cc#L158-L159) retrieves the tensor list corresponding to the `tensor_name` user controlled input and immediately retrieves the tensor at the restoration index (controlled via `preferred_shard` argument). This occurs without validating that the provided list has enough values.\n\nIf the list is empty this results in dereferencing a null pointer (undefined behavior). If, however, the list has some elements, if the restoration index is outside the bounds this results in heap OOB read.\n\n### Patches \nWe have patched the issue in GitHub commit [9e82dce6e6bd1f36a57e08fa85af213e2b2f2622](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9e82dce6e6bd1f36a57e08fa85af213e2b2f2622).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9e82dce6e6bd1f36a57e08fa85af213e2b2f2622",
            "commit_sha":"9e82dce6e6bd1f36a57e08fa85af213e2b2f2622",
            "patch":"SINGLE",
            "chain_ord":"['9e82dce6e6bd1f36a57e08fa85af213e2b2f2622']",
            "before_first_fix_commit":"{'e86605c0a336c088b638da02135ea6f9f6753618'}",
            "last_fix_commit":"9e82dce6e6bd1f36a57e08fa85af213e2b2f2622",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/02\/2021, 21:21:41",
            "message":"Fix NPE in restoring code.\n\nPiperOrigin-RevId: 388303253\nChange-Id: Ia8c68568cb854bca538909a182b31a618d68ce55",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 1, 'total': 9}",
            "files":"{'tensorflow\/core\/kernels\/save_restore_tensor.cc': {'additions': 8, 'deletions': 1, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/9e82dce6e6bd1f36a57e08fa85af213e2b2f2622\/tensorflow%2Fcore%2Fkernels%2Fsave_restore_tensor.cc', 'patch': '@@ -151,11 +151,18 @@ void RestoreTensor(OpKernelContext* context,\\n         context, size == 1,\\n         errors::InvalidArgument(\\n             \"Input 0 (file_pattern) must be a string scalar; got a tensor of \",\\n-            size, \"elements\"));\\n+            size, \" elements\"));\\n   }\\n   const string& file_pattern = file_pattern_t.flat<tstring>()(0);\\n \\n   const Tensor& tensor_name_t = context->input(1);\\n+  {\\n+    const int64_t size = tensor_name_t.NumElements();\\n+    OP_REQUIRES(context, size > restore_index,\\n+                errors::InvalidArgument(\\n+                    \"Input 1 (file_pattern) must be a have at least \",\\n+                    restore_index + 1, \" elements\"));\\n+  }\\n   const string& tensor_name = tensor_name_t.flat<tstring>()(restore_index);\\n \\n   \/\/ If we cannot find a cached reader we will allocate our own.'}}",
            "message_norm":"fix npe in restoring code.\n\npiperorigin-revid: 388303253\nchange-id: ia8c68568cb854bca538909a182b31a618d68ce55",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('npe', 'SECWORD', ''), ('388303253', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/save_restore_tensor.cc'])",
            "num_files":1.0
        },
        {
            "index":1887,
            "vuln_id":"GHSA-ghww-cv4v-hmxx",
            "cwe_id":"{'CWE-352'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/756096da1260f29ff6f4532234d93d8e41dd5aa8'}",
            "dataset":"osv",
            "summary":"Cross-Site Request Forgery microweber microweber prior to version 1.2.11 is vulnerable to Cross-Site Request Forgery (CSRF).",
            "published_date":"2022-02-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/756096da1260f29ff6f4532234d93d8e41dd5aa8",
            "commit_sha":"756096da1260f29ff6f4532234d93d8e41dd5aa8",
            "patch":"SINGLE",
            "chain_ord":"['756096da1260f29ff6f4532234d93d8e41dd5aa8']",
            "before_first_fix_commit":"{'037744b21342f771f6a3de65ed0be936d47c3737'}",
            "last_fix_commit":"756096da1260f29ff6f4532234d93d8e41dd5aa8",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/16\/2022, 16:19:52",
            "message":"Update UserLogoutController.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 1, 'total': 7}",
            "files":"{'src\/MicroweberPackages\/User\/Http\/Controllers\/UserLogoutController.php': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/756096da1260f29ff6f4532234d93d8e41dd5aa8\/src%2FMicroweberPackages%2FUser%2FHttp%2FControllers%2FUserLogoutController.php', 'patch': '@@ -5,6 +5,7 @@\\n use App\\\\Http\\\\Resources\\\\User\\\\UserResource;\\n use Illuminate\\\\Http\\\\Request;\\n use Illuminate\\\\Routing\\\\Controller;\\n+use Illuminate\\\\Support\\\\Facades\\\\Auth;\\n use MicroweberPackages\\\\App\\\\Http\\\\Middleware\\\\SameSiteRefererMiddleware;\\n \\n class UserLogoutController extends Controller\\n@@ -42,7 +43,11 @@ public function index(Request $request)\\n \\n     public function submit(Request $request)\\n     {\\n-        return logout();\\n+        Auth::logout();\\n+\\n+        $url = site_url();\\n+\\n+        return app()->url_manager->redirect($url);\\n     }\\n \\n }'}}",
            "message_norm":"update userlogoutcontroller.php",
            "language":"fr",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/User\/Http\/Controllers\/UserLogoutController.php'])",
            "num_files":1.0
        },
        {
            "index":847,
            "vuln_id":"GHSA-6hfq-h8hq-87mf",
            "cwe_id":"{'CWE-444'}",
            "score":4.8,
            "chain":"{'https:\/\/github.com\/hyperium\/hyper\/commit\/8f93123efef5c1361086688fe4f34c83c89cec02'}",
            "dataset":"osv",
            "summary":"HTTP Request Smuggling in hyper ### Summary\n\nhyper's HTTP server code had a flaw that incorrectly understands some requests with multiple transfer-encoding headers to have a chunked payload, when it should have been rejected as illegal. This combined with an upstream HTTP proxy that understands the request payload boundary differently can result in \"request smuggling\" or \"desync attacks\".\n\n### Vulnerability\n\nThe flaw was introduced in https:\/\/github.com\/hyperium\/hyper\/commit\/26417fc24a7d05df538e0f39239b373c5c3d61f6, released in v0.12.0.\n\nConsider this example request:\n\n```\nPOST \/yolo HTTP\/1.1\nTransfer-Encoding: chunked\nTransfer-Encoding: cow\n```\n\nThis request *should* be rejected, according to RFC 7230, since it has a `Transfer-Encoding` header, but after folding, it does not end in `chunked`. hyper would notice the `chunked` in the first line, and then check the second line, and thanks to a missing boolean assignment, *not* set the error condition. hyper would treat the payload as being `chunked`. By differing from the spec, it is possible to send requests like these to endpoints that have different HTTP implementations, with different interpretations of the payload semantics, and cause \"desync attacks\".\n\nThere are several parts of the spec that must also be checked, and hyper correctly handles all of those. Additionally, hyper's *client* does not allow sending requests with improper headers, so the misunderstanding cannot be propagated further.\n\nRead more about desync attacks: https:\/\/portswigger.net\/research\/http-desync-attacks-request-smuggling-reborn\n\n### Impact\n\nTo determine if vulnerable, all these things must be true:\n\n- **Using hyper as an HTTP *server*.** The client is not affected.\n- **Using HTTP\/1.1.** HTTP\/2 does not use `transfer-encoding`.\n- **Using a vulnerable HTTP proxy upstream to hyper.** If an upstream proxy correctly rejects the illegal transfer-encoding headers, the desync attack cannot succeed. If there is *no* proxy upstream of hyper, hyper cannot *start* the desync attack, as the client will repair the headers before forwarding.\n\n### Patches\n\nWe have released and backported the following patch versions:\n\n- v0.14.3\n- v0.13.10\n\n### Workarounds\n\nBesides upgrading hyper, you can take the following options:\n\n- Reject requests that contain a `transfer-encoding` header.\n- Ensure any upstream proxy handles `transfer-encoding` correctly.\n\n### Credits\n\nThis issue was initially reported by ZeddYu Lu From Qi An Xin Technology Research Institute.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/hyperium\/hyper",
            "commit_href":"https:\/\/github.com\/hyperium\/hyper\/commit\/8f93123efef5c1361086688fe4f34c83c89cec02",
            "commit_sha":"8f93123efef5c1361086688fe4f34c83c89cec02",
            "patch":"SINGLE",
            "chain_ord":"['8f93123efef5c1361086688fe4f34c83c89cec02']",
            "before_first_fix_commit":"{'4d2125c67c8087de863f74278a017c4caf37e6a9'}",
            "last_fix_commit":"8f93123efef5c1361086688fe4f34c83c89cec02",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/05\/2021, 21:27:30",
            "message":"fix(http1): fix server misinterpretting multiple Transfer-Encoding headers\n\nWhen a request arrived with multiple `Transfer-Encoding` headers, hyper\nwould check each if they ended with `chunked`. It should have only\nchecked if the *last* header ended with `chunked`.\n\nSee https:\/\/github.com\/hyperium\/hyper\/security\/advisories\/GHSA-6hfq-h8hq-87mf",
            "author":"Sean McArthur",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 0, 'total': 12}",
            "files":"{'src\/proto\/h1\/role.rs': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/hyperium\/hyper\/raw\/8f93123efef5c1361086688fe4f34c83c89cec02\/src%2Fproto%2Fh1%2Frole.rs', 'patch': '@@ -213,6 +213,8 @@ impl Http1Transaction for Server {\\n                     if headers::is_chunked_(&value) {\\n                         is_te_chunked = true;\\n                         decoder = DecodedLength::CHUNKED;\\n+                    } else {\\n+                        is_te_chunked = false;\\n                     }\\n                 }\\n                 header::CONTENT_LENGTH => {\\n@@ -1444,6 +1446,16 @@ mod tests {\\n             \"transfer-encoding doesn\\'t end in chunked\",\\n         );\\n \\n+        parse_err(\\n+            \"\\\\\\n+             POST \/ HTTP\/1.1\\\\r\\\\n\\\\\\n+             transfer-encoding: chunked\\\\r\\\\n\\\\\\n+             transfer-encoding: afterlol\\\\r\\\\n\\\\\\n+             \\\\r\\\\n\\\\\\n+             \",\\n+            \"transfer-encoding multiple lines doesn\\'t end in chunked\",\\n+        );\\n+\\n         \/\/ http\/1.0\\n \\n         assert_eq!('}}",
            "message_norm":"fix(http1): fix server misinterpretting multiple transfer-encoding headers\n\nwhen a request arrived with multiple `transfer-encoding` headers, hyper\nwould check each if they ended with `chunked`. it should have only\nchecked if the *last* header ended with `chunked`.\n\nsee https:\/\/github.com\/hyperium\/hyper\/security\/advisories\/ghsa-6hfq-h8hq-87mf",
            "language":"en",
            "entities":"[('fix(http1', 'ACTION', ''), ('fix', 'ACTION', ''), ('server', 'SECWORD', ''), ('encoding', 'SECWORD', ''), ('encoding', 'SECWORD', ''), ('https:\/\/github.com\/hyperium\/hyper\/security\/advisories\/ghsa-6hfq-h8hq-87mf', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/proto\/h1\/role.rs'])",
            "num_files":1.0
        },
        {
            "index":362,
            "vuln_id":"GHSA-4574-qv3w-fcmg",
            "cwe_id":"{'CWE-502'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/Codeception\/Codeception\/commit\/cbce9ea7f4664052fa1ac6b36f5b5a6dbd864d71', 'https:\/\/github.com\/Codeception\/Codeception\/commit\/802a108057d250ee563120eaa5365a519afc0a71'}",
            "dataset":"osv",
            "summary":" Deserialization of Untrusted Data in codeception\/codeception This affects the package codeception\/codeception from 4.0.0 before 4.1.22 and before 3.1.3. The RunProcess class can be leveraged as a gadget to run arbitrary commands on a system that is deserializing user input without validation.",
            "published_date":"2021-09-01",
            "chain_len":2,
            "project":"https:\/\/github.com\/Codeception\/Codeception",
            "commit_href":"https:\/\/github.com\/Codeception\/Codeception\/commit\/cbce9ea7f4664052fa1ac6b36f5b5a6dbd864d71",
            "commit_sha":"cbce9ea7f4664052fa1ac6b36f5b5a6dbd864d71",
            "patch":"MULTI",
            "chain_ord":"['cbce9ea7f4664052fa1ac6b36f5b5a6dbd864d71', '802a108057d250ee563120eaa5365a519afc0a71']",
            "before_first_fix_commit":"{'5ea172de7b1b2e61dcdd50d73f8368886c549fb4'}",
            "last_fix_commit":"802a108057d250ee563120eaa5365a519afc0a71",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/06\/2021, 07:46:35",
            "message":"Security: Disable deserialization of RunProcess class (#6241)",
            "author":"Gintautas Miselis",
            "comments":null,
            "stats":"{'additions': 22, 'deletions': 0, 'total': 22}",
            "files":"{'ext\/RunProcess.php': {'additions': 22, 'deletions': 0, 'changes': 22, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Codeception\/Codeception\/raw\/cbce9ea7f4664052fa1ac6b36f5b5a6dbd864d71\/ext%2FRunProcess.php', 'patch': \"@@ -107,4 +107,26 @@ public function stopProcess()\\n         }\\n         $this->processes = [];\\n     }\\n+\\n+    \/**\\n+     * Disable the deserialization of the class to prevent attacker executing\\n+     * code by leveraging the __destruct method.\\n+     *\\n+     * @see https:\/\/owasp.org\/www-community\/vulnerabilities\/PHP_Object_Injection\\n+     *\/\\n+    public function __sleep()\\n+    {\\n+        throw new \\\\BadMethodCallException('Cannot serialize ' . __CLASS__);\\n+    }\\n+\\n+    \/**\\n+     * Disable the deserialization of the class to prevent attacker executing\\n+     * code by leveraging the __destruct method.\\n+     *\\n+     * @see https:\/\/owasp.org\/www-community\/vulnerabilities\/PHP_Object_Injection\\n+     *\/\\n+    public function __wakeup()\\n+    {\\n+        throw new \\\\BadMethodCallException('Cannot unserialize ' . __CLASS__);\\n+    }\\n }\"}}",
            "message_norm":"security: disable deserialization of runprocess class (#6241)",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('deserialization', 'SECWORD', ''), ('#6241', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['ext\/RunProcess.php'])",
            "num_files":1.0
        },
        {
            "index":141,
            "vuln_id":"GHSA-2v5j-q74q-r53f",
            "cwe_id":"{'CWE-79'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/django-helpdesk\/django-helpdesk\/commit\/a22eb0673fe0b7784f99c6b5fd343b64a6700f06'}",
            "dataset":"osv",
            "summary":"django-helpdesk is vulnerable to Cross-site Scripting django-helpdesk is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting').",
            "published_date":"2021-12-03",
            "chain_len":1,
            "project":"https:\/\/github.com\/django-helpdesk\/django-helpdesk",
            "commit_href":"https:\/\/github.com\/django-helpdesk\/django-helpdesk\/commit\/a22eb0673fe0b7784f99c6b5fd343b64a6700f06",
            "commit_sha":"a22eb0673fe0b7784f99c6b5fd343b64a6700f06",
            "patch":"SINGLE",
            "chain_ord":"['a22eb0673fe0b7784f99c6b5fd343b64a6700f06']",
            "before_first_fix_commit":"{'7097c9c4c0b255ec1f10f3ea14fa2b9c47f6c706'}",
            "last_fix_commit":"a22eb0673fe0b7784f99c6b5fd343b64a6700f06",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/19\/2021, 16:11:33",
            "message":"Update pattern",
            "author":"noobpk",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'helpdesk\/models.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/django-helpdesk\/django-helpdesk\/raw\/a22eb0673fe0b7784f99c6b5fd343b64a6700f06\/helpdesk%2Fmodels.py', 'patch': '@@ -56,7 +56,7 @@ def get_markdown(text):\\n     if not text:\\n         return \"\"\\n \\n-    pattern = fr\\'([\\\\[\\\\s\\\\S\\\\]]*?)\\\\(([\\\\s\\\\S]*?):([\\\\[\\\\s\\\\S\\\\]]*?)\\\\)\\'\\n+    pattern = fr\\'([\\\\[\\\\s\\\\S\\\\]]*?)\\\\(([\\\\s\\\\S]*?):([\\\\s\\\\S]*?)\\\\)\\'\\n     # Regex check\\n     if re.match(pattern, text):\\n         # get get value of group regex'}}",
            "message_norm":"update pattern",
            "language":"it",
            "entities":null,
            "classification_level_1":"POORLY_DOCUMENTED",
            "classification_level_2":"REDUNDANT_MESSAGE",
            "list_files":"dict_keys(['helpdesk\/models.py'])",
            "num_files":1.0
        },
        {
            "index":1482,
            "vuln_id":"GHSA-c53x-wwx2-pg96",
            "cwe_id":"{'CWE-79'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/bersLucas\/liljs\/commit\/779c0dcd8aba434a1c94db7d1d2d990a629f9a6c'}",
            "dataset":"osv",
            "summary":"Cross-Site Scripting in @berslucas\/liljs Versions of  `@berslucas\/liljs` prior to 1.0.2 are vulnerable to Cross-Site Scripting (XSS). The package uses the unsafe `innerHTML` function without sanitizing input, which may allow attackers to execute arbitrary JavaScript on the victim's browser.\n\n\n## Recommendation\n\nUpgrade to version 1.0.2 or later.",
            "published_date":"2020-09-03",
            "chain_len":1,
            "project":"https:\/\/github.com\/bersLucas\/liljs",
            "commit_href":"https:\/\/github.com\/bersLucas\/liljs\/commit\/779c0dcd8aba434a1c94db7d1d2d990a629f9a6c",
            "commit_sha":"779c0dcd8aba434a1c94db7d1d2d990a629f9a6c",
            "patch":"SINGLE",
            "chain_ord":"['779c0dcd8aba434a1c94db7d1d2d990a629f9a6c']",
            "before_first_fix_commit":"{'bc0919e0031e6e6aa99be9793a6a9afa8ad2e5b1'}",
            "last_fix_commit":"779c0dcd8aba434a1c94db7d1d2d990a629f9a6c",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/10\/2019, 03:29:54",
            "message":"Use textContent over innerHTML so you can bind untrusted text values\nwithout the possibility of an XSS attack.",
            "author":"Cody Mikol",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'src\/liljs.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bersLucas\/liljs\/raw\/779c0dcd8aba434a1c94db7d1d2d990a629f9a6c\/src%2Fliljs.js', 'patch': '@@ -21,7 +21,7 @@ const liljs = (elem, data = {}) => {\\n      * @param {String} property Name of the property to render\\n      * @param {String} value (Optional) A value to use instead of a property (used in lil-list-text)\\n      *\/\\n-    const setText = (elem, property, value) => elem.innerHTML = value || state[property].value;\\n+    const setText = (elem, property, value) => elem.textContent = value || state[property].value;\\n \\n     \/** Set style helper function\\n      * @function setStyle\\n@@ -43,7 +43,7 @@ const liljs = (elem, data = {}) => {\\n      *\/\\n     const setList = (elem, property) => {\\n       \/\/TODO: Find a way to update without clearing lists\\n-      elem.innerHTML = \"\";\\n+      elem.textContent = \"\";\\n       state[property].value.forEach(value => {\\n         let clone = document.importNode(state[property].template.content, true);\\n         clone.querySelectorAll(\"[lil-list-text]\").forEach(node => {'}}",
            "message_norm":"use textcontent over innerhtml so you can bind untrusted text values\nwithout the possibility of an xss attack.",
            "language":"en",
            "entities":"[('untrusted', 'SECWORD', ''), ('xss', 'SECWORD', ''), ('attack', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/liljs.js'])",
            "num_files":1.0
        },
        {
            "index":2958,
            "vuln_id":"GHSA-rhrq-64mq-hf9h",
            "cwe_id":"{'CWE-369'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1e206baedf8bef0334cca3eb92bab134ef525a28'}",
            "dataset":"osv",
            "summary":"FPE in TFLite division operations ### Impact\nThe implementation of division in TFLite is [vulnerable to a division by 0 error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/lite\/kernels\/div.cc)\n\nThere is no check that the divisor tensor does not contain zero elements.\n\n### Patches\nWe have patched the issue in GitHub commit [1e206baedf8bef0334cca3eb92bab134ef525a28](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1e206baedf8bef0334cca3eb92bab134ef525a28).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1e206baedf8bef0334cca3eb92bab134ef525a28",
            "commit_sha":"1e206baedf8bef0334cca3eb92bab134ef525a28",
            "patch":"SINGLE",
            "chain_ord":"['1e206baedf8bef0334cca3eb92bab134ef525a28']",
            "before_first_fix_commit":"{'9579070c3fe96b4ed3b07c1b294c7a402250fb43'}",
            "last_fix_commit":"1e206baedf8bef0334cca3eb92bab134ef525a28",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/16\/2021, 21:23:21",
            "message":"Prevent a division by 0 in division ops.\n\nPiperOrigin-RevId: 385223169\nChange-Id: Ia4228960b5d2aa44480385f74bdd70d21a3613c3",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 16, 'deletions': 1, 'total': 17}",
            "files":"{'tensorflow\/lite\/kernels\/div.cc': {'additions': 16, 'deletions': 1, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1e206baedf8bef0334cca3eb92bab134ef525a28\/tensorflow%2Flite%2Fkernels%2Fdiv.cc', 'patch': \"@@ -216,9 +216,23 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\\n   TF_LITE_ENSURE_OK(context,\\n                     GetOutputSafe(context, node, kOutputTensor, &output));\\n \\n-  if (output->type == kTfLiteFloat32 || output->type == kTfLiteInt32) {\\n+  \/\/ TODO(b\/193904910): This can written with C++ templates\\n+#define TF_LITE_CHECK_DIV_NON_ZERO(data_type)                       \\\\\\n+  const auto* input2_data = GetTensorData<data_type>(input2);       \\\\\\n+  const size_t input2_elements = input2->bytes \/ sizeof(data_type); \\\\\\n+  for (size_t i = 0; i < input2_elements; i++) {                    \\\\\\n+    TF_LITE_ENSURE(context, input2_data[i] != 0);                   \\\\\\n+  }\\n+\\n+  if (output->type == kTfLiteFloat32) {\\n+    \/\/ Div by zero seems ok in this case, just like in TF case infinities are\\n+    \/\/ returned. So we don't do a check at this point.\\n+    EvalDiv<kernel_type>(context, node, params, data, input1, input2, output);\\n+  } else if (output->type == kTfLiteInt32) {\\n+    TF_LITE_CHECK_DIV_NON_ZERO(int32_t);\\n     EvalDiv<kernel_type>(context, node, params, data, input1, input2, output);\\n   } else if (output->type == kTfLiteUInt8) {\\n+    TF_LITE_CHECK_DIV_NON_ZERO(uint8_t);\\n     TF_LITE_ENSURE_OK(\\n         context, EvalQuantized<kernel_type>(context, node, params, data, input1,\\n                                             input2, output));\\n@@ -229,6 +243,7 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\\n         output->type);\\n     return kTfLiteError;\\n   }\\n+#undef TF_LITE_CHECK_DIV_NON_ZERO\\n \\n   return kTfLiteOk;\\n }\"}}",
            "message_norm":"prevent a division by 0 in division ops.\n\npiperorigin-revid: 385223169\nchange-id: ia4228960b5d2aa44480385f74bdd70d21a3613c3",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('385223169', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/div.cc'])",
            "num_files":1.0
        },
        {
            "index":3161,
            "vuln_id":"GHSA-vqw6-72r7-fgw7",
            "cwe_id":"{'CWE-125'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/480641e3599775a8895254ffbc0fc45621334f68'}",
            "dataset":"osv",
            "summary":"OOB read in `MatrixTriangularSolve` ### Impact\nThe implementation of [`MatrixTriangularSolve`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8cae746d8449c7dda5298327353d68613f16e798\/tensorflow\/core\/kernels\/linalg\/matrix_triangular_solve_op_impl.h#L160-L240) fails to terminate kernel execution if one validation condition fails:\n\n```cc\nvoid ValidateInputTensors(OpKernelContext* ctx, const Tensor& in0,\n                            const Tensor& in1) override {\n  OP_REQUIRES(\n      ctx, in0.dims() >= 2,\n      errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in0.dims()));\n\n  OP_REQUIRES(\n      ctx, in1.dims() >= 2,\n      errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in1.dims()));\n}\n  \nvoid Compute(OpKernelContext* ctx) override {\n  const Tensor& in0 = ctx->input(0);\n  const Tensor& in1 = ctx->input(1);\n\n  ValidateInputTensors(ctx, in0, in1);\n\n  MatMulBCast bcast(in0.shape().dim_sizes(), in1.shape().dim_sizes());\n  ...\n}\n```\n  \nSince `OP_REQUIRES` only sets `ctx->status()` to a non-OK value and calls `return`, this allows malicious attackers to trigger an out of bounds read:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\nmatrix_array = np.array([])\nmatrix_tensor = tf.convert_to_tensor(np.reshape(matrix_array,(1,0)),dtype=tf.float32)\nrhs_array = np.array([])\nrhs_tensor = tf.convert_to_tensor(np.reshape(rhs_array,(0,1)),dtype=tf.float32)\n\ntf.raw_ops.MatrixTriangularSolve(matrix=matrix_tensor,rhs=rhs_tensor,lower=False,adjoint=False)\n```\n\nAs the two input tensors are empty, the `OP_REQUIRES` in `ValidateInputTensors` should fire and interrupt execution. However, given the implementation of `OP_REQUIRES`, after the `in0.dims() >= 2` fails, execution moves to the initialization of the `bcast` object. This initialization is done with invalid data and results in heap OOB read.\n\n### Patches\nWe have patched the issue in GitHub commit [480641e3599775a8895254ffbc0fc45621334f68](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/480641e3599775a8895254ffbc0fc45621334f68).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ye Zhang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/480641e3599775a8895254ffbc0fc45621334f68",
            "commit_sha":"480641e3599775a8895254ffbc0fc45621334f68",
            "patch":"SINGLE",
            "chain_ord":"['480641e3599775a8895254ffbc0fc45621334f68']",
            "before_first_fix_commit":"{'8cae746d8449c7dda5298327353d68613f16e798'}",
            "last_fix_commit":"480641e3599775a8895254ffbc0fc45621334f68",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/24\/2021, 23:47:25",
            "message":"Validate (and ensure validation sticks) inputs for `MatrixTriangularSolve`.\n\nPiperOrigin-RevId: 370282444\nChange-Id: Iaed61a0b0727cc42c830658b72eb69f785f48dc5",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 16, 'deletions': 4, 'total': 20}",
            "files":"{'tensorflow\/core\/kernels\/linalg\/matrix_triangular_solve_op_impl.h': {'additions': 16, 'deletions': 4, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/480641e3599775a8895254ffbc0fc45621334f68\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Fmatrix_triangular_solve_op_impl.h', 'patch': '@@ -162,6 +162,9 @@ class BaseMatrixTriangularSolveOp : public OpKernel {\\n     const Tensor& in1 = ctx->input(1);\\n \\n     ValidateInputTensors(ctx, in0, in1);\\n+    if (!ctx->status().ok()) {\\n+      return;\\n+    }\\n \\n     MatMulBCast bcast(in0.shape().dim_sizes(), in1.shape().dim_sizes());\\n     OP_REQUIRES(\\n@@ -230,13 +233,22 @@ class MatrixTriangularSolveOp\\n  private:\\n   void ValidateInputTensors(OpKernelContext* ctx, const Tensor& in0,\\n                             const Tensor& in1) override {\\n+    const auto in0_num_dims = in0.dims();\\n     OP_REQUIRES(\\n-        ctx, in0.dims() >= 2,\\n-        errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in0.dims()));\\n+        ctx, in0_num_dims >= 2,\\n+        errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in0_num_dims));\\n \\n+    const auto in1_num_dims = in1.dims();\\n     OP_REQUIRES(\\n-        ctx, in1.dims() >= 2,\\n-        errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in1.dims()));\\n+        ctx, in1_num_dims >= 2,\\n+        errors::InvalidArgument(\"In[1] ndims must be >= 2: \", in1_num_dims));\\n+\\n+    const auto in0_last_dim = in0.dim_size(in0_num_dims - 1);\\n+    const auto in0_prev_dim = in0.dim_size(in0_num_dims - 2);\\n+    OP_REQUIRES(ctx, in0_last_dim == in0_prev_dim,\\n+                errors::InvalidArgument(\\n+                    \"In[0] matrices in the last dimensions must be square (\",\\n+                    in0_last_dim, \" =\/= \", in0_prev_dim, \")\"));\\n   }\\n };'}}",
            "message_norm":"validate (and ensure validation sticks) inputs for `matrixtriangularsolve`.\n\npiperorigin-revid: 370282444\nchange-id: iaed61a0b0727cc42c830658b72eb69f785f48dc5",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('ensure', 'ACTION', ''), ('370282444', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/matrix_triangular_solve_op_impl.h'])",
            "num_files":1.0
        },
        {
            "index":1762,
            "vuln_id":"GHSA-fq6p-x6j3-cmmq",
            "cwe_id":"{'CWE-400'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/mrdoob\/three.js\/pull\/21143\/commits\/4a582355216b620176a291ff319d740e619d583e'}",
            "dataset":"osv",
            "summary":"Denial of service in three This affects the package three before 0.125.0. This can happen when handling rgb or hsl colors. PoC: var three = require('three') function build_blank (n) { var ret = \"rgb(\" for (var i = 0; i < n; i++) { ret += \" \" } return ret + \"\"; } var Color = three.Color var time = Date.now(); new Color(build_blank(50000)) var time_cost = Date.now() - time; console.log(time_cost+\" ms\")",
            "published_date":"2021-03-01",
            "chain_len":1,
            "project":"https:\/\/github.com\/mrdoob\/three.js",
            "commit_href":"https:\/\/github.com\/mrdoob\/three.js\/pull\/21143\/commits\/4a582355216b620176a291ff319d740e619d583e",
            "commit_sha":"4a582355216b620176a291ff319d740e619d583e",
            "patch":"SINGLE",
            "chain_ord":"['4a582355216b620176a291ff319d740e619d583e']",
            "before_first_fix_commit":"{'0f5de4f5da1014f81c00d309f93b1a1e709341e4'}",
            "last_fix_commit":"4a582355216b620176a291ff319d740e619d583e",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/25\/2021, 11:45:42",
            "message":"Fix ReDoS",
            "author":"Yeting Li",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'src\/math\/Color.js': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mrdoob\/three.js\/raw\/4a582355216b620176a291ff319d740e619d583e\/src%2Fmath%2FColor.js', 'patch': \"@@ -169,14 +169,14 @@ class Color {\\n \\n \\t\\t\\tlet color;\\n \\t\\t\\tconst name = m[ 1 ];\\n-\\t\\t\\tconst components = m[ 2 ].replace(\/^\\\\s*\/, '');\\n+\\t\\t\\tconst components = m[ 2 ];\\n \\n \\t\\t\\tswitch ( name ) {\\n \\n \\t\\t\\t\\tcase 'rgb':\\n \\t\\t\\t\\tcase 'rgba':\\n \\n-\\t\\t\\t\\t\\tif ( color = \/^(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*(?:,\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*)?$\/.exec( components ) ) {\\n+\\t\\t\\t\\t\\tif ( color = \/^\\\\s*(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*(?:,\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*)?$\/.exec( components ) ) {\\n \\n \\t\\t\\t\\t\\t\\t\/\/ rgb(255,0,0) rgba(255,0,0,0.5)\\n \\t\\t\\t\\t\\t\\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) \/ 255;\\n@@ -189,7 +189,7 @@ class Color {\\n \\n \\t\\t\\t\\t\\t}\\n \\n-\\t\\t\\t\\t\\tif ( color = \/^(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(?:,\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*)?$\/.exec( components ) ) {\\n+\\t\\t\\t\\t\\tif ( color = \/^\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(?:,\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*)?$\/.exec( components ) ) {\\n \\n \\t\\t\\t\\t\\t\\t\/\/ rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\\n \\t\\t\\t\\t\\t\\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) \/ 100;\\n@@ -207,7 +207,7 @@ class Color {\\n \\t\\t\\t\\tcase 'hsl':\\n \\t\\t\\t\\tcase 'hsla':\\n \\n-\\t\\t\\t\\t\\tif ( color = \/^(\\\\d*\\\\.?\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(?:,\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*)?$\/.exec( components ) ) {\\n+\\t\\t\\t\\t\\tif ( color = \/^\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(?:,\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*)?$\/.exec( components ) ) {\\n \\n \\t\\t\\t\\t\\t\\t\/\/ hsl(120,50%,50%) hsla(120,50%,50%,0.5)\\n \\t\\t\\t\\t\\t\\tconst h = parseFloat( color[ 1 ] ) \/ 360;\"}}",
            "message_norm":"fix redos",
            "language":"pt",
            "entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/math\/Color.js'])",
            "num_files":1.0
        },
        {
            "index":1933,
            "vuln_id":"GHSA-gv26-jpj9-c8gq",
            "cwe_id":"{'CWE-754'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ba6822bd7b7324ba201a28b2f278c29a98edbef2', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f6fde895ef9c77d848061c0517f19d0ec2682f3a'}",
            "dataset":"osv",
            "summary":"Incomplete validation in `SparseSparseMinimum` ### Impact\nIncomplete validation in `SparseAdd` results in allowing attackers to exploit undefined behavior (dereferencing null pointers) as well as write outside of bounds of heap allocated data:\n\n```python \nimport tensorflow as tf\n\na_indices = tf.ones([45, 92], dtype=tf.int64)\na_values = tf.ones([45], dtype=tf.int64)\na_shape = tf.ones([1], dtype=tf.int64)\nb_indices = tf.ones([1, 1], dtype=tf.int64)\nb_values = tf.ones([1], dtype=tf.int64)\nb_shape = tf.ones([1], dtype=tf.int64)\n                    \ntf.raw_ops.SparseSparseMinimum(a_indices=a_indices,\n    a_values=a_values,\n    a_shape=a_shape,\n    b_indices=b_indices,\n    b_values=b_values,\n    b_shape=b_shape)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/656e7673b14acd7835dc778867f84916c6d1cac2\/tensorflow\/core\/kernels\/sparse_sparse_binary_op_shared.cc) has a large set of validation for the two sparse tensor inputs (6 tensors in total), but does not validate that the tensors are not empty or that the second dimension of `*_indices` matches the size of corresponding `*_shape`. This allows attackers to send tensor triples that represent invalid sparse tensors to abuse code assumptions that are not protected by validation.\n\n### Patches \nWe have patched the issue in GitHub commit [ba6822bd7b7324ba201a28b2f278c29a98edbef2](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ba6822bd7b7324ba201a28b2f278c29a98edbef2) followed by GitHub commit [f6fde895ef9c77d848061c0517f19d0ec2682f3a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f6fde895ef9c77d848061c0517f19d0ec2682f3a).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2022-03-18",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ba6822bd7b7324ba201a28b2f278c29a98edbef2",
            "commit_sha":"ba6822bd7b7324ba201a28b2f278c29a98edbef2",
            "patch":"MULTI",
            "chain_ord":"['ba6822bd7b7324ba201a28b2f278c29a98edbef2', 'f6fde895ef9c77d848061c0517f19d0ec2682f3a']",
            "before_first_fix_commit":"{'cae81a7ae3ca6207396d5c893e8163f4acb34037'}",
            "last_fix_commit":"f6fde895ef9c77d848061c0517f19d0ec2682f3a",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 23:06:54",
            "message":"Fix OOB issue with `tf.raw_ops.SparseSparseMinimum`.\n\nPiperOrigin-RevId: 371005787\nChange-Id: Ib686ccc077836e8b980b8b5a03936d36a8ecaf71",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/sparse_sparse_binary_op_shared.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ba6822bd7b7324ba201a28b2f278c29a98edbef2\/tensorflow%2Fcore%2Fkernels%2Fsparse_sparse_binary_op_shared.cc', 'patch': '@@ -180,6 +180,11 @@ class SparseSparseBinaryOpShared : public OpKernel {\\n                                           \" for dimension \", i));\\n     }\\n \\n+    OP_REQUIRES(\\n+        ctx, a_indices_t->dim_size(1) == b_indices_t->dim_size(1),\\n+        errors::InvalidArgument(\\n+            \"Indices\\' dimensions do not match: got \", a_indices_t->dim_size(1),\\n+            \" and \", b_indices_t->dim_size(1), \" for the second dimension.\"));\\n     const int num_dims = a_indices_t->dim_size(1);\\n     const auto a_indices_mat = a_indices_t->matrix<int64>();\\n     const auto b_indices_mat = b_indices_t->matrix<int64>();'}}",
            "message_norm":"fix oob issue with `tf.raw_ops.sparsesparseminimum`.\n\npiperorigin-revid: 371005787\nchange-id: ib686ccc077836e8b980b8b5a03936d36a8ecaf71",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('oob', 'SECWORD', ''), ('issue', 'FLAW', ''), ('371005787', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_sparse_binary_op_shared.cc'])",
            "num_files":1.0
        },
        {
            "index":2740,
            "vuln_id":"GHSA-qf2g-q4mc-w7rr",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/forkcms\/forkcms\/commit\/981730f1a3d59b423ca903b1f4bf79b848a1766e'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in Fork CMS Fork CMS prior to 5.11.1 is vulnerable to stored cross-site scripting. When uploading a new module, the description of the module can contain JavaScript code. The JavaScript code may be executed after uploading the new module and looking at the `Details` page.",
            "published_date":"2022-03-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/forkcms\/forkcms",
            "commit_href":"https:\/\/github.com\/forkcms\/forkcms\/commit\/981730f1a3d59b423ca903b1f4bf79b848a1766e",
            "commit_sha":"981730f1a3d59b423ca903b1f4bf79b848a1766e",
            "patch":"SINGLE",
            "chain_ord":"['981730f1a3d59b423ca903b1f4bf79b848a1766e']",
            "before_first_fix_commit":"{'1b38e33a98992793e998a937b717355212346993'}",
            "last_fix_commit":"981730f1a3d59b423ca903b1f4bf79b848a1766e",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/23\/2022, 13:20:39",
            "message":"Fix xss though the description in the info.xml file of a theme or module",
            "author":"Jelmer Prins",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'src\/Backend\/Modules\/Extensions\/Engine\/Model.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/forkcms\/forkcms\/raw\/981730f1a3d59b423ca903b1f4bf79b848a1766e\/src%2FBackend%2FModules%2FExtensions%2FEngine%2FModel.php', 'patch': \"@@ -839,7 +839,7 @@ public static function processModuleXml(\\\\SimpleXMLElement $xml): array\\n         $information['name'] = (string) $module->name;\\n         $information['version'] = (string) $module->version;\\n         $information['requirements'] = (array) $module->requirements;\\n-        $information['description'] = (string) $module->description;\\n+        $information['description'] = strip_tags((string) $module->description, '<h1><h2><h3><h4><h5><h6><p><li><a>');\\n         $information['cronjobs'] = [];\\n \\n         \/\/ authors\\n@@ -900,7 +900,7 @@ public static function processThemeXml(\\\\SimpleXMLElement $xml): array\\n         $information['version'] = (string) $theme->version;\\n         $information['requirements'] = (array) $theme->requirements;\\n         $information['thumbnail'] = (string) $theme->thumbnail;\\n-        $information['description'] = (string) $theme->description;\\n+        $information['description'] = strip_tags((string) $theme->description, '<h1><h2><h3><h4><h5><h6><p><li><a>');\\n \\n         \/\/ authors\\n         foreach ($xml->xpath('\/theme\/authors\/author') as $author) {\"}}",
            "message_norm":"fix xss though the description in the info.xml file of a theme or module",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Backend\/Modules\/Extensions\/Engine\/Model.php'])",
            "num_files":1.0
        },
        {
            "index":2373,
            "vuln_id":"GHSA-m7fm-4jfh-jrg6",
            "cwe_id":"{'CWE-416'}",
            "score":7.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5ecec9c6fbdbc6be03295685190a45e7eee726ab'}",
            "dataset":"osv",
            "summary":"Use after free in boosted trees creation ### Impact\nThe implementation for `tf.raw_ops.BoostedTreesCreateEnsemble` can result in a use after free error if an attacker supplies specially crafted arguments:\n\n```python\nimport tensorflow as tf\n\nv= tf.Variable([0.0])\ntf.raw_ops.BoostedTreesCreateEnsemble(\n  tree_ensemble_handle=v.handle,\n  stamp_token=[0],\n  tree_ensemble_serialized=['0']) \n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f24faa153ad31a4b51578f8181d3aaab77a1ddeb\/tensorflow\/core\/kernels\/boosted_trees\/resource_ops.cc#L55) uses a reference counted resource and decrements the refcount if the initialization fails, as it should. However, when the code was written, the  resource was represented as a naked pointer but later refactoring has changed it to be a smart pointer. Thus, when the pointer leaves the scope, a subsequent `free`-ing of the resource occurs, but this fails to take into account that the refcount has already reached 0, thus the resource has been already freed. During this double-free process, members of the resource object are accessed for cleanup but they are invalid as the entire resource has been freed.\n\n### Patches\nWe have patched the issue in GitHub commit [5ecec9c6fbdbc6be03295685190a45e7eee726ab](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5ecec9c6fbdbc6be03295685190a45e7eee726ab).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5ecec9c6fbdbc6be03295685190a45e7eee726ab",
            "commit_sha":"5ecec9c6fbdbc6be03295685190a45e7eee726ab",
            "patch":"SINGLE",
            "chain_ord":"['5ecec9c6fbdbc6be03295685190a45e7eee726ab']",
            "before_first_fix_commit":"{'d8a39f2dc1cba935ba153092a09e7d4bb2ce5ee2'}",
            "last_fix_commit":"5ecec9c6fbdbc6be03295685190a45e7eee726ab",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/31\/2021, 02:13:19",
            "message":"Prevent use after free.\n\nA very old version of the code used `result` as a simple pointer to a resource. Two years later, the pointer got changed to a `unique_ptr` but author forgot to remove the call to `Unref`. Three years after that, we finally uncover the UAF.\n\nPiperOrigin-RevId: 387924872\nChange-Id: I70fb6f199164de49fac20c168132a07b84903f9b",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'tensorflow\/core\/kernels\/boosted_trees\/resource_ops.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/5ecec9c6fbdbc6be03295685190a45e7eee726ab\/tensorflow%2Fcore%2Fkernels%2Fboosted_trees%2Fresource_ops.cc', 'patch': '@@ -53,6 +53,7 @@ class BoostedTreesCreateEnsembleOp : public OpKernel {\\n     if (!result->InitFromSerialized(\\n             tree_ensemble_serialized_t->scalar<tstring>()(), stamp_token)) {\\n       result->Unref();\\n+      result.release();  \/\/ Needed due to the `->Unref` above, to prevent UAF\\n       OP_REQUIRES(\\n           context, false,\\n           errors::InvalidArgument(\"Unable to parse tree ensemble proto.\"));'}}",
            "message_norm":"prevent use after free.\n\na very old version of the code used `result` as a simple pointer to a resource. two years later, the pointer got changed to a `unique_ptr` but author forgot to remove the call to `unref`. three years after that, we finally uncover the uaf.\n\npiperorigin-revid: 387924872\nchange-id: i70fb6f199164de49fac20c168132a07b84903f9b",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('use after free', 'SECWORD', ''), ('changed', 'ACTION', ''), ('remove', 'ACTION', ''), ('387924872', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/boosted_trees\/resource_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":1950,
            "vuln_id":"GHSA-gx6h-936c-vrrr",
            "cwe_id":"{'CWE-79'}",
            "score":7.4,
            "chain":"{'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/053d957d53f2a543d158f3ab651e390d2728e0b9'}",
            "dataset":"osv",
            "summary":"Cross site scripting in registration template in xwiki-platform ### Impact\n\nWe found a possible XSS vector in the `registerinline.vm` template related to the `xredirect` hidden field. \nThis template is only used in the following conditions:\n  - the wiki must be open to registration for anyone\n  - the wiki must be closed to view for Guest users (more specifically the XWiki.Registration page must be forbidden in View for guest user)\n\nA way to obtain the second condition is when administrators checked the \"Prevent unregistered users from viewing pages, regardless of the page rights\" box in the administration rights.\n\n### Patches\n\nThe issue is patched in versions 12.10.11, 14.0-rc-1, 13.4.7, 13.10.3.\n\n### Workarounds\n\nThere are two main ways for protecting against this vulnerability, the easiest and the best one is by applying a patch in the `registerinline.vm` template, the patch consists in checking the value of the xredirect field to ensure it matches the following:\n```\n<input type=\"hidden\" name=\"xredirect\" value=\"$escapetool.xml($!request.xredirect)\" \/>\n```\n\nIf for some reason it's not possible to patch this file, another workaround is to ensure \"Prevent unregistered users from viewing pages, regardless of the page rights\" is not checked in the rights and apply a better right scheme using groups and rights on spaces. \n\n### References\n\nhttps:\/\/jira.xwiki.org\/browse\/XWIKI-19291\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Jira XWiki](https:\/\/jira.xwiki.org)\n* Email us at [security mailing list](mailto:security@xwiki.org)",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/xwiki\/xwiki-platform",
            "commit_href":"https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/053d957d53f2a543d158f3ab651e390d2728e0b9",
            "commit_sha":"053d957d53f2a543d158f3ab651e390d2728e0b9",
            "patch":"SINGLE",
            "chain_ord":"['053d957d53f2a543d158f3ab651e390d2728e0b9']",
            "before_first_fix_commit":"{'9ae3703c535e34d328fd60758f85a8ee358224ca'}",
            "last_fix_commit":"053d957d53f2a543d158f3ab651e390d2728e0b9",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/04\/2022, 10:09:57",
            "message":"XWIKI-19291: redirect parameter is badly handled in register page\n\n  * Fix the typo",
            "author":"Simon Urli",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'xwiki-platform-core\/xwiki-platform-web\/xwiki-platform-web-templates\/src\/main\/resources\/templates\/registerinline.vm': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/xwiki\/xwiki-platform\/raw\/053d957d53f2a543d158f3ab651e390d2728e0b9\/xwiki-platform-core%2Fxwiki-platform-web%2Fxwiki-platform-web-templates%2Fsrc%2Fmain%2Fresources%2Ftemplates%2Fregisterinline.vm', 'patch': '@@ -45,7 +45,7 @@\\n       <div>\\n         <input type=\"hidden\" name=\"form_token\" value=\"$!services.csrf.token\" \/>\\n         <input type=\"hidden\" name=\"register\" value=\"1\" \/>\\n-        <input type=\"hidden\" name=\"xredirect\" value=\"$!request.xredirect\" \/>\\n+        <input type=\"hidden\" name=\"xredirect\" value=\"$escapetool.xml($!request.xredirect)\" \/>\\n         #set ($class = $xwiki.getClass(\\'XWiki.XWikiUsers\\'))\\n         #set ($obj = $class.newObject())\\n         #set ($serverobj = $class.newObject())'}}",
            "message_norm":"xwiki-19291: redirect parameter is badly handled in register page\n\n  * fix the typo",
            "language":"en",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['xwiki-platform-core\/xwiki-platform-web\/xwiki-platform-web-templates\/src\/main\/resources\/templates\/registerinline.vm'])",
            "num_files":1.0
        },
        {
            "index":1719,
            "vuln_id":"GHSA-fcxw-hhxq-48wx",
            "cwe_id":"{'CWE-200'}",
            "score":3.3,
            "chain":"{'https:\/\/github.com\/jenkinsci\/git-client-plugin\/commit\/75ea3fe05650fc6ca09046a72493e2b3f066fb98'}",
            "dataset":"osv",
            "summary":"Insecure temporary file usage in Jenkins Git Client Plugin Jenkins Git Client Plugin 2.4.2 and earlier creates temporary file with insecure permissions resulting in information disclosure",
            "published_date":"2022-05-17",
            "chain_len":1,
            "project":"https:\/\/github.com\/jenkinsci\/git-client-plugin",
            "commit_href":"https:\/\/github.com\/jenkinsci\/git-client-plugin\/commit\/75ea3fe05650fc6ca09046a72493e2b3f066fb98",
            "commit_sha":"75ea3fe05650fc6ca09046a72493e2b3f066fb98",
            "patch":"SINGLE",
            "chain_ord":"['75ea3fe05650fc6ca09046a72493e2b3f066fb98']",
            "before_first_fix_commit":"{'716e3ff56074c018c76cb35826269b976540e7e7'}",
            "last_fix_commit":"75ea3fe05650fc6ca09046a72493e2b3f066fb98",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/13\/2017, 04:38:54",
            "message":"[Fix SECURITY-445] better protect temporary files\n\nTemporary files were previously written to the system temporary directory\nwith default permissions.  A malicious actor could have captured sensitive\ninformation by reading files from the temporary directory.  The temporary\nfiles typically are only on the file system for the duration of a single\ncommand line git invocation, but cloning a large git repo could require\nan extended time with those sensitive files in the temporary directory.\n\nThis change sets permissions on the temporary files to be readable only by\nthe file owner. If a workspace is available, a temporary directory adjacent\nto the workspace is used instead of the system temporary directory.",
            "author":"Mark Waite",
            "comments":null,
            "stats":"{'additions': 42, 'deletions': 9, 'total': 51}",
            "files":"{'src\/main\/java\/org\/jenkinsci\/plugins\/gitclient\/CliGitAPIImpl.java': {'additions': 42, 'deletions': 9, 'changes': 51, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/git-client-plugin\/raw\/75ea3fe05650fc6ca09046a72493e2b3f066fb98\/src%2Fmain%2Fjava%2Forg%2Fjenkinsci%2Fplugins%2Fgitclient%2FCliGitAPIImpl.java', 'patch': '@@ -42,6 +42,11 @@\\n import java.net.URISyntaxException;\\n import java.nio.charset.Charset;\\n import java.nio.file.Files;\\n+import java.nio.file.Path;\\n+import java.nio.file.Paths;\\n+import java.nio.file.attribute.FileAttribute;\\n+import java.nio.file.attribute.PosixFilePermission;\\n+import java.nio.file.attribute.PosixFilePermissions;\\n import java.text.MessageFormat;\\n import java.util.ArrayList;\\n import java.util.Arrays;\\n@@ -1411,6 +1416,34 @@ public void addNote(String note, String namespace ) throws GitException, Interru\\n         createNote(note,namespace,\"add\");\\n     }\\n \\n+    private File createTempFileInSystemDir(String prefix, String suffix) throws IOException {\\n+        if (isWindows()) {\\n+            return Files.createTempFile(prefix, suffix).toFile();\\n+        }\\n+        Set<PosixFilePermission> ownerOnly = PosixFilePermissions.fromString(\"rw-------\");\\n+        FileAttribute fileAttribute = PosixFilePermissions.asFileAttribute(ownerOnly);\\n+        return Files.createTempFile(prefix, suffix, fileAttribute).toFile();\\n+    }\\n+\\n+    private File createTempFile(String prefix, String suffix) throws IOException {\\n+        if (workspace == null) {\\n+            return createTempFileInSystemDir(prefix, suffix);\\n+        }\\n+        File workspaceTmp = new File(workspace.getAbsolutePath() + \"@tmp\");\\n+        if (!workspaceTmp.isDirectory() && !workspaceTmp.mkdirs()) {\\n+            if (!workspaceTmp.isDirectory()) {\\n+                return createTempFileInSystemDir(prefix, suffix);\\n+            }\\n+        }\\n+        Path tmpPath = Paths.get(workspaceTmp.getAbsolutePath());\\n+        if (isWindows()) {\\n+            return Files.createTempFile(tmpPath, prefix, suffix).toFile();\\n+        }\\n+        Set<PosixFilePermission> ownerOnly = PosixFilePermissions.fromString(\"rw-------\");\\n+        FileAttribute fileAttribute = PosixFilePermissions.asFileAttribute(ownerOnly);\\n+        return Files.createTempFile(tmpPath, prefix, suffix, fileAttribute).toFile();\\n+    }\\n+\\n     private void deleteTempFile(File tempFile) {\\n         if (tempFile != null && !tempFile.delete() && tempFile.exists()) {\\n             listener.getLogger().println(\"[WARNING] temp file \" + tempFile + \" not deleted\");\\n@@ -1420,7 +1453,7 @@ private void deleteTempFile(File tempFile) {\\n     private void createNote(String note, String namespace, String command ) throws GitException, InterruptedException {\\n         File msg = null;\\n         try {\\n-            msg = File.createTempFile(\"git-note\", \"txt\", workspace);\\n+            msg = createTempFile(\"git-note\", \".txt\");\\n             FileUtils.writeStringToFile(msg,note);\\n             launchCommand(\"notes\", \"--ref=\" + namespace, command, \"-F\", msg.getAbsolutePath());\\n         } catch (IOException | GitException e) {\\n@@ -1561,7 +1594,7 @@ private String launchCommandWithCredentials(ArgumentListBuilder args, File workD\\n     }\\n \\n     private File createSshKeyFile(SSHUserPrivateKey sshUser) throws IOException, InterruptedException {\\n-        File key = File.createTempFile(\"ssh\", \"key\");\\n+        File key = createTempFile(\"ssh\", \".key\");\\n         try (PrintWriter w = new PrintWriter(key, Charset.defaultCharset().toString())) {\\n             List<String> privateKeys = sshUser.getPrivateKeys();\\n             for (String s : privateKeys) {\\n@@ -1597,7 +1630,7 @@ private String quoteUnixCredentials(String str) {\\n     }\\n \\n     private File createWindowsSshAskpass(SSHUserPrivateKey sshUser) throws IOException {\\n-        File ssh = File.createTempFile(\"pass\", \".bat\");\\n+        File ssh = createTempFile(\"pass\", \".bat\");\\n         try (PrintWriter w = new PrintWriter(ssh, Charset.defaultCharset().toString())) {\\n             \/\/ avoid echoing command as part of the password\\n             w.println(\"@echo off\");\\n@@ -1610,7 +1643,7 @@ private File createWindowsSshAskpass(SSHUserPrivateKey sshUser) throws IOExcepti\\n     }\\n \\n     private File createUnixSshAskpass(SSHUserPrivateKey sshUser) throws IOException {\\n-        File ssh = File.createTempFile(\"pass\", \".sh\");\\n+        File ssh = createTempFile(\"pass\", \".sh\");\\n         try (PrintWriter w = new PrintWriter(ssh, Charset.defaultCharset().toString())) {\\n             w.println(\"#!\/bin\/sh\");\\n             w.println(\"echo \\'\" + quoteUnixCredentials(Secret.toString(sshUser.getPassphrase())) + \"\\'\");\\n@@ -1621,7 +1654,7 @@ private File createUnixSshAskpass(SSHUserPrivateKey sshUser) throws IOException\\n \\n     \/* Package protected for testability *\/\\n     File createWindowsBatFile(String userName, String password) throws IOException {\\n-        File askpass = File.createTempFile(\"pass\", \".bat\");\\n+        File askpass = createTempFile(\"pass\", \".bat\");\\n         try (PrintWriter w = new PrintWriter(askpass, Charset.defaultCharset().toString())) {\\n             w.println(\"@set arg=%~1\");\\n             w.println(\"@if (%arg:~0,8%)==(Username) echo \" + escapeWindowsCharsForUnquotedString(userName));\\n@@ -1636,7 +1669,7 @@ private File createWindowsStandardAskpass(StandardUsernamePasswordCredentials cr\\n     }\\n \\n     private File createUnixStandardAskpass(StandardUsernamePasswordCredentials creds) throws IOException {\\n-        File askpass = File.createTempFile(\"pass\", \".sh\");\\n+        File askpass = createTempFile(\"pass\", \".sh\");\\n         try (PrintWriter w = new PrintWriter(askpass, Charset.defaultCharset().toString())) {\\n             w.println(\"#!\/bin\/sh\");\\n             w.println(\"case \\\\\"$1\\\\\" in\");\\n@@ -1766,7 +1799,7 @@ private File getSSHExeFromGitExeParentDir(String userGitExe) {\\n     }\\n \\n     private File createWindowsGitSSH(File key, String user) throws IOException {\\n-        File ssh = File.createTempFile(\"ssh\", \".bat\");\\n+        File ssh = createTempFile(\"ssh\", \".bat\");\\n \\n         File sshexe = getSSHExecutable();\\n \\n@@ -1779,7 +1812,7 @@ private File createWindowsGitSSH(File key, String user) throws IOException {\\n     }\\n \\n     private File createUnixGitSSH(File key, String user) throws IOException {\\n-        File ssh = File.createTempFile(\"ssh\", \".sh\");\\n+        File ssh = createTempFile(\"ssh\", \".sh\");\\n         try (PrintWriter w = new PrintWriter(ssh, Charset.defaultCharset().toString())) {\\n             w.println(\"#!\/bin\/sh\");\\n             \/\/ ${SSH_ASKPASS} might be ignored if ${DISPLAY} is not set\\n@@ -2383,7 +2416,7 @@ public void branch(String name) throws GitException, InterruptedException {\\n     public void commit(String message) throws GitException, InterruptedException {\\n         File f = null;\\n         try {\\n-            f = File.createTempFile(\"gitcommit\", \".txt\");\\n+            f = createTempFile(\"gitcommit\", \".txt\");\\n             try (OutputStream out = Files.newOutputStream(f.toPath())) {\\n                 out.write(message.getBytes(Charset.defaultCharset().toString()));\\n             }'}}",
            "message_norm":"[fix security-445] better protect temporary files\n\ntemporary files were previously written to the system temporary directory\nwith default permissions.  a malicious actor could have captured sensitive\ninformation by reading files from the temporary directory.  the temporary\nfiles typically are only on the file system for the duration of a single\ncommand line git invocation, but cloning a large git repo could require\nan extended time with those sensitive files in the temporary directory.\n\nthis change sets permissions on the temporary files to be readable only by\nthe file owner. if a workspace is available, a temporary directory adjacent\nto the workspace is used instead of the system temporary directory.",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('security-445', 'SECWORD', ''), ('protect', 'SECWORD', ''), ('permissions', 'SECWORD', ''), ('malicious', 'SECWORD', ''), ('sensitive', 'SECWORD', ''), ('sensitive', 'SECWORD', ''), ('permissions', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/org\/jenkinsci\/plugins\/gitclient\/CliGitAPIImpl.java'])",
            "num_files":1.0
        },
        {
            "index":46,
            "vuln_id":"GHSA-26rr-v2j2-25fh",
            "cwe_id":"{'CWE-91'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/OpenMage\/magento-lts\/commit\/b99307d00b59c4a226a1e3e4083f02cf2fc8fce7'}",
            "dataset":"osv",
            "summary":"Layout XML Arbitrary Code Fix  ### Impact\nLayout XML enabled admin users to execute arbitrary commands via block methods.",
            "published_date":"2021-08-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/OpenMage\/magento-lts",
            "commit_href":"https:\/\/github.com\/OpenMage\/magento-lts\/commit\/b99307d00b59c4a226a1e3e4083f02cf2fc8fce7",
            "commit_sha":"b99307d00b59c4a226a1e3e4083f02cf2fc8fce7",
            "patch":"SINGLE",
            "chain_ord":"['b99307d00b59c4a226a1e3e4083f02cf2fc8fce7']",
            "before_first_fix_commit":"{'02a14e8893a1af9d8445bb5657b80272a09767ee'}",
            "last_fix_commit":"b99307d00b59c4a226a1e3e4083f02cf2fc8fce7",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/26\/2021, 01:01:15",
            "message":"Merge pull request from GHSA-26rr-v2j2-25fh\n\nCo-authored-by: Mark Lewis <markwlewis@Marks-MacBook-Pro.local>",
            "author":"Mark Lewis",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 1, 'total': 5}",
            "files":"{'app\/code\/core\/Mage\/Core\/Helper\/Security.php': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/OpenMage\/magento-lts\/raw\/b99307d00b59c4a226a1e3e4083f02cf2fc8fce7\/app%2Fcode%2Fcore%2FMage%2FCore%2FHelper%2FSecurity.php', 'patch': \"@@ -21,7 +21,10 @@ class Mage_Core_Helper_Security\\n     public function validateAgainstBlockMethodBlacklist(Mage_Core_Block_Abstract $block, $method, array $args)\\n     {\\n         foreach ($this->invalidBlockActions as $action) {\\n-            if ($block instanceof $action['block'] && strtolower($action['method']) === strtolower($method)) {\\n+            $calledMethod = strtolower($method);\\n+            if (($block instanceof $action['block'] && strtolower($action['method']) === $calledMethod)\\n+                || ($block instanceof $action['block']\\n+                    && strtolower($action['block'] . '::' . $action['method']) === $calledMethod)) {\\n                 Mage::throwException(\\n                     sprintf('Action with combination block %s and method %s is forbidden.', get_class($block), $method)\\n                 );\"}}",
            "message_norm":"merge pull request from ghsa-26rr-v2j2-25fh\n\nco-authored-by: mark lewis <markwlewis@marks-macbook-pro.local>",
            "language":"en",
            "entities":"[('ghsa-26rr-v2j2-25fh', 'VULNID', 'GHSA')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/code\/core\/Mage\/Core\/Helper\/Security.php'])",
            "num_files":1.0
        },
        {
            "index":358,
            "vuln_id":"GHSA-44qp-9wwf-734r",
            "cwe_id":"{'CWE-787', 'CWE-120'}",
            "score":7.6,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2b7100d6cdff36aa21010a82269bc05a6d1cc74a', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3'}",
            "dataset":"osv",
            "summary":"Heap overflow in Tensorflow ### Impact \nThe [implementation of `SparseCountSparseOutput`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/count_ops.cc#L168-L273) is vulnerable to a heap overflow:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.raw_ops.SparseCountSparseOutput(\n  indices=[[-1,-1]],\n  values=[2],\n  dense_shape=[1, 1],\n  weights=[1],\n  binary_output=True,\n  minlength=-1,\n  maxlength=-1,\n  name=None)\n```\n\n### Patches\nWe have patched the issue in GitHub commits [2b7100d6cdff36aa21010a82269bc05a6d1cc74a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2b7100d6cdff36aa21010a82269bc05a6d1cc74a) and [adbbabdb0d3abb3cdeac69e38a96de1d678b24b3](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Faysal Hossain Shezan from University of Virginia.",
            "published_date":"2022-02-09",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3",
            "commit_sha":"adbbabdb0d3abb3cdeac69e38a96de1d678b24b3",
            "patch":"MULTI",
            "chain_ord":"['2b7100d6cdff36aa21010a82269bc05a6d1cc74a', 'adbbabdb0d3abb3cdeac69e38a96de1d678b24b3']",
            "before_first_fix_commit":"{'2b7100d6cdff36aa21010a82269bc05a6d1cc74a'}",
            "last_fix_commit":"adbbabdb0d3abb3cdeac69e38a96de1d678b24b3",
            "chain_ord_pos":2.0,
            "commit_datetime":"12\/08\/2021, 03:44:33",
            "message":"Further validate sparse tensor for `SparseCount`: indices must be valid within dense shape.\n\nPiperOrigin-RevId: 414888122\nChange-Id: I4552bd74c135ecd4bcb5448acc0a3ce9402d8286",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 17, 'deletions': 3, 'total': 20}",
            "files":"{'tensorflow\/core\/kernels\/count_ops.cc': {'additions': 17, 'deletions': 3, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3\/tensorflow%2Fcore%2Fkernels%2Fcount_ops.cc', 'patch': '@@ -206,6 +206,23 @@ class SparseCount : public OpKernel {\\n     OP_REQUIRES(context, shape.NumElements() > 0,\\n                 errors::InvalidArgument(\\n                     \"The shape argument requires at least one element.\"));\\n+    \/\/ Validate indices: each index must be valid for the corresponding\\n+    \/\/ dimension. This could be possibly done better.\\n+    const auto indices_values = indices.matrix<int64_t>();\\n+    const auto shape_vector = shape.vec<int64_t>();\\n+    int num_values = values.NumElements();  \/\/ same as first dim of indices\\n+    int rank = indices.shape().dim_size(1);\\n+    for (int i = 0; i < num_values; ++i) {\\n+      for (int j = 0; j < rank; ++j) {\\n+        OP_REQUIRES(\\n+            context,\\n+            indices_values(i, j) >= 0 && indices_values(i, j) < shape_vector(j),\\n+            errors::InvalidArgument(\\n+                \"Invalid index value at \", i, \": dimension \", j, \" has value \",\\n+                indices_values(i, j), \" which is not in [0, \", shape_vector(j),\\n+                \") (as given by dense shape \", shape.DebugString()));\\n+      }\\n+    }\\n \\n     if (use_weights) {\\n       OP_REQUIRES(\\n@@ -217,11 +234,8 @@ class SparseCount : public OpKernel {\\n     }\\n \\n     bool is_1d = shape.NumElements() == 1;\\n-    auto shape_vector = shape.flat<int64_t>();\\n     int num_batches = is_1d ? 1 : shape_vector(0);\\n-    int num_values = values.NumElements();\\n \\n-    const auto indices_values = indices.matrix<int64_t>();\\n     const auto values_values = values.flat<T>();\\n     const auto weight_values = weights.flat<W>();'}}",
            "message_norm":"further validate sparse tensor for `sparsecount`: indices must be valid within dense shape.\n\npiperorigin-revid: 414888122\nchange-id: i4552bd74c135ecd4bcb5448acc0a3ce9402d8286",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('414888122', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/count_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":89,
            "vuln_id":"GHSA-2gfx-95x2-5v3x",
            "cwe_id":"{'CWE-787'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a324ac84e573fba362a5e53d4e74d5de6729933e'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `QuantizedReshape` ### Impact\nAn attacker can cause a heap buffer overflow in `QuantizedReshape` by passing in invalid thresholds for the quantization:\n\n```python\nimport tensorflow as tf\n\ntensor = tf.constant([], dtype=tf.qint32)\nshape = tf.constant([], dtype=tf.int32)\ninput_min = tf.constant([], dtype=tf.float32)\ninput_max = tf.constant([], dtype=tf.float32)\n\ntf.raw_ops.QuantizedReshape(tensor=tensor, shape=shape, input_min=input_min, input_max=input_max)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a324ac84e573fba362a5e53d4e74d5de6729933e\/tensorflow\/core\/kernels\/quantized_reshape_op.cc#L38-L55) assumes that the 2 arguments are always valid scalars and tries to access the numeric value directly:\n\n```cc\nconst auto& input_min_float_tensor = ctx->input(2);\n...\nconst float input_min_float = input_min_float_tensor.flat<float>()(0);\nconst auto& input_max_float_tensor = ctx->input(3);\n...\nconst float input_max_float = input_max_float_tensor.flat<float>()(0);\n```\n\nHowever, if any of these tensors is empty, then `.flat<T>()` is an empty buffer and accessing the element at position 0 results in overflow.\n\n### Patches\nWe have patched the issue in GitHub commit [a324ac84e573fba362a5e53d4e74d5de6729933e](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a324ac84e573fba362a5e53d4e74d5de6729933e).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a324ac84e573fba362a5e53d4e74d5de6729933e",
            "commit_sha":"a324ac84e573fba362a5e53d4e74d5de6729933e",
            "patch":"SINGLE",
            "chain_ord":"['a324ac84e573fba362a5e53d4e74d5de6729933e']",
            "before_first_fix_commit":"{'2ec2ce48365486311e56b3503bb75ab9e72a813d'}",
            "last_fix_commit":"a324ac84e573fba362a5e53d4e74d5de6729933e",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/22\/2021, 01:11:15",
            "message":"Validate arguments to `QuantizedReshape`.\n\nEnsure that validations from `Reshape` also terminate `QuantizedReshape` on failure.\n\nPiperOrigin-RevId: 369775421\nChange-Id: If8c5342267aceea65b7cb83a4b183304886f1ce8",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 23, 'deletions': 2, 'total': 25}",
            "files":"{'tensorflow\/core\/kernels\/quantized_reshape_op.cc': {'additions': 23, 'deletions': 2, 'changes': 25, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a324ac84e573fba362a5e53d4e74d5de6729933e\/tensorflow%2Fcore%2Fkernels%2Fquantized_reshape_op.cc', 'patch': '@@ -17,6 +17,7 @@ limitations under the License.\\n \\n #include \"tensorflow\/core\/framework\/op_kernel.h\"\\n #include \"tensorflow\/core\/framework\/register_types.h\"\\n+#include \"tensorflow\/core\/framework\/tensor_shape.h\"\\n #include \"tensorflow\/core\/framework\/tensor_types.h\"\\n #include \"tensorflow\/core\/framework\/types.h\"\\n #include \"tensorflow\/core\/kernels\/reshape_op.h\"\\n@@ -30,9 +31,29 @@ class QuantizedReshapeOp : public ReshapeOp {\\n   void Compute(OpKernelContext* ctx) override {\\n     \/\/ This call processes inputs 1 and 2 to write output 0.\\n     ReshapeOp::Compute(ctx);\\n+    if (!ctx->status().ok()) {\\n+      return;\\n+    }\\n+\\n+    const auto& input_min_float_tensor = ctx->input(2);\\n+    const auto& input_min_float_shape = input_min_float_tensor.shape();\\n+    OP_REQUIRES(ctx,\\n+                TensorShapeUtils::IsScalar(input_min_float_shape) ||\\n+                    (TensorShapeUtils::IsVector(input_min_float_shape) &&\\n+                     (input_min_float_shape.dim_size(0) == 1)),\\n+                errors::InvalidArgument(\\n+                    \"input_min must be a scalar or a vector of 1 element\"));\\n+    const float input_min_float = input_min_float_tensor.flat<float>()(0);\\n+    const auto& input_max_float_tensor = ctx->input(3);\\n+    const auto& input_max_float_shape = input_max_float_tensor.shape();\\n+    OP_REQUIRES(ctx,\\n+                TensorShapeUtils::IsScalar(input_max_float_shape) ||\\n+                    (TensorShapeUtils::IsVector(input_max_float_shape) &&\\n+                     (input_max_float_shape.dim_size(0) == 1)),\\n+                errors::InvalidArgument(\\n+                    \"input_max must be a scalar or a vector of 1 element\"));\\n+    const float input_max_float = input_max_float_tensor.flat<float>()(0);\\n \\n-    const float input_min_float = ctx->input(2).flat<float>()(0);\\n-    const float input_max_float = ctx->input(3).flat<float>()(0);\\n     Tensor* output_min = nullptr;\\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(1, TensorShape({}), &output_min));\\n     output_min->flat<float>()(0) = input_min_float;'}}",
            "message_norm":"validate arguments to `quantizedreshape`.\n\nensure that validations from `reshape` also terminate `quantizedreshape` on failure.\n\npiperorigin-revid: 369775421\nchange-id: if8c5342267aceea65b7cb83a4b183304886f1ce8",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('ensure', 'ACTION', ''), ('369775421', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/quantized_reshape_op.cc'])",
            "num_files":1.0
        },
        {
            "index":3360,
            "vuln_id":"GHSA-x44x-r84w-8v67",
            "cwe_id":"{'CWE-287'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler\/commit\/136aa83ed431462fa42ce17b7f9b24e056de06be'}",
            "dataset":"osv",
            "summary":"Lack of URL normalization may lead to authorization bypass when URL access rules are used ### Impact\nWhen access rules are used inside a protected host, some URL encodings may bypass filtering system.\n\n### Patches\nVersion 0.5.2 includes a patch that fixes the vulnerability\n\n### Workarounds\nNo way for users to fix or remediate the vulnerability without upgrading\n\n### References\nhttps:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues\/2290\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [this repository](https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler\/issues) or [LemonLDAP::NG GitLab](https:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues)\n* Email us at [lemonldap-ng-users@ow2.org](mailto:lemonldap-ng-users@ow2.org)",
            "published_date":"2020-09-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler",
            "commit_href":"https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler\/commit\/136aa83ed431462fa42ce17b7f9b24e056de06be",
            "commit_sha":"136aa83ed431462fa42ce17b7f9b24e056de06be",
            "patch":"SINGLE",
            "chain_ord":"['136aa83ed431462fa42ce17b7f9b24e056de06be']",
            "before_first_fix_commit":"{'d6fac9350024d9eef1c180f4e3a6a0ce65f199a8'}",
            "last_fix_commit":"136aa83ed431462fa42ce17b7f9b24e056de06be",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/09\/2020, 08:04:46",
            "message":"Normalize URL (related to https:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues\/2290 and CVE-2020-24660)",
            "author":"Xavier Guimard",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 3, 'total': 7}",
            "files":"{'src\/lib\/index.coffee': {'additions': 4, 'deletions': 3, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler\/raw\/136aa83ed431462fa42ce17b7f9b24e056de06be\/src%2Flib%2Findex.coffee', 'patch': '@@ -4,6 +4,7 @@\\n # See README.md for license and copyright\\n ###\\n conf = null\\n+normalizeUrl = require \\'normalize-url\\'\\n \\n class Handler\\n \\tconstructor: (args) ->\\n@@ -15,7 +16,7 @@ class Handler\\n \\trun: (req, res, next) ->\\n \\t\\tself = @\\n \\t\\tvhost = req.headers.host\\n-\\t\\turi = decodeURI req.url\\n+\\t\\turi = normalizeUrl req.url\\n \\t\\tif @conf.tsv.maintenance[vhost]\\n \\t\\t\\tself.logger.info \"Go to portal with maintenance error code #{vhost}\"\\n \\t\\t\\treturn @setError res, \\'\/\\', 503, \\'Service Temporarily Unavailable\\'\\n@@ -184,7 +185,7 @@ class Handler\\n \\t\\t\\treturn res\\n \\t\\turlc = @conf.tsv.portal()\\n \\t\\tif uri\\n-\\t\\t\\turlc += \\'?url=\\' + new Buffer(encodeURI(uri)).toString(\\'base64\\')\\n+\\t\\t\\turlc += \\'?url=\\' + new Buffer.from(encodeURI(uri)).toString(\\'base64\\')\\n \\t\\tif args\\n \\t\\t\\turlc += if uri then \\'&\\' else \\'?\\'\\n \\t\\t\\turlc += args\\n@@ -203,7 +204,7 @@ class Handler\\n \\n \\tsetError: (res, uri, code, txt) ->\\n \\t\\tif @conf.tsv.useRedirectOnError\\n-\\t\\t\\tu = @conf.tsv.portal() + \"?lmError=#{code}&url=\" + new Buffer(encodeURI(uri)).toString(\\'base64\\')\\n+\\t\\t\\tu = @conf.tsv.portal() + \"?lmError=#{code}&url=\" + new Buffer.from(encodeURI(uri)).toString(\\'base64\\')\\n \\t\\t\\t@logger.debug \"Redirecting to #{u}\"\\n \\t\\t\\tif res.redirect?\\n \\t\\t\\t\\tres.redirect u'}}",
            "message_norm":"normalize url (related to https:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues\/2290 and cve-2020-24660)",
            "language":"en",
            "entities":"[('https:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues\/2290', 'URL', ''), ('cve-2020-24660', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lib\/index.coffee'])",
            "num_files":1.0
        },
        {
            "index":3135,
            "vuln_id":"GHSA-vjv6-gq77-3mjw",
            "cwe_id":"{'CWE-611'}",
            "score":9.3,
            "chain":"{'https:\/\/github.com\/mapfish\/mapfish-print\/pull\/1397\/commits\/e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e'}",
            "dataset":"osv",
            "summary":"XXE attack in Mapfish Print ### Impact\nA user can do to an XML External Entity (XXE) attack with the provided SDL style.\n\n### Patches\nUse version >= 3.24\n\n### Workarounds\nNo\n\n### References\n* https:\/\/cwe.mitre.org\/data\/definitions\/611.html\n* https:\/\/github.com\/mapfish\/mapfish-print\/pull\/1397\/commits\/e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e\n\n### For more information\nIf you have any questions or comments about this advisory Comment the pull request: https:\/\/github.com\/mapfish\/mapfish-print\/pull\/1397",
            "published_date":"2020-07-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/mapfish\/mapfish-print",
            "commit_href":"https:\/\/github.com\/mapfish\/mapfish-print\/pull\/1397\/commits\/e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e",
            "commit_sha":"e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e",
            "patch":"SINGLE",
            "chain_ord":"['e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e']",
            "before_first_fix_commit":"{'4b59454140e1bd312c728d99d7de82714000c195'}",
            "last_fix_commit":"e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/02\/2020, 14:25:50",
            "message":"See: https:\/\/github.com\/mapfish\/mapfish-print\/security\/code-scanning\/3?query=ref%3Arefs%2Fheads%2Fmaster",
            "author":"St\u00e9phane Brunner",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'core\/src\/main\/java\/org\/mapfish\/print\/map\/style\/SLDParserPlugin.java': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mapfish\/mapfish-print\/raw\/e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e\/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fmapfish%2Fprint%2Fmap%2Fstyle%2FSLDParserPlugin.java', 'patch': '@@ -94,6 +94,7 @@ private Optional<Style> tryLoadSLD(\\n             \/\/ by setting a custom error handler.\\n             DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\\n             dbf.setNamespaceAware(true);\\n+            dbf.setFeature(\"http:\/\/apache.org\/xml\/features\/disallow-doctype-decl\", true);\\n             DocumentBuilder db = dbf.newDocumentBuilder();\\n             db.setErrorHandler(new ErrorHandler());\\n             db.parse(new ByteArrayInputStream(bytes));'}}",
            "message_norm":"see: https:\/\/github.com\/mapfish\/mapfish-print\/security\/code-scanning\/3?query=ref%3arefs%2fheads%2fmaster",
            "language":"en",
            "entities":"[('https:\/\/github.com\/mapfish\/mapfish-print\/security\/code-scanning\/3?query=ref%3arefs%2fheads%2fmaster', 'URL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['core\/src\/main\/java\/org\/mapfish\/print\/map\/style\/SLDParserPlugin.java'])",
            "num_files":1.0
        },
        {
            "index":2036,
            "vuln_id":"GHSA-h9px-9vqg-222h",
            "cwe_id":"{'CWE-125'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/99085e8ff02c3763a0ec2263e44daec416f6a387'}",
            "dataset":"osv",
            "summary":"Heap OOB in `QuantizeAndDequantizeV3` ### Impact\nAn attacker can read data outside of bounds of heap allocated buffer in `tf.raw_ops.QuantizeAndDequantizeV3`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.QuantizeAndDequantizeV3(\n  input=[2.5,2.5], input_min=[0,0], input_max=[1,1], num_bits=[30],\n  signed_input=False, range_given=False, narrow_range=False, axis=3)\n```   \n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/11ff7f80667e6490d7b5174aa6bf5e01886e770f\/tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc#L237) does not validate the value of user supplied `axis` attribute before using it to index in the array backing the `input` argument:\n\n```cc\nconst int depth = (axis_ == -1) ? 1 : input.dim_size(axis_);\n```\n\n### Patches\nWe have patched the issue in GitHub commit [99085e8ff02c3763a0ec2263e44daec416f6a387](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/99085e8ff02c3763a0ec2263e44daec416f6a387).\n  \nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/99085e8ff02c3763a0ec2263e44daec416f6a387",
            "commit_sha":"99085e8ff02c3763a0ec2263e44daec416f6a387",
            "patch":"SINGLE",
            "chain_ord":"['99085e8ff02c3763a0ec2263e44daec416f6a387']",
            "before_first_fix_commit":"{'11ff7f80667e6490d7b5174aa6bf5e01886e770f'}",
            "last_fix_commit":"99085e8ff02c3763a0ec2263e44daec416f6a387",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/27\/2021, 00:32:41",
            "message":"Fix `tf.raw_ops.QuantizeAndDequantizeV3` array index failure.\n\nPiperOrigin-RevId: 370577691\nChange-Id: Ifeae64212f6bcd139435824fa2748d1329213c4c",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/99085e8ff02c3763a0ec2263e44daec416f6a387\/tensorflow%2Fcore%2Fkernels%2Fquantize_and_dequantize_op.cc', 'patch': '@@ -13,6 +13,7 @@ See the License for the specific language governing permissions and\\n limitations under the License.\\n ==============================================================================*\/\\n \\n+#include \"tensorflow\/core\/framework\/op_requires.h\"\\n #define EIGEN_USE_THREADS\\n \\n #if (defined(GOOGLE_CUDA) && GOOGLE_CUDA) || \\\\\\n@@ -234,6 +235,10 @@ class QuantizeAndDequantizeV3Op : public OpKernel {\\n \\n   void Compute(OpKernelContext* ctx) override {\\n     const Tensor& input = ctx->input(0);\\n+    OP_REQUIRES(ctx, axis_ < input.dims(),\\n+                errors::InvalidArgument(\\n+                    \"Axis requested is larger than input dimensions. Axis: \",\\n+                    axis_, \" Input Dimensions: \", input.dims()));\\n     const int depth = (axis_ == -1) ? 1 : input.dim_size(axis_);\\n     Tensor* output = nullptr;\\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(0, input.shape(), &output));'}}",
            "message_norm":"fix `tf.raw_ops.quantizeanddequantizev3` array index failure.\n\npiperorigin-revid: 370577691\nchange-id: ifeae64212f6bcd139435824fa2748d1329213c4c",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('370577691', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc'])",
            "num_files":1.0
        },
        {
            "index":2486,
            "vuln_id":"GHSA-mxvc-fwgx-j778",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/benbusby\/whoogle-search\/commit\/abc30d7da3b5c67be7ce84d4699f327442d44606'}",
            "dataset":"osv",
            "summary":"Whoogle Search Cross-site Scripting via string parameter The package whoogle-search before 0.7.2 is vulnerable to Cross-site Scripting (XSS) via the query string parameter q. In the case where it does not contain the http string, it is used to build the error_message that is then rendered in the error.html template, using the [flask.render_template](https:\/\/flask.palletsprojects.com\/en\/2.1.x\/api\/flask.render_template) function. However, the error_message is rendered using the [| safe filter](https:\/\/jinja.palletsprojects.com\/en\/3.1.x\/templates\/working-with-automatic-escaping), meaning the user input is not escaped.",
            "published_date":"2022-07-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/benbusby\/whoogle-search",
            "commit_href":"https:\/\/github.com\/benbusby\/whoogle-search\/commit\/abc30d7da3b5c67be7ce84d4699f327442d44606",
            "commit_sha":"abc30d7da3b5c67be7ce84d4699f327442d44606",
            "patch":"SINGLE",
            "chain_ord":"['abc30d7da3b5c67be7ce84d4699f327442d44606']",
            "before_first_fix_commit":"{'d62ceb84239ee0df677851f46eb885c40e98211f'}",
            "last_fix_commit":"abc30d7da3b5c67be7ce84d4699f327442d44606",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/26\/2022, 15:28:05",
            "message":"Render error message w\/o `safe` filter\n\nThe error message shown in the error template does not need to be\nrendered using the safe filter, and furthermore opens up an XSS\nvulnerability.",
            "author":"Ben Busby",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'app\/templates\/error.html': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/benbusby\/whoogle-search\/raw\/abc30d7da3b5c67be7ce84d4699f327442d44606\/app%2Ftemplates%2Ferror.html', 'patch': '@@ -16,7 +16,7 @@\\n <div>\\n     <h1>Error<\/h1>\\n     <p>\\n-        {{ error_message|safe }}\\n+        {{ error_message }}\\n     <\/p>\\n     <hr>\\n     <p>'}}",
            "message_norm":"render error message w\/o `safe` filter\n\nthe error message shown in the error template does not need to be\nrendered using the safe filter, and furthermore opens up an xss\nvulnerability.",
            "language":"en",
            "entities":"[('error', 'FLAW', ''), ('safe', 'SECWORD', ''), ('error', 'FLAW', ''), ('error', 'FLAW', ''), ('safe', 'SECWORD', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/templates\/error.html'])",
            "num_files":1.0
        },
        {
            "index":2453,
            "vuln_id":"GHSA-mq5p-2mcr-m52j",
            "cwe_id":"{'CWE-94'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/jupyterhub\/nbgitpuller\/commit\/07690644f29a566011dd0d7ba14cae3eb0490481'}",
            "dataset":"osv",
            "summary":"Code injection in nbgitpuller ### Impact\n\nDue to an unsanitized input, visiting maliciously crafted links could result in arbitrary code execution in the user environment.\n\n### Patches\n\n0.10.2\n\n### Workarounds\n\nNone, other than upgrade to 0.10.2 or downgrade to 0.8.x.\n\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [nbgitpuller](https:\/\/github.com\/jupyterhub\/nbgitpuller\/issues)\n* Email our security team at [security@ipython.org](mailto:security@ipython.org)",
            "published_date":"2021-08-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/jupyterhub\/nbgitpuller",
            "commit_href":"https:\/\/github.com\/jupyterhub\/nbgitpuller\/commit\/07690644f29a566011dd0d7ba14cae3eb0490481",
            "commit_sha":"07690644f29a566011dd0d7ba14cae3eb0490481",
            "patch":"SINGLE",
            "chain_ord":"['07690644f29a566011dd0d7ba14cae3eb0490481']",
            "before_first_fix_commit":"{'f25d3f2685035c11bd668d48e71caf4fc245ba68', '2cad6147f1769a962f8d0733045967663add53cb'}",
            "last_fix_commit":"07690644f29a566011dd0d7ba14cae3eb0490481",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/25\/2021, 12:23:02",
            "message":"Merge pull request from GHSA-mq5p-2mcr-m52j\n\nmake positional args explicit",
            "author":"Erik Sundell",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'nbgitpuller\/pull.py': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyterhub\/nbgitpuller\/raw\/07690644f29a566011dd0d7ba14cae3eb0490481\/nbgitpuller%2Fpull.py', 'patch': '@@ -88,13 +88,13 @@ def branch_exists(self, branch):\\n         \"\"\"\\n         try:\\n             heads = subprocess.run(\\n-                [\"git\", \"ls-remote\", \"--heads\", self.git_url],\\n+                [\"git\", \"ls-remote\", \"--heads\", \"--\", self.git_url],\\n                 capture_output=True,\\n                 text=True,\\n                 check=True\\n             )\\n             tags = subprocess.run(\\n-                [\"git\", \"ls-remote\", \"--tags\", self.git_url],\\n+                [\"git\", \"ls-remote\", \"--tags\", \"--\", self.git_url],\\n                 capture_output=True,\\n                 text=True,\\n                 check=True\\n@@ -118,7 +118,7 @@ def resolve_default_branch(self):\\n         \"\"\"\\n         try:\\n             head_branch = subprocess.run(\\n-                [\"git\", \"ls-remote\", \"--symref\", self.git_url, \"HEAD\"],\\n+                [\"git\", \"ls-remote\", \"--symref\", \"--\", self.git_url, \"HEAD\"],\\n                 capture_output=True,\\n                 text=True,\\n                 check=True\\n@@ -154,7 +154,7 @@ def initialize_repo(self):\\n         if self.depth and self.depth > 0:\\n             clone_args.extend([\\'--depth\\', str(self.depth)])\\n         clone_args.extend([\\'--branch\\', self.branch_name])\\n-        clone_args.extend([self.git_url, self.repo_dir])\\n+        clone_args.extend([\"--\", self.git_url, self.repo_dir])\\n         yield from execute_cmd(clone_args)\\n         logging.info(\\'Repo {} initialized\\'.format(self.repo_dir))'}}",
            "message_norm":"merge pull request from ghsa-mq5p-2mcr-m52j\n\nmake positional args explicit",
            "language":"ca",
            "entities":"[('ghsa-mq5p-2mcr-m52j', 'VULNID', 'GHSA')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['nbgitpuller\/pull.py'])",
            "num_files":1.0
        },
        {
            "index":1003,
            "vuln_id":"GHSA-79fv-9865-4qcv",
            "cwe_id":"{'CWE-787', 'CWE-119'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a74768f8e4efbda4def9f16ee7e13cf3922ac5f7'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `MaxPoolGrad` ### Impact\nThe implementation of `tf.raw_ops.MaxPoolGrad` is vulnerable to a heap buffer overflow:\n  \n```python\nimport tensorflow as tf\n\norig_input = tf.constant([0.0], shape=[1, 1, 1, 1], dtype=tf.float32)\norig_output = tf.constant([0.0], shape=[1, 1, 1, 1], dtype=tf.float32)\ngrad = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32)\nksize = [1, 1, 1, 1] \nstrides = [1, 1, 1, 1]\npadding = \"SAME\"\n\ntf.raw_ops.MaxPoolGrad(\n  orig_input=orig_input, orig_output=orig_output, grad=grad, ksize=ksize,\n  strides=strides, padding=padding, explicit_paddings=[])\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/ab1e644b48c82cb71493f4362b4dd38f4577a1cf\/tensorflow\/core\/kernels\/maxpooling_op.cc#L194-L203) fails to validate that indices used to access elements of input\/output arrays are valid:\n\n```cc\nfor (int index = out_start; index < out_end; ++index) {\n  int input_backprop_index = out_arg_max_flat(index);\n  FastBoundsCheck(input_backprop_index - in_start, in_end - in_start);\n  input_backprop_flat(input_backprop_index) += out_backprop_flat(index);\n}\n```\n\nWhereas accesses to `input_backprop_flat` are guarded by `FastBoundsCheck`, the indexing in `out_backprop_flat` can result in OOB access.\n\n### Patches\nWe have patched the issue in GitHub commit [a74768f8e4efbda4def9f16ee7e13cf3922ac5f7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a74768f8e4efbda4def9f16ee7e13cf3922ac5f7).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a74768f8e4efbda4def9f16ee7e13cf3922ac5f7",
            "commit_sha":"a74768f8e4efbda4def9f16ee7e13cf3922ac5f7",
            "patch":"SINGLE",
            "chain_ord":"['a74768f8e4efbda4def9f16ee7e13cf3922ac5f7']",
            "before_first_fix_commit":"{'ab1e644b48c82cb71493f4362b4dd38f4577a1cf'}",
            "last_fix_commit":"a74768f8e4efbda4def9f16ee7e13cf3922ac5f7",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/06\/2021, 21:24:09",
            "message":"Prevent heap OOB error in `MaxPoolGrad`\n\nPiperOrigin-RevId: 372424854\nChange-Id: Idac0f23867ad8b0601cafbaaa52d5e64269e63a7",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 1, 'total': 4}",
            "files":"{'tensorflow\/core\/kernels\/maxpooling_op.cc': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a74768f8e4efbda4def9f16ee7e13cf3922ac5f7\/tensorflow%2Fcore%2Fkernels%2Fmaxpooling_op.cc', 'patch': '@@ -199,7 +199,9 @@ static void SpatialMaxPoolWithArgMaxHelper(\\n         \/\/ CHECK(input_backprop_index >= in_start && input_backprop_index <\\n         \/\/ in_end)\\n         FastBoundsCheck(input_backprop_index - in_start, in_end - in_start);\\n-        input_backprop_flat(input_backprop_index) += out_backprop_flat(index);\\n+        if (index < out_backprop.NumElements()) {\\n+          input_backprop_flat(input_backprop_index) += out_backprop_flat(index);\\n+        }\\n       }\\n     }\\n   };'}}",
            "message_norm":"prevent heap oob error in `maxpoolgrad`\n\npiperorigin-revid: 372424854\nchange-id: idac0f23867ad8b0601cafbaaa52d5e64269e63a7",
            "language":"nl",
            "entities":"[('prevent', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('error', 'FLAW', ''), ('372424854', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/maxpooling_op.cc'])",
            "num_files":1.0
        },
        {
            "index":2547,
            "vuln_id":"GHSA-pc22-3g76-gm6j",
            "cwe_id":"{'CWE-379', 'CWE-378'}",
            "score":9.3,
            "chain":"{'https:\/\/github.com\/swagger-api\/swagger-codegen\/commit\/987ea7a30b463cc239580d6ad166c707ae942a89'}",
            "dataset":"osv",
            "summary":"Generator Web Application: Local Privilege Escalation Vulnerability via System Temp Directory ### Impact\n\nOn Unix like systems, the system's temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. \n\nThis vulnerability is local privilege escalation because the contents of the `outputFolder` can be appended to by an attacker. As such, code written to this directory, when executed can be attacker controlled.\n\n#### Java Code\n\nThe method `File.createTempFile` from the JDK is vulnerable to this local information disclosure vulnerability.\n\nhttps:\/\/github.com\/swagger-api\/swagger-codegen\/blob\/068b1ebcb7b04a48ad38f1cadd24bb3810c9f1ab\/modules\/swagger-generator\/src\/main\/java\/io\/swagger\/generator\/online\/Generator.java#L174-L185\n\n\n### Patches\n\nFix has been applied to the master branch with:\n\n* https:\/\/github.com\/swagger-api\/swagger-codegen\/commit\/987ea7a30b463cc239580d6ad166c707ae942a89\n\nincluded in release: 2.4.19\n\n\n### References\n\n* [CWE-378: Creation of Temporary File With Insecure Permissions](https:\/\/cwe.mitre.org\/data\/definitions\/378.html)\n* [CWE-379: Creation of Temporary File in Directory with Insecure Permissions](https:\/\/cwe.mitre.org\/data\/definitions\/379.html)\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n* Email us at [security@swagger.io](mailto:security@swagger.io)\n\n#### Original vulnerability report\n\n> I'm performing OSS security research under the GitHub Security Lab Bug Bounty program.\n> I've been using a custom CodeQL query to find local temporary directory vulnerabilities in OSS with three custom CodeQL queries.\n> \n> - https:\/\/github.com\/github\/codeql\/pull\/4388\/files#diff-71d36c0f2bd0b08e32866f873f1c906cdc17277e0ad327c0c6cd2c882f30de4f\n> - https:\/\/github.com\/github\/codeql\/pull\/4388\/files#diff-1893a18a8bf43c011d61a7889d0139b998a5a78701a30fe7722eddd4c506aaac\n> - https:\/\/github.com\/github\/codeql\/pull\/4473\n> \n> The code generated by the Swagger Generator contains a local information disclosure vulnerability. The system temporary directory, on unix-like systems is shared between multiple users. Information written to this directory, or directories created under this directory that do not correctly set the posix standard permissions can have these directories read\/modified by other users.\n> \n> ---\n> \n> This vulnerability exists in the maven plugin.\n> \n> This vulnerability is distinctly different. This vulnerability is most likely a local privilege escalation vulnerability.\n> \n> https:\/\/github.com\/swagger-api\/swagger-codegen\/blob\/068b1ebcb7b04a48ad38f1cadd24bb3810c9f1ab\/modules\/swagger-generator\/src\/main\/java\/io\/swagger\/generator\/online\/Generator.java#L174-L185\n> \n> This vulnerability is very similar to this similar vulnerability I disclosed in the Eclipse Jetty project.\n> \n> https:\/\/github.com\/eclipse\/jetty.project\/security\/advisories\/GHSA-g3wg-6mcf-8jj6\n> \n> This is due to a race condition between the call to `delete` and the call to `mkdirs`.\n> \n> ```java\n> \/\/ ensure file will always be unique by appending random digits\n> File outputFolder = File.createTempFile(\"codegen-\", \"-tmp\"); \/\/ Attacker knows the full path of the file that will be generated\n> \/\/ delete the file that was created\n> outputFolder.delete(); \/\/ Attacker sees file is deleted and begins a race to create their own directory before Swagger Code Generator.\n> \/\/ and make a directory of the same name\n> \/\/ SECURITY VULNERABILITY: Race Condition! - Attacker beats Swagger Code Generator and now owns this directory\n> outputFolder.mkdirs();\n> ```\n> \n> This vulnerability is local privilege escalation because the contents of the `outputFolder` can be appended to by an attacker. As such, code written to this directory, when executed can be attacker controlled.\n> \n> The fix here is to switch to the `Files` API for creating temporary directories. Which does not contain this race condition, and appropriately sets the correct file permissions.\n>",
            "published_date":"2021-03-11",
            "chain_len":1,
            "project":"https:\/\/github.com\/swagger-api\/swagger-codegen",
            "commit_href":"https:\/\/github.com\/swagger-api\/swagger-codegen\/commit\/987ea7a30b463cc239580d6ad166c707ae942a89",
            "commit_sha":"987ea7a30b463cc239580d6ad166c707ae942a89",
            "patch":"SINGLE",
            "chain_ord":"['987ea7a30b463cc239580d6ad166c707ae942a89']",
            "before_first_fix_commit":"{'3b40539b2260fbf1c8198dceb8797599c3944ef7', 'a4b766beb6141ed66dbe1be23bce32366b5f9486'}",
            "last_fix_commit":"987ea7a30b463cc239580d6ad166c707ae942a89",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/02\/2021, 10:05:49",
            "message":"Merge pull request from GHSA-pc22-3g76-gm6j\n\n security: use java.nio.files in Generator.",
            "author":"Francesco Tumanischvili",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 3, 'total': 5}",
            "files":"{'modules\/swagger-generator\/src\/main\/java\/io\/swagger\/generator\/online\/Generator.java': {'additions': 2, 'deletions': 3, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/swagger-api\/swagger-codegen\/raw\/987ea7a30b463cc239580d6ad166c707ae942a89\/modules%2Fswagger-generator%2Fsrc%2Fmain%2Fjava%2Fio%2Fswagger%2Fgenerator%2Fonline%2FGenerator.java', 'patch': '@@ -15,6 +15,7 @@\\n import org.slf4j.LoggerFactory;\\n \\n import java.io.File;\\n+import java.nio.file.Files;\\n import java.util.ArrayList;\\n import java.util.LinkedHashMap;\\n import java.util.List;\\n@@ -173,9 +174,7 @@ public static InputOption serverOptions(@SuppressWarnings(\"unused\") String langu\\n \\n     protected static File getTmpFolder() {\\n         try {\\n-            File outputFolder = File.createTempFile(\"codegen-\", \"-tmp\");\\n-            outputFolder.delete();\\n-            outputFolder.mkdir();\\n+            File outputFolder = Files.createTempDirectory(\"codegen-\").toFile();\\n             outputFolder.deleteOnExit();\\n             return outputFolder;\\n         } catch (Exception e) {'}}",
            "message_norm":"merge pull request from ghsa-pc22-3g76-gm6j\n\n security: use java.nio.files in generator.",
            "language":"en",
            "entities":"[('ghsa-pc22-3g76-gm6j', 'VULNID', 'GHSA'), ('security', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/swagger-generator\/src\/main\/java\/io\/swagger\/generator\/online\/Generator.java'])",
            "num_files":1.0
        },
        {
            "index":3144,
            "vuln_id":"GHSA-vmhh-xh3g-j992",
            "cwe_id":"{'CWE-80', 'CWE-79', 'CWE-116'}",
            "score":7.4,
            "chain":"{'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/bd935320bee3c27cf7548351b1d0f935f116d437'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in the Flamingo theme manager ### Impact\nWe found a possible XSS vector in the `FlamingoThemesCode.WebHomeSheet` wiki page related to the \"newThemeName\" form field.\n\n### Patches\n\nThe issue is patched in versions 12.10.11, 14.0-rc-1, 13.4.7, 13.10.3.\n\n### Workarounds\nThe easiest workaround is to edit the wiki page `FlamingoThemesCode.WebHomeSheet` (with wiki editor) and change the line\n\n```\n<input type=\"hidden\" name=\"newThemeName\" id=\"newThemeName\" value=\"$request.newThemeName\" \/>\n```\n\ninto\n\n```\n<input type=\"hidden\" name=\"newThemeName\" id=\"newThemeName\" value=\"$escapetool.xml($request.newThemeName)\" \/>\n```\n\n### References\n  * https:\/\/jira.xwiki.org\/browse\/XWIKI-19294\n  * https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/bd935320bee3c27cf7548351b1d0f935f116d437\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Jira XWiki](https:\/\/jira.xwiki.org)\n* Email us at [security mailing list](mailto:security@xwiki.org)",
            "published_date":"2022-05-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/xwiki\/xwiki-platform",
            "commit_href":"https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/bd935320bee3c27cf7548351b1d0f935f116d437",
            "commit_sha":"bd935320bee3c27cf7548351b1d0f935f116d437",
            "patch":"SINGLE",
            "chain_ord":"['bd935320bee3c27cf7548351b1d0f935f116d437']",
            "before_first_fix_commit":"{'21906acb5ee2304552f56f9bbdbf8e7d368f7f3a'}",
            "last_fix_commit":"bd935320bee3c27cf7548351b1d0f935f116d437",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/04\/2022, 10:34:49",
            "message":"XWIKI-19294: Fix bad escaping",
            "author":"Thomas Mortagne",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'xwiki-platform-core\/xwiki-platform-flamingo\/xwiki-platform-flamingo-theme\/xwiki-platform-flamingo-theme-ui\/src\/main\/resources\/FlamingoThemesCode\/WebHomeSheet.xml': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/xwiki\/xwiki-platform\/raw\/bd935320bee3c27cf7548351b1d0f935f116d437\/xwiki-platform-core%2Fxwiki-platform-flamingo%2Fxwiki-platform-flamingo-theme%2Fxwiki-platform-flamingo-theme-ui%2Fsrc%2Fmain%2Fresources%2FFlamingoThemesCode%2FWebHomeSheet.xml', 'patch': '@@ -287,7 +287,7 @@\\n       &lt;form action=\"$doc.getURL()\" method=\"post\"&gt;\\n         &lt;input type=\"hidden\" name=\"form_token\" value=\"$services.csrf.token\" \/&gt;\\n         &lt;input type=\"hidden\" name=\"action\" value=\"create\"\/&gt;\\n-        &lt;input type=\"hidden\" name=\"newThemeName\" id=\"newThemeName\" value=\"$request.newThemeName\" \/&gt;\\n+        &lt;input type=\"hidden\" name=\"newThemeName\" id=\"newThemeName\" value=\"$escapetool.xml($request.newThemeName)\" \/&gt;\\n         &lt;input type=\"submit\" value=\"$services.localization.render(\\'platform.flamingo.themes.home.create.confirm\\')\" class=\"button\"\/&gt;\\n       &lt;\/form&gt;\\n     {{\/html}}'}}",
            "message_norm":"xwiki-19294: fix bad escaping",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('escaping', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['xwiki-platform-core\/xwiki-platform-flamingo\/xwiki-platform-flamingo-theme\/xwiki-platform-flamingo-theme-ui\/src\/main\/resources\/FlamingoThemesCode\/WebHomeSheet.xml'])",
            "num_files":1.0
        },
        {
            "index":984,
            "vuln_id":"GHSA-772p-x54p-hjrv",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/799f835a3dfa00a4d852defa29b15841eea9d64f'}",
            "dataset":"osv",
            "summary":"Division by zero in `Conv3D` ### Impact\nA malicious user could trigger a division by 0 in `Conv3D` implementation:\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([], shape=[0, 0, 0, 0, 0], dtype=tf.float32)\nfilter_tensor = tf.constant([], shape=[0, 0, 0, 0, 0], dtype=tf.float32)\n\ntf.raw_ops.Conv3D(input=input_tensor, filter=filter_tensor, strides=[1, 56, 56, 56, 1], padding='VALID', data_format='NDHWC', dilations=[1, 1, 1, 23, 1])\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/42033603003965bffac51ae171b51801565e002d\/tensorflow\/core\/kernels\/conv_ops_3d.cc#L143-L145) does a modulo operation based on user controlled input:\n\n```cc\n  const int64 out_depth = filter.dim_size(4);\n  OP_REQUIRES(context, in_depth % filter_depth == 0, ...);\n```\n\nThus, when `filter` has a 0 as the fifth element, this results in a division by 0.\n\nAdditionally, if the shape of the two tensors is not valid, an Eigen assertion can be triggered, resulting in a program crash:\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([], shape=[2, 2, 2, 2, 0], dtype=tf.float32)\nfilter_tensor = tf.constant([], shape=[0, 0, 2, 6, 2], dtype=tf.float32)\n\ntf.raw_ops.Conv3D(input=input_tensor, filter=filter_tensor, strides=[1, 56, 39, 34, 1], padding='VALID', data_format='NDHWC', dilations=[1, 1, 1, 1, 1])\n```\n\nThe shape of the two tensors must follow the constraints specified in the [op description](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/raw_ops\/Conv3D).\n\n### Patches\nWe have patched the issue in GitHub commit [799f835a3dfa00a4d852defa29b15841eea9d64f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/799f835a3dfa00a4d852defa29b15841eea9d64f).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/799f835a3dfa00a4d852defa29b15841eea9d64f",
            "commit_sha":"799f835a3dfa00a4d852defa29b15841eea9d64f",
            "patch":"SINGLE",
            "chain_ord":"['799f835a3dfa00a4d852defa29b15841eea9d64f']",
            "before_first_fix_commit":"{'42033603003965bffac51ae171b51801565e002d'}",
            "last_fix_commit":"799f835a3dfa00a4d852defa29b15841eea9d64f",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/19\/2021, 16:56:46",
            "message":"Fix 2 issues with `Conv3D`.\n\nWe have an issue where the dimensions are not matching and this causes Eigen to crash on an assert.\n\nThen, we have an issue where we accidentally do a division by 0.\n\nPiperOrigin-RevId: 369242785\nChange-Id: Ie94067b2d41f58699af99ebb5af335ad9defd931",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 0, 'total': 7}",
            "files":"{'tensorflow\/core\/kernels\/conv_ops_3d.cc': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/799f835a3dfa00a4d852defa29b15841eea9d64f\/tensorflow%2Fcore%2Fkernels%2Fconv_ops_3d.cc', 'patch': '@@ -69,6 +69,11 @@ struct LaunchConvOp<CPUDevice, T> {\\n                 errors::InvalidArgument(\"CPU implementation of Conv3D \"\\n                                         \"currently only supports dilated rates \"\\n                                         \"of 1.\"));\\n+    OP_REQUIRES(context, filter.dim_size(3) == input.dim_size(input.dims() - 1),\\n+                errors::InvalidArgument(\\n+                    \"Number of channels in filter (\", filter.dim_size(3),\\n+                    \") must match last dimension of input (\",\\n+                    input.dim_size(input.dims() - 1), \")\"));\\n     functor::CuboidConvolution<CPUDevice, T>()(\\n         context->eigen_device<CPUDevice>(), output->tensor<T, 5>(),\\n         input.tensor<T, 5>(), filter.tensor<T, 5>(), strides[2], strides[1],\\n@@ -142,6 +147,8 @@ class Conv3DOp : public BinaryOp<T> {\\n     const int64 filter_depth = filter.dim_size(3);\\n     const int64 out_depth = filter.dim_size(4);\\n \\n+    OP_REQUIRES(context, filter_depth != 0,\\n+                errors::InvalidArgument(\"filter_depth must be non-zero\"));\\n     OP_REQUIRES(context, in_depth % filter_depth == 0,\\n                 errors::InvalidArgument(\\n                     \"Input depth must be evenly divisible by filter depth: \",'}}",
            "message_norm":"fix 2 issues with `conv3d`.\n\nwe have an issue where the dimensions are not matching and this causes eigen to crash on an assert.\n\nthen, we have an issue where we accidentally do a division by 0.\n\npiperorigin-revid: 369242785\nchange-id: ie94067b2d41f58699af99ebb5af335ad9defd931",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('issues', 'FLAW', ''), ('issue', 'FLAW', ''), ('issue', 'FLAW', ''), ('division by 0', 'SECWORD', ''), ('369242785', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_ops_3d.cc'])",
            "num_files":1.0
        },
        {
            "index":1613,
            "vuln_id":"GHSA-cvpc-8phh-8f45",
            "cwe_id":"{'CWE-787', 'CWE-125'}",
            "score":4.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/00302787b788c5ff04cb6f62aed5a74d936e86c0', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e11f55585f614645b360563072ffeb5c3eeff162', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/46d5b0852528ddfd614ded79bccc75589f801bd9', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1970c2158b1ffa416d159d03c3370b9a462aee35', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/fff2c8326280c07733828f990548979bdc893859'}",
            "dataset":"osv",
            "summary":"Out of bounds access in tensorflow-lite ### Impact\nIn TensorFlow Lite, saved models in the flatbuffer format use a double indexing scheme: a model has a set of subgraphs, each subgraph has a set of operators and each operator has a set of input\/output tensors. The flatbuffer format uses indices for the tensors, indexing into an array of tensors that is owned by the subgraph. This results in a pattern of double array indexing when trying to get the data of each tensor:https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/kernels\/kernel_util.cc#L36\n\nHowever, some operators can have some tensors be optional. To handle this scenario, the flatbuffer model uses a negative `-1` value as index for these tensors:\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/c\/common.h#L82\n\nThis results in special casing during validation at model loading time: https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/core\/subgraph.cc#L566-L580\n\nUnfortunately, this means that the `-1` index is a valid tensor index for any operator, including those that don't expect optional inputs and including for output tensors. Thus, this allows writing and reading from outside the bounds of heap allocated arrays, although only at a specific offset from the start of these arrays.\n\nThis results in both read and write gadgets, albeit very limited in scope.\n\n### Patches\nWe have patched the issue in several commits (46d5b0852, 00302787b7, e11f5558, cd31fd0ce, 1970c21, and fff2c83). We will release patch releases for all versions between 1.15 and 2.3.\n\nWe recommend users to upgrade to TensorFlow 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.\n\n### Workarounds\nA potential workaround would be to add a custom `Verifier` to the model loading code to ensure that only operators which accept optional inputs use the `-1` special value and only for the tensors that they expect to be optional. Since this allow-list type approach is erro-prone, we advise upgrading to the patched code.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2020-09-25",
            "chain_len":6,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/00302787b788c5ff04cb6f62aed5a74d936e86c0",
            "commit_sha":"00302787b788c5ff04cb6f62aed5a74d936e86c0",
            "patch":"MULTI",
            "chain_ord":"['46d5b0852528ddfd614ded79bccc75589f801bd9', '00302787b788c5ff04cb6f62aed5a74d936e86c0', 'e11f55585f614645b360563072ffeb5c3eeff162', 'cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f', 'fff2c8326280c07733828f990548979bdc893859', '1970c2158b1ffa416d159d03c3370b9a462aee35']",
            "before_first_fix_commit":"{'fff2c8326280c07733828f990548979bdc893859'}",
            "last_fix_commit":"1970c2158b1ffa416d159d03c3370b9a462aee35",
            "chain_ord_pos":2.0,
            "commit_datetime":"09\/18\/2020, 20:16:53",
            "message":"[tflite] Make `GetOptionalInputTensor` the same as `GetInput`.\n\nWith the previous change, there is no more need for two separate APIs. We would deprecate `GetOptionalInputTensor` in the future.\n\nPiperOrigin-RevId: 332513386\nChange-Id: Id7110271c25ebd6126ad8c82a493e37e0e0756b3",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 6, 'total': 7}",
            "files":"{'tensorflow\/lite\/kernels\/kernel_util.cc': {'additions': 1, 'deletions': 6, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/00302787b788c5ff04cb6f62aed5a74d936e86c0\/tensorflow%2Flite%2Fkernels%2Fkernel_util.cc', 'patch': '@@ -75,12 +75,7 @@ TfLiteTensor* GetOutput(TfLiteContext* context, const TfLiteNode* node,\\n \\n const TfLiteTensor* GetOptionalInputTensor(const TfLiteContext* context,\\n                                            const TfLiteNode* node, int index) {\\n-  const bool use_tensor = index < node->inputs->size &&\\n-                          node->inputs->data[index] != kTfLiteOptionalTensor;\\n-  if (use_tensor) {\\n-    return GetMutableInput(context, node, index);\\n-  }\\n-  return nullptr;\\n+  return GetInput(context, node, index);\\n }\\n \\n \/\/ Per-axis'}}",
            "message_norm":"[tflite] make `getoptionalinputtensor` the same as `getinput`.\n\nwith the previous change, there is no more need for two separate apis. we would deprecate `getoptionalinputtensor` in the future.\n\npiperorigin-revid: 332513386\nchange-id: id7110271c25ebd6126ad8c82a493e37e0e0756b3",
            "language":"en",
            "entities":"[('332513386', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/kernel_util.cc'])",
            "num_files":1.0
        },
        {
            "index":429,
            "vuln_id":"GHSA-4h66-vghf-xg5x",
            "cwe_id":"{'CWE-77'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/hoperyy\/get-npm-package-version\/commit\/49459d4a3ce68587d48ffa8dead86fc9ed58e965', 'https:\/\/github.com\/hoperyy\/get-npm-package-version\/commit\/40b1cf31a0607ea66f9e30a0c3af1383b52b2dec'}",
            "dataset":"osv",
            "summary":"get-npm-package-version Command Injection vulnerability The package get-npm-package-version before 1.0.7 is vulnerable to Command Injection via the `main` function in index.js.",
            "published_date":"2022-08-03",
            "chain_len":2,
            "project":"https:\/\/github.com\/hoperyy\/get-npm-package-version",
            "commit_href":"https:\/\/github.com\/hoperyy\/get-npm-package-version\/commit\/49459d4a3ce68587d48ffa8dead86fc9ed58e965",
            "commit_sha":"49459d4a3ce68587d48ffa8dead86fc9ed58e965",
            "patch":"MULTI",
            "chain_ord":"['40b1cf31a0607ea66f9e30a0c3af1383b52b2dec', '49459d4a3ce68587d48ffa8dead86fc9ed58e965']",
            "before_first_fix_commit":"{'52797864df09049ea28d65d14620774257a965b0'}",
            "last_fix_commit":"49459d4a3ce68587d48ffa8dead86fc9ed58e965",
            "chain_ord_pos":2.0,
            "commit_datetime":"01\/26\/2021, 03:55:57",
            "message":"feat: add test case for Command Injection Attack\n\nadd test case for  Command Injection Attack",
            "author":"DuLinRain",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 1, 'total': 10}",
            "files":"{'test\/index.test.js': {'additions': 9, 'deletions': 1, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/hoperyy\/get-npm-package-version\/raw\/49459d4a3ce68587d48ffa8dead86fc9ed58e965\/test%2Findex.test.js', 'patch': \"@@ -16,4 +16,12 @@ describe('test webpack and webpackxxx', () => {\\n         });\\n         expect(version).to.be.equal(null);\\n     }).timeout(10 * 1000);\\n-});\\n\\\\ No newline at end of file\\n+\\n+    \/\/ test defence attack\\n+    it('test defence Command Injection Attack', () => {\\n+        const version = getVersion('get-npm-package-version; echo hehe; npm view get-npm-package-version', {\\n+            timeout: 100\\n+        });\\n+        expect(version).to.be.equal(null);\\n+    }).timeout(10 * 1000);\\n+});\"}}",
            "message_norm":"feat: add test case for command injection attack\n\nadd test case for  command injection attack",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('command injection', 'SECWORD', ''), ('attack', 'FLAW', ''), ('add', 'ACTION', ''), ('command injection', 'SECWORD', ''), ('attack', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['test\/index.test.js'])",
            "num_files":1.0
        },
        {
            "index":1489,
            "vuln_id":"GHSA-c582-c96p-r5cq",
            "cwe_id":"{'CWE-400', 'CWE-770'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e'}",
            "dataset":"osv",
            "summary":"Memory exhaustion in Tensorflow ### Impact \nThe [implementation of `ThreadPoolHandle`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/data\/experimental\/threadpool_dataset_op.cc#L79-L135) can be used to trigger a denial of service attack by allocating too much memory:\n\n```python\nimport tensorflow as tf\ny = tf.raw_ops.ThreadPoolHandle(num_threads=0x60000000,display_name='tf')\n```\n\nThis is because the `num_threads` argument is only checked to not be negative, but there is no upper bound on its value.\n    \n### Patches\nWe have patched the issue in GitHub commit [e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team.",
            "published_date":"2022-02-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e",
            "commit_sha":"e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e",
            "patch":"SINGLE",
            "chain_ord":"['e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e']",
            "before_first_fix_commit":"{'dc94fe9983e3deca817b7a081fa43c4e3b1ddec8'}",
            "last_fix_commit":"e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/19\/2021, 00:10:34",
            "message":"[tf.data] Set limit on number of threads used in threadpool_dataset.\n\nPiperOrigin-RevId: 410922677\nChange-Id: Ib25814a99043ab10805b5d2d7088ae0e0b7b04fd",
            "author":"Andrew Audibert",
            "comments":null,
            "stats":"{'additions': 19, 'deletions': 7, 'total': 26}",
            "files":"{'tensorflow\/core\/kernels\/data\/experimental\/threadpool_dataset_op.cc': {'additions': 19, 'deletions': 7, 'changes': 26, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e\/tensorflow%2Fcore%2Fkernels%2Fdata%2Fexperimental%2Fthreadpool_dataset_op.cc', 'patch': '@@ -39,6 +39,22 @@ namespace experimental {\\n     PrivateThreadPoolDatasetOp::kDatasetType;\\n \/* static *\/ constexpr const char* const PrivateThreadPoolDatasetOp::kDatasetOp;\\n \\n+namespace {\\n+\/\/ To prevent integer overflow issues when allocating threadpool memory for an\\n+\/\/ unreasonable number of threads.\\n+constexpr int kThreadLimit = 65536;\\n+\\n+Status ValidateNumThreads(int32_t num_threads) {\\n+  if (num_threads < 0) {\\n+    return errors::InvalidArgument(\"`num_threads` must be >= 0\");\\n+  }\\n+  if (num_threads >= kThreadLimit) {\\n+    return errors::InvalidArgument(\"`num_threads` must be < \", kThreadLimit);\\n+  }\\n+  return Status::OK();\\n+}\\n+}  \/\/ namespace\\n+\\n class ThreadPoolResource : public ResourceBase {\\n  public:\\n   ThreadPoolResource(Env* env, const ThreadOptions& thread_options,\\n@@ -83,9 +99,7 @@ class ThreadPoolHandleOp : public OpKernel {\\n     OP_REQUIRES_OK(ctx, ctx->GetAttr(\"num_threads\", &num_threads_));\\n     OP_REQUIRES_OK(ctx, ctx->GetAttr(\"max_intra_op_parallelism\",\\n                                      &max_intra_op_parallelism_));\\n-    OP_REQUIRES(\\n-        ctx, num_threads_ > 0,\\n-        errors::InvalidArgument(\"`num_threads` must be greater than zero.\"));\\n+    OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads_));\\n   }\\n \\n   \/\/ The resource is deleted from the resource manager only when it is private\\n@@ -531,8 +545,7 @@ void PrivateThreadPoolDatasetOp::MakeDatasetFromOptions(OpKernelContext* ctx,\\n                                                         DatasetBase* input,\\n                                                         int32_t num_threads,\\n                                                         DatasetBase** output) {\\n-  OP_REQUIRES(ctx, num_threads >= 0,\\n-              errors::InvalidArgument(\"`num_threads` must be >= 0\"));\\n+  OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));\\n   *output = new Dataset(ctx,\\n                         DatasetContext(DatasetContext::Params(\\n                             {PrivateThreadPoolDatasetOp::kDatasetType,\\n@@ -546,8 +559,7 @@ void PrivateThreadPoolDatasetOp::MakeDataset(OpKernelContext* ctx,\\n   int64_t num_threads = 0;\\n   OP_REQUIRES_OK(\\n       ctx, ParseScalarArgument<int64_t>(ctx, \"num_threads\", &num_threads));\\n-  OP_REQUIRES(ctx, num_threads >= 0,\\n-              errors::InvalidArgument(\"`num_threads` must be >= 0\"));\\n+  OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));\\n   *output = new Dataset(ctx, input, num_threads);\\n }'}}",
            "message_norm":"[tf.data] set limit on number of threads used in threadpool_dataset.\n\npiperorigin-revid: 410922677\nchange-id: ib25814a99043ab10805b5d2d7088ae0e0b7b04fd",
            "language":"en",
            "entities":"[('410922677', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/data\/experimental\/threadpool_dataset_op.cc'])",
            "num_files":1.0
        },
        {
            "index":2823,
            "vuln_id":"GHSA-qw5h-7f53-xrp6",
            "cwe_id":"{'CWE-674'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e07e1c3d26492c06f078c7e5bf2d138043e199c1'}",
            "dataset":"osv",
            "summary":"Stack overflow in `ParseAttrValue` with nested tensors ### Impact\nThe implementation of [`ParseAttrValue`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/c22d88d6ff33031aa113e48aa3fc9aa74ed79595\/tensorflow\/core\/framework\/attr_value_util.cc#L397-L453) can be tricked into stack overflow due to recursion by giving in a specially crafted input.\n\n### Patches\nWe have patched the issue in GitHub commit [e07e1c3d26492c06f078c7e5bf2d138043e199c1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e07e1c3d26492c06f078c7e5bf2d138043e199c1).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e07e1c3d26492c06f078c7e5bf2d138043e199c1",
            "commit_sha":"e07e1c3d26492c06f078c7e5bf2d138043e199c1",
            "patch":"SINGLE",
            "chain_ord":"['e07e1c3d26492c06f078c7e5bf2d138043e199c1']",
            "before_first_fix_commit":"{'c22d88d6ff33031aa113e48aa3fc9aa74ed79595'}",
            "last_fix_commit":"e07e1c3d26492c06f078c7e5bf2d138043e199c1",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/23\/2021, 17:33:00",
            "message":"Prevent memory overflow in ParseAttrValue from nested tensors.\n\nPiperOrigin-RevId: 370108442\nChange-Id: I84d64a5e8895a6aeffbf4749841b4c54d51b5889",
            "author":"Laura Pak",
            "comments":null,
            "stats":"{'additions': 57, 'deletions': 1, 'total': 58}",
            "files":"{'tensorflow\/core\/framework\/attr_value_util.cc': {'additions': 57, 'deletions': 1, 'changes': 58, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e07e1c3d26492c06f078c7e5bf2d138043e199c1\/tensorflow%2Fcore%2Fframework%2Fattr_value_util.cc', 'patch': '@@ -38,6 +38,9 @@ namespace {\\n \/\/ Do not construct large tensors to compute their hash or compare for equality.\\n constexpr int kMaxAttrValueTensorByteSize = 32 * 1024 * 1024;  \/\/ 32mb\\n \\n+\/\/ Limit nesting of tensors to 100 deep to prevent memory overflow.\\n+constexpr int kMaxTensorNestDepth = 100;\\n+\\n \/\/ Return the size of the tensor represented by this TensorProto. If shape is\\n \/\/ not fully defined return -1.\\n int64 TensorByteSize(const TensorProto& t) {\\n@@ -224,6 +227,54 @@ string SummarizeFunc(const NameAttrList& func) {\\n   return strings::StrCat(func.name(), \"[\", absl::StrJoin(entries, \", \"), \"]\");\\n }\\n \\n+bool ParseAttrValueHelper_TensorNestsUnderLimit(int limit, string to_parse) {\\n+  int nests = 0;\\n+  int maxed_out = to_parse.length();\\n+  int open_curly = to_parse.find(\\'{\\');\\n+  int open_bracket = to_parse.find(\\'<\\');\\n+  int close_curly = to_parse.find(\\'}\\');\\n+  int close_bracket = to_parse.find(\\'>\\');\\n+  if (open_curly == -1) {\\n+    open_curly = maxed_out;\\n+  }\\n+  if (open_bracket == -1) {\\n+    open_bracket = maxed_out;\\n+  }\\n+  int min = std::min(open_curly, open_bracket);\\n+  do {\\n+    if (open_curly == maxed_out && open_bracket == maxed_out) {\\n+      return true;\\n+    }\\n+    if (min == open_curly) {\\n+      nests += 1;\\n+      open_curly = to_parse.find(\\'{\\', open_curly + 1);\\n+      if (open_curly == -1) {\\n+        open_curly = maxed_out;\\n+      }\\n+    } else if (min == open_bracket) {\\n+      nests += 1;\\n+      open_bracket = to_parse.find(\\'<\\', open_bracket + 1);\\n+      if (open_bracket == -1) {\\n+        open_bracket = maxed_out;\\n+      }\\n+    } else if (min == close_curly) {\\n+      nests -= 1;\\n+      close_curly = to_parse.find(\\'}\\', close_curly + 1);\\n+      if (close_curly == -1) {\\n+        close_curly = maxed_out;\\n+      }\\n+    } else if (min == close_bracket) {\\n+      nests -= 1;\\n+      close_bracket = to_parse.find(\\'>\\', close_bracket + 1);\\n+      if (close_bracket == -1) {\\n+        close_bracket = maxed_out;\\n+      }\\n+    }\\n+    min = std::min({open_curly, open_bracket, close_curly, close_bracket});\\n+  } while (nests < 100);\\n+  return false;\\n+}\\n+\\n }  \/\/ namespace\\n \\n string SummarizeAttrValue(const AttrValue& attr_value) {\\n@@ -448,7 +499,12 @@ bool ParseAttrValue(StringPiece type, StringPiece text, AttrValue* out) {\\n   } else {\\n     to_parse = strings::StrCat(field_name, \": \", text);\\n   }\\n-\\n+  if (field_name == \"tensor\") {\\n+    if (!ParseAttrValueHelper_TensorNestsUnderLimit(kMaxTensorNestDepth,\\n+                                                    to_parse)) {\\n+      return false;\\n+    }\\n+  }\\n   return ProtoParseFromString(to_parse, out);\\n }'}}",
            "message_norm":"prevent memory overflow in parseattrvalue from nested tensors.\n\npiperorigin-revid: 370108442\nchange-id: i84d64a5e8895a6aeffbf4749841b4c54d51b5889",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('370108442', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/framework\/attr_value_util.cc'])",
            "num_files":1.0
        },
        {
            "index":73,
            "vuln_id":"GHSA-29q4-gxjq-rx5c",
            "cwe_id":"{'CWE-59', 'CWE-690', 'CWE-917', 'CWE-74', 'CWE-62', 'CWE-77'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/SAP\/scimono\/commit\/413b5d75fa94e77876af0e47be76475a23745b80'}",
            "dataset":"osv",
            "summary":"Remote Code Execution in SCIMono ### Impact\nIt is possible for attacker to inject and execute java expression and compromising the availability and integrity of the system.\n\n### Patches\nThe issue was fixed on  [0.0.19 version](https:\/\/mvnrepository.com\/artifact\/com.sap.scimono\/scimono-server\/0.0.19)",
            "published_date":"2021-02-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/SAP\/scimono",
            "commit_href":"https:\/\/github.com\/SAP\/scimono\/commit\/413b5d75fa94e77876af0e47be76475a23745b80",
            "commit_sha":"413b5d75fa94e77876af0e47be76475a23745b80",
            "patch":"SINGLE",
            "chain_ord":"['413b5d75fa94e77876af0e47be76475a23745b80']",
            "before_first_fix_commit":"{'8a09b8cfbb4cb797efac745c7ec3924569513844'}",
            "last_fix_commit":"413b5d75fa94e77876af0e47be76475a23745b80",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/30\/2020, 14:35:19",
            "message":"Escape Java EL in validation message before interpolation (#117)",
            "author":"Aleydin Karaimin",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 1, 'total': 9}",
            "files":"{'scimono-server\/src\/main\/java\/com\/sap\/scimono\/entity\/schema\/validation\/ValidationUtil.java': {'additions': 8, 'deletions': 1, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/SAP\/scimono\/raw\/413b5d75fa94e77876af0e47be76475a23745b80\/scimono-server%2Fsrc%2Fmain%2Fjava%2Fcom%2Fsap%2Fscimono%2Fentity%2Fschema%2Fvalidation%2FValidationUtil.java', 'patch': '@@ -1,13 +1,20 @@\\n \\n package com.sap.scimono.entity.schema.validation;\\n \\n+import java.util.regex.Pattern;\\n+\\n import javax.validation.ConstraintValidatorContext;\\n \\n class ValidationUtil {\\n+  private static final Pattern EXPRESSION_LANGUAGE_CHARACTERS = Pattern.compile(\"([${}])\");\\n \\n   public static void interpolateErrorMessage(ConstraintValidatorContext context, String errorMessage) {\\n     context.disableDefaultConstraintViolation();\\n-    context.buildConstraintViolationWithTemplate(errorMessage).addConstraintViolation();\\n+    context.buildConstraintViolationWithTemplate(escapeExpressionLanguage(errorMessage)).addConstraintViolation();\\n+  }\\n+\\n+  private static String escapeExpressionLanguage(String text) {\\n+    return EXPRESSION_LANGUAGE_CHARACTERS.matcher(text).replaceAll( \"\\\\\\\\\\\\\\\\$1\" );\\n   }\\n \\n }'}}",
            "message_norm":"escape java el in validation message before interpolation (#117)",
            "language":"it",
            "entities":"[('escape', 'SECWORD', ''), ('#117', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['scimono-server\/src\/main\/java\/com\/sap\/scimono\/entity\/schema\/validation\/ValidationUtil.java'])",
            "num_files":1.0
        },
        {
            "index":617,
            "vuln_id":"GHSA-5f38-9jw2-6r6h",
            "cwe_id":"{'CWE-79', 'CWE-843'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/rooseveltframework\/teddy\/commit\/64c556717b4879bf8d4c30067cf6e70d899a3dc0'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in teddy Teddy is a readable and easy to learn templating language. This affects the package teddy before 0.5.9. A type confusion vulnerability can be used to bypass input sanitization when the model content is an array (instead of a string).",
            "published_date":"2021-10-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/rooseveltframework\/teddy",
            "commit_href":"https:\/\/github.com\/rooseveltframework\/teddy\/commit\/64c556717b4879bf8d4c30067cf6e70d899a3dc0",
            "commit_sha":"64c556717b4879bf8d4c30067cf6e70d899a3dc0",
            "patch":"SINGLE",
            "chain_ord":"['64c556717b4879bf8d4c30067cf6e70d899a3dc0']",
            "before_first_fix_commit":"{'90387d97c7a8f458a08dd3b72a4b0574000af5f8', 'fea0b218069ff00f86f2b24f2fd08be01cd6b8c1'}",
            "last_fix_commit":"64c556717b4879bf8d4c30067cf6e70d899a3dc0",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/07\/2021, 01:27:38",
            "message":"Merge pull request #518 from kethinov\/refactor-escape-entities\n\nrefactor escape entities for better type checking",
            "author":"Eric Newport",
            "comments":null,
            "stats":"{'additions': 15, 'deletions': 4, 'total': 19}",
            "files":"{'utils.js': {'additions': 15, 'deletions': 4, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rooseveltframework\/teddy\/raw\/64c556717b4879bf8d4c30067cf6e70d899a3dc0\/utils.js', 'patch': \"@@ -96,10 +96,21 @@ function escapeEntities (value) {\\n   let i\\n   let j\\n \\n-  if (value === undefined || typeof value === 'boolean' || typeof value === 'object') { \/\/ Cannot escape on these values\\n-    return value\\n-  } else if (typeof value === 'number') { \/\/ Value is a number, no reason to escape\\n-    return `${value}`\\n+  if (typeof value === 'object') { \/\/ Cannot escape on this value\\n+    if (!value) {\\n+      return false \/\/ it is falsey to return false\\n+    } else if (Array.isArray(value)) {\\n+      if (value.length === 0) {\\n+        return false \/\/ empty arrays are falsey\\n+      } else {\\n+        return '[Array]' \/\/ print that it is an array with content in it, but do not print the contents\\n+      }\\n+    }\\n+    return '[Object]' \/\/ just print that it is an object, do not print the contents\\n+  } else if (value === undefined) { \/\/ Cannot escape on this value\\n+    return false \/\/ undefined is falsey\\n+  } else if (typeof value === 'boolean' || typeof value === 'number') { \/\/ Cannot escape on these values\\n+    return value \/\/ if it's already a boolean or a number just return it\\n   } else {\\n     \/\/ Loop through value to find HTML entities\\n     for (i = 0; i < value.length; i++) {\"}}",
            "message_norm":"merge pull request #518 from kethinov\/refactor-escape-entities\n\nrefactor escape entities for better type checking",
            "language":"en",
            "entities":"[('#518', 'ISSUE', ''), ('escape', 'SECWORD', ''), ('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['utils.js'])",
            "num_files":1.0
        },
        {
            "index":1687,
            "vuln_id":"GHSA-f7r3-p866-q9qr",
            "cwe_id":"{'CWE-400'}",
            "score":3.7,
            "chain":"{'https:\/\/github.com\/Twipped\/ircdkit\/pull\/2\/commits\/595ed02cde517fad57854d2ac2855a09a626e665', 'https:\/\/github.com\/Twipped\/ircdkit\/commit\/f0cc6dc913ec17b499fa33a676bb72c624456f2c'}",
            "dataset":"osv",
            "summary":"ircdkit vulnerable to Denial of Service due to unhandled connection end event Versions of `ircdkit` 1.0.3 and prior are vulnerable to a remote denial of service.\n\n\n## Recommendation\n\nUpgrade to version 1.0.4.",
            "published_date":"2019-06-03",
            "chain_len":2,
            "project":"https:\/\/github.com\/Twipped\/ircdkit",
            "commit_href":"https:\/\/github.com\/Twipped\/ircdkit\/pull\/2\/commits\/595ed02cde517fad57854d2ac2855a09a626e665",
            "commit_sha":"595ed02cde517fad57854d2ac2855a09a626e665",
            "patch":"MULTI",
            "chain_ord":"['f0cc6dc913ec17b499fa33a676bb72c624456f2c', '595ed02cde517fad57854d2ac2855a09a626e665']",
            "before_first_fix_commit":"{'74aa751e75a90af34ef63377fcbd41285d155380'}",
            "last_fix_commit":"595ed02cde517fad57854d2ac2855a09a626e665",
            "chain_ord_pos":2.0,
            "commit_datetime":"05\/30\/2019, 03:10:50",
            "message":"Update index.js\n\ncorrected unhandled connection 'end' event, fixes issue #1",
            "author":"Trinity Fox",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lib\/index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Twipped\/ircdkit\/raw\/595ed02cde517fad57854d2ac2855a09a626e665\/lib%2Findex.js', 'patch': \"@@ -47,7 +47,7 @@ function create (options) {\\n \\n \\t\\tclient.on('end', function () {\\n \\t\\t\\tdebug('connection ended');\\n-\\t\\t\\tremoveClient(client);\\n+\\t\\t\\tclient.close();\\n \\t\\t\\tapp.emit('connection:end', client);\\n \\t\\t});\"}}",
            "message_norm":"update index.js\n\ncorrected unhandled connection 'end' event, fixes issue #1",
            "language":"en",
            "entities":"[('update', 'ACTION', ''), ('#1', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/index.js'])",
            "num_files":1.0
        },
        {
            "index":786,
            "vuln_id":"GHSA-68gr-cmcp-g3mj",
            "cwe_id":"{'CWE-22'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/RetireJS\/retire.js\/commit\/800c8140884eaa5753a49308f560c925fe97b9a5'}",
            "dataset":"osv",
            "summary":"Directory Traversal in lactate A crafted `GET` request can be leveraged to traverse the directory structure of a host using the lactate web server package, and request arbitrary files outside of the specified web root. This allows for a remote attacker to gain access to arbitrary files on the filesystem that the process has access to read.\n\nMitigating factors:\nOnly files that the user running `lactate` has permission to read will be accessible via this vulnerability.\n\n\n[Proof of concept](https:\/\/hackerone.com\/reports\/296645):\nPlease globally install the `lactate` package and `cd` to a directory you wish to serve assets from. Next, run `lactate -p 8081` to start serving files from this location.\n\nThe following cURL request can be used to demonstrate this vulnerability by requesting the target `\/etc\/passwd` file:\n\n```\ncurl \"http:\/\/127.0.0.1:8081\/%2e%2e\/%2e%2e\/%2e%2e\/%2e%2e\/%2e%2e\/etc\/passwd\"\n```\n```\nroot:x:0:0:root:\/root:\/bin\/bash\ndaemon:x:1:1:daemon:\/usr\/sbin:\/usr\/sbin\/nologin\nbin:x:2:2:bin:\/bin:\/usr\/sbin\/nologin\nsys:x:3:3:sys:\/dev:\/usr\/sbin\/nologin\n[...]\n```\n\n\n## Recommendation\n\nAs there is currently no fix for this issue selecting an alternative static web server would be the best choice.",
            "published_date":"2019-06-14",
            "chain_len":1,
            "project":"https:\/\/github.com\/RetireJS\/retire.js",
            "commit_href":"https:\/\/github.com\/RetireJS\/retire.js\/commit\/800c8140884eaa5753a49308f560c925fe97b9a5",
            "commit_sha":"800c8140884eaa5753a49308f560c925fe97b9a5",
            "patch":"SINGLE",
            "chain_ord":"['800c8140884eaa5753a49308f560c925fe97b9a5']",
            "before_first_fix_commit":"{'ed3512729af76583b28611a4a1b6a8797d7f074c'}",
            "last_fix_commit":"800c8140884eaa5753a49308f560c925fe97b9a5",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/05\/2018, 06:47:18",
            "message":"HackerOne Node.js Ecosystem Bug Bounty Program - January 2018 disclosures (#199)",
            "author":"Rafal Janicki",
            "comments":null,
            "stats":"{'additions': 104, 'deletions': 8, 'total': 112}",
            "files":"{'repository\/npmrepository.json': {'additions': 104, 'deletions': 8, 'changes': 112, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/RetireJS\/retire.js\/raw\/800c8140884eaa5753a49308f560c925fe97b9a5\/repository%2Fnpmrepository.json', 'patch': '@@ -4461,16 +4461,112 @@\\n         ]\\n       }\\n     ]\\n+  },\\n+  \"fastify\": {\\n+    \"vulnerabilities\": [\\n+      {\\n+        \"below\": \"0.38.0\",\\n+        \"severity\": \"critical\",\\n+        \"identifiers\": {\\n+          \"CVE\": [\\n+            \"CVE-2018-3711\"\\n+          ],\\n+          \"summary\": \"denial-of-service vulnerability with large JSON payloads\"\\n+        },\\n+        \"info\": [\\n+          \"https:\/\/hackerone.com\/reports\/303632\"\\n+        ]\\n+      }\\n+    ]\\n+  },\\n+  \"serve\": {\\n+    \"vulnerabilities\": [\\n+      {\\n+        \"below\": \"6.4.9\",\\n+        \"severity\": \"critical\",\\n+        \"identifiers\": {\\n+          \"CVE\": [\\n+            \"CVE-2018-3712\"\\n+          ],\\n+          \"summary\": \"Path Traversal\"\\n+        },\\n+        \"info\": [\\n+          \"https:\/\/hackerone.com\/reports\/307666\"\\n+        ]\\n+      }\\n+    ]\\n+  },\\n+  \"augustine\": {\\n+    \"vulnerabilities\": [\\n+      {\\n+        \"below\": \"0.2.4\",\\n+        \"severity\": \"critical\",\\n+        \"identifiers\": {\\n+          \"summary\": \"Path Traversal\"\\n+        },\\n+        \"info\": [\\n+          \"https:\/\/hackerone.com\/reports\/296282\"\\n+        ]\\n+      }\\n+    ]\\n+  },\\n+  \"lactate\": {\\n+    \"vulnerabilities\": [\\n+      {\\n+        \"below\": \"0.13.13\",\\n+        \"severity\": \"medium\",\\n+        \"identifiers\": {\\n+          \"summary\": \"Path Traversal\"\\n+        },\\n+        \"info\": [\\n+          \"https:\/\/hackerone.com\/reports\/296645\"\\n+        ]\\n+      }\\n+    ]\\n+  },\\n+  \"redis-commander\": {\\n+    \"vulnerabilities\": [\\n+      {\\n+        \"below\": \"0.4.6\",\\n+        \"severity\": \"low\",\\n+        \"identifiers\": {\\n+          \"summary\": \"Reflected XSS\"\\n+        },\\n+        \"info\": [\\n+          \"https:\/\/hackerone.com\/reports\/296377\"\\n+        ]\\n+      }\\n+    ]\\n+  },\\n+  \"featurebook\": {\\n+    \"vulnerabilities\": [\\n+      {\\n+        \"below\": \"0.0.33\",\\n+        \"severity\": \"medium\",\\n+        \"identifiers\": {\\n+          \"summary\": \"Path Traversal\"\\n+        },\\n+        \"info\": [\\n+          \"https:\/\/hackerone.com\/reports\/296305\"\\n+        ]\\n+      }\\n+    ]\\n+  },\\n+  \"serve-here\": {\\n+    \"vulnerabilities\": [\\n+      {\\n+        \"below\": \"3.2.2\",\\n+        \"severity\": \"medium\",\\n+        \"identifiers\": {\\n+          \"summary\": \"Path Traversal\"\\n+        },\\n+        \"info\": [\\n+          \"https:\/\/hackerone.com\/reports\/296254\"\\n+        ]\\n+      }\\n+    ]\\n   }\\n \\n \\n \\n-\\n-\\n-\\n-\\n-\\n-\\n-\\n-\\n }'}}",
            "message_norm":"hackerone node.js ecosystem bug bounty program - january 2018 disclosures (#199)",
            "language":"en",
            "entities":"[('bug', 'FLAW', ''), ('#199', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['repository\/npmrepository.json'])",
            "num_files":1.0
        },
        {
            "index":220,
            "vuln_id":"GHSA-389p-fchr-q2mg",
            "cwe_id":"{'CWE-22'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/ImpressCMS\/impresscms\/commit\/a66d7bb499faafab803e24833606028fa0ba4261'}",
            "dataset":"osv",
            "summary":"Path Traversal in ImpressCMS ImpressCMS before 1.4.2 allows unauthenticated remote code execution via .....\/\/\/ directory traversal in origName or imageName, leading to unsafe interaction with the CKEditor processImage.php script. The payload may be placed in PHP_SESSION_UPLOAD_PROGRESS when the PHP installation supports upload_progress.",
            "published_date":"2022-02-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/ImpressCMS\/impresscms",
            "commit_href":"https:\/\/github.com\/ImpressCMS\/impresscms\/commit\/a66d7bb499faafab803e24833606028fa0ba4261",
            "commit_sha":"a66d7bb499faafab803e24833606028fa0ba4261",
            "patch":"SINGLE",
            "chain_ord":"['a66d7bb499faafab803e24833606028fa0ba4261']",
            "before_first_fix_commit":"{'e174e84f000add55a731ffc435b8ed08b6a03d06'}",
            "last_fix_commit":"a66d7bb499faafab803e24833606028fa0ba4261",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/04\/2020, 23:48:24",
            "message":"Prevents using submitted filenames with ..\/ for controller (#812)\n\n* Prevents using submitted filenames with ..\/ for controller\r\n\r\n* Using preg replace for better parent paths replaces\r\n\r\nCo-authored-by: Raimondas Rimkevi\u010dius (aka MekDrop) <mekdrop@impresscms.org>",
            "author":"Raimondas Rimkevi\u010dius",
            "comments":null,
            "stats":"{'additions': 643, 'deletions': 642, 'total': 1285}",
            "files":"{'htdocs\/libraries\/icms\/ipf\/Controller.php': {'additions': 643, 'deletions': 642, 'changes': 1285, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ImpressCMS\/impresscms\/raw\/a66d7bb499faafab803e24833606028fa0ba4261\/htdocs%2Flibraries%2Ficms%2Fipf%2FController.php', 'patch': '@@ -1,642 +1,643 @@\\n-<?php\\r\\n-\\r\\n-\/**\\r\\n- * This class is responsible for providing operations to an object for managing the object\\'s manipulation\\r\\n- *\\r\\n- * @copyright\\tThe ImpressCMS Project http:\/\/www.impresscms.org\/\\r\\n- * @license\\t\\thttp:\/\/www.gnu.org\/licenses\/old-licenses\/gpl-2.0.html GNU General Public License (GPL)\\r\\n- * @category\\tICMS\\r\\n- * @package\\t\\tIpf\\r\\n- * @subpackage\\tController\\r\\n- * @since\\t\\t1.1\\r\\n- * @author\\t\\tOriginal idea by Jan Keller Pedersen <mithrandir@xoops.org> - IDG Danmark A\/S <www.idg.dk>\\r\\n- * @author\\t\\tmarcan <marcan@impresscms.org>\\r\\n- * @version\\t\\tSVN: $Id: Controller.php 11972 2012-08-26 17:49:13Z skenow $\\r\\n- * @todo\\t\\tUse language constants for messages\\r\\n- *\/\\r\\n-\\r\\n-defined(\\'ICMS_ROOT_PATH\\') or die(\"ImpressCMS root path not defined\");\\r\\n-\\r\\n-\/**\\r\\n- *\\r\\n- *\\r\\n- * @category\\tICMS\\r\\n- * @package\\t\\tIpf\\r\\n- * @subpackage\\tController\\r\\n- *\\r\\n- *\/\\r\\n-class icms_ipf_Controller {\\r\\n-\\r\\n-\\t\/** *\/\\r\\n-\\tpublic $handler;\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param $handler\\r\\n-\\t *\/\\r\\n-\\tpublic function __construct($handler) {\\r\\n-\\t\\t$this->handler=$handler;\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\r\\n-\\t *\/\\r\\n-\\tpublic function postDataToObject(&$icmsObj) {\\r\\n-\\t\\tforeach (array_keys($icmsObj->vars) as $key) {\\r\\n-\\t\\t\\t\/\/ do not post data if control is a label\\r\\n-\\t\\t\\t$control = $icmsObj->getControl($key);\\r\\n-\\t\\t\\tif (is_array($control) && isset($control[\\'name\\']) && $control[\\'name\\'] == \"label\") continue;\\r\\n-\\r\\n-\\t\\t\\tswitch ($icmsObj->vars[$key][\\'data_type\\']) {\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_IMAGE:\\r\\n-\\t\\t\\t\\t\\tif (isset($_POST[\\'url_\\' . $key]) && $_POST[\\'url_\\' . $key] !=\\'\\') {\\r\\n-\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, \\'e\\');\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, $_POST[\\'url_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\tif (is_file($oldFile) ) unlink($oldFile);\\r\\n-\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tif (isset($_POST[\\'delete_\\' . $key]) && $_POST[\\'delete_\\' . $key] == \\'1\\') {\\r\\n-\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, \\'e\\');\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, \\'\\');\\r\\n-\\t\\t\\t\\t\\t\\tif (is_file($oldFile) ) unlink($oldFile);\\r\\n-\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_URLLINK:\\r\\n-\\t\\t\\t\\t\\t$linkObj = $icmsObj->getUrlLinkObj($key);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'target\\', $_POST[\\'target_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'url\\', $_POST[\\'url_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\tif ($linkObj->getVar(\\'url\\') != \\'\\') {\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->storeUrlLinkObj($linkObj);\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\/\/@todo: catch errors\\r\\n-\\t\\t\\t\\t\\t$icmsObj->setVar($key, $linkObj->getVar(\\'urllinkid\\'));\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_FILE:\\r\\n-\\t\\t\\t\\t\\tif (!isset($_FILES[\\'upload_\\' . $key][\\'name\\']) || $_FILES[\\'upload_\\' . $key][\\'name\\'] == \\'\\') {\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj = $icmsObj->getFileObj($key);\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'url\\', $_POST[\\'url_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\tif (!($fileObj->getVar(\\'url\\') == \\'\\' && $fileObj->getVar(\\'url\\') == \\'\\' && $fileObj->getVar(\\'url\\') == \\'\\')) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$res = $icmsObj->storeFileObj($fileObj);\\r\\n-\\t\\t\\t\\t\\t\\t\\tif ($res) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, $fileObj->getVar(\\'fileid\\'));\\r\\n-\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\/\/error setted, but no error message (to be improved)\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($fileObj->getErrors());\\r\\n-\\t\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_STIME:\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_MTIME:\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_LTIME:\\r\\n-\\t\\t\\t\\t\\t\/\/ check if this field\\'s value is available in the POST array\\r\\n-\\t\\t\\t\\t\\tif (is_array($_POST[$key]) && isset($_POST[$key][\\'date\\'])) {\\r\\n-\\t\\t\\t\\t\\t\\t$value = strtotime($_POST[$key][\\'date\\']) + $_POST[$key][\\'time\\'];\\r\\n-\\t\\t\\t\\t\\t\/\/ in case the field is hidden, it\\'s not formated so we can simply take the value and store it\\r\\n-\\t\\t\\t\\t\\t} elseif (filter_var($_POST[$key], FILTER_VALIDATE_INT) == $_POST[$key]) {\\r\\n-\\t\\t\\t\\t\\t\\t$value = (int)$_POST[$key];\\r\\n-\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t$value = strtotime($_POST[$key]);\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t$icmsObj->setVar($key, $value);\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_URL:\\r\\n-\\t\\t\\t\\t\\tif (isset($_POST[$key])) {\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, filter_var($_POST[$key], FILTER_SANITIZE_URL));\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_ARRAY:\\r\\n-\\t\\t\\t\\t\\tif (is_array($_POST[$key])) {\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, serialize($_POST[$key]));\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tdefault:\\r\\n-\\t\\t\\t\\t\\t$icmsObj->setVar($key, $_POST[$key]);\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\tObject\\r\\n-\\t * @param\\tint\\t\\t$objectid\\r\\n-\\t * @param\\tstr\\t\\t$created_success_msg\\tMessage to display on successful creation\\r\\n-\\t * @param\\tstr\\t\\t$modified_success_msg\\tMessage to display on successful modification\\r\\n-\\t * @param\\tbool\\t$redirect_page\\t\\t\\tWhether to redirect afterwards, or not\\r\\n-\\t * @param\\tbool\\t$debug\\t\\t\\t\\t\\tWhether to display debug information, or not\\r\\n-\\t *\/\\r\\n-\\tpublic function &doStoreFromDefaultForm(&$icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false) {\\r\\n-\\t\\tglobal $impresscms;\\r\\n-\\t\\t$this->postDataToObject($icmsObj);\\r\\n-\\r\\n-\\t\\tif ($icmsObj->isNew()) {\\r\\n-\\t\\t\\t$redirect_msg = $created_success_msg;\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t$redirect_msg = $modified_success_msg;\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\t\/\/ Check if there were uploaded files\\r\\n-\\t\\t$uploaderResult = true;\\r\\n-\\t\\tif (isset($_POST[\\'icms_upload_image\\']) || isset($_POST[\\'icms_upload_file\\'])) {\\r\\n-\\t\\t\\t$uploaderObj = new icms_file_MediaUploadHandler($icmsObj->getImageDir(true), $this->handler->_allowedMimeTypes, $this->handler->_maxFileSize, $this->handler->_maxWidth, $this->handler->_maxHeight);\\r\\n-\\t\\t\\tforeach ( $_FILES as $name=>$file_array) {\\r\\n-\\t\\t\\t\\tif (isset ($file_array[\\'name\\']) && $file_array[\\'name\\'] != \"\" && in_array(str_replace(\\'upload_\\', \\'\\', $name), array_keys($icmsObj->vars))) {\\r\\n-\\t\\t\\t\\t\\tif ($uploaderObj->fetchMedia($name)) {\\r\\n-\\t\\t\\t\\t\\t\\t$uploaderObj->setTargetFileName(time() . \"_\" . $uploaderObj->getMediaName());\\r\\n-\\t\\t\\t\\t\\t\\tif ($uploaderObj->upload()) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && true;\\r\\n-\\t\\t\\t\\t\\t\\t\\t\/\/ Find the related field in the icms_ipf_Object\\r\\n-\\t\\t\\t\\t\\t\\t\\t$related_field = str_replace(\\'upload_\\', \\'\\', $name);\\r\\n-\\t\\t\\t\\t\\t\\t\\t$uploadedArray[] = $related_field;\\r\\n-\\t\\t\\t\\t\\t\\t\\t\/\/ if it\\'s a richfile\\r\\n-\\t\\t\\t\\t\\t\\t\\tif ($icmsObj->vars[$related_field][\\'data_type\\'] == XOBJ_DTYPE_FILE) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$object_fileurl = $icmsObj->getUploadDir();\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj = $icmsObj->getFileObj($related_field);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'url\\', $object_fileurl . $uploaderObj->getSavedFileName());\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $related_field]);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $related_field]);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $related_field]);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->storeFileObj($fileObj);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($related_field, $fileObj->getVar(\\'fileid\\'));\\r\\n-\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$old_file = $icmsObj->getUploadDir(true) . $icmsObj->getVar($related_field);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\tif (is_file($old_file) ) unlink($old_file);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($related_field, $uploaderObj->getSavedFileName());\\r\\n-\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($uploaderObj->getErrors(false));\\r\\n-\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($uploaderObj->getErrors(false));\\r\\n-\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\tif ($uploaderResult) {\\r\\n-\\t\\t\\tif ($debug) {\\r\\n-\\t\\t\\t\\t$storeResult = $this->handler->insertD($icmsObj);\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t$storeResult = $this->handler->insert($icmsObj);\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t$storeResult = false;\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\tif ($storeResult) {\\r\\n-\\t\\t\\tif ($this->handler->getPermissions()) {\\r\\n-\\t\\t\\t\\t$icmspermissions_handler = new icms_ipf_permission_Handler($this->handler);\\r\\n-\\t\\t\\t\\t$icmspermissions_handler->storeAllPermissionsForId($icmsObj->id());\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\tif ($redirect_page === null) {\\r\\n-\\t\\t\\treturn $icmsObj;\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\tif (!$storeResult) {\\r\\n-\\t\\t\\t\\tredirect_header($impresscms->urls[\\'previouspage\\'], 3, _CO_ICMS_SAVE_ERROR . $icmsObj->getHtmlErrors());\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t$redirect_page = $redirect_page ? $redirect_page : icms_get_page_before_form();\\r\\n-\\t\\t\\t\\tredirect_header($redirect_page, 2, $redirect_msg);\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * Store the object in the database autmatically from a form sending POST data\\r\\n-\\t *\\r\\n-\\t * @param string $created_success_msg message to display if new object was created\\r\\n-\\t * @param string $modified_success_msg message to display if object was successfully edited\\r\\n-\\t * @param string $created_redir_page redirect page after creating the object\\r\\n-\\t * @param string $modified_redir_page redirect page after editing the object\\r\\n-\\t * @param string $redirect_page redirect page, if not set, then we backup once\\r\\n-\\t * @param bool $exit if set to TRUE then the script ends\\r\\n-\\t * @return bool\\r\\n-\\t *\/\\r\\n-\\tpublic function &storeFromDefaultForm($created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false, $x_param = false) {\\r\\n-\\t\\t$objectid = ( isset($_POST[$this->handler->keyName]) )\\r\\n-\\t\\t\\t\\t? (int) $_POST[$this->handler->keyName]\\r\\n-\\t\\t\\t\\t: 0;\\r\\n-\\t\\tif ($debug) {\\r\\n-\\t\\t\\tif ($x_param) {\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->getD($objectid, true,  $x_param);\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->getD($objectid);\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\tif ($x_param) {\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid, true, false, false, $x_param);\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid);\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\t\/**\\r\\n-\\t\\t * @todo multilanguage persistable handler is not fully implemented yet\\r\\n-\\t\\t *\/\\r\\n-\\r\\n-\\t\\t\/\/ if handler is the Multilanguage handler, we will need to treat this for multilanguage\\r\\n-\\t\\tif (is_subclass_of($this->handler, \\'icmspersistablemlobjecthandler\\')) {\\r\\n-\\r\\n-\\t\\t\\tif ($icmsObj->isNew()) {\\r\\n-\\t\\t\\t\\t\/\/ This is a new object. We need to store the meta data and then the language data\\r\\n-\\t\\t\\t\\t\/\/ First, we will get rid of the multilanguage data to only store the meta data\\r\\n-\\t\\t\\t\\t$icmsObj->stripMultilanguageFields();\\r\\n-\\t\\t\\t\\t$newObject =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\r\\n-\\t\\t\\t\\t\/**\\r\\n-\\t\\t\\t\\t * @todo we need to trap potential errors here\\r\\n-\\t\\t\\t\\t *\/\\r\\n-\\r\\n-\\t\\t\\t\\t\/\/ ok, the meta daa is stored. Let\\'s recreate the object and then\\r\\n-\\t\\t\\t\\t\/\/ get rid of anything not multilanguage\\r\\n-\\t\\t\\t\\tunset($icmsObj);\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid);\\r\\n-\\t\\t\\t\\t$icmsObj->stripNonMultilanguageFields();\\r\\n-\\r\\n-\\t\\t\\t\\t$icmsObj->setVar($this->handler->keyName, $newObject->getVar($this->handler->keyName));\\r\\n-\\t\\t\\t\\t$this->handler->changeTableNameForML();\\r\\n-\\t\\t\\t\\t$ret =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\r\\n-\\r\\n-\\t\\t\\t\\treturn $ret;\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\treturn $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\r\\n-\\t\\t}\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * Stores an object and shows debug information\\r\\n-\\t *\/\\r\\n-\\tpublic function &storeicms_ipf_ObjectD() {\\r\\n-\\t\\treturn $this->storeicms_ipf_Object(true);\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tbool\\t$debug\\r\\n-\\t * @param\\tbool\\t$xparam\\r\\n-\\t * @see\\t\\tstoreFromDefaultForm\\r\\n-\\t *\/\\r\\n-\\tpublic function &storeicms_ipf_Object($debug=false, $xparam = false) {\\r\\n-\\t\\t$ret =& $this->storeFromDefaultForm(\\'\\', \\'\\', null, $debug, $xparam);\\r\\n-\\r\\n-\\t\\treturn $ret;\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * Handles deletion of an object which keyid is passed as a GET param\\r\\n-\\t *\\r\\n-\\t * @param string $redir_page redirect page after deleting the object\\r\\n-\\t * @return bool\\r\\n-\\t *\/\\r\\n-\\tpublic function handleObjectDeletion($confirm_msg = false, $op=\\'del\\', $userSide=false) {\\r\\n-\\t\\tglobal $impresscms;\\r\\n-\\r\\n-\\t\\t$objectid = (isset($_REQUEST[$this->handler->keyName])) ? (int) $_REQUEST[$this->handler->keyName] : 0;\\r\\n-\\t\\t$icmsObj = $this->handler->get($objectid);\\r\\n-\\r\\n-\\t\\tif ($icmsObj->isNew()) {\\r\\n-\\t\\t\\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\\r\\n-\\t\\t\\texit();\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\t$confirm = ( isset($_POST[\\'confirm\\']) ) ? $_POST[\\'confirm\\'] : 0;\\r\\n-\\t\\tif ($confirm) {\\r\\n-\\t\\t\\tif (!$this->handler->delete($icmsObj)) {\\r\\n-\\t\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\\r\\n-\\t\\t\\t\\texit;\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_SUCCESS);\\r\\n-\\t\\t\\texit();\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t\/\/ no confirm: show deletion condition\\r\\n-\\r\\n-\\t\\t\\ticms_cp_header();\\r\\n-\\r\\n-\\t\\t\\tif (!$confirm_msg) {\\r\\n-\\t\\t\\t\\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\t$hiddens = array(\\r\\n-\\t\\t\\t\\t\\t\\t\\'op\\' => $op,\\r\\n-\\t\\t\\t\\t\\t\\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\\r\\n-\\t\\t\\t\\t\\t\\t\\'confirm\\' => 1,\\r\\n-\\t\\t\\t\\t\\t\\t\\'redirect_page\\' => $impresscms->urls[\\'previouspage\\']\\r\\n-\\t\\t\\t);\\r\\n-\\t\\t\\tif ($this->handler->_moduleName == \\'system\\') {\\r\\n-\\t\\t\\t\\t$hiddens[\\'fct\\'] = isset($_GET[\\'fct\\']) ? $_GET[\\'fct\\'] : false;\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t\\ticms_core_Message::confirm($hiddens, xoops_getenv(\\'SCRIPT_NAME\\'), sprintf($confirm_msg , $icmsObj->getVar($this->handler->identifierName)), _CO_ICMS_DELETE);\\r\\n-\\r\\n-\\t\\t\\ticms_cp_footer();\\r\\n-\\r\\n-\\t\\t}\\r\\n-\\t\\texit();\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tbool\\t$confirm_msg\\r\\n-\\t * @param\\tstring\\t$op\\r\\n-\\t *\/\\r\\n-\\tpublic function handleObjectDeletionFromUserSide($confirm_msg = false, $op=\\'del\\') {\\r\\n-\\t\\tglobal $icmsTpl, $impresscms;\\r\\n-\\r\\n-\\t\\t$objectid = ( isset($_REQUEST[$this->handler->keyName]) ) ? (int) ($_REQUEST[$this->handler->keyName]) : 0;\\r\\n-\\t\\t$icmsObj = $this->handler->get($objectid);\\r\\n-\\r\\n-\\t\\tif ($icmsObj->isNew()) {\\r\\n-\\t\\t\\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\\r\\n-\\t\\t\\texit();\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\t$confirm = ( isset($_POST[\\'confirm\\']) ) ? $_POST[\\'confirm\\'] : 0;\\r\\n-\\t\\tif ($confirm) {\\r\\n-\\t\\t\\tif (!$this->handler->delete($icmsObj)) {\\r\\n-\\t\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\\r\\n-\\t\\t\\t\\texit;\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_SUCCESS);\\r\\n-\\t\\t\\texit();\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t\/\/ no confirm: show deletion condition\\r\\n-\\t\\t\\tif (!$confirm_msg) {\\r\\n-\\t\\t\\t\\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\tob_start();\\r\\n-\\t\\t\\ticms_core_Message::confirm(array(\\r\\n-\\t\\t\\t\\t\\'op\\' => $op,\\r\\n-\\t\\t\\t\\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\\r\\n-\\t\\t\\t\\t\\'confirm\\' => 1,\\r\\n-\\t\\t\\t\\t\\'redirect_page\\' => $impresscms->urls[\\'previouspage\\']),\\r\\n-\\t\\t\\t\\txoops_getenv(\\'SCRIPT_NAME\\'),\\r\\n-\\t\\t\\t\\tsprintf($confirm_msg ,\\r\\n-\\t\\t\\t\\t$icmsObj->getVar($this->handler->identifierName)),\\r\\n-\\t\\t\\t\\t_CO_ICMS_DELETE\\r\\n-\\t\\t\\t);\\r\\n-\\t\\t\\t$icmspersistable_delete_confirm = ob_get_clean();\\r\\n-\\t\\t\\t$icmsTpl->assign(\\'icmspersistable_delete_confirm\\', $icmspersistable_delete_confirm);\\r\\n-\\t\\t}\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * Retrieve the object admin side link for a {@link icms_ipf_view_Single} page\\r\\n-\\t *\\r\\n-\\t * @param\\tobject\\t$icmsObj\\treference to the object from which we want the user side link\\r\\n-\\t * @param\\tbool\\t$onlyUrl\\twhether or not to return a simple URL or a full <a> link\\r\\n-\\t * @param\\tbool\\t$withimage\\treturn a linked image instead of linked text\\r\\n-\\t * @return\\tstring\\tadmin side link to the object\\r\\n-\\t *\/\\r\\n-\\tpublic function getAdminViewItemLink($icmsObj, $onlyUrl=false, $withimage=false) {\\r\\n-\\t\\t$ret = $this->handler->_moduleUrl . \"admin\/\"\\r\\n-\\t\\t\\t. $this->handler->_page . \"?op=view&amp;\"\\r\\n-\\t\\t\\t. $this->handler->keyName . \"=\"\\r\\n-\\t\\t\\t. $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL\\r\\n-\\t\\t\\t\\t\\t. \"\/actions\/viewmag.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t\\t. _CO_ICMS_ADMIN_VIEW . \"\\'  title=\\'\"\\r\\n-\\t\\t\\t\\t\\t. _CO_ICMS_ADMIN_VIEW . \"\\'\/><\/a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * Retrieve the object user side link\\r\\n-\\t *\\r\\n-\\t * @param object $icmsObj reference to the object from which we want the user side link\\r\\n-\\t * @param bool $onlyUrl wether or not to return a simple URL or a full <a> link\\r\\n-\\t * @return string user side link to the object\\r\\n-\\t *\/\\r\\n-\\tpublic function getItemLink(&$icmsObj, $onlyUrl=false) {\\r\\n-\\t\\t\/**\\r\\n-\\t\\t * @todo URL Rewrite feature is not finished yet...\\r\\n-\\t\\t *\/\\r\\n-\\t\\t\/\/$seoMode = smart_getModuleModeSEO($this->handler->_moduleName);\\r\\n-\\t\\t\/\/$seoModuleName = smart_getModuleNameForSEO($this->handler->_moduleName);\\r\\n-\\t\\t$seoMode = false;\\r\\n-\\t\\t$seoModuleName = $this->handler->_moduleName;\\r\\n-\\r\\n-\\t\\t\/**\\r\\n-\\t\\t * $seoIncludeId feature is not finished yet, so let\\'s put it always to true\\r\\n-\\t\\t *\/\\r\\n-\\t\\t\/\/$seoIncludeId = smart_getModuleIncludeIdSEO($this->handler->_moduleName);\\r\\n-\\t\\t$seoIncludeId = true;\\r\\n-\\r\\n-\\t\\t\/*if ($seoMode == \\'rewrite\\') {\\r\\n-\\t\\t\\t$ret = ICMS_URL . \\'\/\\' . $seoModuleName . \\'.\\' . $this->handler->_itemname . ($seoIncludeId ? \\'.\\'\\t. $icmsObj->getVar($this->handler->keyName) : \\'\\'). \\'\/\\' . $icmsObj->getVar(\\'short_url\\') . \\'.html\\';\\r\\n-\\t\\t\\t} else if ($seoMode == \\'pathinfo\\') {\\r\\n-\\t\\t\\t$ret = SMARTOBJECT_URL . \\'seo.php\/\\' . $seoModuleName . \\'.\\' . $this->handler->_itemname . ($seoIncludeId ? \\'.\\'\\t. $icmsObj->getVar($this->handler->keyName) : \\'\\'). \\'\/\\' . $icmsObj->getVar(\\'short_url\\') . \\'.html\\';\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t*\/\\t$ret = $this->handler->_moduleUrl . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t\/\/}\\r\\n-\\r\\n-\\t\\tif (!$onlyUrl) {\\r\\n-\\t\\t\\t$ret = \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\r\\n-\\t\\t}\\r\\n-\\t\\treturn $ret;\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * This method returns a view link of the Object\\r\\n-\\t *\\r\\n-\\t * @param icms_ipf_Object $icmsObj\\r\\n-\\t * @param boolean $onlyUrl\\r\\n-\\t * @param boolean $withimage\\r\\n-\\t * @param boolean $userSide\\r\\n-\\t * @return string\\r\\n-\\t *\/\\r\\n-\\tpublic function getViewItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\r\\n-\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\r\\n-\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t$admin_side = \\'\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . \\'admin.php?fct=\\'\\r\\n-\\t\\t\\t\\t. $this->handler->_itemname . \"&amp;op=view&amp;\"\\r\\n-\\t\\t\\t\\t. $this->handler->keyName . \"=\"\\r\\n-\\t\\t\\t\\t. $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t}\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/viewmag.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t. _PREVIEW . \"\\'  title=\\'\" . _PREVIEW . \"\\'\/><\/a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobject\\t$icmsObj\\r\\n-\\t * @param\\tbool\\t$onlyUrl\\r\\n-\\t * @param\\tbool\\t$withimage\\r\\n-\\t *\/\\r\\n-\\tpublic function getEditLanguageLink($icmsObj, $onlyUrl=false, $withimage=true) {\\r\\n-\\t\\t$ret = $this->handler->_moduleUrl . \"admin\/\"\\r\\n-\\t\\t\\t. $this->handler->_page\\r\\n-\\t\\t\\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName)\\r\\n-\\t\\t\\t. \"&amp;language=\" . $icmsObj->getVar(\\'language\\');\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/wizard.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t. _CO_ICMS_LANGUAGE_MODIFY . \"\\'  title=\\'\" . _CO_ICMS_LANGUAGE_MODIFY . \"\\'\/><\/a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\r\\n-\\t * @param\\tbool\\t$onlyUrl\\r\\n-\\t * @param\\tbool\\t$withimage\\r\\n-\\t * @param\\tbool\\t$userSide\\r\\n-\\t *\/\\r\\n-\\tpublic function getEditItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\r\\n-\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\r\\n-\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\\r\\n-\\t\\t\\t\\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t\/**\\r\\n-\\t\\t\\t * @todo: to be implemented...\\r\\n-\\t\\t\\t *\/\\r\\n-\\t\\t\\t\/\/$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\r\\n-\\t\\t\\t$admin_side = \\'\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side\\r\\n-\\t\\t\\t\\t. \\'admin.php?fct=\\' . $this->handler->_itemname\\r\\n-\\t\\t\\t\\t. \"&amp;op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t}\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/edit.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t. _CO_ICMS_MODIFY . \"\\'  title=\\'\" . _CO_ICMS_MODIFY . \"\\'\/><\/a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\r\\n-\\t * @param\\tbool\\t$onlyUrl\\r\\n-\\t * @param\\tbool\\t$withimage\\r\\n-\\t * @param\\tbool\\t$userSide\\r\\n-\\t *\/\\r\\n-\\tpublic function getDeleteItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\r\\n-\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\r\\n-\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\\r\\n-\\t\\t\\t\\t. \"?op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t\/**\\r\\n-\\t\\t\\t * @todo: to be implemented...\\r\\n-\\t\\t\\t *\/\\r\\n-\\t\\t\\t\/\/$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\r\\n-\\t\\t\\t$admin_side = \\'\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side\\r\\n-\\t\\t\\t\\t. \\'admin.php?fct=\\' . $this->handler->_itemname\\r\\n-\\t\\t\\t\\t. \"&amp;op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t}\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/editdelete.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t. _CO_ICMS_DELETE . \"\\'  title=\\'\" . _CO_ICMS_DELETE . \"\\'\/><\/a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\r\\n-\\t * @todo\\tNeeds to be completed\\r\\n-\\t *\/\\r\\n-\\tpublic function getPrintAndMailLink($icmsObj) {\\r\\n-\\t\\tglobal $icmsConfig, $impresscms;\\r\\n-\\r\\n-\\t\\t$ret = \\'\\';\\r\\n-\\t\\t\/*\\t\\t$printlink = $this->handler->_moduleUrl . \"print.php?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t $js = \"javascript:openWithSelfMain(\\'\" . $printlink . \"\\', \\'smartpopup\\', 700, 519);\";\\r\\n-\\t\\t $printlink = \\'<a href=\"\\' . $js . \\'\"><img  src=\"\\' . ICMS_IMAGES_SET_URL . \\'\/actions\/fileprint.png\" alt=\"\" style=\"vertical-align: middle;\"\/><\/a>\\';\\r\\n-\\r\\n-\\t\\t $icmsModule = icms_getModuleInfo($icmsObj->handler->_moduleName);\\r\\n-\\t\\t $link = $impresscms->urls[\\'full\\']();\\r\\n-\\t\\t $mid = $icmsModule->getVar(\\'mid\\');\\r\\n-\\t\\t $friendlink = \"<a href=\\\\\"javascript:openWithSelfMain(\\'\".SMARTOBJECT_URL.\"sendlink.php?link=\" . $link . \"&amp;mid=\" . $mid . \"\\', \\',\\',\\',\\',\\',\\',\\'sendmessage\\', 674, 500);\\\\\"><img src=\\\\\"\".SMARTOBJECT_IMAGES_ACTIONS_URL . \"mail_send.png\\\\\"  alt=\\\\\"\" . _CO_ICMS_EMAIL . \"\\\\\" title=\\\\\"\" . _CO_ICMS_EMAIL . \"\\\\\" style=\\\\\"vertical-align: middle;\\\\\"\/><\/a>\";\\r\\n-\\r\\n-\\t\\t $ret = \\'<span id=\"smartobject_print_button\">\\' . $printlink . \"&nbsp;<\/span>\" . \\'<span id=\"smartobject_mail_button\">\\' . $friendlink . \\'<\/span>\\';\\r\\n-\\t\\t *\/\\r\\n-\\t\\treturn $ret;\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * Creates a string from the object\\'s module name and item name\\r\\n-\\t *\/\\r\\n-\\tpublic function getModuleItemString() {\\r\\n-\\t\\t$ret = $this->handler->_moduleName . \\'_\\' . $this->handler->_itemname;\\r\\n-\\t\\treturn $ret;\\r\\n-\\t}\\r\\n-}\\r\\n-\\r\\n+<?php\\n+\\n+\/**\\n+ * This class is responsible for providing operations to an object for managing the object\\'s manipulation\\n+ *\\n+ * @copyright\\tThe ImpressCMS Project http:\/\/www.impresscms.org\/\\n+ * @license\\t\\thttp:\/\/www.gnu.org\/licenses\/old-licenses\/gpl-2.0.html GNU General Public License (GPL)\\n+ * @category\\tICMS\\n+ * @package\\t\\tIpf\\n+ * @subpackage\\tController\\n+ * @since\\t\\t1.1\\n+ * @author\\t\\tOriginal idea by Jan Keller Pedersen <mithrandir@xoops.org> - IDG Danmark A\/S <www.idg.dk>\\n+ * @author\\t\\tmarcan <marcan@impresscms.org>\\n+ * @version\\t\\tSVN: $Id: Controller.php 11972 2012-08-26 17:49:13Z skenow $\\n+ * @todo\\t\\tUse language constants for messages\\n+ *\/\\n+\\n+defined(\\'ICMS_ROOT_PATH\\') or die(\"ImpressCMS root path not defined\");\\n+\\n+\/**\\n+ *\\n+ *\\n+ * @category\\tICMS\\n+ * @package\\t\\tIpf\\n+ * @subpackage\\tController\\n+ *\\n+ *\/\\n+class icms_ipf_Controller {\\n+\\n+\\t\/** *\/\\n+\\tpublic $handler;\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param $handler\\n+\\t *\/\\n+\\tpublic function __construct($handler) {\\n+\\t\\t$this->handler=$handler;\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\n+\\t *\/\\n+\\tpublic function postDataToObject(&$icmsObj) {\\n+\\t\\tforeach (array_keys($icmsObj->vars) as $key) {\\n+\\t\\t\\t\/\/ do not post data if control is a label\\n+\\t\\t\\t$control = $icmsObj->getControl($key);\\n+\\t\\t\\tif (is_array($control) && isset($control[\\'name\\']) && $control[\\'name\\'] == \"label\") continue;\\n+\\n+\\t\\t\\tswitch ($icmsObj->vars[$key][\\'data_type\\']) {\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_IMAGE:\\n+\\t\\t\\t\\t\\tif (isset($_POST[\\'url_\\' . $key]) && $_POST[\\'url_\\' . $key] !=\\'\\') {\\n+\\t\\t\\t\\t\\t\\t$_POST[\\'url_\\' . $key] = preg_replace(\\'|[\\\\.]+\\\\\/|\\', \\'.\/\\', $_POST[\\'url_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, \\'e\\');\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, $_POST[\\'url_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\tif (is_file($oldFile) ) unlink($oldFile);\\n+\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tif (isset($_POST[\\'delete_\\' . $key]) && $_POST[\\'delete_\\' . $key] == \\'1\\') {\\n+\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, \\'e\\');\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, \\'\\');\\n+\\t\\t\\t\\t\\t\\tif (is_file($oldFile) ) unlink($oldFile);\\n+\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_URLLINK:\\n+\\t\\t\\t\\t\\t$linkObj = $icmsObj->getUrlLinkObj($key);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $key]);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $key]);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $key]);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'target\\', $_POST[\\'target_\\' . $key]);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'url\\', $_POST[\\'url_\\' . $key]);\\n+\\t\\t\\t\\t\\tif ($linkObj->getVar(\\'url\\') != \\'\\') {\\n+\\t\\t\\t\\t\\t\\t$icmsObj->storeUrlLinkObj($linkObj);\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\/\/@todo: catch errors\\n+\\t\\t\\t\\t\\t$icmsObj->setVar($key, $linkObj->getVar(\\'urllinkid\\'));\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_FILE:\\n+\\t\\t\\t\\t\\tif (!isset($_FILES[\\'upload_\\' . $key][\\'name\\']) || $_FILES[\\'upload_\\' . $key][\\'name\\'] == \\'\\') {\\n+\\t\\t\\t\\t\\t\\t$fileObj = $icmsObj->getFileObj($key);\\n+\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'url\\', preg_replace(\\'|[\\\\.]+\\\\\/|\\', \\'.\/\\', $_POST[\\'url_\\' . $key]));\\n+\\t\\t\\t\\t\\t\\tif (!($fileObj->getVar(\\'url\\') == \\'\\' && $fileObj->getVar(\\'url\\') == \\'\\' && $fileObj->getVar(\\'url\\') == \\'\\')) {\\n+\\t\\t\\t\\t\\t\\t\\t$res = $icmsObj->storeFileObj($fileObj);\\n+\\t\\t\\t\\t\\t\\t\\tif ($res) {\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, $fileObj->getVar(\\'fileid\\'));\\n+\\t\\t\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t\\t\\t\/\/error setted, but no error message (to be improved)\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($fileObj->getErrors());\\n+\\t\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_STIME:\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_MTIME:\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_LTIME:\\n+\\t\\t\\t\\t\\t\/\/ check if this field\\'s value is available in the POST array\\n+\\t\\t\\t\\t\\tif (is_array($_POST[$key]) && isset($_POST[$key][\\'date\\'])) {\\n+\\t\\t\\t\\t\\t\\t$value = strtotime($_POST[$key][\\'date\\']) + $_POST[$key][\\'time\\'];\\n+\\t\\t\\t\\t\\t\/\/ in case the field is hidden, it\\'s not formated so we can simply take the value and store it\\n+\\t\\t\\t\\t\\t} elseif (filter_var($_POST[$key], FILTER_VALIDATE_INT) == $_POST[$key]) {\\n+\\t\\t\\t\\t\\t\\t$value = (int)$_POST[$key];\\n+\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t$value = strtotime($_POST[$key]);\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t$icmsObj->setVar($key, $value);\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_URL:\\n+\\t\\t\\t\\t\\tif (isset($_POST[$key])) {\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, filter_var($_POST[$key], FILTER_SANITIZE_URL));\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_ARRAY:\\n+\\t\\t\\t\\t\\tif (is_array($_POST[$key])) {\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, serialize($_POST[$key]));\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tdefault:\\n+\\t\\t\\t\\t\\t$icmsObj->setVar($key, $_POST[$key]);\\n+\\t\\t\\t\\t\\tbreak;\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\tObject\\n+\\t * @param\\tint\\t\\t$objectid\\n+\\t * @param\\tstr\\t\\t$created_success_msg\\tMessage to display on successful creation\\n+\\t * @param\\tstr\\t\\t$modified_success_msg\\tMessage to display on successful modification\\n+\\t * @param\\tbool\\t$redirect_page\\t\\t\\tWhether to redirect afterwards, or not\\n+\\t * @param\\tbool\\t$debug\\t\\t\\t\\t\\tWhether to display debug information, or not\\n+\\t *\/\\n+\\tpublic function &doStoreFromDefaultForm(&$icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false) {\\n+\\t\\tglobal $impresscms;\\n+\\t\\t$this->postDataToObject($icmsObj);\\n+\\n+\\t\\tif ($icmsObj->isNew()) {\\n+\\t\\t\\t$redirect_msg = $created_success_msg;\\n+\\t\\t} else {\\n+\\t\\t\\t$redirect_msg = $modified_success_msg;\\n+\\t\\t}\\n+\\n+\\t\\t\/\/ Check if there were uploaded files\\n+\\t\\t$uploaderResult = true;\\n+\\t\\tif (isset($_POST[\\'icms_upload_image\\']) || isset($_POST[\\'icms_upload_file\\'])) {\\n+\\t\\t\\t$uploaderObj = new icms_file_MediaUploadHandler($icmsObj->getImageDir(true), $this->handler->_allowedMimeTypes, $this->handler->_maxFileSize, $this->handler->_maxWidth, $this->handler->_maxHeight);\\n+\\t\\t\\tforeach ( $_FILES as $name=>$file_array) {\\n+\\t\\t\\t\\tif (isset ($file_array[\\'name\\']) && $file_array[\\'name\\'] != \"\" && in_array(str_replace(\\'upload_\\', \\'\\', $name), array_keys($icmsObj->vars))) {\\n+\\t\\t\\t\\t\\tif ($uploaderObj->fetchMedia($name)) {\\n+\\t\\t\\t\\t\\t\\t$uploaderObj->setTargetFileName(time() . \"_\" . $uploaderObj->getMediaName());\\n+\\t\\t\\t\\t\\t\\tif ($uploaderObj->upload()) {\\n+\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && true;\\n+\\t\\t\\t\\t\\t\\t\\t\/\/ Find the related field in the icms_ipf_Object\\n+\\t\\t\\t\\t\\t\\t\\t$related_field = str_replace(\\'upload_\\', \\'\\', $name);\\n+\\t\\t\\t\\t\\t\\t\\t$uploadedArray[] = $related_field;\\n+\\t\\t\\t\\t\\t\\t\\t\/\/ if it\\'s a richfile\\n+\\t\\t\\t\\t\\t\\t\\tif ($icmsObj->vars[$related_field][\\'data_type\\'] == XOBJ_DTYPE_FILE) {\\n+\\t\\t\\t\\t\\t\\t\\t\\t$object_fileurl = $icmsObj->getUploadDir();\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj = $icmsObj->getFileObj($related_field);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'url\\', $object_fileurl . $uploaderObj->getSavedFileName());\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $related_field]);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $related_field]);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $related_field]);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->storeFileObj($fileObj);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($related_field, $fileObj->getVar(\\'fileid\\'));\\n+\\t\\t\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\n+\\t\\t\\t\\t\\t\\t\\t\\t}\\n+\\n+\\t\\t\\t\\t\\t\\t\\t\\t$old_file = $icmsObj->getUploadDir(true) . $icmsObj->getVar($related_field);\\n+\\t\\t\\t\\t\\t\\t\\t\\tif (is_file($old_file) ) unlink($old_file);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($related_field, $uploaderObj->getSavedFileName());\\n+\\n+\\t\\t\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\n+\\t\\t\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($uploaderObj->getErrors(false));\\n+\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($uploaderObj->getErrors(false));\\n+\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t}\\n+\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\n+\\t\\tif ($uploaderResult) {\\n+\\t\\t\\tif ($debug) {\\n+\\t\\t\\t\\t$storeResult = $this->handler->insertD($icmsObj);\\n+\\t\\t\\t} else {\\n+\\t\\t\\t\\t$storeResult = $this->handler->insert($icmsObj);\\n+\\t\\t\\t}\\n+\\t\\t} else {\\n+\\t\\t\\t$storeResult = false;\\n+\\t\\t}\\n+\\n+\\t\\tif ($storeResult) {\\n+\\t\\t\\tif ($this->handler->getPermissions()) {\\n+\\t\\t\\t\\t$icmspermissions_handler = new icms_ipf_permission_Handler($this->handler);\\n+\\t\\t\\t\\t$icmspermissions_handler->storeAllPermissionsForId($icmsObj->id());\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\n+\\t\\tif ($redirect_page === null) {\\n+\\t\\t\\treturn $icmsObj;\\n+\\t\\t} else {\\n+\\t\\t\\tif (!$storeResult) {\\n+\\t\\t\\t\\tredirect_header($impresscms->urls[\\'previouspage\\'], 3, _CO_ICMS_SAVE_ERROR . $icmsObj->getHtmlErrors());\\n+\\t\\t\\t} else {\\n+\\t\\t\\t\\t$redirect_page = $redirect_page ? $redirect_page : icms_get_page_before_form();\\n+\\t\\t\\t\\tredirect_header($redirect_page, 2, $redirect_msg);\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * Store the object in the database autmatically from a form sending POST data\\n+\\t *\\n+\\t * @param string $created_success_msg message to display if new object was created\\n+\\t * @param string $modified_success_msg message to display if object was successfully edited\\n+\\t * @param string $created_redir_page redirect page after creating the object\\n+\\t * @param string $modified_redir_page redirect page after editing the object\\n+\\t * @param string $redirect_page redirect page, if not set, then we backup once\\n+\\t * @param bool $exit if set to TRUE then the script ends\\n+\\t * @return bool\\n+\\t *\/\\n+\\tpublic function &storeFromDefaultForm($created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false, $x_param = false) {\\n+\\t\\t$objectid = ( isset($_POST[$this->handler->keyName]) )\\n+\\t\\t\\t\\t? (int) $_POST[$this->handler->keyName]\\n+\\t\\t\\t\\t: 0;\\n+\\t\\tif ($debug) {\\n+\\t\\t\\tif ($x_param) {\\n+\\t\\t\\t\\t$icmsObj = $this->handler->getD($objectid, true,  $x_param);\\n+\\t\\t\\t} else {\\n+\\t\\t\\t\\t$icmsObj = $this->handler->getD($objectid);\\n+\\t\\t\\t}\\n+\\n+\\t\\t} else {\\n+\\t\\t\\tif ($x_param) {\\n+\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid, true, false, false, $x_param);\\n+\\t\\t\\t} else {\\n+\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid);\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\n+\\t\\t\/**\\n+\\t\\t * @todo multilanguage persistable handler is not fully implemented yet\\n+\\t\\t *\/\\n+\\n+\\t\\t\/\/ if handler is the Multilanguage handler, we will need to treat this for multilanguage\\n+\\t\\tif (is_subclass_of($this->handler, \\'icmspersistablemlobjecthandler\\')) {\\n+\\n+\\t\\t\\tif ($icmsObj->isNew()) {\\n+\\t\\t\\t\\t\/\/ This is a new object. We need to store the meta data and then the language data\\n+\\t\\t\\t\\t\/\/ First, we will get rid of the multilanguage data to only store the meta data\\n+\\t\\t\\t\\t$icmsObj->stripMultilanguageFields();\\n+\\t\\t\\t\\t$newObject =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\n+\\t\\t\\t\\t\/**\\n+\\t\\t\\t\\t * @todo we need to trap potential errors here\\n+\\t\\t\\t\\t *\/\\n+\\n+\\t\\t\\t\\t\/\/ ok, the meta daa is stored. Let\\'s recreate the object and then\\n+\\t\\t\\t\\t\/\/ get rid of anything not multilanguage\\n+\\t\\t\\t\\tunset($icmsObj);\\n+\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid);\\n+\\t\\t\\t\\t$icmsObj->stripNonMultilanguageFields();\\n+\\n+\\t\\t\\t\\t$icmsObj->setVar($this->handler->keyName, $newObject->getVar($this->handler->keyName));\\n+\\t\\t\\t\\t$this->handler->changeTableNameForML();\\n+\\t\\t\\t\\t$ret =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\n+\\n+\\t\\t\\t\\treturn $ret;\\n+\\t\\t\\t}\\n+\\t\\t} else {\\n+\\t\\t\\treturn $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\n+\\t\\t}\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * Stores an object and shows debug information\\n+\\t *\/\\n+\\tpublic function &storeicms_ipf_ObjectD() {\\n+\\t\\treturn $this->storeicms_ipf_Object(true);\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tbool\\t$debug\\n+\\t * @param\\tbool\\t$xparam\\n+\\t * @see\\t\\tstoreFromDefaultForm\\n+\\t *\/\\n+\\tpublic function &storeicms_ipf_Object($debug=false, $xparam = false) {\\n+\\t\\t$ret =& $this->storeFromDefaultForm(\\'\\', \\'\\', null, $debug, $xparam);\\n+\\n+\\t\\treturn $ret;\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * Handles deletion of an object which keyid is passed as a GET param\\n+\\t *\\n+\\t * @param string $redir_page redirect page after deleting the object\\n+\\t * @return bool\\n+\\t *\/\\n+\\tpublic function handleObjectDeletion($confirm_msg = false, $op=\\'del\\', $userSide=false) {\\n+\\t\\tglobal $impresscms;\\n+\\n+\\t\\t$objectid = (isset($_REQUEST[$this->handler->keyName])) ? (int) $_REQUEST[$this->handler->keyName] : 0;\\n+\\t\\t$icmsObj = $this->handler->get($objectid);\\n+\\n+\\t\\tif ($icmsObj->isNew()) {\\n+\\t\\t\\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\\n+\\t\\t\\texit();\\n+\\t\\t}\\n+\\n+\\t\\t$confirm = ( isset($_POST[\\'confirm\\']) ) ? $_POST[\\'confirm\\'] : 0;\\n+\\t\\tif ($confirm) {\\n+\\t\\t\\tif (!$this->handler->delete($icmsObj)) {\\n+\\t\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\\n+\\t\\t\\t\\texit;\\n+\\t\\t\\t}\\n+\\n+\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_SUCCESS);\\n+\\t\\t\\texit();\\n+\\t\\t} else {\\n+\\t\\t\\t\/\/ no confirm: show deletion condition\\n+\\n+\\t\\t\\ticms_cp_header();\\n+\\n+\\t\\t\\tif (!$confirm_msg) {\\n+\\t\\t\\t\\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\\n+\\t\\t\\t}\\n+\\n+\\t\\t\\t$hiddens = array(\\n+\\t\\t\\t\\t\\t\\t\\'op\\' => $op,\\n+\\t\\t\\t\\t\\t\\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\\n+\\t\\t\\t\\t\\t\\t\\'confirm\\' => 1,\\n+\\t\\t\\t\\t\\t\\t\\'redirect_page\\' => $impresscms->urls[\\'previouspage\\']\\n+\\t\\t\\t);\\n+\\t\\t\\tif ($this->handler->_moduleName == \\'system\\') {\\n+\\t\\t\\t\\t$hiddens[\\'fct\\'] = isset($_GET[\\'fct\\']) ? $_GET[\\'fct\\'] : false;\\n+\\t\\t\\t}\\n+\\t\\t\\ticms_core_Message::confirm($hiddens, xoops_getenv(\\'SCRIPT_NAME\\'), sprintf($confirm_msg , $icmsObj->getVar($this->handler->identifierName)), _CO_ICMS_DELETE);\\n+\\n+\\t\\t\\ticms_cp_footer();\\n+\\n+\\t\\t}\\n+\\t\\texit();\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tbool\\t$confirm_msg\\n+\\t * @param\\tstring\\t$op\\n+\\t *\/\\n+\\tpublic function handleObjectDeletionFromUserSide($confirm_msg = false, $op=\\'del\\') {\\n+\\t\\tglobal $icmsTpl, $impresscms;\\n+\\n+\\t\\t$objectid = ( isset($_REQUEST[$this->handler->keyName]) ) ? (int) ($_REQUEST[$this->handler->keyName]) : 0;\\n+\\t\\t$icmsObj = $this->handler->get($objectid);\\n+\\n+\\t\\tif ($icmsObj->isNew()) {\\n+\\t\\t\\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\\n+\\t\\t\\texit();\\n+\\t\\t}\\n+\\n+\\t\\t$confirm = ( isset($_POST[\\'confirm\\']) ) ? $_POST[\\'confirm\\'] : 0;\\n+\\t\\tif ($confirm) {\\n+\\t\\t\\tif (!$this->handler->delete($icmsObj)) {\\n+\\t\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\\n+\\t\\t\\t\\texit;\\n+\\t\\t\\t}\\n+\\n+\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_SUCCESS);\\n+\\t\\t\\texit();\\n+\\t\\t} else {\\n+\\t\\t\\t\/\/ no confirm: show deletion condition\\n+\\t\\t\\tif (!$confirm_msg) {\\n+\\t\\t\\t\\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\\n+\\t\\t\\t}\\n+\\n+\\t\\t\\tob_start();\\n+\\t\\t\\ticms_core_Message::confirm(array(\\n+\\t\\t\\t\\t\\'op\\' => $op,\\n+\\t\\t\\t\\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\\n+\\t\\t\\t\\t\\'confirm\\' => 1,\\n+\\t\\t\\t\\t\\'redirect_page\\' => $impresscms->urls[\\'previouspage\\']),\\n+\\t\\t\\t\\txoops_getenv(\\'SCRIPT_NAME\\'),\\n+\\t\\t\\t\\tsprintf($confirm_msg ,\\n+\\t\\t\\t\\t$icmsObj->getVar($this->handler->identifierName)),\\n+\\t\\t\\t\\t_CO_ICMS_DELETE\\n+\\t\\t\\t);\\n+\\t\\t\\t$icmspersistable_delete_confirm = ob_get_clean();\\n+\\t\\t\\t$icmsTpl->assign(\\'icmspersistable_delete_confirm\\', $icmspersistable_delete_confirm);\\n+\\t\\t}\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * Retrieve the object admin side link for a {@link icms_ipf_view_Single} page\\n+\\t *\\n+\\t * @param\\tobject\\t$icmsObj\\treference to the object from which we want the user side link\\n+\\t * @param\\tbool\\t$onlyUrl\\twhether or not to return a simple URL or a full <a> link\\n+\\t * @param\\tbool\\t$withimage\\treturn a linked image instead of linked text\\n+\\t * @return\\tstring\\tadmin side link to the object\\n+\\t *\/\\n+\\tpublic function getAdminViewItemLink($icmsObj, $onlyUrl=false, $withimage=false) {\\n+\\t\\t$ret = $this->handler->_moduleUrl . \"admin\/\"\\n+\\t\\t\\t. $this->handler->_page . \"?op=view&amp;\"\\n+\\t\\t\\t. $this->handler->keyName . \"=\"\\n+\\t\\t\\t. $icmsObj->getVar($this->handler->keyName);\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL\\n+\\t\\t\\t\\t\\t. \"\/actions\/viewmag.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t\\t. _CO_ICMS_ADMIN_VIEW . \"\\'  title=\\'\"\\n+\\t\\t\\t\\t\\t. _CO_ICMS_ADMIN_VIEW . \"\\'\/><\/a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * Retrieve the object user side link\\n+\\t *\\n+\\t * @param object $icmsObj reference to the object from which we want the user side link\\n+\\t * @param bool $onlyUrl wether or not to return a simple URL or a full <a> link\\n+\\t * @return string user side link to the object\\n+\\t *\/\\n+\\tpublic function getItemLink(&$icmsObj, $onlyUrl=false) {\\n+\\t\\t\/**\\n+\\t\\t * @todo URL Rewrite feature is not finished yet...\\n+\\t\\t *\/\\n+\\t\\t\/\/$seoMode = smart_getModuleModeSEO($this->handler->_moduleName);\\n+\\t\\t\/\/$seoModuleName = smart_getModuleNameForSEO($this->handler->_moduleName);\\n+\\t\\t$seoMode = false;\\n+\\t\\t$seoModuleName = $this->handler->_moduleName;\\n+\\n+\\t\\t\/**\\n+\\t\\t * $seoIncludeId feature is not finished yet, so let\\'s put it always to true\\n+\\t\\t *\/\\n+\\t\\t\/\/$seoIncludeId = smart_getModuleIncludeIdSEO($this->handler->_moduleName);\\n+\\t\\t$seoIncludeId = true;\\n+\\n+\\t\\t\/*if ($seoMode == \\'rewrite\\') {\\n+\\t\\t\\t$ret = ICMS_URL . \\'\/\\' . $seoModuleName . \\'.\\' . $this->handler->_itemname . ($seoIncludeId ? \\'.\\'\\t. $icmsObj->getVar($this->handler->keyName) : \\'\\'). \\'\/\\' . $icmsObj->getVar(\\'short_url\\') . \\'.html\\';\\n+\\t\\t\\t} else if ($seoMode == \\'pathinfo\\') {\\n+\\t\\t\\t$ret = SMARTOBJECT_URL . \\'seo.php\/\\' . $seoModuleName . \\'.\\' . $this->handler->_itemname . ($seoIncludeId ? \\'.\\'\\t. $icmsObj->getVar($this->handler->keyName) : \\'\\'). \\'\/\\' . $icmsObj->getVar(\\'short_url\\') . \\'.html\\';\\n+\\t\\t\\t} else {\\n+\\t\\t\\t*\/\\t$ret = $this->handler->_moduleUrl . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t\/\/}\\n+\\n+\\t\\tif (!$onlyUrl) {\\n+\\t\\t\\t$ret = \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\n+\\t\\t}\\n+\\t\\treturn $ret;\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * This method returns a view link of the Object\\n+\\t *\\n+\\t * @param icms_ipf_Object $icmsObj\\n+\\t * @param boolean $onlyUrl\\n+\\t * @param boolean $withimage\\n+\\t * @param boolean $userSide\\n+\\t * @return string\\n+\\t *\/\\n+\\tpublic function getViewItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\n+\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\n+\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t} else {\\n+\\t\\t\\t$admin_side = \\'\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . \\'admin.php?fct=\\'\\n+\\t\\t\\t\\t. $this->handler->_itemname . \"&amp;op=view&amp;\"\\n+\\t\\t\\t\\t. $this->handler->keyName . \"=\"\\n+\\t\\t\\t\\t. $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t}\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/viewmag.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t. _PREVIEW . \"\\'  title=\\'\" . _PREVIEW . \"\\'\/><\/a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tobject\\t$icmsObj\\n+\\t * @param\\tbool\\t$onlyUrl\\n+\\t * @param\\tbool\\t$withimage\\n+\\t *\/\\n+\\tpublic function getEditLanguageLink($icmsObj, $onlyUrl=false, $withimage=true) {\\n+\\t\\t$ret = $this->handler->_moduleUrl . \"admin\/\"\\n+\\t\\t\\t. $this->handler->_page\\n+\\t\\t\\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName)\\n+\\t\\t\\t. \"&amp;language=\" . $icmsObj->getVar(\\'language\\');\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/wizard.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t. _CO_ICMS_LANGUAGE_MODIFY . \"\\'  title=\\'\" . _CO_ICMS_LANGUAGE_MODIFY . \"\\'\/><\/a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\n+\\t * @param\\tbool\\t$onlyUrl\\n+\\t * @param\\tbool\\t$withimage\\n+\\t * @param\\tbool\\t$userSide\\n+\\t *\/\\n+\\tpublic function getEditItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\n+\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\n+\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\\n+\\t\\t\\t\\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t} else {\\n+\\t\\t\\t\/**\\n+\\t\\t\\t * @todo: to be implemented...\\n+\\t\\t\\t *\/\\n+\\t\\t\\t\/\/$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\n+\\t\\t\\t$admin_side = \\'\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side\\n+\\t\\t\\t\\t. \\'admin.php?fct=\\' . $this->handler->_itemname\\n+\\t\\t\\t\\t. \"&amp;op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t}\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/edit.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t. _CO_ICMS_MODIFY . \"\\'  title=\\'\" . _CO_ICMS_MODIFY . \"\\'\/><\/a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\n+\\t * @param\\tbool\\t$onlyUrl\\n+\\t * @param\\tbool\\t$withimage\\n+\\t * @param\\tbool\\t$userSide\\n+\\t *\/\\n+\\tpublic function getDeleteItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\n+\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\n+\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\\n+\\t\\t\\t\\t. \"?op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t} else {\\n+\\t\\t\\t\/**\\n+\\t\\t\\t * @todo: to be implemented...\\n+\\t\\t\\t *\/\\n+\\t\\t\\t\/\/$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\n+\\t\\t\\t$admin_side = \\'\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side\\n+\\t\\t\\t\\t. \\'admin.php?fct=\\' . $this->handler->_itemname\\n+\\t\\t\\t\\t. \"&amp;op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t}\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/editdelete.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t. _CO_ICMS_DELETE . \"\\'  title=\\'\" . _CO_ICMS_DELETE . \"\\'\/><\/a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\n+\\t * @todo\\tNeeds to be completed\\n+\\t *\/\\n+\\tpublic function getPrintAndMailLink($icmsObj) {\\n+\\t\\tglobal $icmsConfig, $impresscms;\\n+\\n+\\t\\t$ret = \\'\\';\\n+\\t\\t\/*\\t\\t$printlink = $this->handler->_moduleUrl . \"print.php?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t $js = \"javascript:openWithSelfMain(\\'\" . $printlink . \"\\', \\'smartpopup\\', 700, 519);\";\\n+\\t\\t $printlink = \\'<a href=\"\\' . $js . \\'\"><img  src=\"\\' . ICMS_IMAGES_SET_URL . \\'\/actions\/fileprint.png\" alt=\"\" style=\"vertical-align: middle;\"\/><\/a>\\';\\n+\\n+\\t\\t $icmsModule = icms_getModuleInfo($icmsObj->handler->_moduleName);\\n+\\t\\t $link = $impresscms->urls[\\'full\\']();\\n+\\t\\t $mid = $icmsModule->getVar(\\'mid\\');\\n+\\t\\t $friendlink = \"<a href=\\\\\"javascript:openWithSelfMain(\\'\".SMARTOBJECT_URL.\"sendlink.php?link=\" . $link . \"&amp;mid=\" . $mid . \"\\', \\',\\',\\',\\',\\',\\',\\'sendmessage\\', 674, 500);\\\\\"><img src=\\\\\"\".SMARTOBJECT_IMAGES_ACTIONS_URL . \"mail_send.png\\\\\"  alt=\\\\\"\" . _CO_ICMS_EMAIL . \"\\\\\" title=\\\\\"\" . _CO_ICMS_EMAIL . \"\\\\\" style=\\\\\"vertical-align: middle;\\\\\"\/><\/a>\";\\n+\\n+\\t\\t $ret = \\'<span id=\"smartobject_print_button\">\\' . $printlink . \"&nbsp;<\/span>\" . \\'<span id=\"smartobject_mail_button\">\\' . $friendlink . \\'<\/span>\\';\\n+\\t\\t *\/\\n+\\t\\treturn $ret;\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * Creates a string from the object\\'s module name and item name\\n+\\t *\/\\n+\\tpublic function getModuleItemString() {\\n+\\t\\t$ret = $this->handler->_moduleName . \\'_\\' . $this->handler->_itemname;\\n+\\t\\treturn $ret;\\n+\\t}\\n+}\\n+'}}",
            "message_norm":"prevents using submitted filenames with ..\/ for controller (#812)\n\n* prevents using submitted filenames with ..\/ for controller\r\n\r\n* using preg replace for better parent paths replaces\r\n\r\nco-authored-by: raimondas rimkevi\u010dius (aka mekdrop) <mekdrop@impresscms.org>",
            "language":"en",
            "entities":"[('prevents', 'ACTION', ''), ('#812', 'ISSUE', ''), ('prevents', 'ACTION', ''), ('mekdrop@impresscms.org', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['htdocs\/libraries\/icms\/ipf\/Controller.php'])",
            "num_files":1.0
        },
        {
            "index":2548,
            "vuln_id":"GHSA-pc54-pchm-xcw6",
            "cwe_id":"{'CWE-611', 'CWE-20'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/resteasy\/resteasy\/pull\/611\/commits\/3ab999c899c455a0b0a00bf5e455ed3e8d9ae347', 'https:\/\/github.com\/resteasy\/resteasy\/pull\/611\/commits\/8b5d8cfc963794a74636d9a840e899408ec8fdc6'}",
            "dataset":"osv",
            "summary":"XML External Entity Reference in RESTEasy DocumentProvider in RESTEasy 2.3.7 and 3.0.9 does not configure the (1) external-general-entities or (2) external-parameter-entities features, which allows remote attackers to conduct XML external entity (XXE) attacks via unspecified vectors.",
            "published_date":"2022-05-17",
            "chain_len":2,
            "project":"https:\/\/github.com\/resteasy\/resteasy",
            "commit_href":"https:\/\/github.com\/resteasy\/resteasy\/pull\/611\/commits\/3ab999c899c455a0b0a00bf5e455ed3e8d9ae347",
            "commit_sha":"3ab999c899c455a0b0a00bf5e455ed3e8d9ae347",
            "patch":"MULTI",
            "chain_ord":"['8b5d8cfc963794a74636d9a840e899408ec8fdc6', '3ab999c899c455a0b0a00bf5e455ed3e8d9ae347']",
            "before_first_fix_commit":"{'8b5d8cfc963794a74636d9a840e899408ec8fdc6'}",
            "last_fix_commit":"3ab999c899c455a0b0a00bf5e455ed3e8d9ae347",
            "chain_ord_pos":2.0,
            "commit_datetime":"11\/18\/2014, 06:26:03",
            "message":"RESTEASY-1130: Added test for Red Hat version of Xerces in\nTestSecureProcessing.",
            "author":"rsigal",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 0, 'total': 8}",
            "files":"{'resteasy-jaxrs-test\/src\/test\/java\/org\/jboss\/resteasy\/test\/xxe\/TestSecureProcessing.java': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/resteasy\/resteasy\/raw\/3ab999c899c455a0b0a00bf5e455ed3e8d9ae347\/resteasy-jaxrs-test%2Fsrc%2Ftest%2Fjava%2Forg%2Fjboss%2Fresteasy%2Ftest%2Fxxe%2FTestSecureProcessing.java', 'patch': '@@ -7,6 +7,7 @@\\n import javax.ws.rs.Consumes;\\r\\n import javax.ws.rs.POST;\\r\\n import javax.ws.rs.Path;\\r\\n+import javax.xml.parsers.DocumentBuilderFactory;\\r\\n \\r\\n import junit.framework.Assert;\\r\\n \\r\\n@@ -373,6 +374,13 @@ void doEntityExpansionPasses() throws Exception\\n    \\r\\n    void doMaxAttributesFails() throws Exception\\r\\n    {\\r\\n+      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\\r\\n+      System.out.println(\"dbf.getClass(): \" + dbf.getClass());\\r\\n+      if (\"org.apache.xerces.jaxp.DocumentBuilderFactoryImpl\".equals(dbf.getClass().getName()))\\r\\n+      {\\r\\n+         System.out.println(\"Testing with Red Hat version of Xerces, skipping max attributes test\");\\r\\n+         return;\\r\\n+      }\\r\\n       System.out.println(\"entering doMaxAttributesFails()\");\\r\\n       ClientRequest request = new ClientRequest(generateURL(\"\/test\"));\\r\\n       request.body(\"application\/xml\", bigAttributeDoc);'}}",
            "message_norm":"resteasy-1130: added test for red hat version of xerces in\ntestsecureprocessing.",
            "language":"en",
            "entities":"[('added', 'ACTION', ''), ('testsecureprocessing', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['resteasy-jaxrs-test\/src\/test\/java\/org\/jboss\/resteasy\/test\/xxe\/TestSecureProcessing.java'])",
            "num_files":1.0
        },
        {
            "index":784,
            "vuln_id":"GHSA-6898-wx94-8jq8",
            "cwe_id":"{'CWE-74'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/mytrile\/node-libnotify\/commit\/dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448'}",
            "dataset":"osv",
            "summary":"Potential Command Injection in libnotify Versions 1.0.3 and earlier of libnotify are affected by a shell command injection vulnerability. This may result in execution of arbitrary shell commands, if user input is passed into libnotify.notify.\n\nUntrusted input passed in the call to libnotify.notify could result in execution of shell commands. Callers may be unaware of this.\n\n### Example\n```\nvar libnotify = require('libnotify')\nlibnotify.notify('UNTRUSTED INPUT', { title: \\\"\\\" }, function () {\n    console.log(arguments);\n})\n```\n\nSpecial thanks to Neal Poole for submitting the pull request to fix this issue.\n\n\n## Recommendation\n\nUpdate to version 1.0.4 or greater",
            "published_date":"2020-08-31",
            "chain_len":1,
            "project":"https:\/\/github.com\/mytrile\/node-libnotify",
            "commit_href":"https:\/\/github.com\/mytrile\/node-libnotify\/commit\/dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448",
            "commit_sha":"dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448",
            "patch":"SINGLE",
            "chain_ord":"['dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448']",
            "before_first_fix_commit":"{'8e2e7306088624503ba5eec592b502c4f97d8846', '688e135134c4e45abf18d42ddb85a7ab8c9a7ab8'}",
            "last_fix_commit":"dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/14\/2013, 19:46:34",
            "message":"Merge pull request #4 from nealpoole\/exec-fix\n\nReplacing call to exec with execFile.",
            "author":"Dimitar Kostov",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 5, 'total': 9}",
            "files":"{'lib\/libnotify.js': {'additions': 4, 'deletions': 5, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mytrile\/node-libnotify\/raw\/dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448\/lib%2Flibnotify.js', 'patch': '@@ -55,18 +55,17 @@ exports.binVersion = function(callback) {\\n \\n exports.notify = function(msg, options, callback) {\\n   var image,\\n-      args = [\\'notify-send\\',\\'\"\\' + msg + \\'\"\\'],\\n+      args = [msg],\\n       options = options || {}\\n   this.binVersion(function(err, version){\\n     if (err) return callback(err)\\n-    if (image = options.image) args.push(\\'-i \\' + image)\\n+    if (image = options.image) args.push(\\'-i\\', image)\\n     if (options.time) args.push(\\'-t\\', options.time)\\n     if (options.category) args.push(\\'-c\\', options.category)\\n     if (options.urgency) args.push(\\'-u\\', options.urgency)\\n     if (options.title) {\\n-      args.shift()\\n-      args.unshift(\\'notify-send\\', \\'\"\\'+ options.title +\\'\"\\')\\n+      args.unshift(options.title)\\n     }\\n-    child_process.exec(args.join(\\' \\'), callback)\\n+    child_process.execFile(\\'notify-send\\', args, {}, callback)\\n   })\\n }'}}",
            "message_norm":"merge pull request #4 from nealpoole\/exec-fix\n\nreplacing call to exec with execfile.",
            "language":"en",
            "entities":"[('#4', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/libnotify.js'])",
            "num_files":1.0
        },
        {
            "index":2500,
            "vuln_id":"GHSA-p463-639r-q9g9",
            "cwe_id":"{'CWE-94'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/markevans\/dragonfly\/commit\/a8775aacf9e5c81cf11bec34b7afa7f27ddfe277'}",
            "dataset":"osv",
            "summary":"High severity vulnerability that affects dragonfly The Dragonfly gem 0.7 before 0.8.6 and 0.9.x before 0.9.13 for Ruby, when used with Ruby on Rails, allows remote attackers to execute arbitrary code via a crafted request.",
            "published_date":"2017-10-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/markevans\/dragonfly",
            "commit_href":"https:\/\/github.com\/markevans\/dragonfly\/commit\/a8775aacf9e5c81cf11bec34b7afa7f27ddfe277",
            "commit_sha":"a8775aacf9e5c81cf11bec34b7afa7f27ddfe277",
            "patch":"SINGLE",
            "chain_ord":"['a8775aacf9e5c81cf11bec34b7afa7f27ddfe277']",
            "before_first_fix_commit":"{'4fb2145b6b5731841e23ecddfa988675b9e194cb'}",
            "last_fix_commit":"a8775aacf9e5c81cf11bec34b7afa7f27ddfe277",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/19\/2013, 10:44:17",
            "message":"security update note",
            "author":"Mark Evans",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'README.md': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/markevans\/dragonfly\/raw\/a8775aacf9e5c81cf11bec34b7afa7f27ddfe277\/README.md', 'patch': \"@@ -7,6 +7,8 @@ Ideal for using with Ruby on Rails (2.3 and 3), Sinatra and all that gubbins.\\n \\n However, Dragonfly is NOT JUST FOR RAILS, and NOT JUST FOR IMAGES!!\\n \\n+**IMPORTANT: if you're running a version between 0.7.0 and 0.9.12, please update to 0.9.14 for a security update [details here](https:\/\/groups.google.com\/forum\/?fromgroups=#!topic\/dragonfly-users\/3c3WIU3VQTo)**\\n+\\n For the lazy Rails user...\\n --------------------------\\n **Gemfile**:\"}}",
            "message_norm":"security update note",
            "language":"en",
            "entities":"[('security', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['README.md'])",
            "num_files":1.0
        },
        {
            "index":1059,
            "vuln_id":"GHSA-7q4h-pj78-j7vg",
            "cwe_id":"{'CWE-400', 'CWE-918'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/apache\/cxf\/commit\/aa789c5c4686597a7bdef2443909ab491fc2bc04', 'https:\/\/github.com\/apache\/cxf\/commit\/40503a53914758759894f704bbf139ae89ace286'}",
            "dataset":"osv",
            "summary":"Authorization service vulnerable to DDos attacks in Apache CFX CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a \"request\" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the \"request_uri\" parameter. CXF was not validating the \"request_uri\" parameter (apart from ensuring it uses \"https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",
            "published_date":"2021-05-13",
            "chain_len":2,
            "project":"https:\/\/github.com\/apache\/cxf",
            "commit_href":"https:\/\/github.com\/apache\/cxf\/commit\/40503a53914758759894f704bbf139ae89ace286",
            "commit_sha":"40503a53914758759894f704bbf139ae89ace286",
            "patch":"MULTI",
            "chain_ord":"['40503a53914758759894f704bbf139ae89ace286', 'aa789c5c4686597a7bdef2443909ab491fc2bc04']",
            "before_first_fix_commit":"{'40503a53914758759894f704bbf139ae89ace286'}",
            "last_fix_commit":"aa789c5c4686597a7bdef2443909ab491fc2bc04",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/06\/2021, 09:30:08",
            "message":"Disallow OAuth2 request_uri by default",
            "author":"Colm O hEigeartaigh",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 4, 'total': 17}",
            "files":"{'rt\/rs\/security\/oauth-parent\/oauth2\/src\/main\/java\/org\/apache\/cxf\/rs\/security\/oauth2\/grants\/code\/JwtRequestCodeFilter.java': {'additions': 13, 'deletions': 4, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/cxf\/raw\/40503a53914758759894f704bbf139ae89ace286\/rt%2Frs%2Fsecurity%2Foauth-parent%2Foauth2%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fcxf%2Frs%2Fsecurity%2Foauth2%2Fgrants%2Fcode%2FJwtRequestCodeFilter.java', 'patch': '@@ -42,6 +42,7 @@\\n import org.apache.cxf.rt.security.crypto.CryptoUtils;\\n \\n public class JwtRequestCodeFilter extends OAuthJoseJwtConsumer implements AuthorizationRequestFilter {\\n+    private static final String REQUEST_URI_CONTENT_TYPE = \"application\/oauth-authz-req+jwt\";\\n     private static final String REQUEST_PARAM = \"request\";\\n     private static final String REQUEST_URI_PARAM = \"request_uri\";\\n     private boolean verifyWithClientCertificates;\\n@@ -55,7 +56,7 @@ public MultivaluedMap<String, String> process(MultivaluedMap<String, String> par\\n         if (requestToken == null) {\\n             String requestUri = params.getFirst(REQUEST_URI_PARAM);\\n             if (isRequestUriValid(client, requestUri)) {\\n-                requestToken = WebClient.create(requestUri).get(String.class);\\n+                requestToken = WebClient.create(requestUri).accept(REQUEST_URI_CONTENT_TYPE).get(String.class);\\n             }\\n         }\\n         if (requestToken != null) {\\n@@ -101,9 +102,17 @@ public MultivaluedMap<String, String> process(MultivaluedMap<String, String> par\\n         }\\n         return params;\\n     }\\n-    private boolean isRequestUriValid(Client client, String requestUri) {\\n-        \/\/TODO: consider restricting to specific hosts\\n-        return requestUri != null && requestUri.startsWith(\"https:\/\/\");\\n+\\n+    \/**\\n+     * This method must be overridden to support request_uri. Take care to validate the request_uri properly,\\n+     * as otherwise it could lead to a security problem\\n+     * (https:\/\/tools.ietf.org\/html\/draft-ietf-oauth-jwsreq-30#section-10.4)\\n+     * @param client the Client object\\n+     * @param requestUri the request_uri parameter to validate\\n+     * @return whether the requestUri is permitted or not\\n+     *\/\\n+    protected boolean isRequestUriValid(Client client, String requestUri) {\\n+        return false;\\n     }\\n     protected JwsSignatureVerifier getInitializedSigVerifier(Client c) {\\n         if (verifyWithClientCertificates) {'}}",
            "message_norm":"disallow oauth2 request_uri by default",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['rt\/rs\/security\/oauth-parent\/oauth2\/src\/main\/java\/org\/apache\/cxf\/rs\/security\/oauth2\/grants\/code\/JwtRequestCodeFilter.java'])",
            "num_files":1.0
        },
        {
            "index":2221,
            "vuln_id":"GHSA-j8qc-5fqr-52fp",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c570e2ecfc822941335ad48f6e10df4e21f11c96'}",
            "dataset":"osv",
            "summary":"Division by zero in `Conv2DBackpropFilter` ### Impact\nAn attacker can cause a division by zero to occur in `Conv2DBackpropFilter`:\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32)\nfilter_sizes = tf.constant([0, 0, 0, 0], shape=[4], dtype=tf.int32)\nout_backprop = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32)\n\ntf.raw_ops.Conv2DBackpropFilter(\n  input=input_tensor,\n  filter_sizes=filter_sizes,\n  out_backprop=out_backprop,\n  strides=[1, 1, 1, 1],\n  use_cudnn_on_gpu=False,\n  padding='SAME',\n  explicit_paddings=[],\n  data_format='NHWC',\n  dilations=[1, 1, 1, 1]\n)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/1b0296c3b8dd9bd948f924aa8cd62f87dbb7c3da\/tensorflow\/core\/kernels\/conv_grad_filter_ops.cc#L513-L522) computes a divisor based on user provided data (i.e., the shape of the tensors given as arguments):\n\n```cc\nconst size_t size_A = output_image_size * filter_total_size; \nconst size_t size_B = output_image_size * dims.out_depth;\nconst size_t size_C = filter_total_size * dims.out_depth;\nconst size_t work_unit_size = size_A + size_B + size_C;\nconst size_t shard_size = (target_working_set_size + work_unit_size - 1) \/ work_unit_size;\n```\n\nIf all shapes are empty then `work_unit_size` is 0. Since there is no check for this case before division, this results in a runtime exception, with potential to be abused for a denial of service. \n\n### Patches\nWe have patched the issue in GitHub commit [c570e2ecfc822941335ad48f6e10df4e21f11c96](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c570e2ecfc822941335ad48f6e10df4e21f11c96).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n  \n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c570e2ecfc822941335ad48f6e10df4e21f11c96",
            "commit_sha":"c570e2ecfc822941335ad48f6e10df4e21f11c96",
            "patch":"SINGLE",
            "chain_ord":"['c570e2ecfc822941335ad48f6e10df4e21f11c96']",
            "before_first_fix_commit":"{'1b0296c3b8dd9bd948f924aa8cd62f87dbb7c3da'}",
            "last_fix_commit":"c570e2ecfc822941335ad48f6e10df4e21f11c96",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/22\/2021, 00:50:10",
            "message":"Fix issues in Conv2DBackpropFilter.\n\nPiperOrigin-RevId: 369772454\nChange-Id: I49b465f2ae2ce91def61b56cea8000197d5177d8",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 0, 'total': 13}",
            "files":"{'tensorflow\/core\/kernels\/conv_grad_filter_ops.cc': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c570e2ecfc822941335ad48f6e10df4e21f11c96\/tensorflow%2Fcore%2Fkernels%2Fconv_grad_filter_ops.cc', 'patch': '@@ -495,6 +495,14 @@ class Conv2DCustomBackpropFilterOp : public OpKernel {\\n     const int filter_total_size = dims.spatial_dims[0].filter_size *\\n                                   dims.spatial_dims[1].filter_size *\\n                                   dims.in_depth;\\n+    OP_REQUIRES(\\n+        context,\\n+        filter_total_size * dims.out_depth == filter_backprop->NumElements(),\\n+        errors::InvalidArgument(\\n+            \"filter_size does not have enough elements, requested \",\\n+            filter_total_size * dims.out_depth, \", got \",\\n+            filter_backprop->NumElements()));\\n+\\n     \/\/ The output image size is the spatial size of the output.\\n     const int output_image_size =\\n         dims.spatial_dims[0].output_size * dims.spatial_dims[1].output_size;\\n@@ -518,6 +526,11 @@ class Conv2DCustomBackpropFilterOp : public OpKernel {\\n \\n     const size_t work_unit_size = size_A + size_B + size_C;\\n \\n+    OP_REQUIRES(\\n+        context, work_unit_size != 0,\\n+        errors::InvalidArgument(\\n+            \"Work size for convolution would be 0, which is not acceptable\"));\\n+\\n     const size_t shard_size =\\n         (target_working_set_size + work_unit_size - 1) \/ work_unit_size;'}}",
            "message_norm":"fix issues in conv2dbackpropfilter.\n\npiperorigin-revid: 369772454\nchange-id: i49b465f2ae2ce91def61b56cea8000197d5177d8",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('issues', 'FLAW', ''), ('369772454', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_grad_filter_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":1918,
            "vuln_id":"GHSA-gq77-3r6x-383w",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/818d7fe731f452acccacf731ce47ec27ad68049c'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in ShowDoc ShowDoc version 2.10.3 and prior is vulnerable to stored cross-site scripting. A patch is available and anticipated to be part of version 2.10.4.",
            "published_date":"2022-03-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/818d7fe731f452acccacf731ce47ec27ad68049c",
            "commit_sha":"818d7fe731f452acccacf731ce47ec27ad68049c",
            "patch":"SINGLE",
            "chain_ord":"['818d7fe731f452acccacf731ce47ec27ad68049c']",
            "before_first_fix_commit":"{'85af5ab5a375ce16f991e2acb15466be4b3ba44b'}",
            "last_fix_commit":"818d7fe731f452acccacf731ce47ec27ad68049c",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/08\/2022, 03:48:44",
            "message":"file upload bug",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/818d7fe731f452acccacf731ce47ec27ad68049c\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -301,6 +301,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \".svg\")\\n \\t\\t\\t|| $isDangerStr($filename , \".htm\")\\n \\t\\t\\t|| $isDangerStr($filename , \"%\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}'}}",
            "message_norm":"file upload bug",
            "language":"ro",
            "entities":"[('bug', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
            "num_files":1.0
        },
        {
            "index":2696,
            "vuln_id":"GHSA-q4qf-3fc6-8x34",
            "cwe_id":"{'CWE-787', 'CWE-119'}",
            "score":8.7,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2d88f470dea2671b430884260f3626b1fe99830a'}",
            "dataset":"osv",
            "summary":"Segfault and data corruption in tensorflow-lite ### Impact\nTo mimic Python's indexing with negative values, TFLite uses `ResolveAxis` to convert negative values to positive indices. However, the only check that the converted index is now valid is only present in debug builds:\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/kernels\/internal\/reference\/reduce.h#L68-L72\n\nIf the `DCHECK` does not trigger, then code execution moves ahead with a negative index. This, in turn, results in accessing data out of bounds which results in segfaults and\/or data corruption.\n### Patches\nWe have patched the issue in 2d88f470dea2671b430884260f3626b1fe99830a and will release patch releases for all versions between 1.15 and 2.3.\n\nWe recommend users to upgrade to TensorFlow 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2020-09-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2d88f470dea2671b430884260f3626b1fe99830a",
            "commit_sha":"2d88f470dea2671b430884260f3626b1fe99830a",
            "patch":"SINGLE",
            "chain_ord":"['2d88f470dea2671b430884260f3626b1fe99830a']",
            "before_first_fix_commit":"{'d487b8c4ca7d77d650fb8dca94b073aad8ff4b5e'}",
            "last_fix_commit":"2d88f470dea2671b430884260f3626b1fe99830a",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/18\/2020, 21:43:00",
            "message":"[tflite] Ensure `ResolveAxis` properly handles negative inputs.\n\nIn Python, a list `l` of length `n` allows indexing with negative indices, `l[i]`. The only constraint is that `n + i` becomes positive. Code in `ResolveAxis` assumes the constraints and only checks it using a `DCHECK`. But the macro is a no-op in non-debug builds and that can result in reading from negative offsets (buffer underflows).\n\nPiperOrigin-RevId: 332530683\nChange-Id: I464e073fee618054ae3719a3679739007bb3f3bc",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/lite\/kernels\/internal\/reference\/reduce.h': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/2d88f470dea2671b430884260f3626b1fe99830a\/tensorflow%2Flite%2Fkernels%2Finternal%2Freference%2Freduce.h', 'patch': '@@ -70,6 +70,9 @@ inline bool ResolveAxis(const int num_dims, const int* axis,\\n     \/\/ eg: For num_dims=3, [0, 1, 2] is the same as [-3, -2, -1]  *\/\\n     int current = axis[idx] < 0 ? (axis[idx] + num_dims) : axis[idx];\\n     TFLITE_DCHECK(current >= 0 && current < num_dims);\\n+    if (current < 0 || current >= num_dims) {\\n+      return false;\\n+    }\\n     bool is_dup = false;\\n     for (int j = 0; j < *out_num_axis; ++j) {\\n       if (out_axis[j] == current) {'}}",
            "message_norm":"[tflite] ensure `resolveaxis` properly handles negative inputs.\n\nin python, a list `l` of length `n` allows indexing with negative indices, `l[i]`. the only constraint is that `n + i` becomes positive. code in `resolveaxis` assumes the constraints and only checks it using a `dcheck`. but the macro is a no-op in non-debug builds and that can result in reading from negative offsets (buffer underflows).\n\npiperorigin-revid: 332530683\nchange-id: i464e073fee618054ae3719a3679739007bb3f3bc",
            "language":"en",
            "entities":"[('ensure', 'ACTION', ''), ('buffer underflows', 'SECWORD', ''), ('332530683', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/internal\/reference\/reduce.h'])",
            "num_files":1.0
        },
        {
            "index":226,
            "vuln_id":"GHSA-38rv-5jqc-m2cv",
            "cwe_id":"{'CWE-918'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/recurly\/recurly-client-python\/commit\/049c74699ce93cf126feff06d632ea63fba36742'}",
            "dataset":"osv",
            "summary":"High severity vulnerability that affects recurly The Recurly Client Python Library before 2.0.5, 2.1.16, 2.2.22, 2.3.1, 2.4.5, 2.5.1, 2.6.2 is vulnerable to a Server-Side Request Forgery vulnerability in the \"Resource.get\" method that could result in compromise of API keys or other critical resources.",
            "published_date":"2019-01-04",
            "chain_len":1,
            "project":"https:\/\/github.com\/recurly\/recurly-client-python",
            "commit_href":"https:\/\/github.com\/recurly\/recurly-client-python\/commit\/049c74699ce93cf126feff06d632ea63fba36742",
            "commit_sha":"049c74699ce93cf126feff06d632ea63fba36742",
            "patch":"SINGLE",
            "chain_ord":"['049c74699ce93cf126feff06d632ea63fba36742']",
            "before_first_fix_commit":"{'9db2d1a0268201571a567d73481d0d16c6fbc5e1'}",
            "last_fix_commit":"049c74699ce93cf126feff06d632ea63fba36742",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/09\/2017, 00:45:28",
            "message":"Fix SSRF: do not use urljoin, quote uuids",
            "author":"Benjamin Eckel",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 6, 'total': 12}",
            "files":"{'recurly\/resource.py': {'additions': 6, 'deletions': 6, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/recurly\/recurly-client-python\/raw\/049c74699ce93cf126feff06d632ea63fba36742\/recurly%2Fresource.py', 'patch': '@@ -12,8 +12,7 @@\\n import recurly.errors\\n from recurly.link_header import parse_link_value\\n from six.moves import http_client\\n-from six.moves.urllib.parse import urlencode, urljoin, urlsplit\\n-\\n+from six.moves.urllib.parse import urlencode, urlsplit, quote\\n \\n class Money(object):\\n \\n@@ -338,7 +337,8 @@ def get(cls, uuid):\\n         can be directly requested with this method.\\n \\n         \"\"\"\\n-        url = urljoin(recurly.base_uri(), cls.member_path % (uuid,))\\n+        uuid = quote(str(uuid))\\n+        url = recurly.base_uri() + (cls.member_path % (uuid,))\\n         resp, elem = cls.element_for_url(url)\\n         return cls.from_element(elem)\\n \\n@@ -606,7 +606,7 @@ def all(cls, **kwargs):\\n         parameters.\\n \\n         \"\"\"\\n-        url = urljoin(recurly.base_uri(), cls.collection_path)\\n+        url = recurly.base_uri() + cls.collection_path\\n         if kwargs:\\n             url = \\'%s?%s\\' % (url, urlencode(kwargs))\\n         return Page.page_for_url(url)\\n@@ -616,7 +616,7 @@ def count(cls, **kwargs):\\n         \"\"\"Return a count of server side resources given\\n         filtering arguments in kwargs.\\n         \"\"\"\\n-        url = urljoin(recurly.base_uri(), cls.collection_path)\\n+        url = recurly.base_uri() + cls.collection_path\\n         if kwargs:\\n             url = \\'%s?%s\\' % (url, urlencode(kwargs))\\n         return Page.count_for_url(url)\\n@@ -638,7 +638,7 @@ def _update(self):\\n         return self.put(self._url)\\n \\n     def _create(self):\\n-        url = urljoin(recurly.base_uri(), self.collection_path)\\n+        url = recurly.base_uri() + self.collection_path\\n         return self.post(url)\\n \\n     def put(self, url):'}}",
            "message_norm":"fix ssrf: do not use urljoin, quote uuids",
            "language":"fr",
            "entities":"[('fix', 'ACTION', ''), ('ssrf', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['recurly\/resource.py'])",
            "num_files":1.0
        },
        {
            "index":815,
            "vuln_id":"GHSA-6cf8-qhqj-vjqm",
            "cwe_id":"{'CWE-400'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/totaljs\/framework\/commit\/b3f901561d66ab799a4a99279893b94cad7ae4ff'}",
            "dataset":"osv",
            "summary":"Prototype pollution in total.js There is a prototype pollution vulnerability in the package total.js before version 3.4.7. The set function can be used to set a value into the object according to the path. However the keys of the path being set are not properly sanitized, leading to a prototype pollution vulnerability. The impact depends on the application. In some cases it is possible to achieve Denial of service (DoS), Remote Code Execution or Property Injection.",
            "published_date":"2021-02-05",
            "chain_len":1,
            "project":"https:\/\/github.com\/totaljs\/framework",
            "commit_href":"https:\/\/github.com\/totaljs\/framework\/commit\/b3f901561d66ab799a4a99279893b94cad7ae4ff",
            "commit_sha":"b3f901561d66ab799a4a99279893b94cad7ae4ff",
            "patch":"SINGLE",
            "chain_ord":"['b3f901561d66ab799a4a99279893b94cad7ae4ff']",
            "before_first_fix_commit":"{'1e1faeb20d2291038e10b98f2046a4058135e767'}",
            "last_fix_commit":"b3f901561d66ab799a4a99279893b94cad7ae4ff",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/31\/2020, 10:41:21",
            "message":"Fixed `U.set()` by adding check for `Prototype pollution`.",
            "author":"Peter Sirka",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'utils.js': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/totaljs\/framework\/raw\/b3f901561d66ab799a4a99279893b94cad7ae4ff\/utils.js', 'patch': \"@@ -6621,6 +6621,10 @@ exports.set = function(obj, path, value) {\\n \\tvar v = arr[arr.length - 1];\\n \\tvar ispush = v.lastIndexOf('[]') !== -1;\\n \\tvar a = builder.join(';') + ';var v=typeof(a)===\\\\'function\\\\'?a(U.get(b)):a;w' + (v[0] === '[' ? '' : '.') + (ispush ? v.replace(REGREPLACEARR, '.push(v)') : (v + '=v')) + ';return v';\\n+\\n+\\tif ((\/__proto__|constructor|prototype\/).test(a))\\n+\\t\\tthrow new Error('Prototype pollution');\\n+\\n \\tvar fn = new Function('w', 'a', 'b', a);\\n \\tF.temporary.other[cachekey] = fn;\\n \\tfn(obj, value, path);\"}}",
            "message_norm":"fixed `u.set()` by adding check for `prototype pollution`.",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('adding', 'ACTION', ''), ('prototype pollution', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['utils.js'])",
            "num_files":1.0
        },
        {
            "index":2256,
            "vuln_id":"GHSA-jhq9-wm9m-cf89",
            "cwe_id":"{'CWE-617'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/704866eabe03a9aeda044ec91a8d0c83fc1ebdbe'}",
            "dataset":"osv",
            "summary":"CHECK-failure in `UnsortedSegmentJoin` ### Impact\nAn attacker can cause a denial of service by controlling the values of `num_segments` tensor argument for `UnsortedSegmentJoin`:\n\n```python\nimport tensorflow as tf\n\ninputs = tf.constant([], dtype=tf.string)\nsegment_ids = tf.constant([], dtype=tf.int32)\nnum_segments = tf.constant([], dtype=tf.int32)\nseparator = ''\n\ntf.raw_ops.UnsortedSegmentJoin(\n  inputs=inputs, segment_ids=segment_ids,\n  num_segments=num_segments, separator=separator)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a2a607db15c7cd01d754d37e5448d72a13491bdb\/tensorflow\/core\/kernels\/unsorted_segment_join_op.cc#L92-L93) assumes that the `num_segments` tensor is a valid scalar:\n\n```cc\nconst Tensor& num_segments_tensor = context->input(2);\nauto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\n```\n\nSince the tensor is empty the `CHECK` involved in `.scalar<T>()()` that checks that the number of elements is exactly 1 will be invalidated and this would result in process termination.\n\n### Patches\nWe have patched the issue in GitHub commit [704866eabe03a9aeda044ec91a8d0c83fc1ebdbe](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/704866eabe03a9aeda044ec91a8d0c83fc1ebdbe).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/704866eabe03a9aeda044ec91a8d0c83fc1ebdbe",
            "commit_sha":"704866eabe03a9aeda044ec91a8d0c83fc1ebdbe",
            "patch":"SINGLE",
            "chain_ord":"['704866eabe03a9aeda044ec91a8d0c83fc1ebdbe']",
            "before_first_fix_commit":"{'a2a607db15c7cd01d754d37e5448d72a13491bdb'}",
            "last_fix_commit":"704866eabe03a9aeda044ec91a8d0c83fc1ebdbe",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/27\/2021, 21:41:40",
            "message":"Fix overflow CHECK issue with `tf.raw_ops.UnsortedSegmentJoin`.\n\nPiperOrigin-RevId: 370766155\nChange-Id: I33e7c6626224e1060a8a4ab51ad5d861c6d4c63e",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/unsorted_segment_join_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/704866eabe03a9aeda044ec91a8d0c83fc1ebdbe\/tensorflow%2Fcore%2Fkernels%2Funsorted_segment_join_op.cc', 'patch': '@@ -90,6 +90,8 @@ class UnsortedSegmentJoinOp : public OpKernel {\\n     const int32 segment_dims = segment_id_shape.dims();\\n \\n     const Tensor& num_segments_tensor = context->input(2);\\n+    OP_REQUIRES(context, num_segments_tensor.NumElements() != 0,\\n+                errors::InvalidArgument(\"Number of segments cannot be empty.\"));\\n     auto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\\n \\n     OP_REQUIRES(context, segment_dims != 0,'}}",
            "message_norm":"fix overflow check issue with `tf.raw_ops.unsortedsegmentjoin`.\n\npiperorigin-revid: 370766155\nchange-id: i33e7c6626224e1060a8a4ab51ad5d861c6d4c63e",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('370766155', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/unsorted_segment_join_op.cc'])",
            "num_files":1.0
        },
        {
            "index":2299,
            "vuln_id":"GHSA-jr9c-h74f-2v28",
            "cwe_id":"{'CWE-285', 'CWE-863'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/go-gitea\/gitea\/commit\/1314f38b59748397b3429fb9bc9f9d6bac85d2f2'}",
            "dataset":"osv",
            "summary":"Improper Authorization in Gitea Gitea 1.16.3 and prior is vulnerable to improper authorization. A patch is available and is anticipated to be part of the 1.16.4 release.",
            "published_date":"2022-03-11",
            "chain_len":1,
            "project":"https:\/\/github.com\/go-gitea\/gitea",
            "commit_href":"https:\/\/github.com\/go-gitea\/gitea\/commit\/1314f38b59748397b3429fb9bc9f9d6bac85d2f2",
            "commit_sha":"1314f38b59748397b3429fb9bc9f9d6bac85d2f2",
            "patch":"SINGLE",
            "chain_ord":"['1314f38b59748397b3429fb9bc9f9d6bac85d2f2']",
            "before_first_fix_commit":"{'7443213707bde01ee8343d49b26824dc50e1ac18'}",
            "last_fix_commit":"1314f38b59748397b3429fb9bc9f9d6bac85d2f2",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/10\/2022, 02:00:05",
            "message":"fix pam authorization (#19040)\n\nhttps:\/\/huntr.dev\/bounties\/8d221f92-b2b1-4878-bc31-66ff272e5ceb\/\r\n\r\nCo-authored-by: ysf <34326+ysf@users.noreply.github.com>",
            "author":"zeripath",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'modules\/auth\/pam\/pam.go': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/go-gitea\/gitea\/raw\/1314f38b59748397b3429fb9bc9f9d6bac85d2f2\/modules%2Fauth%2Fpam%2Fpam.go', 'patch': '@@ -34,6 +34,10 @@ func Auth(serviceName, userName, passwd string) (string, error) {\\n \\tif err = t.Authenticate(0); err != nil {\\n \\t\\treturn \"\", err\\n \\t}\\n+\\t\\n+\\tif err = t.AcctMgmt(0); err != nil {\\n+\\t  return \"\", err\\n+  }\\n \\n \\t\/\/ PAM login names might suffer transformations in the PAM stack.\\n \\t\/\/ We should take whatever the PAM stack returns for it.'}}",
            "message_norm":"fix pam authorization (#19040)\n\nhttps:\/\/huntr.dev\/bounties\/8d221f92-b2b1-4878-bc31-66ff272e5ceb\/\r\n\r\nco-authored-by: ysf <34326+ysf@users.noreply.github.com>",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('#19040', 'ISSUE', ''), ('https:\/\/huntr.dev\/bounties\/8d221f92-b2b1-4878-bc31-66ff272e5ceb\/', 'URL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/auth\/pam\/pam.go'])",
            "num_files":1.0
        },
        {
            "index":2089,
            "vuln_id":"GHSA-hm37-9xh2-q499",
            "cwe_id":"{'CWE-209'}",
            "score":7.7,
            "chain":"{'https:\/\/github.com\/scottcwang\/openssh_key_parser\/commit\/d5b53b4b7e76c5b666fc657019dbf864fb04076c', 'https:\/\/github.com\/scottcwang\/openssh_key_parser\/commit\/26e0a471e9fdb23e635bc3014cf4cbd2323a08d3', 'https:\/\/github.com\/scottcwang\/openssh_key_parser\/commit\/274447f91b4037b7050ae634879b657554523b39'}",
            "dataset":"osv",
            "summary":"Possible leak of key's raw field if declared length is incorrect ### Impact\nIf a field of a key is shorter than it is declared to be, the parser raises an error with a message containing the raw field value. An attacker able to modify the declared length of a key's sensitive field can thus expose the raw value of that field.\n\n### Patches\nUpgrade to version 0.0.6, which no longer includes the raw field value in the error message.\n\n### Workarounds\nN\/A\n\n### References\nN\/A\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [openssh_key_parser](https:\/\/github.com\/scottcwang\/openssh_key_parser)",
            "published_date":"2022-07-06",
            "chain_len":3,
            "project":"https:\/\/github.com\/scottcwang\/openssh_key_parser",
            "commit_href":"https:\/\/github.com\/scottcwang\/openssh_key_parser\/commit\/d5b53b4b7e76c5b666fc657019dbf864fb04076c",
            "commit_sha":"d5b53b4b7e76c5b666fc657019dbf864fb04076c",
            "patch":"MULTI",
            "chain_ord":"['26e0a471e9fdb23e635bc3014cf4cbd2323a08d3', 'd5b53b4b7e76c5b666fc657019dbf864fb04076c', '274447f91b4037b7050ae634879b657554523b39']",
            "before_first_fix_commit":"{'ae4d131d1cd8fe06325bfd6b749305aca60873bf', '69fe5b7addc21d3f39626ae93c6961811aea9d4c'}",
            "last_fix_commit":"274447f91b4037b7050ae634879b657554523b39",
            "chain_ord_pos":2.0,
            "commit_datetime":"06\/22\/2022, 14:59:49",
            "message":"Improved error handling to prevent unhandled exceptions in calling code.",
            "author":"Michael Doyle",
            "comments":null,
            "stats":"{'additions': 95, 'deletions': 86, 'total': 181}",
            "files":"{'openssh_key\/private_key_list.py': {'additions': 95, 'deletions': 86, 'changes': 181, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/scottcwang\/openssh_key_parser\/raw\/d5b53b4b7e76c5b666fc657019dbf864fb04076c\/openssh_key%2Fprivate_key_list.py', 'patch': '@@ -221,118 +221,127 @@ def from_bytes(\\n \\n         Raises:\\n             ValueError: The provided byte string is not an ``openssh-key-v1``\\n-                key list or the declared key count is negative.\\n+                key list, when the declared key count is negative, or when an\\n+                EOF is found while parsing the key.\\n+\\n             UserWarning: The check numbers in the decrypted private byte string\\n                 do not match (likely due to an incorrect passphrase), the key\\n                 type or parameter values of a private key do not match that of\\n                 the corresponding public key in the list, or the padding bytes\\n                 at the end of the decrypted private byte string are not as\\n                 expected.\\n         \"\"\"\\n-        byte_stream = PascalStyleByteStream(byte_string)\\n+        try:\\n+            byte_stream = PascalStyleByteStream(byte_string)\\n \\n-        header = byte_stream.read_from_format_instructions_dict(\\n-            cls.HEADER_FORMAT_INSTRUCTIONS_DICT\\n-        )\\n+            header = byte_stream.read_from_format_instructions_dict(\\n+                cls.HEADER_FORMAT_INSTRUCTIONS_DICT\\n+            )\\n+\\n+            if header[\\'auth_magic\\'] != b\\'openssh-key-v1\\\\x00\\':\\n+                raise ValueError(\\'Not an openssh-key-v1 key\\')\\n \\n-        if header[\\'auth_magic\\'] != b\\'openssh-key-v1\\\\x00\\':\\n-            raise ValueError(\\'Not an openssh-key-v1 key\\')\\n+            num_keys = header[\\'num_keys\\']\\n \\n-        num_keys = header[\\'num_keys\\']\\n+            if num_keys < 0:\\n+                raise ValueError(\\'Cannot parse negative number of keys\\')\\n \\n-        if num_keys < 0:\\n-            raise ValueError(\\'Cannot parse negative number of keys\\')\\n+            public_key_list = []\\n+            for i in range(num_keys):\\n+                public_key_bytes = byte_stream.read_from_format_instruction(\\n+                    PascalStyleFormatInstruction.BYTES\\n+                )\\n+                public_key_list.append(\\n+                    PublicKey.from_bytes(public_key_bytes)\\n+                )\\n \\n-        public_key_list = []\\n-        for i in range(num_keys):\\n-            public_key_bytes = byte_stream.read_from_format_instruction(\\n+            cipher_bytes = byte_stream.read_from_format_instruction(\\n                 PascalStyleFormatInstruction.BYTES\\n             )\\n-            public_key_list.append(\\n-                PublicKey.from_bytes(public_key_bytes)\\n-            )\\n \\n-        cipher_bytes = byte_stream.read_from_format_instruction(\\n-            PascalStyleFormatInstruction.BYTES\\n-        )\\n-\\n-        kdf_class = get_kdf_options_class(header[\\'kdf\\'])\\n-        kdf_options = kdf_class(\\n-            PascalStyleByteStream(\\n-                header[\\'kdf_options\\']\\n-            ).read_from_format_instructions_dict(\\n-                kdf_class.FORMAT_INSTRUCTIONS_DICT\\n+            kdf_class = get_kdf_options_class(header[\\'kdf\\'])\\n+            kdf_options = kdf_class(\\n+                PascalStyleByteStream(\\n+                    header[\\'kdf_options\\']\\n+                ).read_from_format_instructions_dict(\\n+                    kdf_class.FORMAT_INSTRUCTIONS_DICT\\n+                )\\n             )\\n-        )\\n \\n-        cipher_class = get_cipher_class(header[\\'cipher\\'])\\n+            cipher_class = get_cipher_class(header[\\'cipher\\'])\\n \\n-        if kdf_class == NoneKDFOptions:\\n-            passphrase = \\'\\'\\n-        elif passphrase is None:\\n-            passphrase = getpass.getpass(\\'Key passphrase: \\')\\n+            if kdf_class == NoneKDFOptions:\\n+                passphrase = \\'\\'\\n+            elif passphrase is None:\\n+                passphrase = getpass.getpass(\\'Key passphrase: \\')\\n \\n-        if issubclass(cipher_class, ConfidentialityIntegrityCipher):\\n-            cipher_bytes += byte_stream.read_fixed_bytes(\\n-                cipher_class.TAG_LENGTH\\n-            )\\n-\\n-        decipher_bytes = cipher_class.decrypt(\\n-            kdf_class(kdf_options),\\n-            passphrase,\\n-            cipher_bytes\\n-        )\\n-\\n-        decipher_byte_stream = PascalStyleByteStream(decipher_bytes)\\n+            if issubclass(cipher_class, ConfidentialityIntegrityCipher):\\n+                cipher_bytes += byte_stream.read_fixed_bytes(\\n+                    cipher_class.TAG_LENGTH\\n+                )\\n \\n-        decipher_bytes_header = \\\\\\n-            decipher_byte_stream.read_from_format_instructions_dict(\\n-                cls.DECIPHER_BYTES_HEADER_FORMAT_INSTRUCTIONS_DICT\\n+            decipher_bytes = cipher_class.decrypt(\\n+                kdf_class(kdf_options),\\n+                passphrase,\\n+                cipher_bytes\\n             )\\n \\n-        if decipher_bytes_header[\\'check_int_1\\'] \\\\\\n-                != decipher_bytes_header[\\'check_int_2\\']:\\n-            warnings.warn(\\'Cipher header check numbers do not match\\')\\n+            decipher_byte_stream = PascalStyleByteStream(decipher_bytes)\\n \\n-        initlist = []\\n-        for i in range(num_keys):\\n-            initlist.append(\\n-                PublicPrivateKeyPair(\\n-                    public_key_list[i],\\n-                    PrivateKey.from_byte_stream(decipher_byte_stream)\\n-                )\\n-            )\\n-            if initlist[i].public.header[\\'key_type\\'] \\\\\\n-                    != initlist[i].private.header[\\'key_type\\']:\\n-                warnings.warn(\\n-                    f\\'Inconsistency between private and public \\'\\n-                    f\\'key types for key {i}\\'\\n+            decipher_bytes_header = \\\\\\n+                decipher_byte_stream.read_from_format_instructions_dict(\\n+                    cls.DECIPHER_BYTES_HEADER_FORMAT_INSTRUCTIONS_DICT\\n                 )\\n-            if not all(\\n-                (\\n-                    initlist[i].public.params[k] ==\\n-                    initlist[i].private.params[k]\\n-                ) for k in (\\n-                    initlist[i].public.params.keys() &\\n-                    initlist[i].private.params.keys()\\n+\\n+            if decipher_bytes_header[\\'check_int_1\\'] \\\\\\n+                    != decipher_bytes_header[\\'check_int_2\\']:\\n+                warnings.warn(\\'Cipher header check numbers do not match\\')\\n+\\n+            initlist = []\\n+            for i in range(num_keys):\\n+                initlist.append(\\n+                    PublicPrivateKeyPair(\\n+                        public_key_list[i],\\n+                        PrivateKey.from_byte_stream(decipher_byte_stream)\\n+                    )\\n                 )\\n+                if initlist[i].public.header[\\'key_type\\'] \\\\\\n+                        != initlist[i].private.header[\\'key_type\\']:\\n+                    warnings.warn(\\n+                        f\\'Inconsistency between private and public \\'\\n+                        f\\'key types for key {i}\\'\\n+                    )\\n+                if not all(\\n+                    (\\n+                        initlist[i].public.params[k] ==\\n+                        initlist[i].private.params[k]\\n+                    ) for k in (\\n+                        initlist[i].public.params.keys() &\\n+                        initlist[i].private.params.keys()\\n+                    )\\n+                ):\\n+                    warnings.warn(\\n+                        f\\'Inconsistency between private and public \\'\\n+                        f\\'values for key {i}\\'\\n+                    )\\n+\\n+            decipher_padding = decipher_byte_stream.read()\\n+\\n+            if (\\n+                len(decipher_byte_stream.getvalue()) %\\n+                    cipher_class.BLOCK_SIZE != 0\\n+            ) or not (\\n+                bytes(\\n+                    range(1, 1 + cipher_class.BLOCK_SIZE)\\n+                ).startswith(decipher_padding)\\n             ):\\n-                warnings.warn(\\n-                    f\\'Inconsistency between private and public \\'\\n-                    f\\'values for key {i}\\'\\n-                )\\n-\\n-        decipher_padding = decipher_byte_stream.read()\\n-\\n-        if (\\n-            len(decipher_byte_stream.getvalue()) %\\n-                cipher_class.BLOCK_SIZE != 0\\n-        ) or not (\\n-            bytes(\\n-                range(1, 1 + cipher_class.BLOCK_SIZE)\\n-            ).startswith(decipher_padding)\\n-        ):\\n-            warnings.warn(\\'Incorrect padding at end of ciphertext\\')\\n+                warnings.warn(\\'Incorrect padding at end of ciphertext\\')\\n+        except ValueError as e:\\n+            raise e\\n+        except EOFError as e:\\n+            raise ValueError(\\'Premature EOF detected while parsing key.\\')\\n+        except e:\\n+            raise ValueError(\\'Unexpected error condition reached.\\')\\n \\n         return cls(\\n             initlist,'}}",
            "message_norm":"improved error handling to prevent unhandled exceptions in calling code.",
            "language":"en",
            "entities":"[('improved', 'ACTION', ''), ('error handling', 'SECWORD', ''), ('prevent', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['openssh_key\/private_key_list.py'])",
            "num_files":1.0
        },
        {
            "index":1127,
            "vuln_id":"GHSA-84cm-v6jp-gjmr",
            "cwe_id":"{'CWE-78'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/kellyselden\/git-diff-apply\/commit\/106d61d3ae723b4257c2a13e67b95eb40a27e0b5'}",
            "dataset":"osv",
            "summary":"OS command injection in git-diff-apply In \"index.js\" file line 240, the run command executes the git command with a user controlled variable called remoteUrl. This affects git-diff-apply all versions prior to 0.22.2.",
            "published_date":"2020-02-14",
            "chain_len":1,
            "project":"https:\/\/github.com\/kellyselden\/git-diff-apply",
            "commit_href":"https:\/\/github.com\/kellyselden\/git-diff-apply\/commit\/106d61d3ae723b4257c2a13e67b95eb40a27e0b5",
            "commit_sha":"106d61d3ae723b4257c2a13e67b95eb40a27e0b5",
            "patch":"SINGLE",
            "chain_ord":"['106d61d3ae723b4257c2a13e67b95eb40a27e0b5']",
            "before_first_fix_commit":"{'bfcc903a961d9f17bde1889cf49745a2dffefd73'}",
            "last_fix_commit":"106d61d3ae723b4257c2a13e67b95eb40a27e0b5",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/06\/2020, 12:05:14",
            "message":"spawn git clone\n\nto prevent injecting a command",
            "author":"Kelly Selden",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'src\/index.js': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/kellyselden\/git-diff-apply\/raw\/106d61d3ae723b4257c2a13e67b95eb40a27e0b5\/src%2Findex.js', 'patch': \"@@ -18,6 +18,7 @@ const resolveConflicts = require('.\/resolve-conflicts');\\n const commitAndTag = require('.\/commit-and-tag');\\n const gitRemoveAll = require('.\/git-remove-all');\\n const createCustomRemote = require('.\/create-custom-remote');\\n+const { runWithSpawn } = require('.\/run');\\n \\n const { isGitClean } = gitStatus;\\n const { gitConfigInit } = gitInit;\\n@@ -222,7 +223,7 @@ module.exports = async function gitDiffApply({\\n     _tmpDir = await tmpDir();\\n     tmpWorkingDir = _tmpDir;\\n \\n-    await utils.run(`git clone ${remoteUrl} ${_tmpDir}`);\\n+    await runWithSpawn('git', ['clone', remoteUrl, _tmpDir]);\\n \\n     \/\/ needed because we are going to be committing in here\\n     await gitConfigInit({ cwd: _tmpDir });\"}}",
            "message_norm":"spawn git clone\n\nto prevent injecting a command",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('injecting a command', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/index.js'])",
            "num_files":1.0
        },
        {
            "index":1610,
            "vuln_id":"GHSA-cvgx-3v3q-m36c",
            "cwe_id":"{'CWE-125'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a0d64445116c43cf46a5666bd4eee28e7a82f244'}",
            "dataset":"osv",
            "summary":"Heap OOB in shape inference for `QuantizeV2` ### Impact\nThe [shape inference code for `QuantizeV2`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/framework\/common_shape_fns.cc#L2509-L2530) can trigger a read outside of bounds of heap allocated array:\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef test():\n  data=tf.raw_ops.QuantizeV2(\n    input=[1.0,1.0],\n    min_range=[1.0,10.0],\n    max_range=[1.0,10.0],\n    T=tf.qint32,\n    mode='MIN_COMBINED',\n    round_mode='HALF_TO_EVEN',\n    narrow_range=False,\n    axis=-100,\n    ensure_minimum_range=10)\n  return data\n\ntest()\n```\n\nThis occurs whenever `axis` is a negative value less than `-1`. In this case, we are accessing data before the start of a heap buffer:\n    \n```cc\nint axis = -1;\nStatus s = c->GetAttr(\"axis\", &axis);\nif (!s.ok() && s.code() != error::NOT_FOUND) {\n  return s;\n}   \n... \nif (axis != -1) {\n  ...\n  TF_RETURN_IF_ERROR(\n      c->Merge(c->Dim(minmax, 0), c->Dim(input, axis), &depth));\n}\n```\n\nThe code allows `axis` to be an optional argument (`s` would contain an `error::NOT_FOUND` error code). Otherwise, it assumes that `axis` is a valid index into the dimensions of the `input` tensor. If `axis` is less than `-1` then this results in a heap OOB read.\n    \n### Patches\nWe have patched the issue in GitHub commit [a0d64445116c43cf46a5666bd4eee28e7a82f244](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a0d64445116c43cf46a5666bd4eee28e7a82f244).\n    \nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, as this version is the only one that is also affected.\n  \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-11-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a0d64445116c43cf46a5666bd4eee28e7a82f244",
            "commit_sha":"a0d64445116c43cf46a5666bd4eee28e7a82f244",
            "patch":"SINGLE",
            "chain_ord":"['a0d64445116c43cf46a5666bd4eee28e7a82f244']",
            "before_first_fix_commit":"{'4a7c71d60c94ae3bc8149429988eeeb1d5466f00'}",
            "last_fix_commit":"a0d64445116c43cf46a5666bd4eee28e7a82f244",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/01\/2021, 22:52:56",
            "message":"Prevent OOB access in QuantizeV2 shape inference\n\nPiperOrigin-RevId: 400309614\nChange-Id: I31412c71b05b4f21b677f7fa715a61499cbee39d",
            "author":"Yu-Cheng Ling",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/core\/framework\/common_shape_fns.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a0d64445116c43cf46a5666bd4eee28e7a82f244\/tensorflow%2Fcore%2Fframework%2Fcommon_shape_fns.cc', 'patch': '@@ -2559,6 +2559,9 @@ Status QuantizeV2Shape(InferenceContext* c) {\\n   if (!s.ok() && s.code() != error::NOT_FOUND) {\\n     return s;\\n   }\\n+  if (axis < -1) {\\n+    return errors::InvalidArgument(\"axis should be at least -1, got \", axis);\\n+  }\\n   const int minmax_rank = (axis == -1) ? 0 : 1;\\n   TF_RETURN_IF_ERROR(shape_inference::UnchangedShape(c));\\n   ShapeHandle minmax;'}}",
            "message_norm":"prevent oob access in quantizev2 shape inference\n\npiperorigin-revid: 400309614\nchange-id: i31412c71b05b4f21b677f7fa715a61499cbee39d",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('oob', 'SECWORD', ''), ('400309614', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/framework\/common_shape_fns.cc'])",
            "num_files":1.0
        },
        {
            "index":1415,
            "vuln_id":"GHSA-9px9-73fg-3fqp",
            "cwe_id":"{'CWE-476'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/045deec1cbdebb27d817008ad5df94d96a08b1bf', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0a365c029e437be0349c31f8d4c9926b69fa3fa1'}",
            "dataset":"osv",
            "summary":"Null pointer dereference in Grappler's `IsConstant` ### Impact\nUnder certain scenarios, Grappler component of TensorFlow can trigger a null pointer dereference. There are 2 places where this can occur, for the same malicious alteration of a `SavedModel` file (fixing the first one would trigger the same dereference in the second place):\n\nFirst, during [constant folding](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/optimizers\/constant_folding.cc#L3466-L3497), the `GraphDef` might not have the required nodes for the binary operation:\n\n```cc\n  NodeDef* mul_left_child = node_map_->GetNode(node->input(0));\n  NodeDef* mul_right_child = node_map_->GetNode(node->input(1));\n  \/\/ One child must be constant, and the second must be Conv op.\n  const bool left_child_is_constant = IsReallyConstant(*mul_left_child);\n  const bool right_child_is_constant = IsReallyConstant(*mul_right_child);\n```\n\nIf a node is missing, the correposning `mul_*child` would be null, and the dereference in the subsequent line would be incorrect.\n\nWe have a similar issue during [`IsIdentityConsumingSwitch`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/mutable_graph_view.cc#L59-L74):\n\n```cc\n  NodeDef* input_node = graph.GetNode(tensor_id.node());\n  return IsSwitch(*input_node);\n```\n\n### Patches\nWe have patched the issue in GitHub commits [0a365c029e437be0349c31f8d4c9926b69fa3fa1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0a365c029e437be0349c31f8d4c9926b69fa3fa1) and [045deec1cbdebb27d817008ad5df94d96a08b1bf](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/045deec1cbdebb27d817008ad5df94d96a08b1bf).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-09",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/045deec1cbdebb27d817008ad5df94d96a08b1bf",
            "commit_sha":"045deec1cbdebb27d817008ad5df94d96a08b1bf",
            "patch":"MULTI",
            "chain_ord":"['0a365c029e437be0349c31f8d4c9926b69fa3fa1', '045deec1cbdebb27d817008ad5df94d96a08b1bf']",
            "before_first_fix_commit":"{'0a365c029e437be0349c31f8d4c9926b69fa3fa1'}",
            "last_fix_commit":"045deec1cbdebb27d817008ad5df94d96a08b1bf",
            "chain_ord_pos":2.0,
            "commit_datetime":"11\/13\/2021, 18:12:22",
            "message":"Prevent null pointer dereference in `mutable_graph_view`\n\nPiperOrigin-RevId: 409684472\nChange-Id: I577eb9d9ac470fcec0501423171e739a4ec0cb5c",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/core\/grappler\/mutable_graph_view.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/045deec1cbdebb27d817008ad5df94d96a08b1bf\/tensorflow%2Fcore%2Fgrappler%2Fmutable_graph_view.cc', 'patch': '@@ -68,6 +68,9 @@ bool IsIdentityConsumingSwitch(const MutableGraphView& graph,\\n     }\\n \\n     NodeDef* input_node = graph.GetNode(tensor_id.node());\\n+    if (input_node == nullptr) {\\n+      return false;\\n+    }\\n     return IsSwitch(*input_node);\\n   }\\n   return false;'}}",
            "message_norm":"prevent null pointer dereference in `mutable_graph_view`\n\npiperorigin-revid: 409684472\nchange-id: i577eb9d9ac470fcec0501423171e739a4ec0cb5c",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('null pointer dereference', 'SECWORD', ''), ('409684472', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/grappler\/mutable_graph_view.cc'])",
            "num_files":1.0
        },
        {
            "index":449,
            "vuln_id":"GHSA-4mv4-gmmf-q382",
            "cwe_id":"{'CWE-79'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/DataTables\/DataTablesSrc\/commit\/ccf86dc5982bd8e16d11a0815c940f5b256874c9', 'https:\/\/github.com\/DataTables\/DataTablesSrc\/commit\/9780a3693572757d87bf70e48bd7555faf974f28'}",
            "dataset":"osv",
            "summary":"DataTable Vulnerable to Cross-Site Scripting Cross-site scripting (XSS) vulnerability in the DataTables plugin 1.10.8 and earlier for jQuery allows remote attackers to inject arbitrary web script or HTML via the scripts parameter to media\/unit_testing\/templates\/6776.php.\n\n\n## Recommendation\n\nUpdate to a version greater than 1.10.8. A [fix](https:\/\/github.com\/DataTables\/DataTablesSrc\/commit\/ccf86dc5982bd8e16d) appears in [version 1.10.10](https:\/\/github.com\/DataTables\/DataTablesSrc\/commits\/1.10.10?after=9780a3693572757d87bf70e48bd7555faf974f28+34&branch=1.10.10&qualified_name=refs%2Ftags%2F1.10.10).",
            "published_date":"2020-08-31",
            "chain_len":2,
            "project":"https:\/\/github.com\/DataTables\/DataTablesSrc",
            "commit_href":"https:\/\/github.com\/DataTables\/DataTablesSrc\/commit\/9780a3693572757d87bf70e48bd7555faf974f28",
            "commit_sha":"9780a3693572757d87bf70e48bd7555faf974f28",
            "patch":"MULTI",
            "chain_ord":"['ccf86dc5982bd8e16d11a0815c940f5b256874c9', '9780a3693572757d87bf70e48bd7555faf974f28']",
            "before_first_fix_commit":"{'51fa58e1c6baf456fe83fbfc7bfa4082be850365'}",
            "last_fix_commit":"9780a3693572757d87bf70e48bd7555faf974f28",
            "chain_ord_pos":2.0,
            "commit_datetime":"11\/06\/2015, 15:33:43",
            "message":"Version - 1.10.10 ready",
            "author":"Allan Jardine",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 3, 'total': 6}",
            "files":"{'js\/DataTables.js': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DataTables\/DataTablesSrc\/raw\/9780a3693572757d87bf70e48bd7555faf974f28\/js%2FDataTables.js', 'patch': '@@ -1,11 +1,11 @@\\n-\/*! DataTables 1.10.10-dev\\n+\/*! DataTables 1.10.10\\n  * \u00a92008-2015 SpryMedia Ltd - datatables.net\/license\\n  *\/\\n \\n \/**\\n  * @summary     DataTables\\n  * @description Paginate, search and order HTML tables\\n- * @version     1.10.10-dev\\n+ * @version     1.10.10\\n  * @file        jquery.dataTables.js\\n  * @author      SpryMedia Ltd (www.sprymedia.co.uk)\\n  * @contact     www.sprymedia.co.uk\/contact\\n@@ -170,7 +170,7 @@\\n \\t *  @type string\\n \\t *  @default Version number\\n \\t *\/\\n-\\tDataTable.version = \"1.10.10-dev\";\\n+\\tDataTable.version = \"1.10.10\";\\n \\n \\t\/**\\n \\t * Private data store, containing all of the settings objects that are'}}",
            "message_norm":"version - 1.10.10 ready",
            "language":"en",
            "entities":"[('1.10.10', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['js\/DataTables.js'])",
            "num_files":1.0
        },
        {
            "index":1118,
            "vuln_id":"GHSA-832h-xg76-4gv6",
            "cwe_id":"{'CWE-20'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/juliangruber\/brace-expansion\/pull\/35\/commits\/b13381281cead487cbdbfd6a69fb097ea5e456c3'}",
            "dataset":"osv",
            "summary":"ReDoS in brace-expansion Affected versions of `brace-expansion` are vulnerable to a regular expression denial of service condition.\n\n## Proof of Concept\n\n```\nvar expand = require('brace-expansion');\nexpand('{,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\\n}');\n```\n\n\n## Recommendation\n\nUpdate to version 1.1.7 or later.",
            "published_date":"2018-01-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/juliangruber\/brace-expansion",
            "commit_href":"https:\/\/github.com\/juliangruber\/brace-expansion\/pull\/35\/commits\/b13381281cead487cbdbfd6a69fb097ea5e456c3",
            "commit_sha":"b13381281cead487cbdbfd6a69fb097ea5e456c3",
            "patch":"SINGLE",
            "chain_ord":"['b13381281cead487cbdbfd6a69fb097ea5e456c3']",
            "before_first_fix_commit":"{'265f6cd6586383eebebbfc3c45da2eaa153d9e63'}",
            "last_fix_commit":"b13381281cead487cbdbfd6a69fb097ea5e456c3",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/07\/2017, 02:32:55",
            "message":"fix bug in https:\/\/github.com\/juliangruber\/brace-expansion\/issues\/33",
            "author":"mengyuan.ymy",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/juliangruber\/brace-expansion\/raw\/b13381281cead487cbdbfd6a69fb097ea5e456c3\/index.js', 'patch': \"@@ -106,7 +106,7 @@ function expand(str, isTop) {\\n   var isNumericSequence = \/^-?\\\\d+\\\\.\\\\.-?\\\\d+(?:\\\\.\\\\.-?\\\\d+)?$\/.test(m.body);\\n   var isAlphaSequence = \/^[a-zA-Z]\\\\.\\\\.[a-zA-Z](?:\\\\.\\\\.-?\\\\d+)?$\/.test(m.body);\\n   var isSequence = isNumericSequence || isAlphaSequence;\\n-  var isOptions = \/^(.*,)+(.+)?$\/.test(m.body);\\n+  var isOptions = m.body.indexOf(',') >= 0;\\n   if (!isSequence && !isOptions) {\\n     \/\/ {a},b}\\n     if (m.post.match(\/,.*\\\\}\/)) {\"}}",
            "message_norm":"fix bug in https:\/\/github.com\/juliangruber\/brace-expansion\/issues\/33",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('bug', 'FLAW', ''), ('https:\/\/github.com\/juliangruber\/brace-expansion\/issues\/33', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0
        },
        {
            "index":720,
            "vuln_id":"GHSA-5xjx-4xcm-hpcm",
            "cwe_id":"{'CWE-1321', 'CWE-915'}",
            "score":7.3,
            "chain":"{'https:\/\/github.com\/BadOPCode\/NoDash\/commit\/b9cc2b3b49f6cd5228e406bc57e17a28b998fea5'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in ts-nodash `ts-nodash` before version 1.2.7 is vulnerable to Prototype Pollution via the Merge() function due to lack of validation input.",
            "published_date":"2021-12-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/BadOPCode\/NoDash",
            "commit_href":"https:\/\/github.com\/BadOPCode\/NoDash\/commit\/b9cc2b3b49f6cd5228e406bc57e17a28b998fea5",
            "commit_sha":"b9cc2b3b49f6cd5228e406bc57e17a28b998fea5",
            "patch":"SINGLE",
            "chain_ord":"['b9cc2b3b49f6cd5228e406bc57e17a28b998fea5']",
            "before_first_fix_commit":"{'78f4ffab4ed76c43f6f7fb91d8b329acb0d6e684'}",
            "last_fix_commit":"b9cc2b3b49f6cd5228e406bc57e17a28b998fea5",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/11\/2021, 02:50:07",
            "message":"Security fix for Prototype Pollution (#20)\n\nCo-authored-by: Arjun Shibu <arjunshibu1999@gmail.com>\r\nCo-authored-by: Jamie Slome <jamie@418sec.com>\r\nCo-authored-by: Shawn <BadOPCode@users.noreply.github.com>",
            "author":"huntr.dev | the place to protect open source",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 1, 'total': 7}",
            "files":"{'src\/Merge.ts': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/BadOPCode\/NoDash\/raw\/b9cc2b3b49f6cd5228e406bc57e17a28b998fea5\/src%2FMerge.ts', 'patch': '@@ -47,13 +47,18 @@ const  handleDefaultBehavior = (originalObject: any, newObject: any, behavior?:\\n     if (originalTypeName === \"Object\" && newTypeName === \"Object\") { \/\/ built-in behavior\\n         \/\/ tslint:disable:forin\\n         for (const p in newObject) {\\n+            if (isPrototypePolluted(p)) continue\\n             originalObject[p] = processBehavior(originalObject[p], newObject[p], behavior);\\n         }\\n         \/\/ tslint:enable:forin\\n         return originalObject;\\n     }\\n };\\n \\n+const isPrototypePolluted = (key: any) => {\\n+    return [\\'__proto__\\', \\'constructor\\', \\'prototype\\'].includes(key)\\n+}\\n+\\n \/**\\n  * Recursively merge two objects together.\\n  * @param originalObject The base object. Properties here will be overwritten\\n@@ -72,7 +77,7 @@ export const Merge = (originalObject: any, newObject: any, behavior?: IMergeBeha\\n             return definedBehaviorResults;\\n         }\\n     }\\n-\\n+    \\n     return handleDefaultBehavior(originalObject, newObject, behavior);\\n };'}}",
            "message_norm":"security fix for prototype pollution (#20)\n\nco-authored-by: arjun shibu <arjunshibu1999@gmail.com>\r\nco-authored-by: jamie slome <jamie@418sec.com>\r\nco-authored-by: shawn <badopcode@users.noreply.github.com>",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('prototype pollution', 'SECWORD', ''), ('#20', 'ISSUE', ''), ('arjunshibu1999@gmail.com', 'EMAIL', ''), ('jamie@418sec.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Merge.ts'])",
            "num_files":1.0
        },
        {
            "index":2462,
            "vuln_id":"GHSA-mrq4-7ch7-2465",
            "cwe_id":"{'CWE-94'}",
            "score":9.0,
            "chain":"{'https:\/\/github.com\/PrestaShop\/PrestaShop\/commit\/d02b469ec365822e6a9f017e57f588966248bf21'}",
            "dataset":"osv",
            "summary":"Server Side Twig Template Injection PrestaShop is an Open Source e-commerce platform. Starting with version 1.7.0.0 and ending with version 1.7.8.3, an attacker is able to inject twig code inside the back office when using the legacy layout. The problem is fixed in version 1.7.8.3. There are no known workarounds.",
            "published_date":"2022-01-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/PrestaShop\/PrestaShop",
            "commit_href":"https:\/\/github.com\/PrestaShop\/PrestaShop\/commit\/d02b469ec365822e6a9f017e57f588966248bf21",
            "commit_sha":"d02b469ec365822e6a9f017e57f588966248bf21",
            "patch":"SINGLE",
            "chain_ord":"['d02b469ec365822e6a9f017e57f588966248bf21']",
            "before_first_fix_commit":"{'ed8eb7ce8242e91d7acf85d7157277aad6bcac21', 'd2807b0560d5ca2835c6a4774e183c182d903f1a'}",
            "last_fix_commit":"d02b469ec365822e6a9f017e57f588966248bf21",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/26\/2022, 09:20:05",
            "message":"Merge pull request from GHSA-mrq4-7ch7-2465\n\nProperly escape smarty output for twig",
            "author":"GoT",
            "comments":null,
            "stats":"{'additions': 18, 'deletions': 19, 'total': 37}",
            "files":"{'src\/PrestaShopBundle\/Twig\/LayoutExtension.php': {'additions': 18, 'deletions': 19, 'changes': 37, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/PrestaShop\/PrestaShop\/raw\/d02b469ec365822e6a9f017e57f588966248bf21\/src%2FPrestaShopBundle%2FTwig%2FLayoutExtension.php', 'patch': \"@@ -218,26 +218,25 @@ public function getLegacyLayout(\\n             throw new Exception('PrestaShopBundle\\\\Twig\\\\LayoutExtension cannot find the {$content} string in legacy layout template', 1);\\n         }\\n \\n-        $content = str_replace(\\n-            [\\n-                '{$content}',\\n-                'var currentIndex = \\\\'index.php\\\\';',\\n-                '<\/head>',\\n-                '<\/body>',\\n-            ],\\n-            [\\n-                '{% block content_header %}{% endblock %}\\n-                 {% block content %}{% endblock %}\\n-                 {% block content_footer %}{% endblock %}\\n-                 {% block sidebar_right %}{% endblock %}',\\n-                'var currentIndex = \\\\'' . $this->context->getAdminLink($controllerName) . '\\\\';',\\n-                '{% block stylesheets %}{% endblock %}{% block extra_stylesheets %}{% endblock %}<\/head>',\\n-                '{% block javascripts %}{% endblock %}{% block extra_javascripts %}{% endblock %}{% block translate_javascripts %}{% endblock %}<\/body>',\\n-            ],\\n-            $layout\\n-        );\\n+        $explodedLayout = explode('{$content}', $layout);\\n+        $header = explode('<\/head>', $explodedLayout[0]);\\n+        $footer = explode('<\/body>', $explodedLayout[1]);\\n+\\n+        return $this->escapeSmarty(str_replace('var currentIndex = \\\\'index.php\\\\';', 'var currentIndex = \\\\'' . $this->context->getAdminLink($controllerName) . '\\\\';', $header[0]))\\n+            . '{% block stylesheets %}{% endblock %}{% block extra_stylesheets %}{% endblock %}<\/head>'\\n+            . $this->escapeSmarty($header[1])\\n+            . '{% block content_header %}{% endblock %}'\\n+            . '{% block content %}{% endblock %}'\\n+            . '{% block content_footer %}{% endblock %}'\\n+            . '{% block sidebar_right %}{% endblock %}'\\n+            . $this->escapeSmarty($footer[0])\\n+            . '{% block javascripts %}{% endblock %}{% block extra_javascripts %}{% endblock %}{% block translate_javascripts %}{% endblock %}<\/body>'\\n+            . $this->escapeSmarty($footer[1]);\\n+    }\\n \\n-        return $content;\\n+    private function escapeSmarty(string $template): string\\n+    {\\n+        return '{{ \\\\'' . addslashes($template) . '\\\\' | raw }}';\\n     }\\n \\n     \/**\"}}",
            "message_norm":"merge pull request from ghsa-mrq4-7ch7-2465\n\nproperly escape smarty output for twig",
            "language":"en",
            "entities":"[('ghsa-mrq4-7ch7-2465', 'VULNID', 'GHSA'), ('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/PrestaShopBundle\/Twig\/LayoutExtension.php'])",
            "num_files":1.0
        },
        {
            "index":2329,
            "vuln_id":"GHSA-m2fc-9h5m-29cm",
            "cwe_id":"{'CWE-77'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/acrontum\/filesystem-template\/pull\/14\/commits\/baeb727b60991ad82d9e63ac660883793abc0acc'}",
            "dataset":"osv",
            "summary":"@acrontum\/filesystem-template vulnerable to Command Injection due to fetchRepo API missing sanitization The package @acrontum\/filesystem-template before 0.0.2 is vulnerable to Arbitrary Command Injection due to the fetchRepo API missing sanitization of the href field of external input.",
            "published_date":"2022-08-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/acrontum\/filesystem-template",
            "commit_href":"https:\/\/github.com\/acrontum\/filesystem-template\/pull\/14\/commits\/baeb727b60991ad82d9e63ac660883793abc0acc",
            "commit_sha":"baeb727b60991ad82d9e63ac660883793abc0acc",
            "patch":"SINGLE",
            "chain_ord":"['baeb727b60991ad82d9e63ac660883793abc0acc']",
            "before_first_fix_commit":"{'7883cb4e87c1bd2bf276f741fa8eeaa2af7565c7'}",
            "last_fix_commit":"baeb727b60991ad82d9e63ac660883793abc0acc",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/04\/2022, 17:45:08",
            "message":"remove url from fetch repo\n\ncloses #13",
            "author":"p-mcgowan",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 3, 'total': 6}",
            "files":"{'src\/lib\/file-utils.ts': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/acrontum\/filesystem-template\/raw\/baeb727b60991ad82d9e63ac660883793abc0acc\/src%2Flib%2Ffile-utils.ts', 'patch': \"@@ -162,7 +162,7 @@ export const fetchSource = async (pathlike: string, options?: SourceOptions): Pr\\n \\n   const cache = getCacheDir(url);\\n   if (!sourceCache[cache?.path]) {\\n-    sourceCache[cache?.path] = isRecipeFile(url.pathname) ? fetchRecipe(url, cache, options) : fetchRepo(url, cache, options);\\n+    sourceCache[cache?.path] = isRecipeFile(url.pathname) ? fetchRecipe(url, cache, options) : fetchRepo(cache, options);\\n   } else {\\n     logger.log(`cache hit on ${cache?.path}`);\\n   }\\n@@ -237,7 +237,7 @@ export const fetchRecipe = async (url: URL, cacheInfo: CacheInfo, options?: Sour\\n  *\\n  * @return {Promise<string>}  The repo.\\n  *\/\\n-export const fetchRepo = async (url: URL, cacheInfo: CacheInfo, options?: SourceOptions): Promise<string> => {\\n+export const fetchRepo = async (cacheInfo: CacheInfo, options?: SourceOptions): Promise<string> => {\\n   let branch = cacheInfo.branch;\\n   const { path: repo, origin, repoName } = cacheInfo;\\n \\n@@ -247,7 +247,7 @@ export const fetchRepo = async (url: URL, cacheInfo: CacheInfo, options?: Source\\n     return repo;\\n   }\\n \\n-  logger.debug({ url, branch, repo, origin });\\n+  logger.debug({ branch, repo, origin });\\n   logger.info(`will clone ${branch ? `${logger.blu(branch)} of ` : ''}${logger.ylw(origin)} into ${logger.grn(repoName)}`);\\n \\n   const cwd = repo;\"}}",
            "message_norm":"remove url from fetch repo\n\ncloses #13",
            "language":"en",
            "entities":"[('remove', 'ACTION', ''), ('#13', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lib\/file-utils.ts'])",
            "num_files":1.0
        },
        {
            "index":2477,
            "vuln_id":"GHSA-mw75-qvfr-hpmr",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/830c89a4c2c5fd0dd491422bf8e97b4eb5713f55'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in ShowDoc ShowDoc is vulnerable to stored cross-site scripting through file upload in versions 2.10.3 and prior. A patch is available and anticipated to be part of version 2.10.4.",
            "published_date":"2022-03-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/830c89a4c2c5fd0dd491422bf8e97b4eb5713f55",
            "commit_sha":"830c89a4c2c5fd0dd491422bf8e97b4eb5713f55",
            "patch":"SINGLE",
            "chain_ord":"['830c89a4c2c5fd0dd491422bf8e97b4eb5713f55']",
            "before_first_fix_commit":"{'da56d1d68702a7a80506245c251e58eaf84cff27', '42c0d9813df3035728b36116a6ce9116e6fa8ed3'}",
            "last_fix_commit":"830c89a4c2c5fd0dd491422bf8e97b4eb5713f55",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/13\/2022, 08:03:16",
            "message":"Merge pull request #1628 from ajaysenr\/master\n\nUpdate AttachmentModel.class.php",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/830c89a4c2c5fd0dd491422bf8e97b4eb5713f55\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -303,6 +303,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \".shtm\")\\n \\t\\t\\t|| $isDangerStr($filename , \"%\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".xxhtml\")\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}\\n@@ -312,4 +313,4 @@ public function isDangerFilename($filename){\\n \\n \\n \\n-}\\n\\\\ No newline at end of file\\n+}'}}",
            "message_norm":"merge pull request #1628 from ajaysenr\/master\n\nupdate attachmentmodel.class.php",
            "language":"en",
            "entities":"[('#1628', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
            "num_files":1.0
        },
        {
            "index":3080,
            "vuln_id":"GHSA-v89p-5hr2-4rh4",
            "cwe_id":"{'CWE-787'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/6b1250b6ffea7006226dd937e52cf5b353fcfc15', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/bf52b6cfa96d6395046d0aaf87396cd7ca13f6cb'}",
            "dataset":"osv",
            "summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-1131, CVE-2019-1139, CVE-2019-1140, CVE-2019-1141, CVE-2019-1195, CVE-2019-1196.",
            "published_date":"2021-03-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/chakra-core\/ChakraCore",
            "commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/bf52b6cfa96d6395046d0aaf87396cd7ca13f6cb",
            "commit_sha":"bf52b6cfa96d6395046d0aaf87396cd7ca13f6cb",
            "patch":"MULTI",
            "chain_ord":"['bf52b6cfa96d6395046d0aaf87396cd7ca13f6cb', '6b1250b6ffea7006226dd937e52cf5b353fcfc15']",
            "before_first_fix_commit":"{'75162b7f2d8ac2b37d17564e9c979ba1bae707e8', '450a349fda1b153d758a9e01698b977e60870e4c'}",
            "last_fix_commit":"6b1250b6ffea7006226dd937e52cf5b353fcfc15",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/02\/2019, 19:08:32",
            "message":"[CVE-2019-1197] Chakra JIT Type Confusion",
            "author":"Michael Holman",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 4, 'total': 15}",
            "files":"{'lib\/Backend\/GlobOptIntBounds.cpp': {'additions': 11, 'deletions': 4, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/bf52b6cfa96d6395046d0aaf87396cd7ca13f6cb\/lib%2FBackend%2FGlobOptIntBounds.cpp', 'patch': '@@ -1278,13 +1278,20 @@ GlobOpt::InvalidateInductionVariables(IR::Instr * instr)\\n     }\\n \\n     \/\/ If this is an induction variable, then treat it the way the prepass would have if it had seen\\n-    \/\/ the assignment and the resulting change to the value number, and mark it as indeterminate.\\n+    \/\/ the assignment and the resulting change to the value number, and mark induction variables\\n+    \/\/ for the loop as indeterminate.\\n+    \/\/ We need to invalidate all induction variables for the loop, because we might have used the\\n+    \/\/ invalidated induction variable to calculate the loopCount, and this now invalid loopCount\\n+    \/\/ also impacts bound checks for secondary induction variables\\n     for (Loop * loop = this->currentBlock->loop; loop; loop = loop->parent)\\n     {\\n-        InductionVariable *iv = nullptr;\\n-        if (loop->inductionVariables && loop->inductionVariables->TryGetReference(dstSym->m_id, &iv))\\n+        if (loop->inductionVariables && loop->inductionVariables->ContainsKey(dstSym->m_id))\\n         {\\n-            iv->SetChangeIsIndeterminate();\\n+            for (auto it = loop->inductionVariables->GetIterator(); it.IsValid(); it.MoveNext())\\n+            {\\n+                InductionVariable& inductionVariable = it.CurrentValueReference();\\n+                inductionVariable.SetChangeIsIndeterminate();\\n+            }\\n         }\\n     }\\n }'}}",
            "message_norm":"[cve-2019-1197] chakra jit type confusion",
            "language":"en",
            "entities":"[('cve-2019-1197', 'VULNID', 'CVE'), ('type confusion', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/Backend\/GlobOptIntBounds.cpp'])",
            "num_files":1.0
        },
        {
            "index":162,
            "vuln_id":"GHSA-2x7h-96h5-rq84",
            "cwe_id":"{'CWE-22'}",
            "score":4.0,
            "chain":"{'https:\/\/github.com\/icsharpcode\/SharpZipLib\/commit\/5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78'}",
            "dataset":"osv",
            "summary":"Path Traversal in SharpZipLib SharpZipLib (or #ziplib) is a Zip, GZip, Tar and BZip2 library. Starting version 1.3.0 and prior to version 1.3.3, a check was added if the destination file is under destination directory. However, it is not enforced that `destDir` ends with slash. If the `destDir` is not slash terminated like `\/home\/user\/dir` it is possible to create a file with a name thats begins with the destination directory, i.e. `\/home\/user\/dir.sh`. Because of the file name and destination directory constraints, the arbitrary file creation impact is limited and depends on the use case. Version 1.3.3 contains a patch for this vulnerability.",
            "published_date":"2022-02-01",
            "chain_len":1,
            "project":"https:\/\/github.com\/icsharpcode\/SharpZipLib",
            "commit_href":"https:\/\/github.com\/icsharpcode\/SharpZipLib\/commit\/5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78",
            "commit_sha":"5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78",
            "patch":"SINGLE",
            "chain_ord":"['5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78']",
            "before_first_fix_commit":"{'a0e96de70b5264f4c919b09253b1522bc7a221cc'}",
            "last_fix_commit":"5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/18\/2021, 09:58:11",
            "message":"fix: specialized tar extract traversal",
            "author":"nils m\u00e5s\u00e9n",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'src\/ICSharpCode.SharpZipLib\/Tar\/TarArchive.cs': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/icsharpcode\/SharpZipLib\/raw\/5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78\/src%2FICSharpCode.SharpZipLib%2FTar%2FTarArchive.cs', 'patch': '@@ -658,8 +658,9 @@ private void ExtractEntry(string destDir, TarEntry entry, bool allowParentTraver\\n \\t\\t\\tname = name.Replace(\\'\/\\', Path.DirectorySeparatorChar);\\n \\n \\t\\t\\tstring destFile = Path.Combine(destDir, name);\\n+\\t\\t\\tvar destFileDir = Path.GetDirectoryName(Path.GetFullPath(destFile)) ?? \"\";\\n \\n-\\t\\t\\tif (!allowParentTraversal && !Path.GetFullPath(destFile).StartsWith(destDir, StringComparison.InvariantCultureIgnoreCase))\\n+\\t\\t\\tif (!allowParentTraversal && !destFileDir.StartsWith(destDir, StringComparison.InvariantCultureIgnoreCase))\\n \\t\\t\\t{\\n \\t\\t\\t\\tthrow new InvalidNameException(\"Parent traversal in paths is not allowed\");\\n \\t\\t\\t}'}}",
            "message_norm":"fix: specialized tar extract traversal",
            "language":"en",
            "entities":"[('extract traversal', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/ICSharpCode.SharpZipLib\/Tar\/TarArchive.cs'])",
            "num_files":1.0
        },
        {
            "index":2718,
            "vuln_id":"GHSA-q863-cchm-c6c6",
            "cwe_id":"{'CWE-89'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/forkcms\/forkcms\/commit\/7a12046a67ae5d8cf04face3ee75e55f03a1a608'}",
            "dataset":"osv",
            "summary":"SQL Injection in Fork CMS Fork CMS contains a SQL injection vulnerability in versions prior to version 5.11.1. When deleting submissions which belong to a formular (made with module `FormBuilder`), the parameter `id[]` is vulnerable to SQL injection.",
            "published_date":"2022-03-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/forkcms\/forkcms",
            "commit_href":"https:\/\/github.com\/forkcms\/forkcms\/commit\/7a12046a67ae5d8cf04face3ee75e55f03a1a608",
            "commit_sha":"7a12046a67ae5d8cf04face3ee75e55f03a1a608",
            "patch":"SINGLE",
            "chain_ord":"['7a12046a67ae5d8cf04face3ee75e55f03a1a608']",
            "before_first_fix_commit":"{'1b38e33a98992793e998a937b717355212346993'}",
            "last_fix_commit":"7a12046a67ae5d8cf04face3ee75e55f03a1a608",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/23\/2022, 12:16:53",
            "message":"Prevent sql injection through the ids of the action",
            "author":"Jelmer Prins",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'src\/Backend\/Modules\/FormBuilder\/Engine\/Model.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/forkcms\/forkcms\/raw\/7a12046a67ae5d8cf04face3ee75e55f03a1a608\/src%2FBackend%2FModules%2FFormBuilder%2FEngine%2FModel.php', 'patch': \"@@ -152,6 +152,7 @@ public static function delete(int $id): void\\n     public static function deleteData(array $ids): void\\n     {\\n         $database = BackendModel::getContainer()->get('database');\\n+        $ids = array_map('intval', $ids);\\n \\n         $database->delete('forms_data', 'id IN(' . implode(',', $ids) . ')');\\n         $database->delete('forms_data_fields', 'data_id IN(' . implode(',', $ids) . ')');\"}}",
            "message_norm":"prevent sql injection through the ids of the action",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('sql injection', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Backend\/Modules\/FormBuilder\/Engine\/Model.php'])",
            "num_files":1.0
        },
        {
            "index":2704,
            "vuln_id":"GHSA-q5wr-fvpq-p67g",
            "cwe_id":"{'CWE-787', 'CWE-190'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/gemini-testing\/png-img\/commit\/14ac462a32ca4b3b78f56502ac976d5b0222ce3d'}",
            "dataset":"osv",
            "summary":"Integer Overflow in png-img An integer overflow in the PngImg::InitStorage_() function of png-img before 3.1.0 leads to an under-allocation of heap memory and subsequently an exploitable heap-based buffer overflow when loading a crafted PNG file.",
            "published_date":"2021-12-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/gemini-testing\/png-img",
            "commit_href":"https:\/\/github.com\/gemini-testing\/png-img\/commit\/14ac462a32ca4b3b78f56502ac976d5b0222ce3d",
            "commit_sha":"14ac462a32ca4b3b78f56502ac976d5b0222ce3d",
            "patch":"SINGLE",
            "chain_ord":"['14ac462a32ca4b3b78f56502ac976d5b0222ce3d']",
            "before_first_fix_commit":"{'9fedfccb9ab2d1ccee4d7d544f3e03d505317352'}",
            "last_fix_commit":"14ac462a32ca4b3b78f56502ac976d5b0222ce3d",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/06\/2020, 00:45:40",
            "message":"Handle image size overflow",
            "author":"Mikhail Cheshkov",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 2, 'total': 14}",
            "files":"{'src\/PngImg.cc': {'additions': 12, 'deletions': 2, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gemini-testing\/png-img\/raw\/14ac462a32ca4b3b78f56502ac976d5b0222ce3d\/src%2FPngImg.cc', 'patch': '@@ -60,10 +60,20 @@ void PngImg::ReadInfo_(PngReadStruct& rs) {\\n \/\/\/\\n void PngImg::InitStorage_() {\\n     rowPtrs_.resize(info_.height, nullptr);\\n-    data_ = new png_byte[info_.height * info_.rowbytes];\\n+    \/\/ Extend height and rowbytes from uint32_t to size_t to avoid multiplication overflow when size_t is larger\\n+    size_t h = info_.height;\\n+    size_t rb = info_.rowbytes;\\n+    \/\/ We need to make sure that info_.height * info_.rowbytes will not overflow size_t\\n+    \/\/ Unfotunately, there\\'s no simple and portable way to do this in C++\\n+    \/\/ For integer division of positive numbers a * b > c <==> a > c \/ b holds\\n+    if (h > std::numeric_limits<size_t>::max() \/ rb) {\\n+        \/\/ TODO Propagate this exception to JS, and test it\\n+        throw std::runtime_error(\"Image is too large to allocate single buffer\");\\n+    }\\n+    data_ = new png_byte[h * rb];\\n \\n     for(size_t i = 0; i < info_.height; ++i) {\\n-        rowPtrs_[i] = data_ + i * info_.rowbytes;\\n+        rowPtrs_[i] = data_ + i * rb;\\n     }\\n }'}}",
            "message_norm":"handle image size overflow",
            "language":"en",
            "entities":"[('overflow', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/PngImg.cc'])",
            "num_files":1.0
        },
        {
            "index":3417,
            "vuln_id":"GHSA-xf7w-r453-m56c",
            "cwe_id":"{'CWE-59'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/npm\/fstream\/commit\/6a77d2fa6e1462693cf8e46f930da96ec1b0bb22'}",
            "dataset":"osv",
            "summary":"Arbitrary File Overwrite in fstream Versions of `fstream` prior to 1.0.12 are vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system and a file that matches the hardlink will overwrite the system's file with the contents of the extracted file. The `fstream.DirWriter()` function is vulnerable.\n\n\n## Recommendation\n\nUpgrade to version 1.0.12 or later.",
            "published_date":"2019-05-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/npm\/fstream",
            "commit_href":"https:\/\/github.com\/npm\/fstream\/commit\/6a77d2fa6e1462693cf8e46f930da96ec1b0bb22",
            "commit_sha":"6a77d2fa6e1462693cf8e46f930da96ec1b0bb22",
            "patch":"SINGLE",
            "chain_ord":"['6a77d2fa6e1462693cf8e46f930da96ec1b0bb22']",
            "before_first_fix_commit":"{'1e4527ffe8688d4f5325283d7cf2cf2d61f14c6b'}",
            "last_fix_commit":"6a77d2fa6e1462693cf8e46f930da96ec1b0bb22",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/15\/2019, 00:37:57",
            "message":"Clobber a Link if it's in the way of a File\n\nFixes https:\/\/github.com\/npm\/node-tar\/issues\/212",
            "author":"isaacs",
            "comments":"{'com_1': {'author': 'ret2libc', 'datetime': '06\/24\/2019, 10:41:00', 'body': \"Does this fix really solve the issue? Doesn't it make it just racy? (e.g. if at the time of check the file is a regular one and it is switched to an hardlink just before the `create()` function is called)\"}, 'com_2': {'author': 'mssalvatore', 'datetime': '08\/29\/2019, 11:35:42', 'body': 'I don\\'t believe this patch is attempting to resolve a TOCTOU condition. The context of the original issue (https:\/\/hackerone.com\/reports\/344595) is that arbitrary files on the filesystem could be overwritten if a crafted **tar archive** were extracted.\\r\\n\\r\\nWithin that context, I don\\'t believe this fix is has a race condition. It is not trying to prevent general TOCTOU issues. Rather, it\\'s preventing the condition where you\\'re in the process of iterating through the entries in a tar archive and you:\\r\\n\\r\\n1) Extract a hardlink named \"LINK\" that points to some arbitrary location (like \/etc\/passwd)\\r\\n2) Extract a regular file that also has the name \"LINK\"\\r\\n\\r\\nWithout this fix, this scenario would result in \/etc\/passwd being overwritten with the contents of the regular file \"LINK\".\\r\\n\\r\\nAll that being said, I am *really* not a javascript\/node.js developer, so:\\r\\n\\r\\n1) Since node.js handles I\/O asynchronously, are there concurrency concerns while looping through and extracting the entries of a tarball? \\r\\n2) Why would someone use fstream at all in this capacity when they could use the tar package instead? I\\'m curious as to why this fix was really necessary in the first place.'}, 'com_3': {'author': 'ret2libc', 'datetime': '09\/10\/2019, 15:20:25', 'body': \"> I don't believe this patch is attempting to resolve a TOCTOU condition. The context of the original issue (https:\/\/hackerone.com\/reports\/344595) is that arbitrary files on the filesystem could be overwritten if a crafted **tar archive** were extracted.\\r\\n\\r\\nTrue, though I was not able to trigger the issue while extracting a tar. Maybe I'm just missing something, but I ended up analyzing the issue in the context of a copy from one directory to another. Also, from reading various comments around this seemed more like a security fix to make npm-audit happy.\"}}",
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lib\/writer.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/npm\/fstream\/raw\/6a77d2fa6e1462693cf8e46f930da96ec1b0bb22\/lib%2Fwriter.js', 'patch': \"@@ -147,7 +147,7 @@ Writer.prototype._stat = function (current) {\\n \\n     \/\/ if it's a type change, then we need to clobber or error.\\n     \/\/ if it's not a type change, then let the impl take care of it.\\n-    if (currentType !== self.type) {\\n+    if (currentType !== self.type || self.type === 'File' && current.nlink > 1) {\\n       return rimraf(self._path, function (er) {\\n         if (er) return self.error(er)\\n         self._old = null\"}}",
            "message_norm":"clobber a link if it's in the way of a file\n\nfixes https:\/\/github.com\/npm\/node-tar\/issues\/212",
            "language":"en",
            "entities":"[('https:\/\/github.com\/npm\/node-tar\/issues\/212', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/writer.js'])",
            "num_files":1.0
        },
        {
            "index":3370,
            "vuln_id":"GHSA-x55w-vjjp-222r",
            "cwe_id":"{'CWE-1333'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/pksunkara\/inflect\/commit\/a9a0a8e9561c3487854c7cae42565d9652ec858b'}",
            "dataset":"osv",
            "summary":"inflect vulnerable to Inefficient Regular Expression Complexity inflect is customizable inflections for nodejs. inflect is vulnerable to Inefficient Regular Expression Complexity",
            "published_date":"2021-09-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/pksunkara\/inflect",
            "commit_href":"https:\/\/github.com\/pksunkara\/inflect\/commit\/a9a0a8e9561c3487854c7cae42565d9652ec858b",
            "commit_sha":"a9a0a8e9561c3487854c7cae42565d9652ec858b",
            "patch":"SINGLE",
            "chain_ord":"['a9a0a8e9561c3487854c7cae42565d9652ec858b']",
            "before_first_fix_commit":"{'c025e153df847bbb2873ae75b1a7bd77b0526745'}",
            "last_fix_commit":"a9a0a8e9561c3487854c7cae42565d9652ec858b",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/21\/2021, 10:49:42",
            "message":"Fix CVE-2021-3820",
            "author":"Pavan Kumar Sunkara",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'lib\/methods.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pksunkara\/inflect\/raw\/a9a0a8e9561c3487854c7cae42565d9652ec858b\/lib%2Fmethods.js', 'patch': '@@ -61,7 +61,7 @@ inflect.camelize = function (lower_case_and_underscored_word, first_letter_in_up\\n inflect.underscore = function (camel_cased_word) {\\n   var self;\\n   self = util.string.gsub(camel_cased_word, \/\\\\.\/, \\'\/\\');\\n-  self = util.string.gsub(self, \/([A-Z]+)([A-Z][a-z])\/, \\'$1_$2\\');\\n+  self = util.string.gsub(self, \/([A-Z])([A-Z][a-z])\/, \\'$1_$2\\');\\n   self = util.string.gsub(self, \/([a-z\\\\d])([A-Z])\/, \\'$1_$2\\');\\n   self = util.string.gsub(self, \/-\/, \\'_\\');\\n   return self.toLowerCase();\\n@@ -230,5 +230,5 @@ inflect.tableize = function (class_name) {\\n \/\/\\n \/\/     \"business\".classify()       \/\/ => \"Busines\"\\n inflect.classify = function (table_name) {\\n-  return inflect.camelize(inflect.singularize(util.string.gsub(table_name, \/.*\\\\.\/, \\'\\')));\\n+  return inflect.camelize(inflect.singularize(util.string.gsub(table_name, \/^.*\\\\.\/, \\'\\')));\\n };'}}",
            "message_norm":"fix cve-2021-3820",
            "language":"fr",
            "entities":"[('fix', 'ACTION', ''), ('cve-2021-3820', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/methods.js'])",
            "num_files":1.0
        },
        {
            "index":2320,
            "vuln_id":"GHSA-jxqv-jcvh-7gr4",
            "cwe_id":"{'CWE-208', 'CWE-203'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/runatlantis\/atlantis\/commit\/48870911974adddaa4c99c8089e79b7d787fa820'}",
            "dataset":"osv",
            "summary":"Atlantis Events prior to 0.19.7 vulnerable to Timing Attack The package github.com\/runatlantis\/atlantis\/server\/controllers\/events before 0.19.7 are vulnerable to Timing Attack in the webhook event validator code, which does not use a constant-time comparison function to validate the webhook secret. It can allow an attacker to recover this secret as an attacker and then forge webhook events.",
            "published_date":"2022-07-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/runatlantis\/atlantis",
            "commit_href":"https:\/\/github.com\/runatlantis\/atlantis\/commit\/48870911974adddaa4c99c8089e79b7d787fa820",
            "commit_sha":"48870911974adddaa4c99c8089e79b7d787fa820",
            "patch":"SINGLE",
            "chain_ord":"['48870911974adddaa4c99c8089e79b7d787fa820']",
            "before_first_fix_commit":"{'e153cea2bf1305e71c4f6a958c1378e22caa0211'}",
            "last_fix_commit":"48870911974adddaa4c99c8089e79b7d787fa820",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/15\/2022, 16:54:36",
            "message":"fix: use constant time comparison of webhook secret in gitlab event validator (#2392)",
            "author":"Connor Edwards",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'server\/controllers\/events\/gitlab_request_parser_validator.go': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/runatlantis\/atlantis\/raw\/48870911974adddaa4c99c8089e79b7d787fa820\/server%2Fcontrollers%2Fevents%2Fgitlab_request_parser_validator.go', 'patch': '@@ -14,6 +14,7 @@\\n package events\\n \\n import (\\n+\\t\"crypto\/subtle\"\\n \\t\"encoding\/json\"\\n \\t\"fmt\"\\n \\t\"io\"\\n@@ -61,8 +62,7 @@ func (d *DefaultGitlabRequestParserValidator) ParseAndValidate(r *http.Request,\\n \\n \\t\/\/ Validate secret if specified.\\n \\theaderSecret := r.Header.Get(secretHeader)\\n-\\tsecretStr := string(secret)\\n-\\tif len(secret) != 0 && headerSecret != secretStr {\\n+\\tif len(secret) != 0 && subtle.ConstantTimeCompare(secret, []byte(headerSecret)) != 1 {\\n \\t\\treturn nil, fmt.Errorf(\"header %s=%s did not match expected secret\", secretHeader, headerSecret)\\n \\t}'}}",
            "message_norm":"fix: use constant time comparison of webhook secret in gitlab event validator (#2392)",
            "language":"en",
            "entities":"[('#2392', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/controllers\/events\/gitlab_request_parser_validator.go'])",
            "num_files":1.0
        }
    ]
}