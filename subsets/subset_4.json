{
  "schema": {
    "fields": [
      {
        "name": "index",
        "type": "integer"
      },
      {
        "name": "vuln_id",
        "type": "string"
      },
      {
        "name": "cwe_id",
        "type": "string"
      },
      {
        "name": "score",
        "type": "number"
      },
      {
        "name": "chain",
        "type": "string"
      },
      {
        "name": "dataset",
        "type": "string"
      },
      {
        "name": "summary",
        "type": "string"
      },
      {
        "name": "published_date",
        "type": "string"
      },
      {
        "name": "chain_len",
        "type": "integer"
      },
      {
        "name": "project",
        "type": "string"
      },
      {
        "name": "commit_href",
        "type": "string"
      },
      {
        "name": "commit_sha",
        "type": "string"
      },
      {
        "name": "patch",
        "type": "string"
      },
      {
        "name": "chain_ord",
        "type": "string"
      },
      {
        "name": "before_first_fix_commit",
        "type": "string"
      },
      {
        "name": "last_fix_commit",
        "type": "string"
      },
      {
        "name": "chain_ord_pos",
        "type": "number"
      },
      {
        "name": "commit_datetime",
        "type": "string"
      },
      {
        "name": "message",
        "type": "string"
      },
      {
        "name": "author",
        "type": "string"
      },
      {
        "name": "comments",
        "type": "string"
      },
      {
        "name": "stats",
        "type": "string"
      },
      {
        "name": "files",
        "type": "string"
      },
      {
        "name": "message_norm",
        "type": "string"
      },
      {
        "name": "language",
        "type": "string"
      },
      {
        "name": "entities",
        "type": "string"
      },
      {
        "name": "classification_level_1",
        "type": "string"
      },
      {
        "name": "classification_level_2",
        "type": "string"
      },
      {
        "name": "list_files",
        "type": "string"
      },
      {
        "name": "num_files",
        "type": "number"
      }
    ],
    "primaryKey": [
      "index"
    ],
    "pandas_version": "1.4.0"
  },
  "data": [
    {
      "index": 794,
      "vuln_id": "GHSA-694p-xrhg-x3wm",
      "cwe_id": "{'CWE-444'}",
      "score": 9.8,
      "chain": "{'https://github.com/micronaut-projects/micronaut-core/commit/9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1', 'https://github.com/micronaut-projects/micronaut-core/commit/6deb60b75517f80c57b42d935f07955c773b766d', 'https://github.com/micronaut-projects/micronaut-core/commit/bc855e439c4a5ced3d83195bb59d0679cbd95add'}",
      "dataset": "osv",
      "summary": "CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request Header Injection') ### Vulnerability\n\nMicronaut's HTTP client is vulnerable to \"HTTP Request Header Injection\" due to not validating request headers passed to the client.\n\nExample of vulnerable code:\n\n```java\n@Controller(\"/hello\")\npublic class HelloController {\n\n    @Inject\n    @Client(\"/\")\n    RxHttpClient client;\n\n    @Get(\"/external-exploit\")\n    @Produces(MediaType.TEXT_PLAIN)\n    public String externalExploit(@QueryValue(\"header-value\") String headerValue) {\n        return client.toBlocking().retrieve(\n            HttpRequest.GET(\"/hello\")\n                .header(\"Test\", headerValue)\n        );\n    }\n}\n```\n\nIn the above case a query value received from a user is passed as a header value to the client. Since the client doesn't validate the header value the request headers and body have the potential to be manipulated.\n\nFor example, a user that supplies the following payload, can force the client to make multiple attacker-controlled HTTP requests.\n\n```java\nList<String> headerData = List.of(\n    \"Connection: Keep-Alive\", // This keeps the connection open so another request can be stuffed in.\n    \"\",\n    \"\",\n    \"POST /hello/super-secret HTTP/1.1\",\n    \"Host: 127.0.0.1\",\n    \"Content-Length: 31\",\n    \"\",\n    \"{\\\"new\\\":\\\"json\\\",\\\"content\\\":\\\"here\\\"}\",\n    \"\",\n    \"\"\n);\nString headerValue = \"H\\r\\n\" + String.join(\"\\r\\n\", headerData);;\nURI theURI =\n    UriBuilder\n        .of(\"/hello/external-exploit\")\n        .queryParam(\"header-value\", headerValue) // Automatically URL encodes data\n        .build();\nHttpRequest<String> request = HttpRequest.GET(theURI);\nString body = client.toBlocking().retrieve(request);\n```\n\nNote that using `@HeaderValue` instead of `@QueryValue` is not vulnerable since Micronaut's HTTP server does validate the headers passed to the server, so the exploit can only be triggered by using user data that is not an HTTP header (query values, form data etc.).\n\n### Impact\n\nThe attacker is able to control the entirety of the HTTP body for their custom requests.\nAs such, this vulnerability enables attackers to perform a variant of [Server Side Request Forgery](https://cwe.mitre.org/data/definitions/918.html).\n\n### Patches\n\nThe problem has been patched in the `micronaut-http-client` versions 1.2.11 and 1.3.2 and above.\n\n### Workarounds\n\nDo not pass user data directly received from HTTP request parameters as headers in the HTTP client.\n\n### References\n\nFix commits\n- https://github.com/micronaut-projects/micronaut-core/commit/9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1\n- https://github.com/micronaut-projects/micronaut-core/commit/6deb60b75517f80c57b42d935f07955c773b766d\n- https://github.com/micronaut-projects/micronaut-core/commit/bc855e439c4a5ced3d83195bb59d0679cbd95add\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [micronaut-core](https://github.com/micronaut-projects/micronaut-core)\n* Email us at [info@micronaut.io](mailto:info@micronaut.io)\n\n### Credit\n\nOriginally reported by @JLLeitschuh",
      "published_date": "2020-03-30",
      "chain_len": 3,
      "project": "https://github.com/micronaut-projects/micronaut-core",
      "commit_href": "https://github.com/micronaut-projects/micronaut-core/commit/bc855e439c4a5ced3d83195bb59d0679cbd95add",
      "commit_sha": "bc855e439c4a5ced3d83195bb59d0679cbd95add",
      "patch": "MULTI",
      "chain_ord": "['6deb60b75517f80c57b42d935f07955c773b766d', 'bc855e439c4a5ced3d83195bb59d0679cbd95add', '9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1']",
      "before_first_fix_commit": "{'a2392f4289f7777c4a310c3ae3bb4bc0ce5a65c2'}",
      "last_fix_commit": "9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1",
      "chain_ord_pos": 2.0,
      "commit_datetime": "02/20/2020, 19:20:37",
      "message": "Add test for client header validation",
      "author": "jameskleeh",
      "comments": "{'com_1': {'author': 'JLLeitschuh', 'datetime': '03/09/2020, 19:23:22', 'body': 'Would be good to put in an assertion that this method is never called.'}, 'com_2': {'author': 'JLLeitschuh', 'datetime': '03/09/2020, 19:23:55', 'body': \"Instead of doing this, I'd advise that you let the exception get thrown and assert in the test that this fails appropriately.\"}, 'com_3': {'author': 'JLLeitschuh', 'datetime': '03/09/2020, 19:24:09', 'body': 'Same comment here as above.'}}",
      "stats": "{'additions': 160, 'deletions': 0, 'total': 160}",
      "files": "{'http-client/src/test/groovy/io/micronaut/http/client/HeaderValidationSpec.groovy': {'additions': 160, 'deletions': 0, 'changes': 160, 'status': 'added', 'raw_url': 'https://github.com/micronaut-projects/micronaut-core/raw/bc855e439c4a5ced3d83195bb59d0679cbd95add/http-client%2Fsrc%2Ftest%2Fgroovy%2Fio%2Fmicronaut%2Fhttp%2Fclient%2FHeaderValidationSpec.groovy', 'patch': '@@ -0,0 +1,160 @@\\n+package io.micronaut.http.client\\n+\\n+import io.micronaut.context.ApplicationContext\\n+import io.micronaut.context.annotation.Requires\\n+import io.micronaut.http.HttpRequest\\n+import io.micronaut.http.MediaType\\n+import io.micronaut.http.annotation.Body\\n+import io.micronaut.http.annotation.Controller\\n+import io.micronaut.http.annotation.Get\\n+import io.micronaut.http.annotation.Post\\n+import io.micronaut.http.annotation.Produces\\n+import io.micronaut.http.annotation.QueryValue\\n+import io.micronaut.http.client.annotation.Client\\n+import io.micronaut.http.uri.UriBuilder\\n+import io.micronaut.runtime.server.EmbeddedServer\\n+import spock.lang.AutoCleanup\\n+import spock.lang.Shared\\n+import spock.lang.Specification\\n+\\n+import javax.inject.Inject\\n+\\n+class HeaderValidationSpec extends Specification {\\n+\\n+    @Shared @AutoCleanup EmbeddedServer embeddedServer =\\n+            ApplicationContext.run(EmbeddedServer, [\"spec.name\": HeaderValidationSpec.simpleName])\\n+\\n+    @Shared @AutoCleanup HttpClient client = embeddedServer.applicationContext.createBean(HttpClient, embeddedServer.getURL())\\n+\\n+    void \"test hello\"() {\\n+        HttpRequest<String> request = HttpRequest.GET(\"/hello\");\\n+        String body = client.toBlocking().retrieve(request);\\n+\\n+        expect:\\n+        body == \"Hello World\"\\n+    }\\n+\\n+    /**\\n+     * This test demonstrates self exploitation.\\n+     * Not really practical, but it proves the point.\\n+     */\\n+    void \"test self exploitation\"() {\\n+        HttpRequest<String> request = HttpRequest.GET(\"/hello/self-exploit\");\\n+        String body = client.toBlocking().retrieve(request);\\n+\\n+        expect:\\n+        body == \"Hello World\"\\n+    }\\n+\\n+    /**\\n+     * This test demonstrates an example of this vulnerability actually being abused since an attacker\\n+     * could make the server make an additional unexpected request.\\n+     */\\n+    void \"test external exploit\"() {\\n+        List<String> headerData = [\\n+                \"Connection: Keep-Alive\", // This keeps the connection open so another request can be stuffed in.\\n+                \"\",\\n+                \"\",\\n+                \"POST /hello/super-secret HTTP/1.1\",\\n+                \"Host: 127.0.0.1\",\\n+                \"Content-Length: 31\",\\n+                \"\",\\n+                \"{\\\\\"new\\\\\":\\\\\"json\\\\\",\\\\\"content\\\\\":\\\\\"here\\\\\"}\",\\n+                \"\",\\n+                \"\"\\n+        ]\\n+        String fullHeaderValue = String.join(\"\\\\r\\\\n\", headerData);\\n+        String headerValue = \"H\\\\r\\\\n\" + fullHeaderValue;\\n+        URI theURI =\\n+                UriBuilder\\n+                        .of(\"/hello/external-exploit\")\\n+                        .queryParam(\"header-value\", headerValue)\\n+                        .build();\\n+        HttpRequest<String> request = HttpRequest.GET(theURI)\\n+        String body = client.toBlocking().retrieve(request)\\n+\\n+        expect:\\n+        body == \"Hello World\"\\n+    }\\n+\\n+\\n+    @Requires(property = \"spec.name\", value = \"HeaderValidationSpec\")\\n+    @Controller(\"/hello\")\\n+    static class HelloController {\\n+\\n+        /**\\n+         * Imagine that this client actually points to another micro-service instead of pointing back to itself.\\n+         */\\n+        @Inject\\n+        @Client(\"/\")\\n+        HttpClient client\\n+\\n+        /**\\n+         * Imagine in a micro-services architecture, this method exists in some other application.\\n+         * This method is safe to be called by the other services that use it.\\n+         */\\n+        @Get\\n+        @Produces(MediaType.TEXT_PLAIN)\\n+        String index() {\\n+            \"Hello World\"\\n+        }\\n+\\n+        /**\\n+         * Imagine in a micro-services architecture, this method exists in some other application.\\n+         * This method is <b>incredibly sensitive</b> and should <b>not</b> be called by outside code, ever.\\n+         */\\n+        @Post(\"/super-secret\")\\n+        @Produces(MediaType.TEXT_PLAIN)\\n+        String superSecretEndpoint(@Body String body) {\\n+            println(\"This method was called but it shouldn\\'t have been!\")\\n+            println(body)\\n+\\n+            body\\n+        }\\n+\\n+        /**\\n+         * This is a simple demonstration of exploiting ourselves.\\n+         * Totally impractical, but this demonstrates the vulnerability in the simplest way.\\n+         */\\n+        @Get(\"/self-exploit\")\\n+        @Produces(MediaType.TEXT_PLAIN)\\n+        String selfExploit() {\\n+            List<String> headerData = [\\n+                    \"Connection: Keep-Alive\", // This keeps the connection open so another request can be stuffed in.\\n+                    \"\",\\n+                    \"\",\\n+                    \"POST /hello/super-secret HTTP/1.1\",\\n+                    \"Host: 127.0.0.1\",\\n+                    \"Content-Length: 31\",\\n+                    \"\",\\n+                    \"{\\\\\"new\\\\\":\\\\\"json\\\\\",\\\\\"content\\\\\":\\\\\"here\\\\\"}\",\\n+                    \"\",\\n+                    \"\"\\n+            ]\\n+            String fullHeaderValue = String.join(\"\\\\r\\\\n\", headerData)\\n+            String headerValue = \"H\\\\r\\\\n\" + fullHeaderValue\\n+\\n+            HttpRequest request = HttpRequest.GET(\"/hello\")\\n+            try {\\n+                request.header(\"Test\", headerValue)\\n+            } catch (IllegalArgumentException e) {\\n+            }\\n+            client.toBlocking().retrieve(request)\\n+        }\\n+\\n+        /**\\n+         * This is a more practical example of simplified user code that could reasonably exist in the wild.\\n+         * This method demonstrates how external user supplied data flowing to a header value could be dangerous.\\n+         */\\n+        @Get(\"/external-exploit\")\\n+        @Produces(MediaType.TEXT_PLAIN)\\n+        String externalExploit(@QueryValue(\"header-value\") String headerValue) {\\n+            HttpRequest request = HttpRequest.GET(\"/hello\")\\n+            try {\\n+                request.header(\"Test\", headerValue)\\n+            } catch (IllegalArgumentException e) {\\n+            }\\n+            client.toBlocking().retrieve(request)\\n+        }\\n+    }\\n+}'}}",
      "message_norm": "add test for client header validation",
      "language": "en",
      "entities": "[('add', 'ACTION', ''), ('header validation', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['http-client/src/test/groovy/io/micronaut/http/client/HeaderValidationSpec.groovy'])",
      "num_files": 1.0
    },
    {
      "index": 898,
      "vuln_id": "GHSA-6rv4-4qv6-88g2",
      "cwe_id": "{'CWE-1321'}",
      "score": 9.8,
      "chain": "{'https://github.com/IonicaBizau/set-or-get.js/commit/82ede5cccb2e8d13e4f62599203a4389f6d8e936'}",
      "dataset": "osv",
      "summary": "Prototype Pollution in set-or-get Prototype pollution vulnerability in \u2018set-or-get\u2019 version 1.0.0 through 1.2.10 allows an attacker to cause a denial of service and may lead to remote code execution.",
      "published_date": "2021-04-12",
      "chain_len": 1,
      "project": "https://github.com/IonicaBizau/set-or-get.js",
      "commit_href": "https://github.com/IonicaBizau/set-or-get.js/commit/82ede5cccb2e8d13e4f62599203a4389f6d8e936",
      "commit_sha": "82ede5cccb2e8d13e4f62599203a4389f6d8e936",
      "patch": "SINGLE",
      "chain_ord": "['82ede5cccb2e8d13e4f62599203a4389f6d8e936']",
      "before_first_fix_commit": "{'6a7767c49df4be3efd5e32a68a1ea1fa449cbd03'}",
      "last_fix_commit": "82ede5cccb2e8d13e4f62599203a4389f6d8e936",
      "chain_ord_pos": 1.0,
      "commit_datetime": "12/17/2020, 17:22:45",
      "message": "Security fix for Prototype Pollution",
      "author": "Arjun Shibu",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 0, 'total': 2}",
      "files": "{'lib/index.js': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/IonicaBizau/set-or-get.js/raw/82ede5cccb2e8d13e4f62599203a4389f6d8e936/lib%2Findex.js', 'patch': '@@ -13,6 +13,8 @@ var Deffy = require(\"deffy\");\\n  * @return {Object|Array} The field value.\\n  */\\n function SetOrGet(input, field, def) {\\n+    if (field == \\'__proto__\\' || field == \\'constructor\\' || field == \\'prototype\\')\\n+        throw new Error(\\'Restricted setting magical attributes\\')\\n     return input[field] = Deffy(input[field], def);\\n }'}}",
      "message_norm": "security fix for prototype pollution",
      "language": "en",
      "entities": "[('security', 'SECWORD', ''), ('prototype pollution', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['lib/index.js'])",
      "num_files": 1.0
    },
    {
      "index": 347,
      "vuln_id": "GHSA-43jf-985q-588j",
      "cwe_id": "{'CWE-617'}",
      "score": 6.5,
      "chain": "{'https://github.com/tensorflow/tensorflow/commit/dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2', 'https://github.com/tensorflow/tensorflow/commit/3d89911481ba6ebe8c88c1c0b595412121e6c645'}",
      "dataset": "osv",
      "summary": "Multiple `CHECK`-fails in `function.cc` in TensowFlow ### Impact\nA malicious user can cause a denial of service by altering a `SavedModel` such that [assertions in `function.cc`](https://github.com/tensorflow/tensorflow/blob/a1320ec1eac186da1d03f033109191f715b2b130/tensorflow/core/framework/function.cc) would be falsified and crash the Python interpreter.\n### Patches\nWe have patched the issue in GitHub commits [dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2](https://github.com/tensorflow/tensorflow/commit/dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2) and [3d89911481ba6ebe8c88c1c0b595412121e6c645](https://github.com/tensorflow/tensorflow/commit/3d89911481ba6ebe8c88c1c0b595412121e6c645).\n  \nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
      "published_date": "2022-02-09",
      "chain_len": 2,
      "project": "https://github.com/tensorflow/tensorflow",
      "commit_href": "https://github.com/tensorflow/tensorflow/commit/dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2",
      "commit_sha": "dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2",
      "patch": "MULTI",
      "chain_ord": "['3d89911481ba6ebe8c88c1c0b595412121e6c645', 'dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2']",
      "before_first_fix_commit": "{'955059813cc325dc1db5e2daa6221271406d4439'}",
      "last_fix_commit": "dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2",
      "chain_ord_pos": 2.0,
      "commit_datetime": "11/12/2021, 16:19:38",
      "message": "Eliminate debug `CHECK`-fail from `function.cc`\n\nPiperOrigin-RevId: 409416119\nChange-Id: I8376ee464d434e9b970ff0ad49edfdaa2a273cfe",
      "author": "Mihai Maruseac",
      "comments": null,
      "stats": "{'additions': 5, 'deletions': 1, 'total': 6}",
      "files": "{'tensorflow/core/framework/function.cc': {'additions': 5, 'deletions': 1, 'changes': 6, 'status': 'modified', 'raw_url': 'https://github.com/tensorflow/tensorflow/raw/dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2/tensorflow%2Fcore%2Fframework%2Ffunction.cc', 'patch': '@@ -191,7 +191,11 @@ class FunctionInstantiationHelper {\\n     for (size_t i = 0; i < dtypes.size(); ++i) {\\n       TF_RETURN_IF_ERROR(AddItem(strings::StrCat(arg_def.name(), \":\", i),\\n                                  {true, arg_index, 0, false, {dtypes[i]}}));\\n-      DCHECK_EQ(arg_index, result_.nodes.size());\\n+      if (arg_index != result_.nodes.size()) {\\n+        return errors::Internal(\\n+            \"Expected arg_index to be equal to the number of nodes in result.\",\\n+            \" Got \", arg_index, \" and \", result_.nodes.size());\\n+      }\\n       string name = arg_def.name();\\n       if (dtypes.size() > 1) {\\n         strings::StrAppend(&name, \"_\", i);'}}",
      "message_norm": "eliminate debug `check`-fail from `function.cc`\n\npiperorigin-revid: 409416119\nchange-id: i8376ee464d434e9b970ff0ad49edfdaa2a273cfe",
      "language": "en",
      "entities": "[('409416119', 'SHA', 'generic_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['tensorflow/core/framework/function.cc'])",
      "num_files": 1.0
    },
    {
      "index": 571,
      "vuln_id": "GHSA-579h-mv94-g4gp",
      "cwe_id": "{'CWE-269'}",
      "score": 9.8,
      "chain": "{'https://github.com/kubernetes/kubernetes/commit/2257c1ecbe3c0cf71dd50b82752ae189c94ec905'}",
      "dataset": "osv",
      "summary": "Privilege Escalation in Kubernetes In all Kubernetes versions prior to v1.10.11, v1.11.5, and v1.12.3, incorrect handling of error responses to proxied upgrade requests in the kube-apiserver allowed specially crafted requests to establish a connection through the Kubernetes API server to backend servers, then send arbitrary requests over the same connection directly to the backend, authenticated with the Kubernetes API server's TLS credentials used to establish the backend connection.",
      "published_date": "2022-02-15",
      "chain_len": 1,
      "project": "https://github.com/kubernetes/kubernetes",
      "commit_href": "https://github.com/kubernetes/kubernetes/commit/2257c1ecbe3c0cf71dd50b82752ae189c94ec905",
      "commit_sha": "2257c1ecbe3c0cf71dd50b82752ae189c94ec905",
      "patch": "SINGLE",
      "chain_ord": "['2257c1ecbe3c0cf71dd50b82752ae189c94ec905']",
      "before_first_fix_commit": "{'b84e3dd6f80af4016acfd891ef6cc50ce05d4b5b', '396271cf52af70bc96ed378dd9ce1a865cc99647'}",
      "last_fix_commit": "2257c1ecbe3c0cf71dd50b82752ae189c94ec905",
      "chain_ord_pos": 1.0,
      "commit_datetime": "11/26/2018, 12:26:22",
      "message": "Merge pull request #71412 from liggitt/backend-error\n\nHandle error responses from backends",
      "author": "k8s-ci-robot",
      "comments": null,
      "stats": "{'additions': 37, 'deletions': 0, 'total': 37}",
      "files": "{'staging/src/k8s.io/apimachinery/pkg/util/proxy/upgradeaware.go': {'additions': 37, 'deletions': 0, 'changes': 37, 'status': 'modified', 'raw_url': 'https://github.com/kubernetes/kubernetes/raw/2257c1ecbe3c0cf71dd50b82752ae189c94ec905/staging%2Fsrc%2Fk8s.io%2Fapimachinery%2Fpkg%2Futil%2Fproxy%2Fupgradeaware.go', 'patch': '@@ -17,6 +17,7 @@ limitations under the License.\\n package proxy\\n \\n import (\\n+\\t\"bufio\"\\n \\t\"bytes\"\\n \\t\"context\"\\n \\t\"fmt\"\\n@@ -271,6 +272,18 @@ func (h *UpgradeAwareHandler) tryUpgrade(w http.ResponseWriter, req *http.Reques\\n \\t}\\n \\tdefer backendConn.Close()\\n \\n+\\t// determine the http response code from the backend by reading from rawResponse+backendConn\\n+\\trawResponseCode, headerBytes, err := getResponseCode(io.MultiReader(bytes.NewReader(rawResponse), backendConn))\\n+\\tif err != nil {\\n+\\t\\tklog.V(6).Infof(\"Proxy connection error: %v\", err)\\n+\\t\\th.Responder.Error(w, req, err)\\n+\\t\\treturn true\\n+\\t}\\n+\\tif len(headerBytes) > len(rawResponse) {\\n+\\t\\t// we read beyond the bytes stored in rawResponse, update rawResponse to the full set of bytes read from the backend\\n+\\t\\trawResponse = headerBytes\\n+\\t}\\n+\\n \\t// Once the connection is hijacked, the ErrorResponder will no longer work, so\\n \\t// hijacking should be the last step in the upgrade.\\n \\trequestHijacker, ok := w.(http.Hijacker)\\n@@ -295,6 +308,17 @@ func (h *UpgradeAwareHandler) tryUpgrade(w http.ResponseWriter, req *http.Reques\\n \\t\\t}\\n \\t}\\n \\n+\\tif rawResponseCode != http.StatusSwitchingProtocols {\\n+\\t\\t// If the backend did not upgrade the request, finish echoing the response from the backend to the client and return, closing the connection.\\n+\\t\\tklog.V(6).Infof(\"Proxy upgrade error, status code %d\", rawResponseCode)\\n+\\t\\t_, err := io.Copy(requestHijackedConn, backendConn)\\n+\\t\\tif err != nil && !strings.Contains(err.Error(), \"use of closed network connection\") {\\n+\\t\\t\\tklog.Errorf(\"Error proxying data from backend to client: %v\", err)\\n+\\t\\t}\\n+\\t\\t// Indicate we handled the request\\n+\\t\\treturn true\\n+\\t}\\n+\\n \\t// Proxy the connection. This is bidirectional, so we need a goroutine\\n \\t// to copy in each direction. Once one side of the connection exits, we\\n \\t// exit the function which performs cleanup and in the process closes\\n@@ -356,6 +380,19 @@ func (h *UpgradeAwareHandler) DialForUpgrade(req *http.Request) (net.Conn, error\\n \\treturn dial(updatedReq, h.UpgradeTransport)\\n }\\n \\n+// getResponseCode reads a http response from the given reader, returns the status code,\\n+// the bytes read from the reader, and any error encountered\\n+func getResponseCode(r io.Reader) (int, []byte, error) {\\n+\\trawResponse := bytes.NewBuffer(make([]byte, 0, 256))\\n+\\t// Save the bytes read while reading the response headers into the rawResponse buffer\\n+\\tresp, err := http.ReadResponse(bufio.NewReader(io.TeeReader(r, rawResponse)), nil)\\n+\\tif err != nil {\\n+\\t\\treturn 0, nil, err\\n+\\t}\\n+\\t// return the http status code and the raw bytes consumed from the reader in the process\\n+\\treturn resp.StatusCode, rawResponse.Bytes(), nil\\n+}\\n+\\n // dial dials the backend at req.URL and writes req to it.\\n func dial(req *http.Request, transport http.RoundTripper) (net.Conn, error) {\\n \\tconn, err := DialURL(req.Context(), req.URL, transport)'}}",
      "message_norm": "merge pull request #71412 from liggitt/backend-error\n\nhandle error responses from backends",
      "language": "no",
      "entities": "[('#71412', 'ISSUE', ''), ('error', 'FLAW', ''), ('error', 'FLAW', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['staging/src/k8s.io/apimachinery/pkg/util/proxy/upgradeaware.go'])",
      "num_files": 1.0
    },
    {
      "index": 1171,
      "vuln_id": "GHSA-8948-ffc6-jg52",
      "cwe_id": "{'CWE-20'}",
      "score": 4.2,
      "chain": "{'https://github.com/OptimalBits/redbird/commit/39c7a2da84a2ddddfe046ea80e98800518920516'}",
      "dataset": "osv",
      "summary": "Insecure Default Configuration in redbird Versions of `redbird` prior to 0.9.1 have a vulnerable default configuration of allowing TLS 1.0 connections on `lib/proxy.js`. The package does not provide an option to disable TLS 1.0 which is deprecated and vulnerable.\n\n\n## Recommendation\n\nUpgrade to version 0.9.1 or later.",
      "published_date": "2019-06-06",
      "chain_len": 1,
      "project": "https://github.com/OptimalBits/redbird",
      "commit_href": "https://github.com/OptimalBits/redbird/commit/39c7a2da84a2ddddfe046ea80e98800518920516",
      "commit_sha": "39c7a2da84a2ddddfe046ea80e98800518920516",
      "patch": "SINGLE",
      "chain_ord": "['39c7a2da84a2ddddfe046ea80e98800518920516']",
      "before_first_fix_commit": "{'b0ba23a53e881204e4bca4cef75305edb4f9e8b4'}",
      "last_fix_commit": "39c7a2da84a2ddddfe046ea80e98800518920516",
      "chain_ord_pos": 1.0,
      "commit_datetime": "04/17/2019, 16:07:54",
      "message": "Adding option to disable older SSL/TLS versions\n\nSimply pass in \"secureOptions\" as you normally would to an https config object, and redbird will pass it along into the https proxy server.",
      "author": "James Thomas",
      "comments": null,
      "stats": "{'additions': 5, 'deletions': 0, 'total': 5}",
      "files": "{'lib/proxy.js': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https://github.com/OptimalBits/redbird/raw/39c7a2da84a2ddddfe046ea80e98800518920516/lib%2Fproxy.js', 'patch': '@@ -252,6 +252,11 @@ ReverseProxy.prototype.setupHttpsProxy = function (proxy, websocketsUpgrade, log\\n     key: getCertData(sslOpts.key),\\n     cert: getCertData(sslOpts.cert)\\n   };\\n+  \\n+  // Allows the option to disable older SSL/TLS versions\\n+  if(sslOpts.secureOptions) {\\n+    ssl.secureOptions = sslOpts.secureOptions;\\n+  }\\n \\n   if (sslOpts.ca) {\\n     ssl.ca = getCertData(sslOpts.ca, true);'}}",
      "message_norm": "adding option to disable older ssl/tls versions\n\nsimply pass in \"secureoptions\" as you normally would to an https config object, and redbird will pass it along into the https proxy server.",
      "language": "en",
      "entities": "[('adding', 'ACTION', ''), ('ssl', 'SECWORD', ''), ('tls', 'SECWORD', ''), ('secureoptions', 'SECWORD', ''), ('https proxy', 'SECWORD', ''), ('server', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['lib/proxy.js'])",
      "num_files": 1.0
    },
    {
      "index": 3272,
      "vuln_id": "GHSA-wg4r-q74r-p7c8",
      "cwe_id": "{'CWE-79'}",
      "score": 5.4,
      "chain": "{'https://github.com/star7th/showdoc/commit/4b6e6603c714aab1de346c5f5cb0bbb4c871be1f'}",
      "dataset": "osv",
      "summary": "Cross-site Scripting in ShowDoc ShowDoc is vulnerable to stored cross-site scripting due to unrestricted file upload in versions 2.10.3 and prior. A patch is available and anticipated to be part of version 2.10.4.",
      "published_date": "2022-03-15",
      "chain_len": 1,
      "project": "https://github.com/star7th/showdoc",
      "commit_href": "https://github.com/star7th/showdoc/commit/4b6e6603c714aab1de346c5f5cb0bbb4c871be1f",
      "commit_sha": "4b6e6603c714aab1de346c5f5cb0bbb4c871be1f",
      "patch": "SINGLE",
      "chain_ord": "['4b6e6603c714aab1de346c5f5cb0bbb4c871be1f']",
      "before_first_fix_commit": "{'d4363f73fb50193c9701982b59642696edf834a1', '61a23da1925119454d8477e9cf884b6cba93364c'}",
      "last_fix_commit": "4b6e6603c714aab1de346c5f5cb0bbb4c871be1f",
      "chain_ord_pos": 1.0,
      "commit_datetime": "03/13/2022, 12:16:25",
      "message": "Merge pull request #1630 from ajaysenr/master\n\nUpdate AttachmentModel.class.php",
      "author": "star7th",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 0, 'total': 1}",
      "files": "{'server/Application/Api/Model/AttachmentModel.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https://github.com/star7th/showdoc/raw/4b6e6603c714aab1de346c5f5cb0bbb4c871be1f/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -305,6 +305,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xxhtml\")\\n \\t\\t\\t|| $isDangerStr($filename , \".asp\")\\t\\t\\t\\n+\\t\\t\\t|| $isDangerStr($filename , \".xsl\")\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}'}}",
      "message_norm": "merge pull request #1630 from ajaysenr/master\n\nupdate attachmentmodel.class.php",
      "language": "en",
      "entities": "[('#1630', 'ISSUE', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['server/Application/Api/Model/AttachmentModel.class.php'])",
      "num_files": 1.0
    },
    {
      "index": 1778,
      "vuln_id": "GHSA-fv25-wrff-wf86",
      "cwe_id": "{'CWE-20'}",
      "score": 5.5,
      "chain": "{'https://github.com/tensorflow/tensorflow/commit/48305e8ffe5246d67570b64096a96f8e315a7281'}",
      "dataset": "osv",
      "summary": "Missing validation causes denial of service via `GetSessionTensor` ### Impact\nThe implementation of [`tf.raw_ops.GetSessionTensor`](https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/core/kernels/session_ops.cc#L94-L112) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport tensorflow as tf\n\nhandle = tf.constant(\"[]\", shape=[0], dtype=tf.string)\ntf.raw_ops.GetSessionTensor(handle=handle)\n```\n  \nThe code assumes `handle` is a scalar but there is no validation for this:\n  \n```cc\n    const Tensor& handle = ctx->input(0);\n    const string& name = handle.scalar<tstring>()();\n```\n\n### Patches\nWe have patched the issue in GitHub commit [48305e8ffe5246d67570b64096a96f8e315a7281](https://github.com/tensorflow/tensorflow/commit/48305e8ffe5246d67570b64096a96f8e315a7281).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Neophytos Christou from Secure Systems Lab at Brown University.",
      "published_date": "2022-05-24",
      "chain_len": 1,
      "project": "https://github.com/tensorflow/tensorflow",
      "commit_href": "https://github.com/tensorflow/tensorflow/commit/48305e8ffe5246d67570b64096a96f8e315a7281",
      "commit_sha": "48305e8ffe5246d67570b64096a96f8e315a7281",
      "patch": "SINGLE",
      "chain_ord": "['48305e8ffe5246d67570b64096a96f8e315a7281']",
      "before_first_fix_commit": "{'13d38a07ce9143e044aa737cfd7bb759d0e9b400'}",
      "last_fix_commit": "48305e8ffe5246d67570b64096a96f8e315a7281",
      "chain_ord_pos": 1.0,
      "commit_datetime": "04/28/2022, 19:25:03",
      "message": "Fix tf.raw_ops.GetSessionTensor vulnerability with invalid handle.\n\nCheck that input is actually a scalar before treating it as such.\n\nPiperOrigin-RevId: 445218701",
      "author": "Alan Liu",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 0, 'total': 2}",
      "files": "{'tensorflow/core/kernels/session_ops.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/tensorflow/tensorflow/raw/48305e8ffe5246d67570b64096a96f8e315a7281/tensorflow%2Fcore%2Fkernels%2Fsession_ops.cc', 'patch': '@@ -98,6 +98,8 @@ class GetSessionTensorOp : public OpKernel {\\n \\n   void Compute(OpKernelContext* ctx) override {\\n     const Tensor& handle = ctx->input(0);\\n+    OP_REQUIRES(ctx, TensorShapeUtils::IsScalar(handle.shape()),\\n+                errors::InvalidArgument(\"handle must be scalar\"));\\n     const string& name = handle.scalar<tstring>()();\\n     Tensor val;\\n     auto session_state = ctx->session_state();'}}",
      "message_norm": "fix tf.raw_ops.getsessiontensor vulnerability with invalid handle.\n\ncheck that input is actually a scalar before treating it as such.\n\npiperorigin-revid: 445218701",
      "language": "en",
      "entities": "[('vulnerability', 'SECWORD', ''), ('445218701', 'SHA', 'generic_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['tensorflow/core/kernels/session_ops.cc'])",
      "num_files": 1.0
    },
    {
      "index": 1936,
      "vuln_id": "GHSA-gv3v-92v6-m48j",
      "cwe_id": "{'CWE-444'}",
      "score": 9.8,
      "chain": "{'https://github.com/jooby-project/jooby/commit/b66e3342cf95205324023cfdf2cb5811e8a6dcf4'}",
      "dataset": "osv",
      "summary": "Improper Neutralization of CRLF Sequences in HTTP Headers in Jooby ('HTTP Response Splitting) ### Impact\n\n - Cross Site Scripting\n - Cache Poisoning\n - Page Hijacking\n\n### Patches\n\nThis was fixed in version `2.2.1`.\n\n### Workarounds\n\nIf you are unable to update, ensure that user supplied data isn't able to flow to HTTP headers. If it does, pre-sanitize for CRLF characters.\n\n### References\n\n##### [CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')](https://cwe.mitre.org/data/definitions/113.html)\n\nI've been poking at libraries to see if they are vulnerable to HTTP Response Splitting and Jooby is my third case of finding this vulnerability.\n\n### Root Cause\n\nThis roots cause back to this line in the Jooby codebase:\n\nhttps://github.com/jooby-project/jooby/blob/93cfc80aa20c188f71a442ea7a1827da380e1c27/modules/jooby-netty/src/main/java/io/jooby/internal/netty/NettyContext.java#L102\n\nThe `DefaultHttpHeaders` takes a parameter `validate` which, when `true` (as it is for the no-arg constructor) validates that the header isn't being abused to do HTTP Response Splitting.\n\n### Reported By\n\nThis vulnerability was reported by @JLLeitschuh ([Twitter](https://twitter.com/JLLeitschuh))\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [jooby-project/jooby](https://github.com/jooby-project/jooby/issues)",
      "published_date": "2020-04-03",
      "chain_len": 1,
      "project": "https://github.com/jooby-project/jooby",
      "commit_href": "https://github.com/jooby-project/jooby/commit/b66e3342cf95205324023cfdf2cb5811e8a6dcf4",
      "commit_sha": "b66e3342cf95205324023cfdf2cb5811e8a6dcf4",
      "patch": "SINGLE",
      "chain_ord": "['b66e3342cf95205324023cfdf2cb5811e8a6dcf4']",
      "before_first_fix_commit": "{'d5708760bdd27f8f6e1dbbbabbda4379fd5ba926'}",
      "last_fix_commit": "b66e3342cf95205324023cfdf2cb5811e8a6dcf4",
      "chain_ord_pos": 1.0,
      "commit_datetime": "10/12/2019, 13:30:52",
      "message": "CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting fix #GHSA-gv3v-92v6-m48j",
      "author": "Edgar Espina",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 1, 'total': 2}",
      "files": "{'modules/jooby-netty/src/main/java/io/jooby/internal/netty/NettyContext.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/jooby-project/jooby/raw/b66e3342cf95205324023cfdf2cb5811e8a6dcf4/modules%2Fjooby-netty%2Fsrc%2Fmain%2Fjava%2Fio%2Fjooby%2Finternal%2Fnetty%2FNettyContext.java', 'patch': '@@ -99,7 +99,7 @@\\n public class NettyContext implements DefaultContext, ChannelFutureListener {\\n \\n   private static final HttpHeaders NO_TRAILING = EmptyHttpHeaders.INSTANCE;\\n-  final DefaultHttpHeaders setHeaders = new DefaultHttpHeaders(false);\\n+  final DefaultHttpHeaders setHeaders = new DefaultHttpHeaders(true);\\n   private final int bufferSize;\\n   InterfaceHttpPostRequestDecoder decoder;\\n   private Router router;'}}",
      "message_norm": "cwe-113: improper neutralization of crlf sequences in http headers ('http response splitting fix #ghsa-gv3v-92v6-m48j",
      "language": "en",
      "entities": "[('cwe-113', 'CWEID', ''), ('improper neutralization', 'SECWORD', ''), ('http response splitting', 'SECWORD', ''), ('ghsa-gv3v-92v6-m48j', 'VULNID', 'GHSA')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['modules/jooby-netty/src/main/java/io/jooby/internal/netty/NettyContext.java'])",
      "num_files": 1.0
    },
    {
      "index": 46,
      "vuln_id": "GHSA-26rr-v2j2-25fh",
      "cwe_id": "{'CWE-91'}",
      "score": 0.0,
      "chain": "{'https://github.com/OpenMage/magento-lts/commit/b99307d00b59c4a226a1e3e4083f02cf2fc8fce7'}",
      "dataset": "osv",
      "summary": "Layout XML Arbitrary Code Fix  ### Impact\nLayout XML enabled admin users to execute arbitrary commands via block methods.",
      "published_date": "2021-08-30",
      "chain_len": 1,
      "project": "https://github.com/OpenMage/magento-lts",
      "commit_href": "https://github.com/OpenMage/magento-lts/commit/b99307d00b59c4a226a1e3e4083f02cf2fc8fce7",
      "commit_sha": "b99307d00b59c4a226a1e3e4083f02cf2fc8fce7",
      "patch": "SINGLE",
      "chain_ord": "['b99307d00b59c4a226a1e3e4083f02cf2fc8fce7']",
      "before_first_fix_commit": "{'02a14e8893a1af9d8445bb5657b80272a09767ee'}",
      "last_fix_commit": "b99307d00b59c4a226a1e3e4083f02cf2fc8fce7",
      "chain_ord_pos": 1.0,
      "commit_datetime": "08/26/2021, 01:01:15",
      "message": "Merge pull request from GHSA-26rr-v2j2-25fh\n\nCo-authored-by: Mark Lewis <markwlewis@Marks-MacBook-Pro.local>",
      "author": "Mark Lewis",
      "comments": null,
      "stats": "{'additions': 4, 'deletions': 1, 'total': 5}",
      "files": "{'app/code/core/Mage/Core/Helper/Security.php': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https://github.com/OpenMage/magento-lts/raw/b99307d00b59c4a226a1e3e4083f02cf2fc8fce7/app%2Fcode%2Fcore%2FMage%2FCore%2FHelper%2FSecurity.php', 'patch': \"@@ -21,7 +21,10 @@ class Mage_Core_Helper_Security\\n     public function validateAgainstBlockMethodBlacklist(Mage_Core_Block_Abstract $block, $method, array $args)\\n     {\\n         foreach ($this->invalidBlockActions as $action) {\\n-            if ($block instanceof $action['block'] && strtolower($action['method']) === strtolower($method)) {\\n+            $calledMethod = strtolower($method);\\n+            if (($block instanceof $action['block'] && strtolower($action['method']) === $calledMethod)\\n+                || ($block instanceof $action['block']\\n+                    && strtolower($action['block'] . '::' . $action['method']) === $calledMethod)) {\\n                 Mage::throwException(\\n                     sprintf('Action with combination block %s and method %s is forbidden.', get_class($block), $method)\\n                 );\"}}",
      "message_norm": "merge pull request from ghsa-26rr-v2j2-25fh\n\nco-authored-by: mark lewis <markwlewis@marks-macbook-pro.local>",
      "language": "en",
      "entities": "[('ghsa-26rr-v2j2-25fh', 'VULNID', 'GHSA')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['app/code/core/Mage/Core/Helper/Security.php'])",
      "num_files": 1.0
    },
    {
      "index": 41,
      "vuln_id": "GHSA-269q-hmxg-m83q",
      "cwe_id": "{'CWE-379', 'CWE-378', 'CWE-668'}",
      "score": 5.5,
      "chain": "{'https://github.com/netty/netty/commit/185f8b2756a36aaa4f973f1a2a025e7d981823f1'}",
      "dataset": "osv",
      "summary": "Local Information Disclosure Vulnerability in io.netty:netty-codec-http ### Description ###\n[GHSA-5mcr-gq6c-3hq2](https://github.com/netty/netty/security/advisories/GHSA-5mcr-gq6c-3hq2) (CVE-2021-21290) contains an insufficient fix for the vulnerability identified.\n\n### Impact ###\n\nWhen netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled.\n\nThis only impacts applications running on Java version 6 and lower. Additionally, this vulnerability impacts code running on Unix-like systems, and very old versions of Mac OSX and Windows as they all share the system temporary directory between all users.\n\n### Vulnerability Details ###\n\nTo fix the vulnerability the code was changed to the following:\n\n```java\n    @SuppressJava6Requirement(reason = \"Guarded by version check\")\n    public static File createTempFile(String prefix, String suffix, File directory) throws IOException {\n        if (javaVersion() >= 7) {\n            if (directory == null) {\n                return Files.createTempFile(prefix, suffix).toFile();\n            }\n            return Files.createTempFile(directory.toPath(), prefix, suffix).toFile();\n        }\n        if (directory == null) {\n            return File.createTempFile(prefix, suffix);\n        }\n        File file = File.createTempFile(prefix, suffix, directory);\n        // Try to adjust the perms, if this fails there is not much else we can do...\n        file.setReadable(false, false);\n        file.setReadable(true, true);\n        return file;\n    }\n```\n\nUnfortunately, this logic path was left vulnerable:\n\n```java\n        if (directory == null) {\n            return File.createTempFile(prefix, suffix);\n        }\n```\n\nThis file is still readable by all local users.\n\n### Patches ###\n\nUpdate to 4.1.77.Final\n\n### Workarounds ###\n\nSpecify your own `java.io.tmpdir` when you start the JVM or use `DefaultHttpDataFactory.setBaseDir(...)` to set the directory to something that is only readable by the current user or update to Java 7 or above.\n\n### References ###\n\n - [CWE-378: Creation of Temporary File With Insecure Permissions](https://cwe.mitre.org/data/definitions/378.html)\n - [CWE-379: Creation of Temporary File in Directory with Insecure Permissions](https://cwe.mitre.org/data/definitions/379.html)\n\n\n### For more information ###\n\nIf you have any questions or comments about this advisory:\n\nOpen an issue in [netty](https://github.com/netty/netty)",
      "published_date": "2022-05-10",
      "chain_len": 1,
      "project": "https://github.com/netty/netty",
      "commit_href": "https://github.com/netty/netty/commit/185f8b2756a36aaa4f973f1a2a025e7d981823f1",
      "commit_sha": "185f8b2756a36aaa4f973f1a2a025e7d981823f1",
      "patch": "SINGLE",
      "chain_ord": "['185f8b2756a36aaa4f973f1a2a025e7d981823f1']",
      "before_first_fix_commit": "{'7dbca6aedc8cf5971e2a26d8fc2b7f265f2b4bf1'}",
      "last_fix_commit": "185f8b2756a36aaa4f973f1a2a025e7d981823f1",
      "chain_ord_pos": 1.0,
      "commit_datetime": "05/06/2022, 06:57:43",
      "message": "Merge pull request from GHSA-269q-hmxg-m83q\n\n* Correctly modify permission for temporary files when using Java 6 in all cases\n\nMotivation:\n\n[GHSA-5mcr-gq6c-3hq2](https://github.com/netty/netty/security/advisories/GHSA-5mcr-gq6c-3hq2) did not correctly fix all cases for temprory files when running on java 6.\n\nModifications:\n\n- Add correctly adjust perms in all cases\n- Add logging if adjusting of permissions fails\n\nResult:\n\nFixes https://github.com/netty/netty/security/advisories/GHSA-269q-hmxg-m83q\n\n* Throw on failure",
      "author": "Norman Maurer",
      "comments": null,
      "stats": "{'additions': 11, 'deletions': 4, 'total': 15}",
      "files": "{'common/src/main/java/io/netty/util/internal/PlatformDependent.java': {'additions': 11, 'deletions': 4, 'changes': 15, 'status': 'modified', 'raw_url': 'https://github.com/netty/netty/raw/185f8b2756a36aaa4f973f1a2a025e7d981823f1/common%2Fsrc%2Fmain%2Fjava%2Fio%2Fnetty%2Futil%2Finternal%2FPlatformDependent.java', 'patch': '@@ -1447,13 +1447,20 @@ public static File createTempFile(String prefix, String suffix, File directory)\\n             }\\n             return Files.createTempFile(directory.toPath(), prefix, suffix).toFile();\\n         }\\n+        final File file;\\n         if (directory == null) {\\n-            return File.createTempFile(prefix, suffix);\\n+            file = File.createTempFile(prefix, suffix);\\n+        } else {\\n+            file = File.createTempFile(prefix, suffix, directory);\\n         }\\n-        File file = File.createTempFile(prefix, suffix, directory);\\n+\\n         // Try to adjust the perms, if this fails there is not much else we can do...\\n-        file.setReadable(false, false);\\n-        file.setReadable(true, true);\\n+        if (!file.setReadable(false, false)) {\\n+            throw new IOException(\"Failed to set permissions on temporary file \" + file);\\n+        }\\n+        if (!file.setReadable(true, true)) {\\n+            throw new IOException(\"Failed to set permissions on temporary file \" + file);\\n+        }\\n         return file;\\n     }'}}",
      "message_norm": "merge pull request from ghsa-269q-hmxg-m83q\n\n* correctly modify permission for temporary files when using java 6 in all cases\n\nmotivation:\n\n[ghsa-5mcr-gq6c-3hq2](https://github.com/netty/netty/security/advisories/ghsa-5mcr-gq6c-3hq2) did not correctly fix all cases for temprory files when running on java 6.\n\nmodifications:\n\n- add correctly adjust perms in all cases\n- add logging if adjusting of permissions fails\n\nresult:\n\nfixes https://github.com/netty/netty/security/advisories/ghsa-269q-hmxg-m83q\n\n* throw on failure",
      "language": "en",
      "entities": "[('ghsa-269q-hmxg-m83q', 'VULNID', 'GHSA'), ('permission', 'SECWORD', ''), ('ghsa-5mcr-gq6c-3hq2](https://github.com/netty/netty', 'VULNID', 'GHSA'), ('security', 'SECWORD', ''), ('ghsa-5mcr-gq6c-3hq2) did not', 'VULNID', 'GHSA'), ('fix', 'ACTION', ''), ('add', 'ACTION', ''), ('add', 'ACTION', ''), ('permissions', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('https://github.com/netty/netty/security/advisories/ghsa-269q-hmxg-m83q', 'VULNID', 'GHSA')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['common/src/main/java/io/netty/util/internal/PlatformDependent.java'])",
      "num_files": 1.0
    },
    {
      "index": 229,
      "vuln_id": "GHSA-394c-5j6w-4xmx",
      "cwe_id": "{'CWE-400'}",
      "score": 7.5,
      "chain": "{'https://github.com/faisalman/ua-parser-js/commit/6d1f26df051ba681463ef109d36c9cf0f7e32b18'}",
      "dataset": "osv",
      "summary": "Regular Expression Denial of Service (ReDoS) in ua-parser-js The package ua-parser-js before 0.7.23 are vulnerable to Regular Expression Denial of Service (ReDoS) in multiple regexes (see linked commit for more info).",
      "published_date": "2022-02-09",
      "chain_len": 1,
      "project": "https://github.com/faisalman/ua-parser-js",
      "commit_href": "https://github.com/faisalman/ua-parser-js/commit/6d1f26df051ba681463ef109d36c9cf0f7e32b18",
      "commit_sha": "6d1f26df051ba681463ef109d36c9cf0f7e32b18",
      "patch": "SINGLE",
      "chain_ord": "['6d1f26df051ba681463ef109d36c9cf0f7e32b18']",
      "before_first_fix_commit": "{'86471ad7e24724757e6147cd449cc2af4fab6280'}",
      "last_fix_commit": "6d1f26df051ba681463ef109d36c9cf0f7e32b18",
      "chain_ord_pos": 1.0,
      "commit_datetime": "11/30/2020, 17:50:19",
      "message": "Fix ReDoS vulnerabilities reported by Snyk",
      "author": "Faisal Salman",
      "comments": null,
      "stats": "{'additions': 14, 'deletions': 14, 'total': 28}",
      "files": "{'src/ua-parser.js': {'additions': 14, 'deletions': 14, 'changes': 28, 'status': 'modified', 'raw_url': 'https://github.com/faisalman/ua-parser-js/raw/6d1f26df051ba681463ef109d36c9cf0f7e32b18/src%2Fua-parser.js', 'patch': \"@@ -222,7 +222,7 @@\\n \\n             // Presto based\\n             /(opera\\\\smini)\\\\/([\\\\w\\\\.-]+)/i,                                       // Opera Mini\\n-            /(opera\\\\s[mobiletab]+).+version\\\\/([\\\\w\\\\.-]+)/i,                      // Opera Mobi/Tablet\\n+            /(opera\\\\s[mobiletab]{3,6}).+version\\\\/([\\\\w\\\\.-]+)/i,                  // Opera Mobi/Tablet\\n             /(opera).+version\\\\/([\\\\w\\\\.]+)/i,                                     // Opera > 9.80\\n             /(opera)[\\\\/\\\\s]+([\\\\w\\\\.]+)/i                                          // Opera < 9.80\\n             ], [NAME, VERSION], [\\n@@ -252,7 +252,7 @@\\n             /(konqueror)\\\\/([\\\\w\\\\.]+)/i                                           // Konqueror\\n             ], [[NAME, 'Konqueror'], VERSION], [\\n \\n-            /(trident).+rv[:\\\\s]([\\\\w\\\\.]+).+like\\\\sgecko/i                         // IE11\\n+            /(trident).+rv[:\\\\s]([\\\\w\\\\.]{1,9}).+like\\\\sgecko/i                     // IE11\\n             ], [[NAME, 'IE'], VERSION], [\\n \\n             /(edge|edgios|edga|edg)\\\\/((\\\\d+)?[\\\\w\\\\.]+)/i                          // Microsoft Edge\\n@@ -362,13 +362,13 @@\\n             /fxios\\\\/([\\\\w\\\\.-]+)/i                                                // Firefox for iOS\\n             ], [VERSION, [NAME, 'Firefox']], [\\n \\n-            /version\\\\/([\\\\w\\\\.]+).+?mobile\\\\/\\\\w+\\\\s(safari)/i                       // Mobile Safari\\n+            /version\\\\/([\\\\w\\\\.]+)\\\\s.*mobile\\\\/\\\\w+\\\\s(safari)/i                      // Mobile Safari\\n             ], [VERSION, [NAME, 'Mobile Safari']], [\\n \\n-            /version\\\\/([\\\\w\\\\.]+).+?(mobile\\\\s?safari|safari)/i                    // Safari & Safari Mobile\\n+            /version\\\\/([\\\\w\\\\.]+)\\\\s.*(mobile\\\\s?safari|safari)/i                   // Safari & Safari Mobile\\n             ], [VERSION, NAME], [\\n \\n-            /webkit.+?(gsa)\\\\/([\\\\w\\\\.]+).+?(mobile\\\\s?safari|safari)(\\\\/[\\\\w\\\\.]+)/i  // Google Search Appliance on iOS\\n+            /webkit.+?(gsa)\\\\/([\\\\w\\\\.]+)\\\\s.*(mobile\\\\s?safari|safari)(\\\\/[\\\\w\\\\.]+)/i // Google Search Appliance on iOS\\n             ], [[NAME, 'GSA'], VERSION], [\\n \\n             /webkit.+?(mobile\\\\s?safari|safari)(\\\\/[\\\\w\\\\.]+)/i                     // Safari < 3.0\\n@@ -387,7 +387,7 @@\\n \\n                                                                                 // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\\n             /(firefox)\\\\/([\\\\w\\\\.]+)\\\\s[\\\\w\\\\s\\\\-]+\\\\/[\\\\w\\\\.]+$/i,                       // Other Firefox-based\\n-            /(mozilla)\\\\/([\\\\w\\\\.]+).+rv\\\\:.+gecko\\\\/\\\\d+/i,                          // Mozilla\\n+            /(mozilla)\\\\/([\\\\w\\\\.]+)\\\\s.+rv\\\\:.+gecko\\\\/\\\\d+/i,                        // Mozilla\\n \\n             // Other\\n             /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\\\\/\\\\s]?([\\\\w\\\\.]+)/i,\\n@@ -487,7 +487,7 @@\\n             /(sprint\\\\s(\\\\w+))/i                                                  // Sprint Phones\\n             ], [[VENDOR, mapper.str, maps.device.sprint.vendor], [MODEL, mapper.str, maps.device.sprint.model], [TYPE, MOBILE]], [\\n \\n-            /(htc)[;_\\\\s-]+([\\\\w\\\\s]+(?=\\\\)|\\\\sbuild)|\\\\w+)/i,                        // HTC\\n+            /(htc)[;_\\\\s-]{1,2}([\\\\w\\\\s]+(?=\\\\)|\\\\sbuild)|\\\\w+)/i,                    // HTC\\n             /(zte)-(\\\\w*)/i,                                                     // ZTE\\n             /(alcatel|geeksphone|nexian|panasonic|(?=;\\\\s)sony)[_\\\\s-]?([\\\\w-]*)/i\\n                                                                                 // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\\n@@ -591,13 +591,13 @@\\n             ], [MODEL, [VENDOR, 'Google'], [TYPE, MOBILE]], [\\n \\n             /android.+;\\\\s(\\\\w+)\\\\s+build\\\\/hm\\\\1/i,                                 // Xiaomi Hongmi 'numeric' models\\n-            /android.+(hm[\\\\s\\\\-_]*note?[\\\\s_]*(?:\\\\d\\\\w)?)\\\\s+build/i,               // Xiaomi Hongmi\\n-            /android.+(redmi[\\\\s\\\\-_]*(?:note|k)?(?:[\\\\s_]?[\\\\w\\\\s]+))(?:\\\\s+build|\\\\))/i,      \\n+            /android.+(hm[\\\\s\\\\-_]?note?[\\\\s_]?(?:\\\\d\\\\w)?)\\\\sbuild/i,                // Xiaomi Hongmi\\n+            /android.+(redmi[\\\\s\\\\-_]?(?:note|k)?(?:[\\\\s_]?[\\\\w\\\\s]+))(?:\\\\sbuild|\\\\))/i,      \\n                                                                                 // Xiaomi Redmi\\n-            /android.+(mi[\\\\s\\\\-_]*(?:a\\\\d|one|one[\\\\s_]plus|note lte)?[\\\\s_]?(?:\\\\d?\\\\w?)[\\\\s_]*(?:plus)?)\\\\s+build/i    \\n+            /android.+(mi[\\\\s\\\\-_]?(?:a\\\\d|one|one[\\\\s_]plus|note lte)?[\\\\s_]?(?:\\\\d?\\\\w?)[\\\\s_]?(?:plus)?)\\\\sbuild/i    \\n                                                                                 // Xiaomi Mi\\n             ], [[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, MOBILE]], [\\n-            /android.+(mi[\\\\s\\\\-_]*(?:pad)(?:[\\\\s_]?[\\\\w\\\\s]+))(?:\\\\s+build|\\\\))/i     // Mi Pad tablets\\n+            /android.+(mi[\\\\s\\\\-_]?(?:pad)(?:[\\\\s_]?[\\\\w\\\\s]+))(?:\\\\sbuild|\\\\))/i     // Mi Pad tablets\\n             ],[[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, TABLET]], [\\n             /android.+;\\\\s(m[1-5]\\\\snote)\\\\sbuild/i                                // Meizu\\n             ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\\n@@ -611,7 +611,7 @@\\n             /android.+[;\\\\/]\\\\s*(RCT[\\\\d\\\\w]+)\\\\s+build/i                            // RCA Tablets\\n             ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\\n \\n-            /android.+[;\\\\/\\\\s]+(Venue[\\\\d\\\\s]{2,7})\\\\s+build/i                      // Dell Venue Tablets\\n+            /android.+[;\\\\/\\\\s](Venue[\\\\d\\\\s]{2,7})\\\\s+build/i                       // Dell Venue Tablets\\n             ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\\n \\n             /android.+[;\\\\/]\\\\s*(Q[T|M][\\\\d\\\\w]+)\\\\s+build/i                         // Verizon Tablet\\n@@ -669,8 +669,8 @@\\n             /android.+[;\\\\/]\\\\s*TU_(1491)\\\\s+build/i                               // Rotor Tablets\\n             ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\\n \\n-            /android.+(KS(.+))\\\\s+build/i                                        // Amazon Kindle Tablets\\n-            ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [\\n+            //android.+(KS(.+))\\\\s+build/i                                        // Amazon Kindle Tablets\\n+            //], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [\\n \\n             /android.+(Gigaset)[\\\\s\\\\-]+(Q\\\\w{1,9})\\\\s+build/i                      // Gigaset Tablets\\n             ], [VENDOR, MODEL, [TYPE, TABLET]], [\"}}",
      "message_norm": "fix redos vulnerabilities reported by snyk",
      "language": "en",
      "entities": "[('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('vulnerabilities', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/ua-parser.js'])",
      "num_files": 1.0
    },
    {
      "index": 2476,
      "vuln_id": "GHSA-mw6v-crh8-8533",
      "cwe_id": "{'CWE-190'}",
      "score": 9.8,
      "chain": "{'https://github.com/tensorflow/tensorflow/commit/d107fee1e4a9a4462f01564798d345802acc2aef'}",
      "dataset": "osv",
      "summary": "Integer Overflow or Wraparound in Google TensorFlow Google TensorFlow 1.7.x and earlier is affected by a Buffer Overflow vulnerability. The type of exploitation is context-dependent.",
      "published_date": "2019-04-30",
      "chain_len": 1,
      "project": "https://github.com/tensorflow/tensorflow",
      "commit_href": "https://github.com/tensorflow/tensorflow/commit/d107fee1e4a9a4462f01564798d345802acc2aef",
      "commit_sha": "d107fee1e4a9a4462f01564798d345802acc2aef",
      "patch": "SINGLE",
      "chain_ord": "['d107fee1e4a9a4462f01564798d345802acc2aef']",
      "before_first_fix_commit": "{'f8acfb01792886274778d9ad7a9d990cbef14141'}",
      "last_fix_commit": "d107fee1e4a9a4462f01564798d345802acc2aef",
      "chain_ord_pos": 1.0,
      "commit_datetime": "04/04/2018, 23:26:25",
      "message": "Check that n + kBlockTrailerSize does not overflow before reading a block\n\nPiperOrigin-RevId: 191666300",
      "author": "Frank Chen",
      "comments": null,
      "stats": "{'additions': 7, 'deletions': 0, 'total': 7}",
      "files": "{'tensorflow/core/lib/io/format.cc': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https://github.com/tensorflow/tensorflow/raw/d107fee1e4a9a4462f01564798d345802acc2aef/tensorflow%2Fcore%2Flib%2Fio%2Fformat.cc', 'patch': '@@ -13,6 +13,8 @@ See the License for the specific language governing permissions and\\n limitations under the License.\\n ==============================================================================*/\\n \\n+#include <limits>\\n+\\n #include \"tensorflow/core/lib/io/format.h\"\\n \\n #include \"tensorflow/core/lib/core/coding.h\"\\n@@ -84,6 +86,11 @@ Status ReadBlock(RandomAccessFile* file, const BlockHandle& handle,\\n   // Read the block contents as well as the type/crc footer.\\n   // See table_builder.cc for the code that built this structure.\\n   size_t n = static_cast<size_t>(handle.size());\\n+\\n+  if (kBlockTrailerSize > std::numeric_limits<size_t>::max() - n) {\\n+    return errors::DataLoss(\"handle.size() too big\");\\n+  }\\n+\\n   char* buf = new char[n + kBlockTrailerSize];\\n   StringPiece contents;\\n   Status s = file->Read(handle.offset(), n + kBlockTrailerSize, &contents, buf);'}}",
      "message_norm": "check that n + kblocktrailersize does not overflow before reading a block\n\npiperorigin-revid: 191666300",
      "language": "en",
      "entities": "[('overflow', 'SECWORD', ''), ('191666300', 'SHA', 'generic_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['tensorflow/core/lib/io/format.cc'])",
      "num_files": 1.0
    },
    {
      "index": 1112,
      "vuln_id": "GHSA-82j4-vr25-x394",
      "cwe_id": "{'CWE-79'}",
      "score": 5.4,
      "chain": "{'https://github.com/star7th/showdoc/commit/78522520892d4e29cc94148c6ec84a204a607b73'}",
      "dataset": "osv",
      "summary": "Cross-site Scripting in ShowDoc ShowDoc is vulnerable to stored cross-site scripting due to unrestricted file upload in versions 2.10.3 and prior. A patch is available and anticipated to be part of version 2.10.4.",
      "published_date": "2022-03-15",
      "chain_len": 1,
      "project": "https://github.com/star7th/showdoc",
      "commit_href": "https://github.com/star7th/showdoc/commit/78522520892d4e29cc94148c6ec84a204a607b73",
      "commit_sha": "78522520892d4e29cc94148c6ec84a204a607b73",
      "patch": "SINGLE",
      "chain_ord": "['78522520892d4e29cc94148c6ec84a204a607b73']",
      "before_first_fix_commit": "{'52d1d902084387bec22a64e6027f100e939733c8', '830c89a4c2c5fd0dd491422bf8e97b4eb5713f55'}",
      "last_fix_commit": "78522520892d4e29cc94148c6ec84a204a607b73",
      "chain_ord_pos": 1.0,
      "commit_datetime": "03/13/2022, 10:39:59",
      "message": "Merge pull request #1629 from ajaysenr/master\n\nUpdate AttachmentModel.class.php",
      "author": "star7th",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 0, 'total': 1}",
      "files": "{'server/Application/Api/Model/AttachmentModel.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https://github.com/star7th/showdoc/raw/78522520892d4e29cc94148c6ec84a204a607b73/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -304,6 +304,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \"%\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xxhtml\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".aspx\")\\t\\t\\t\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}'}}",
      "message_norm": "merge pull request #1629 from ajaysenr/master\n\nupdate attachmentmodel.class.php",
      "language": "en",
      "entities": "[('#1629', 'ISSUE', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['server/Application/Api/Model/AttachmentModel.class.php'])",
      "num_files": 1.0
    },
    {
      "index": 2040,
      "vuln_id": "GHSA-hc72-vj3g-5g2g",
      "cwe_id": "{'CWE-79'}",
      "score": 5.4,
      "chain": "{'https://github.com/SeriaWei/ZKEACMS/commit/833c5460dc5c6152092f6ad54b8b832870a59903'}",
      "dataset": "osv",
      "summary": "Cross-site Scripting in ZKEACMS A cross-site scripting (XSS) vulnerability in /navigation/create?ParentID=%23 of ZKEACMS v3.5.2 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the ParentID parameter.",
      "published_date": "2022-05-26",
      "chain_len": 1,
      "project": "https://github.com/SeriaWei/ZKEACMS",
      "commit_href": "https://github.com/SeriaWei/ZKEACMS/commit/833c5460dc5c6152092f6ad54b8b832870a59903",
      "commit_sha": "833c5460dc5c6152092f6ad54b8b832870a59903",
      "patch": "SINGLE",
      "chain_ord": "['833c5460dc5c6152092f6ad54b8b832870a59903']",
      "before_first_fix_commit": "{'53109ba58bbeac75074583ec261732772ed1ecc5'}",
      "last_fix_commit": "833c5460dc5c6152092f6ad54b8b832870a59903",
      "chain_ord_pos": 1.0,
      "commit_datetime": "04/14/2022, 14:55:34",
      "message": "Sanitize Html\n\n#457",
      "author": "wayne",
      "comments": null,
      "stats": "{'additions': 36, 'deletions': 1, 'total': 37}",
      "files": "{'src/ZKEACMS/Common/Service/NavigationService.cs': {'additions': 36, 'deletions': 1, 'changes': 37, 'status': 'modified', 'raw_url': 'https://github.com/SeriaWei/ZKEACMS/raw/833c5460dc5c6152092f6ad54b8b832870a59903/src%2FZKEACMS%2FCommon%2FService%2FNavigationService.cs', 'patch': '@@ -11,13 +11,16 @@\\n using ZKEACMS.Common.Models;\\n using Easy;\\n using Microsoft.EntityFrameworkCore;\\n+using ZKEACMS.Safety;\\n \\n namespace ZKEACMS.Common.Service\\n {\\n     public class NavigationService : ServiceBase<NavigationEntity, CMSDbContext>, INavigationService\\n     {\\n-        public NavigationService(IApplicationContext applicationContext, CMSDbContext dbContext) : base(applicationContext, dbContext)\\n+        private readonly IHtmlSanitizer _htmlSanitizer;\\n+        public NavigationService(IApplicationContext applicationContext, CMSDbContext dbContext, IHtmlSanitizer htmlSanitizer) : base(applicationContext, dbContext)\\n         {\\n+            _htmlSanitizer = htmlSanitizer;\\n         }\\n         public override DbSet<NavigationEntity> CurrentDbSet => DbContext.Navigation;\\n         public override ServiceResult<NavigationEntity> Add(NavigationEntity item)\\n@@ -27,8 +30,34 @@ public override ServiceResult<NavigationEntity> Add(NavigationEntity item)\\n                 item.ParentId = \"#\";\\n             }\\n             item.ID = Guid.NewGuid().ToString(\"N\");\\n+            Santize(item);\\n             return base.Add(item);\\n         }\\n+\\n+        public override ServiceResult<NavigationEntity> AddRange(params NavigationEntity[] items)\\n+        {\\n+            foreach (var item in items)\\n+            {\\n+                Santize(item);\\n+            }\\n+            return base.AddRange(items);\\n+        }\\n+\\n+        public override ServiceResult<NavigationEntity> Update(NavigationEntity item)\\n+        {\\n+            Santize(item);\\n+            return base.Update(item);\\n+        }\\n+\\n+        public override ServiceResult<NavigationEntity> UpdateRange(params NavigationEntity[] items)\\n+        {\\n+            foreach (var item in items)\\n+            {\\n+                Santize(item);\\n+            }\\n+            return base.UpdateRange(items);\\n+        }\\n+\\n         public override void Remove(NavigationEntity item)\\n         {\\n             Remove(m => m.ParentId == item.ID);\\n@@ -73,5 +102,11 @@ public void Move(string id, string parentId, int position, int oldPosition)\\n             }\\n             Update(nav);\\n         }\\n+\\n+        private void Santize(NavigationEntity item)\\n+        {\\n+            item.Title = _htmlSanitizer.Sanitize(item.Title);\\n+            item.Html = _htmlSanitizer.Sanitize(item.Html);\\n+        }\\n     }\\n }\\n\\\\ No newline at end of file'}}",
      "message_norm": "sanitize html\n\n#457",
      "language": "sq",
      "entities": "[('sanitize', 'SECWORD', ''), ('#457', 'ISSUE', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/ZKEACMS/Common/Service/NavigationService.cs'])",
      "num_files": 1.0
    },
    {
      "index": 2923,
      "vuln_id": "GHSA-rcxc-3w2m-mp8h",
      "cwe_id": "{'CWE-502'}",
      "score": 9.8,
      "chain": "{'https://github.com/NVIDIA/NVFlare/commit/fd018eea9dff925a765079a94c2f017920fcda67'}",
      "dataset": "osv",
      "summary": "Unsafe deserialisation in the PKI implementation scheme of NVFlare ### Impact\nNVFLARE contains a vulnerability in its PKI implementation module, where The CA credentials are transported via pickle and no safe deserialization. The deserialization of Untrusted Data may allow an unprivileged network attacker to cause Remote Code Execution, Denial Of Service, and Impact to both Confidentiality and Integrity.\nAll versions before 2.1.2 are affected.\n\nCVSS Score = 9.8\n[AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H](https://nam11.safelinks.protection.outlook.com/?url=https%3A%2F%2Fnvd.nist.gov%2Fvuln-metrics%2Fcvss%2Fv3-calculator%3Fvector%3DAV%3AN%2FAC%3AL%2FPR%3AN%2FUI%3AN%2FS%3AU%2FC%3AH%2FI%3AH%2FA%3AH&data=05%7C01%7Cchesterc%40nvidia.com%7Ce9600bde16854b0b380008da4fc544f7%7C43083d15727340c1b7db39efd9ccc17a%7C0%7C0%7C637910005925574215%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=5kBrXEmAbqp8R31JCH%2FG95MUly72UPVihnBwiRFmvBY%3D&reserved=0)\n\n\n\n### Patches\nThe patch will be included in nvflare==2.1.2\n\n### Workarounds\nReplace pickle serialization with JSON and change the code accordingly\n\nAdditional information\nIssue Found by: Oliver Sellwood (@Nintorac)",
      "published_date": "2022-06-22",
      "chain_len": 1,
      "project": "https://github.com/NVIDIA/NVFlare",
      "commit_href": "https://github.com/NVIDIA/NVFlare/commit/fd018eea9dff925a765079a94c2f017920fcda67",
      "commit_sha": "fd018eea9dff925a765079a94c2f017920fcda67",
      "patch": "SINGLE",
      "chain_ord": "['fd018eea9dff925a765079a94c2f017920fcda67']",
      "before_first_fix_commit": "{'f0a005982122277a1ac22cb04f977186393d8ab2'}",
      "last_fix_commit": "fd018eea9dff925a765079a94c2f017920fcda67",
      "chain_ord_pos": 1.0,
      "commit_datetime": "04/19/2022, 15:30:59",
      "message": "Replace pickle in state persistence in provision cert with json (#412)",
      "author": "Isaac Yang",
      "comments": null,
      "stats": "{'additions': 17, 'deletions': 13, 'total': 30}",
      "files": "{'nvflare/lighter/impl/cert.py': {'additions': 17, 'deletions': 13, 'changes': 30, 'status': 'modified', 'raw_url': 'https://github.com/NVIDIA/NVFlare/raw/fd018eea9dff925a765079a94c2f017920fcda67/nvflare%2Flighter%2Fimpl%2Fcert.py', 'patch': '@@ -13,8 +13,8 @@\\n # limitations under the License.\\n \\n import datetime\\n+import json\\n import os\\n-import pickle\\n \\n from cryptography import x509\\n from cryptography.hazmat.backends import default_backend\\n@@ -50,13 +50,13 @@ def __init__(self):\\n \\n     def initialize(self, ctx):\\n         state_dir = self.get_state_dir(ctx)\\n-        cert_file = os.path.join(state_dir, \"cert.pkl\")\\n+        cert_file = os.path.join(state_dir, \"cert.json\")\\n         if os.path.exists(cert_file):\\n-            self.persistent_state = pickle.load(open(cert_file, \"rb\"))\\n-            self.serialized_cert = self.persistent_state[\"root_cert\"]\\n+            self.persistent_state = json.load(open(cert_file, \"rt\"))\\n+            self.serialized_cert = self.persistent_state[\"root_cert\"].encode(\"ascii\")\\n             self.root_cert = x509.load_pem_x509_certificate(self.serialized_cert, default_backend())\\n             self.pri_key = serialization.load_pem_private_key(\\n-                self.persistent_state[\"root_pri_key\"], password=None, backend=default_backend()\\n+                self.persistent_state[\"root_pri_key\"].encode(\"ascii\"), password=None, backend=default_backend()\\n             )\\n             self.pub_key = self.pri_key.public_key()\\n             self.subject = self.root_cert.subject\\n@@ -69,26 +69,30 @@ def _build_root(self, subject):\\n             self.pri_key = pri_key\\n             self.pub_key = pub_key\\n             self.serialized_cert = serialize_cert(self.root_cert)\\n-            self.persistent_state[\"root_cert\"] = self.serialized_cert\\n-            self.persistent_state[\"root_pri_key\"] = serialize_pri_key(self.pri_key)\\n+            self.persistent_state[\"root_cert\"] = self.serialized_cert.decode(\"ascii\")\\n+            self.persistent_state[\"root_pri_key\"] = serialize_pri_key(self.pri_key).decode(\"ascii\")\\n \\n     def _build_write_cert_pair(self, participant, base_name, ctx):\\n         subject = participant.subject\\n         if self.persistent_state and subject in self.persistent_state:\\n-            cert = x509.load_pem_x509_certificate(self.persistent_state[subject][\"cert\"], default_backend())\\n+            cert = x509.load_pem_x509_certificate(\\n+                self.persistent_state[subject][\"cert\"].encode(\"ascii\"), default_backend()\\n+            )\\n             pri_key = serialization.load_pem_private_key(\\n-                self.persistent_state[subject][\"pri_key\"], password=None, backend=default_backend()\\n+                self.persistent_state[subject][\"pri_key\"].encode(\"ascii\"), password=None, backend=default_backend()\\n             )\\n         else:\\n             pri_key, cert = self.get_pri_key_cert(participant)\\n-            self.persistent_state[subject] = dict(cert=serialize_cert(cert), pri_key=serialize_pri_key(pri_key))\\n+            self.persistent_state[subject] = dict(\\n+                cert=serialize_cert(cert).decode(\"ascii\"), pri_key=serialize_pri_key(pri_key).decode(\"ascii\")\\n+            )\\n         dest_dir = self.get_kit_dir(participant, ctx)\\n         with open(os.path.join(dest_dir, f\"{base_name}.crt\"), \"wb\") as f:\\n             f.write(serialize_cert(cert))\\n         with open(os.path.join(dest_dir, f\"{base_name}.key\"), \"wb\") as f:\\n             f.write(serialize_pri_key(pri_key))\\n         pkcs12 = serialization.pkcs12.serialize_key_and_certificates(\\n-            subject.encode(\"utf-8\"), pri_key, cert, None, serialization.BestAvailableEncryption(subject.encode(\"utf-8\"))\\n+            subject.encode(\"ascii\"), pri_key, cert, None, serialization.BestAvailableEncryption(subject.encode(\"ascii\"))\\n         )\\n         with open(os.path.join(dest_dir, f\"{base_name}.pfx\"), \"wb\") as f:\\n             f.write(pkcs12)\\n@@ -163,5 +167,5 @@ def _x509_name(self, cn_name, org_name=None):\\n \\n     def finalize(self, ctx):\\n         state_dir = self.get_state_dir(ctx)\\n-        cert_file = os.path.join(state_dir, \"cert.pkl\")\\n-        pickle.dump(self.persistent_state, open(cert_file, \"wb\"))\\n+        cert_file = os.path.join(state_dir, \"cert.json\")\\n+        json.dump(self.persistent_state, open(cert_file, \"wt\"))'}}",
      "message_norm": "replace pickle in state persistence in provision cert with json (#412)",
      "language": "en",
      "entities": "[('#412', 'ISSUE', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['nvflare/lighter/impl/cert.py'])",
      "num_files": 1.0
    },
    {
      "index": 873,
      "vuln_id": "GHSA-6p5r-g9mq-ggh2",
      "cwe_id": "{'CWE-824'}",
      "score": 7.1,
      "chain": "{'https://github.com/tensorflow/tensorflow/commit/ff8894044dfae5568ecbf2ed514c1a37dc394f1b'}",
      "dataset": "osv",
      "summary": "Reference binding to nullptr in `MatrixSetDiagV*` ops ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in all operations of type `tf.raw_ops.MatrixSetDiagV*`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.MatrixSetDiagV3(\n  input=[1,2,3],\n  diagonal=[1,1],\n  k=[],\n  align='RIGHT_LEFT')\n```\n  \nThe  [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/linalg/matrix_diag_op.cc) has incomplete validation that the value of `k` is a valid tensor. We have check that this value is either a scalar or a vector, but there is no check for the number of elements. If this is an empty tensor, then code that accesses the first element of the tensor is wrong: \n\n```cc \n  auto& diag_index = context->input(1);\n  ...\n  lower_diag_index = diag_index.flat<int32>()(0);\n```\n  \n### Patches\nWe have patched the issue in GitHub commit [ff8894044dfae5568ecbf2ed514c1a37dc394f1b](https://github.com/tensorflow/tensorflow/commit/ff8894044dfae5568ecbf2ed514c1a37dc394f1b).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
      "published_date": "2021-08-25",
      "chain_len": 1,
      "project": "https://github.com/tensorflow/tensorflow",
      "commit_href": "https://github.com/tensorflow/tensorflow/commit/ff8894044dfae5568ecbf2ed514c1a37dc394f1b",
      "commit_sha": "ff8894044dfae5568ecbf2ed514c1a37dc394f1b",
      "patch": "SINGLE",
      "chain_ord": "['ff8894044dfae5568ecbf2ed514c1a37dc394f1b']",
      "before_first_fix_commit": "{'59077ac39cc64139f889863081bdb3d0f88d39b6'}",
      "last_fix_commit": "ff8894044dfae5568ecbf2ed514c1a37dc394f1b",
      "chain_ord_pos": 1.0,
      "commit_datetime": "07/31/2021, 01:58:29",
      "message": "Add one missing valdiation to `matrix_set_diag_op.cc`\n\nPiperOrigin-RevId: 387923408\nChange-Id: If6a97b9098c13879400f56c22f91555cdf0ce5d7",
      "author": "Mihai Maruseac",
      "comments": null,
      "stats": "{'additions': 3, 'deletions': 0, 'total': 3}",
      "files": "{'tensorflow/core/kernels/linalg/matrix_set_diag_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https://github.com/tensorflow/tensorflow/raw/ff8894044dfae5568ecbf2ed514c1a37dc394f1b/tensorflow%2Fcore%2Fkernels%2Flinalg%2Fmatrix_set_diag_op.cc', 'patch': '@@ -70,6 +70,9 @@ class MatrixSetDiagOp : public OpKernel {\\n                   errors::InvalidArgument(\\n                       \"diag_index must be a scalar or vector, received shape: \",\\n                       diag_index.shape().DebugString()));\\n+      OP_REQUIRES(\\n+          context, diag_index.NumElements() > 0,\\n+          errors::InvalidArgument(\"diag_index must have at least one element\"));\\n       lower_diag_index = diag_index.flat<int32>()(0);\\n       upper_diag_index = lower_diag_index;\\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {'}}",
      "message_norm": "add one missing valdiation to `matrix_set_diag_op.cc`\n\npiperorigin-revid: 387923408\nchange-id: if6a97b9098c13879400f56c22f91555cdf0ce5d7",
      "language": "en",
      "entities": "[('add', 'ACTION', ''), ('387923408', 'SHA', 'generic_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['tensorflow/core/kernels/linalg/matrix_set_diag_op.cc'])",
      "num_files": 1.0
    },
    {
      "index": 839,
      "vuln_id": "GHSA-6gv8-p3vj-pxvr",
      "cwe_id": "{'CWE-476'}",
      "score": 7.7,
      "chain": "{'https://github.com/tensorflow/tensorflow/commit/7bdf50bb4f5c54a4997c379092888546c97c3ebd'}",
      "dataset": "osv",
      "summary": "Null pointer dereference in `UncompressElement` ### Impact\nThe code for `tf.raw_ops.UncompressElement` can be made to trigger a null pointer dereference: \n\n```python\nimport tensorflow as tf\n\ndata = tf.data.Dataset.from_tensors([0.0])\ntf.raw_ops.UncompressElement(\n  compressed=tf.data.experimental.to_variant(data),\n  output_types=[tf.int64],\n  output_shapes=[2])\n```\n  \nThe [implementation](https://github.com/tensorflow/tensorflow/blob/f24faa153ad31a4b51578f8181d3aaab77a1ddeb/tensorflow/core/kernels/data/experimental/compression_ops.cc#L50-L53) obtains a pointer to a `CompressedElement` from a `Variant` tensor and then proceeds to dereference it for decompressing. There is no check that the `Variant` tensor contained a `CompressedElement`, so the pointer is actually `nullptr`.\n\n### Patches\nWe have patched the issue in GitHub commit [7bdf50bb4f5c54a4997c379092888546c97c3ebd](https://github.com/tensorflow/tensorflow/commit/7bdf50bb4f5c54a4997c379092888546c97c3ebd).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
      "published_date": "2021-08-25",
      "chain_len": 1,
      "project": "https://github.com/tensorflow/tensorflow",
      "commit_href": "https://github.com/tensorflow/tensorflow/commit/7bdf50bb4f5c54a4997c379092888546c97c3ebd",
      "commit_sha": "7bdf50bb4f5c54a4997c379092888546c97c3ebd",
      "patch": "SINGLE",
      "chain_ord": "['7bdf50bb4f5c54a4997c379092888546c97c3ebd']",
      "before_first_fix_commit": "{'a21a1226a1dbc08e257e4344324d5881fbd95d4e'}",
      "last_fix_commit": "7bdf50bb4f5c54a4997c379092888546c97c3ebd",
      "chain_ord_pos": 1.0,
      "commit_datetime": "07/10/2021, 00:45:15",
      "message": "Ensure non-empty compressed input in tf.raw_ops.UncompressElement\n\nPiperOrigin-RevId: 383955815\nChange-Id: I072a84fd02738dd2f51b3f42836ed80067dba4a8",
      "author": "Laura Pak",
      "comments": null,
      "stats": "{'additions': 5, 'deletions': 0, 'total': 5}",
      "files": "{'tensorflow/core/kernels/data/experimental/compression_ops.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https://github.com/tensorflow/tensorflow/raw/7bdf50bb4f5c54a4997c379092888546c97c3ebd/tensorflow%2Fcore%2Fkernels%2Fdata%2Fexperimental%2Fcompression_ops.cc', 'patch': '@@ -48,6 +48,11 @@ void UncompressElementOp::Compute(OpKernelContext* ctx) {\\n   Tensor tensor = ctx->input(0);\\n   const Variant& variant = tensor.scalar<Variant>()();\\n   const CompressedElement* compressed = variant.get<CompressedElement>();\\n+  OP_REQUIRES(\\n+      ctx, compressed != nullptr,\\n+      errors::InvalidArgument(\\n+          \"Input does not contain a compressed element. Instead got tensor \",\\n+          tensor.DebugString()));\\n \\n   std::vector<Tensor> components;\\n   OP_REQUIRES_OK(ctx, UncompressElement(*compressed, &components));'}}",
      "message_norm": "ensure non-empty compressed input in tf.raw_ops.uncompresselement\n\npiperorigin-revid: 383955815\nchange-id: i072a84fd02738dd2f51b3f42836ed80067dba4a8",
      "language": "en",
      "entities": "[('ensure', 'ACTION', ''), ('compressed', 'SECWORD', ''), ('tf.raw_ops.uncompresselement', 'SECWORD', ''), ('383955815', 'SHA', 'generic_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['tensorflow/core/kernels/data/experimental/compression_ops.cc'])",
      "num_files": 1.0
    },
    {
      "index": 1021,
      "vuln_id": "GHSA-7fc2-rm35-2pp7",
      "cwe_id": "{'CWE-352'}",
      "score": 8.8,
      "chain": "{'https://github.com/ipython/ipython/commit/1415a9710407e7c14900531813c15ba6165f0816', 'https://github.com/ipython/ipython/commit/a05fe052a18810e92d9be8c1185952c13fe4e5b0'}",
      "dataset": "osv",
      "summary": "IPython vulnerable to cross site request forgery (CSRF) IPython (Interactive Python) is a command shell. Cross-site request forgery in the REST API is possible in in IPython 2 and 3. Versions 2.4.1 and 3.2.3 contain patches.",
      "published_date": "2022-05-17",
      "chain_len": 2,
      "project": "https://github.com/ipython/ipython",
      "commit_href": "https://github.com/ipython/ipython/commit/1415a9710407e7c14900531813c15ba6165f0816",
      "commit_sha": "1415a9710407e7c14900531813c15ba6165f0816",
      "patch": "MULTI",
      "chain_ord": "['1415a9710407e7c14900531813c15ba6165f0816', 'a05fe052a18810e92d9be8c1185952c13fe4e5b0']",
      "before_first_fix_commit": "{'6884e8b36dc1e2d59e1d8ddb5e95788728d76e6f'}",
      "last_fix_commit": "a05fe052a18810e92d9be8c1185952c13fe4e5b0",
      "chain_ord_pos": 1.0,
      "commit_datetime": "07/08/2015, 07:11:16",
      "message": "check origin of API requests\n\nprotects agains CSRF on POST endpoints via forms.",
      "author": "Min RK",
      "comments": null,
      "stats": "{'additions': 48, 'deletions': 1, 'total': 49}",
      "files": "{'IPython/html/base/handlers.py': {'additions': 48, 'deletions': 1, 'changes': 49, 'status': 'modified', 'raw_url': 'https://github.com/ipython/ipython/raw/1415a9710407e7c14900531813c15ba6165f0816/IPython%2Fhtml%2Fbase%2Fhandlers.py', 'patch': '@@ -5,7 +5,6 @@\\n \\n import functools\\n import json\\n-import logging\\n import os\\n import re\\n import sys\\n@@ -15,6 +14,10 @@\\n     from http.client import responses\\n except ImportError:\\n     from httplib import responses\\n+try:\\n+    from urllib.parse import urlparse # Py 3\\n+except ImportError:\\n+    from urlparse import urlparse # Py 2\\n \\n from jinja2 import TemplateNotFound\\n from tornado import web\\n@@ -320,6 +323,50 @@ def write_error(self, status_code, **kwargs):\\n class APIHandler(IPythonHandler):\\n     \"\"\"Base class for API handlers\"\"\"\\n     \\n+    def check_origin(self):\\n+        \"\"\"Check Origin for cross-site API requests.\\n+        \\n+        Copied from WebSocket with changes:\\n+        \\n+        - allow unspecified host/origin (e.g. scripts)\\n+        \"\"\"\\n+        if self.allow_origin == \\'*\\':\\n+            return True\\n+\\n+        host = self.request.headers.get(\"Host\")\\n+        origin = self.request.headers.get(\"Origin\")\\n+\\n+        # If no header is provided, assume it comes from a script/curl.\\n+        # We are only concerned with cross-site browser stuff here.\\n+        if origin is None or host is None:\\n+            return True\\n+        \\n+        origin = origin.lower()\\n+        origin_host = urlparse(origin).netloc\\n+        \\n+        # OK if origin matches host\\n+        if origin_host == host:\\n+            return True\\n+        \\n+        # Check CORS headers\\n+        if self.allow_origin:\\n+            allow = self.allow_origin == origin\\n+        elif self.allow_origin_pat:\\n+            allow = bool(self.allow_origin_pat.match(origin))\\n+        else:\\n+            # No CORS headers deny the request\\n+            allow = False\\n+        if not allow:\\n+            self.log.warn(\"Blocking Cross Origin API request.  Origin: %s, Host: %s\",\\n+                origin, host,\\n+            )\\n+        return allow\\n+\\n+    def prepare(self):\\n+        if not self.check_origin():\\n+            raise web.HTTPError(404)\\n+        return super(APIHandler, self).prepare()\\n+\\n     @property\\n     def content_security_policy(self):\\n         csp = \\'; \\'.join(['}}",
      "message_norm": "check origin of api requests\n\nprotects agains csrf on post endpoints via forms.",
      "language": "en",
      "entities": "[('protects', 'ACTION', ''), ('csrf', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['IPython/html/base/handlers.py'])",
      "num_files": 1.0
    },
    {
      "index": 1368,
      "vuln_id": "GHSA-9g3v-j3cr-6fc6",
      "cwe_id": "{'CWE-79'}",
      "score": 6.8,
      "chain": "{'https://github.com/snipe/snipe-it/commit/bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c'}",
      "dataset": "osv",
      "summary": "Cross-site Scripting in snipe-it snipe-it is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "published_date": "2021-10-21",
      "chain_len": 1,
      "project": "https://github.com/snipe/snipe-it",
      "commit_href": "https://github.com/snipe/snipe-it/commit/bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c",
      "commit_sha": "bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c",
      "patch": "SINGLE",
      "chain_ord": "['bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c']",
      "before_first_fix_commit": "{'5d94b99035317cd23059c7af91ff5f38177f5968'}",
      "last_fix_commit": "bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c",
      "chain_ord_pos": 1.0,
      "commit_datetime": "10/15/2021, 16:50:52",
      "message": "Fixes possible XSS on all-file-types export\n\nSigned-off-by: snipe <snipe@snipe.net>",
      "author": "snipe",
      "comments": null,
      "stats": "{'additions': 4, 'deletions': 0, 'total': 4}",
      "files": "{'resources/views/partials/bootstrap-table.blade.php': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https://github.com/snipe/snipe-it/raw/bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c/resources%2Fviews%2Fpartials%2Fbootstrap-table.blade.php', 'patch': '@@ -75,6 +75,10 @@ classes: \\'table table-responsive table-no-bordered\\',\\n                 export: \\'fa-download\\',\\n                 clearSearch: \\'fa-times\\'\\n             },\\n+            exportOptions: {\\n+                htmlContent: true,\\n+            },\\n+\\n             exportTypes: [\\'csv\\', \\'excel\\', \\'doc\\', \\'txt\\',\\'json\\', \\'xml\\', \\'pdf\\'],\\n             onLoadSuccess: function () {\\n                 $(\\'[data-toggle=\"tooltip\"]\\').tooltip(); // Needed to attach tooltips after ajax call'}}",
      "message_norm": "fixes possible xss on all-file-types export\n\nsigned-off-by: snipe <snipe@snipe.net>",
      "language": "en",
      "entities": "[('xss', 'SECWORD', ''), ('snipe@snipe.net', 'EMAIL', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['resources/views/partials/bootstrap-table.blade.php'])",
      "num_files": 1.0
    },
    {
      "index": 3330,
      "vuln_id": "GHSA-wwgf-3xp7-cxj4",
      "cwe_id": "{'CWE-200'}",
      "score": 5.9,
      "chain": "{'https://github.com/FriendsOfPHP/security-advisories/commit/942fd37245cb724ba8cc8d6f11f075a1bd53b338'}",
      "dataset": "osv",
      "summary": "Potentially sensitive data exposure in Symfony Web Socket Bundle ### Impact\nInside `Gos\\Bundle\\WebSocketBundle\\Server\\App\\Dispatcher\\TopicDispatcher::onPublish()`, messages are arbitrarily broadcasted to the related Topic if `Gos\\Bundle\\WebSocketBundle\\Server\\App\\Dispatcher\\TopicDispatcher::dispatch()` does not succeed.  The `dispatch()` method can be considered to not succeed if (depending on the version of the bundle) the callback defined on a topic route is misconfigured, a `Gos\\Bundle\\WebSocketBundle\\Topic\\TopicInterface` implementation is not found for the callback, a topic which also implements `Gos\\Bundle\\WebSocketBundle\\Topic\\SecuredTopicInterface` rejects the connection, or an Exception is unhandled.  This can result in an unintended broadcast to the websocket server potentially with data that should be considered sensitive.\n\n### Patches\nIn 1.10.4, 2.6.1, and 3.3.0, `Gos\\Bundle\\WebSocketBundle\\Server\\App\\Dispatcher\\TopicDispatcher::onPublish()` has been changed to no longer broadcast an event's data if `Gos\\Bundle\\WebSocketBundle\\Server\\App\\Dispatcher\\TopicDispatcher::dispatch()` fails.\n\n### Workarounds\nUpgrade to 1.10.4, 2.6.1, and 3.3.0\n\nNote, the 1.x branch is considered end of support as of July 1, 2020.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [this repository](https://github.com/GeniusesOfSymfony/WebSocketBundle)",
      "published_date": "2020-07-07",
      "chain_len": 1,
      "project": "https://github.com/FriendsOfPHP/security-advisories",
      "commit_href": "https://github.com/FriendsOfPHP/security-advisories/commit/942fd37245cb724ba8cc8d6f11f075a1bd53b338",
      "commit_sha": "942fd37245cb724ba8cc8d6f11f075a1bd53b338",
      "patch": "SINGLE",
      "chain_ord": "['942fd37245cb724ba8cc8d6f11f075a1bd53b338']",
      "before_first_fix_commit": "{'c6fc7221e152c3a73fed562ad9c815ccf258a476'}",
      "last_fix_commit": "942fd37245cb724ba8cc8d6f11f075a1bd53b338",
      "chain_ord_pos": 1.0,
      "commit_datetime": "07/06/2020, 14:36:56",
      "message": "Add gos/web-socket-bundle advisory",
      "author": "Michael Babker",
      "comments": null,
      "stats": "{'additions': 13, 'deletions': 0, 'total': 13}",
      "files": "{'gos/web-socket-bundle/2020-07-06-1.yaml': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'added', 'raw_url': 'https://github.com/FriendsOfPHP/security-advisories/raw/942fd37245cb724ba8cc8d6f11f075a1bd53b338/gos%2Fweb-socket-bundle%2F2020-07-06-1.yaml', 'patch': \"@@ -0,0 +1,13 @@\\n+title:     Potentially sensitive data exposure\\n+link:      https://github.com/GeniusesOfSymfony/WebSocketBundle/security/advisories/GHSA-wwgf-3xp7-cxj4\\n+branches:\\n+    1.x:\\n+        time:       2020-07-06 14:08:35\\n+        versions:   ['<1.10.4']\\n+    3.x:\\n+        time:       2020-07-06 14:08:35\\n+        versions:   ['>=2.0.0', '<2.6.1']\\n+    3.x:\\n+        time:       2020-07-06 14:08:35\\n+        versions:   ['>=3.0.0', '<3.3.0']\\n+reference: composer://gos/web-socket-bundle\"}}",
      "message_norm": "add gos/web-socket-bundle advisory",
      "language": "en",
      "entities": "[('add', 'ACTION', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['gos/web-socket-bundle/2020-07-06-1.yaml'])",
      "num_files": 1.0
    },
    {
      "index": 849,
      "vuln_id": "GHSA-6hjc-m38h-7jhh",
      "cwe_id": "{'CWE-79'}",
      "score": 6.1,
      "chain": "{'https://github.com/nystudio107/craft-seomatic/commit/4e46b792ce973ac0c652fb330055f41aca1981c8', 'https://github.com/nystudio107/craft-seomatic/commit/5f2cdc7c39e0a4bfb60d2f84131508f0a87b2873'}",
      "dataset": "osv",
      "summary": "Cross-site Scripting in SEOmatic plugin A cross-site scripting (XSS) vulnerability in the SEOmatic plugin 3.4.10 for Craft CMS 3 allows remote attackers to inject arbitrary web script via a GET to /index.php?action=seomatic/file/seo-file-link with url parameter containing the base64 encoded URL of a malicious web page / file and fileName parameter containing an arbitrary filename with the intended content-type to be rendered in the user's browser as the extension.",
      "published_date": "2022-06-13",
      "chain_len": 2,
      "project": "https://github.com/nystudio107/craft-seomatic",
      "commit_href": "https://github.com/nystudio107/craft-seomatic/commit/5f2cdc7c39e0a4bfb60d2f84131508f0a87b2873",
      "commit_sha": "5f2cdc7c39e0a4bfb60d2f84131508f0a87b2873",
      "patch": "MULTI",
      "chain_ord": "['5f2cdc7c39e0a4bfb60d2f84131508f0a87b2873', '4e46b792ce973ac0c652fb330055f41aca1981c8']",
      "before_first_fix_commit": "{'8c0dc48d026fd076cd0a8fae917bdadc8d67cfa6'}",
      "last_fix_commit": "4e46b792ce973ac0c652fb330055f41aca1981c8",
      "chain_ord_pos": 1.0,
      "commit_datetime": "09/24/2021, 01:25:40",
      "message": "Ensure that only files with the extensions listed in `allowedFileExtensions` General Config setting can be used with the SEO File Link controller\n\nSigned-off-by: Andrew Welch <andrew@nystudio107.com>",
      "author": "Andrew Welch",
      "comments": null,
      "stats": "{'additions': 12, 'deletions': 0, 'total': 12}",
      "files": "{'src/controllers/FileController.php': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https://github.com/nystudio107/craft-seomatic/raw/5f2cdc7c39e0a4bfb60d2f84131508f0a87b2873/src%2Fcontrollers%2FFileController.php', 'patch': '@@ -15,12 +15,15 @@\\n use nystudio107\\\\seomatic\\\\Seomatic;\\n \\n use Craft;\\n+use craft\\\\elements\\\\Asset;\\n use craft\\\\helpers\\\\FileHelper;\\n+use craft\\\\helpers\\\\Assets as AssetsHelper;\\n use craft\\\\web\\\\Controller;\\n \\n use yii\\\\web\\\\NotFoundHttpException;\\n use yii\\\\web\\\\HttpException;\\n use yii\\\\web\\\\Response;\\n+use yii\\\\web\\\\ServerErrorHttpException;\\n \\n /**\\n  * @author    nystudio107\\n@@ -87,6 +90,15 @@ public function actionSeoFileLink($url, $robots = \\'\\', $canonical = \\'\\', $inline =\\n                 $headerValue = \\'<\\'.$canonical.\\'>; rel=\"canonical\"\\';\\n                 $response->headers->add(\\'Link\\', $headerValue);\\n             }\\n+            // Ensure the file type is allowed\\n+            // ref: https://craftcms.com/docs/3.x/config/config-settings.html#allowedfileextensions\\n+            $allowedExtensions = Craft::$app->getConfig()->getGeneral()->allowedFileExtensions;\\n+            if (($ext = pathinfo($fileName, PATHINFO_EXTENSION)) !== \\'\\') {\\n+                $ext = strtolower($ext);\\n+            }\\n+            if ($ext === \\'\\' || !in_array($ext, $allowedExtensions, true)) {\\n+                throw new ServerErrorHttpException(Craft::t(\\'seomatic\\', \\'File format not allowed.\\'));\\n+            }\\n             // Send the file as a stream, so it can exist anywhere\\n             $response->sendContentAsFile(\\n                 $contents,'}}",
      "message_norm": "ensure that only files with the extensions listed in `allowedfileextensions` general config setting can be used with the seo file link controller\n\nsigned-off-by: andrew welch <andrew@nystudio107.com>",
      "language": "en",
      "entities": "[('ensure', 'ACTION', ''), ('andrew@nystudio107.com', 'EMAIL', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/controllers/FileController.php'])",
      "num_files": 1.0
    },
    {
      "index": 439,
      "vuln_id": "GHSA-4j82-5ccr-4r8v",
      "cwe_id": "{'CWE-617'}",
      "score": 6.5,
      "chain": "{'https://github.com/tensorflow/tensorflow/commit/c2426bba00a01de6913738df8fa78e0215fcce02'}",
      "dataset": "osv",
      "summary": "`CHECK`-failures in `TensorByteSize` in Tensorflow ### Impact\nA malicious user can cause a denial of service by altering a `SavedModel` such that [`TensorByteSize`](https://github.com/tensorflow/tensorflow/blob/a1320ec1eac186da1d03f033109191f715b2b130/tensorflow/core/framework/attr_value_util.cc#L46-L50) would trigger `CHECK` failures.\n\n```cc\nint64_t TensorByteSize(const TensorProto& t) {\n  // num_elements returns -1 if shape is not fully defined.\n  int64_t num_elems = TensorShape(t.tensor_shape()).num_elements();\n  return num_elems < 0 ? -1 : num_elems * DataTypeSize(t.dtype());\n}\n```\n`TensorShape` constructor throws a `CHECK`-fail if shape is partial or has a number of elements that would overflow the size of an `int`. The `PartialTensorShape` constructor instead does not cause a `CHECK`-abort if the shape is partial, which is exactly what this function needs to be able to return `-1`.\n\n### Patches\nWe have patched the issue in GitHub commit [c2426bba00a01de6913738df8fa78e0215fcce02](https://github.com/tensorflow/tensorflow/commit/c2426bba00a01de6913738df8fa78e0215fcce02).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
      "published_date": "2022-02-10",
      "chain_len": 1,
      "project": "https://github.com/tensorflow/tensorflow",
      "commit_href": "https://github.com/tensorflow/tensorflow/commit/c2426bba00a01de6913738df8fa78e0215fcce02",
      "commit_sha": "c2426bba00a01de6913738df8fa78e0215fcce02",
      "patch": "SINGLE",
      "chain_ord": "['c2426bba00a01de6913738df8fa78e0215fcce02']",
      "before_first_fix_commit": "{'31d8f8035f559fc6f03516f18ca3afea652d69b0'}",
      "last_fix_commit": "c2426bba00a01de6913738df8fa78e0215fcce02",
      "chain_ord_pos": 1.0,
      "commit_datetime": "11/11/2021, 19:50:53",
      "message": "Use `PartialTensorShape` instead of `TensorShape`.\n\n`TensorShape` constructor throws a CHECK-fail if shape is partial/overflows which the other doesn't. We are only determining the number of elements in the shape and partial shape should be used as it returns negative number when needed.\n\nPiperOrigin-RevId: 409205384\nChange-Id: Ia56542ff9ec758f2c9ffc7e4dcc9fa7eecd86e7b",
      "author": "Mihai Maruseac",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 1, 'total': 2}",
      "files": "{'tensorflow/core/framework/attr_value_util.cc': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/tensorflow/tensorflow/raw/c2426bba00a01de6913738df8fa78e0215fcce02/tensorflow%2Fcore%2Fframework%2Fattr_value_util.cc', 'patch': '@@ -45,7 +45,7 @@ constexpr int kMaxTensorNestDepth = 100;\\n // not fully defined return -1.\\n int64_t TensorByteSize(const TensorProto& t) {\\n   // num_elements returns -1 if shape is not fully defined.\\n-  int64_t num_elems = TensorShape(t.tensor_shape()).num_elements();\\n+  int64_t num_elems = PartialTensorShape(t.tensor_shape()).num_elements();\\n   return num_elems < 0 ? -1 : num_elems * DataTypeSize(t.dtype());\\n }'}}",
      "message_norm": "use `partialtensorshape` instead of `tensorshape`.\n\n`tensorshape` constructor throws a check-fail if shape is partial/overflows which the other doesn't. we are only determining the number of elements in the shape and partial shape should be used as it returns negative number when needed.\n\npiperorigin-revid: 409205384\nchange-id: ia56542ff9ec758f2c9ffc7e4dcc9fa7eecd86e7b",
      "language": "en",
      "entities": "[('overflows', 'SECWORD', ''), ('409205384', 'SHA', 'generic_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['tensorflow/core/framework/attr_value_util.cc'])",
      "num_files": 1.0
    },
    {
      "index": 1662,
      "vuln_id": "GHSA-f522-ffg8-j8r6",
      "cwe_id": "{'CWE-20'}",
      "score": 7.5,
      "chain": "{'https://github.com/mafintosh/is-my-json-valid/commit/eca4beb21e61877d76fdf6bea771f72f39544d9b', 'https://github.com/mafintosh/is-my-json-valid/commit/b3051b277f7caa08cd2edc6f74f50aeda65d2976'}",
      "dataset": "osv",
      "summary": "Regular Expression Denial of Service in is-my-json-valid Version of `is-my-json-valid` before 1.4.1 or 2.17.2 are vulnerable to regular expression denial of service (ReDoS) via the email validation function.\n\n\n## Recommendation\n\nUpdate to version 1.4.1, 2.17.2 or later.",
      "published_date": "2017-10-24",
      "chain_len": 2,
      "project": "https://github.com/mafintosh/is-my-json-valid",
      "commit_href": "https://github.com/mafintosh/is-my-json-valid/commit/eca4beb21e61877d76fdf6bea771f72f39544d9b",
      "commit_sha": "eca4beb21e61877d76fdf6bea771f72f39544d9b",
      "patch": "MULTI",
      "chain_ord": "['eca4beb21e61877d76fdf6bea771f72f39544d9b', 'b3051b277f7caa08cd2edc6f74f50aeda65d2976']",
      "before_first_fix_commit": "{'5c6a43dedebf975508465b375af98e9afde2f49c', '767c6c0ee5e55c506ccd49141e7f31cb1910c47f'}",
      "last_fix_commit": "b3051b277f7caa08cd2edc6f74f50aeda65d2976",
      "chain_ord_pos": 1.0,
      "commit_datetime": "01/17/2016, 21:55:32",
      "message": "fix utc-millisec regex to avoid a ddos attack",
      "author": "Mathias Buus",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 1, 'total': 2}",
      "files": "{'formats.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/mafintosh/is-my-json-valid/raw/eca4beb21e61877d76fdf6bea771f72f39544d9b/formats.js', 'patch': \"@@ -11,4 +11,4 @@ exports['alpha'] = /^[a-zA-Z]+$/\\n exports['alphanumeric'] = /^[a-zA-Z0-9]+$/\\n exports['style'] = /\\\\s*(.+?):\\\\s*([^;]+);?/g\\n exports['phone'] = /^\\\\+(?:[0-9] ?){6,14}[0-9]$/\\n-exports['utc-millisec'] = /^[0-9]+(\\\\.?[0-9]+)?$/\\n+exports['utc-millisec'] = /^[0-9]{1,15}\\\\.?[0-9]{0,15}$/\"}}",
      "message_norm": "fix utc-millisec regex to avoid a ddos attack",
      "language": "en",
      "entities": "[('fix', 'ACTION', ''), ('ddos', 'SECWORD', ''), ('attack', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['formats.js'])",
      "num_files": 1.0
    },
    {
      "index": 2157,
      "vuln_id": "GHSA-hx9q-2mx4-m4pg",
      "cwe_id": "{'CWE-191', 'CWE-20'}",
      "score": 5.5,
      "chain": "{'https://github.com/tensorflow/tensorflow/commit/20cb18724b0bf6c09071a3f53434c4eec53cc147', 'https://github.com/tensorflow/tensorflow/commit/84563f265f28b3c36a15335c8b005d405260e943'}",
      "dataset": "osv",
      "summary": "Missing validation causes denial of service via `Conv3DBackpropFilterV2` ### Impact\nThe implementation of [`tf.raw_ops.UnsortedSegmentJoin`](https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/core/kernels/unsorted_segment_join_op.cc#L83-L148) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport tensorflow as tf\n\ntf.strings.unsorted_segment_join(\n  inputs=['123'],\n  segment_ids=[0],\n  num_segments=-1)\n```\n\nThe code assumes `num_segments` is a positive scalar but there is no validation:\n\n```cc\nconst Tensor& num_segments_tensor = context->input(2);\nauto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\n// ...\nTensor* output_tensor = nullptr;\nTensorShape output_shape =\n    GetOutputShape(input_shape, segment_id_shape, num_segments);\n```\n\nSince this value is used to allocate the output tensor, a negative value would result in a `CHECK`-failure (assertion failure), as per [TFSA-2021-198](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/security/advisory/tfsa-2021-198.md).\n\n### Patches \nWe have patched the issue in GitHub commit [84563f265f28b3c36a15335c8b005d405260e943](https://github.com/tensorflow/tensorflow/commit/84563f265f28b3c36a15335c8b005d405260e943) and GitHub commit [20cb18724b0bf6c09071a3f53434c4eec53cc147](https://github.com/tensorflow/tensorflow/commit/20cb18724b0bf6c09071a3f53434c4eec53cc147).\n  \nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n      \n### For more information \nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n                       \n### Attribution \nThis vulnerability has been reported externally via a [GitHub issue](https://github.com/tensorflow/tensorflow/issues/55305).",
      "published_date": "2022-05-24",
      "chain_len": 2,
      "project": "https://github.com/tensorflow/tensorflow",
      "commit_href": "https://github.com/tensorflow/tensorflow/commit/20cb18724b0bf6c09071a3f53434c4eec53cc147",
      "commit_sha": "20cb18724b0bf6c09071a3f53434c4eec53cc147",
      "patch": "MULTI",
      "chain_ord": "['84563f265f28b3c36a15335c8b005d405260e943', '20cb18724b0bf6c09071a3f53434c4eec53cc147']",
      "before_first_fix_commit": "{'3f30e4965889b1b86b1d56392e437ccc08907f65'}",
      "last_fix_commit": "20cb18724b0bf6c09071a3f53434c4eec53cc147",
      "chain_ord_pos": 2.0,
      "commit_datetime": "04/20/2022, 19:05:26",
      "message": "Allow 0 for number of segments in `unsorted_segment_join_op.cc`\n\nRelated to the fix for #55305\n\nPiperOrigin-RevId: 443157549",
      "author": "Mihai Maruseac",
      "comments": null,
      "stats": "{'additions': 4, 'deletions': 2, 'total': 6}",
      "files": "{'tensorflow/core/kernels/unsorted_segment_join_op.cc': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https://github.com/tensorflow/tensorflow/raw/20cb18724b0bf6c09071a3f53434c4eec53cc147/tensorflow%2Fcore%2Fkernels%2Funsorted_segment_join_op.cc', 'patch': '@@ -94,8 +94,10 @@ class UnsortedSegmentJoinOp : public OpKernel {\\n                 errors::InvalidArgument(\"Number of segments cannot be empty.\"));\\n     auto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\\n \\n-    OP_REQUIRES(context, num_segments > 0,\\n-                errors::InvalidArgument(\"Number of segments must be positive\"));\\n+    OP_REQUIRES(\\n+        context, num_segments >= 0,\\n+        errors::InvalidArgument(\\n+            \"Number of segments must be non-negative but got \", num_segments));\\n     OP_REQUIRES(context, segment_dims != 0,\\n                 errors::InvalidArgument(\"Segment_id cannot have rank 0\"));'}}",
      "message_norm": "allow 0 for number of segments in `unsorted_segment_join_op.cc`\n\nrelated to the fix for #55305\n\npiperorigin-revid: 443157549",
      "language": "en",
      "entities": "[('#55305', 'ISSUE', ''), ('443157549', 'SHA', 'generic_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['tensorflow/core/kernels/unsorted_segment_join_op.cc'])",
      "num_files": 1.0
    },
    {
      "index": 3015,
      "vuln_id": "GHSA-rv87-vcv4-fjvr",
      "cwe_id": "{'CWE-918'}",
      "score": 6.5,
      "chain": "{'https://github.com/jenkinsci/urltrigger-plugin/commit/aec43e370550b26636aa9cab0f23a5cbcffdc44f', 'https://github.com/jenkinsci/urltrigger-plugin/commit/46220e69c220bacf8eb23911c8feba9dd68d1a26'}",
      "dataset": "osv",
      "summary": "URLTrigger Plugin server-side request forgery vulnerability A server-side request forgery vulnerability exists in Jenkins URLTrigger Plugin 0.41 and earlier in URLTrigger.java that allows attackers with Overall/Read access to cause Jenkins to send a GET request to a specified URL. As of version 0.43, this form validation method no longer connects to a user provided URL.",
      "published_date": "2022-05-14",
      "chain_len": 2,
      "project": "https://github.com/jenkinsci/urltrigger-plugin",
      "commit_href": "https://github.com/jenkinsci/urltrigger-plugin/commit/aec43e370550b26636aa9cab0f23a5cbcffdc44f",
      "commit_sha": "aec43e370550b26636aa9cab0f23a5cbcffdc44f",
      "patch": "MULTI",
      "chain_ord": "['46220e69c220bacf8eb23911c8feba9dd68d1a26', 'aec43e370550b26636aa9cab0f23a5cbcffdc44f']",
      "before_first_fix_commit": "{'46220e69c220bacf8eb23911c8feba9dd68d1a26'}",
      "last_fix_commit": "aec43e370550b26636aa9cab0f23a5cbcffdc44f",
      "chain_ord_pos": 2.0,
      "commit_datetime": "05/29/2018, 21:33:01",
      "message": "Given that the URL is polled, may be valid at poll-time but not at\nconfiguration-time and may contain environment variables that could\nchange the URL at poll-time, validating it during configuration is\npointless.",
      "author": "Tony Noble",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 15, 'total': 17}",
      "files": "{'src/main/java/org/jenkinsci/plugins/urltrigger/URLTrigger.java': {'additions': 2, 'deletions': 15, 'changes': 17, 'status': 'modified', 'raw_url': 'https://github.com/jenkinsci/urltrigger-plugin/raw/aec43e370550b26636aa9cab0f23a5cbcffdc44f/src%2Fmain%2Fjava%2Forg%2Fjenkinsci%2Fplugins%2Furltrigger%2FURLTrigger.java', 'patch': '@@ -743,21 +743,8 @@ public FormValidation doCheckURL(@QueryParameter String value) {\\n             if ( value.contains( \"$\" ) ) {\\n             \\treturn FormValidation.warning( \"URL is parameterised and cannot be fully validated\" ) ;\\n             }\\n-\\n-            try {\\n-                URI uri = new URI(value);\\n-                if (uri.getScheme().equals(\"ftp\")) {\\n-                    FTPClient ftpClient = getFTPClientObject(value, null, null);\\n-                    ftpClient.getModificationTime(uri.getPath());\\n-                } else {\\n-                    ClientConfig cc = new DefaultClientConfig();\\n-                    Client client = Client.create(cc);\\n-                    client.resource(value).get(ClientResponse.class);\\n-                }\\n-                return FormValidation.ok();\\n-            } catch (Exception e) {\\n-                return FormValidation.error(e.getMessage());\\n-            }\\n+            \\n+            return FormValidation.ok();\\n         }\\n \\n         public FormValidation doCheckTimeout(@QueryParameter String value) {'}}",
      "message_norm": "given that the url is polled, may be valid at poll-time but not at\nconfiguration-time and may contain environment variables that could\nchange the url at poll-time, validating it during configuration is\npointless.",
      "language": "en",
      "entities": "[('change', 'ACTION', ''), ('validating', 'ACTION', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/main/java/org/jenkinsci/plugins/urltrigger/URLTrigger.java'])",
      "num_files": 1.0
    },
    {
      "index": 1950,
      "vuln_id": "GHSA-gx6h-936c-vrrr",
      "cwe_id": "{'CWE-79'}",
      "score": 7.4,
      "chain": "{'https://github.com/xwiki/xwiki-platform/commit/053d957d53f2a543d158f3ab651e390d2728e0b9'}",
      "dataset": "osv",
      "summary": "Cross site scripting in registration template in xwiki-platform ### Impact\n\nWe found a possible XSS vector in the `registerinline.vm` template related to the `xredirect` hidden field. \nThis template is only used in the following conditions:\n  - the wiki must be open to registration for anyone\n  - the wiki must be closed to view for Guest users (more specifically the XWiki.Registration page must be forbidden in View for guest user)\n\nA way to obtain the second condition is when administrators checked the \"Prevent unregistered users from viewing pages, regardless of the page rights\" box in the administration rights.\n\n### Patches\n\nThe issue is patched in versions 12.10.11, 14.0-rc-1, 13.4.7, 13.10.3.\n\n### Workarounds\n\nThere are two main ways for protecting against this vulnerability, the easiest and the best one is by applying a patch in the `registerinline.vm` template, the patch consists in checking the value of the xredirect field to ensure it matches the following:\n```\n<input type=\"hidden\" name=\"xredirect\" value=\"$escapetool.xml($!request.xredirect)\" />\n```\n\nIf for some reason it's not possible to patch this file, another workaround is to ensure \"Prevent unregistered users from viewing pages, regardless of the page rights\" is not checked in the rights and apply a better right scheme using groups and rights on spaces. \n\n### References\n\nhttps://jira.xwiki.org/browse/XWIKI-19291\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Jira XWiki](https://jira.xwiki.org)\n* Email us at [security mailing list](mailto:security@xwiki.org)",
      "published_date": "2022-02-09",
      "chain_len": 1,
      "project": "https://github.com/xwiki/xwiki-platform",
      "commit_href": "https://github.com/xwiki/xwiki-platform/commit/053d957d53f2a543d158f3ab651e390d2728e0b9",
      "commit_sha": "053d957d53f2a543d158f3ab651e390d2728e0b9",
      "patch": "SINGLE",
      "chain_ord": "['053d957d53f2a543d158f3ab651e390d2728e0b9']",
      "before_first_fix_commit": "{'9ae3703c535e34d328fd60758f85a8ee358224ca'}",
      "last_fix_commit": "053d957d53f2a543d158f3ab651e390d2728e0b9",
      "chain_ord_pos": 1.0,
      "commit_datetime": "01/04/2022, 10:09:57",
      "message": "XWIKI-19291: redirect parameter is badly handled in register page\n\n  * Fix the typo",
      "author": "Simon Urli",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 1, 'total': 2}",
      "files": "{'xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-templates/src/main/resources/templates/registerinline.vm': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/xwiki/xwiki-platform/raw/053d957d53f2a543d158f3ab651e390d2728e0b9/xwiki-platform-core%2Fxwiki-platform-web%2Fxwiki-platform-web-templates%2Fsrc%2Fmain%2Fresources%2Ftemplates%2Fregisterinline.vm', 'patch': '@@ -45,7 +45,7 @@\\n       <div>\\n         <input type=\"hidden\" name=\"form_token\" value=\"$!services.csrf.token\" />\\n         <input type=\"hidden\" name=\"register\" value=\"1\" />\\n-        <input type=\"hidden\" name=\"xredirect\" value=\"$!request.xredirect\" />\\n+        <input type=\"hidden\" name=\"xredirect\" value=\"$escapetool.xml($!request.xredirect)\" />\\n         #set ($class = $xwiki.getClass(\\'XWiki.XWikiUsers\\'))\\n         #set ($obj = $class.newObject())\\n         #set ($serverobj = $class.newObject())'}}",
      "message_norm": "xwiki-19291: redirect parameter is badly handled in register page\n\n  * fix the typo",
      "language": "en",
      "entities": "[('fix', 'ACTION', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['xwiki-platform-core/xwiki-platform-web/xwiki-platform-web-templates/src/main/resources/templates/registerinline.vm'])",
      "num_files": 1.0
    },
    {
      "index": 2461,
      "vuln_id": "GHSA-mr7p-25v2-35wr",
      "cwe_id": "{'CWE-22'}",
      "score": 7.5,
      "chain": "{'https://github.com/nltk/nltk/commit/f59d7ed8df2e0e957f7f247fe218032abdbe9a10'}",
      "dataset": "osv",
      "summary": "Path Traversal in nltk NLTK Downloader before 3.4.5 is vulnerable to a directory traversal, allowing attackers to write arbitrary files via a ../ (dot dot slash) in an NLTK package (ZIP archive) that is mishandled during extraction.",
      "published_date": "2019-08-23",
      "chain_len": 1,
      "project": "https://github.com/nltk/nltk",
      "commit_href": "https://github.com/nltk/nltk/commit/f59d7ed8df2e0e957f7f247fe218032abdbe9a10",
      "commit_sha": "f59d7ed8df2e0e957f7f247fe218032abdbe9a10",
      "patch": "SINGLE",
      "chain_ord": "['f59d7ed8df2e0e957f7f247fe218032abdbe9a10']",
      "before_first_fix_commit": "{'2554ff48feed878ba7e830ada9825196f3eaa86a'}",
      "last_fix_commit": "f59d7ed8df2e0e957f7f247fe218032abdbe9a10",
      "chain_ord_pos": 1.0,
      "commit_datetime": "08/20/2019, 10:35:00",
      "message": "CVE-2019-14751:\nFixed security bug in downloader\n(https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14751)",
      "author": "Steven Bird",
      "comments": "{'com_1': {'author': 'greysteil', 'datetime': '08/26/2019, 11:01:35', 'body': \"Thanks for this @stevenbird, and for all your work on `nltk`.\\r\\n\\r\\nHave you got 5 minutes to talk me through the process you went through fixing this, and any way GitHub can help? I'm on GitHub's security team and am working to make it easier for maintainers to alert users of security vulnerabilities.\\r\\n\\r\\nCurrently we have the security alert emails (which we're working to improve) and Security Advisories (the security tab on this repo). In future we're planning to make it easy for maintainers to apply for CVEs through GitHub (via creating Security Advisories).\\r\\n\\r\\nWas there any part of the flow of finding, fixing, and alerting users of this vulnerability that GitHub could have helped with? Or anything we're doing now that you'd like us to do differently?\\r\\n\\r\\nAny feedback very much appreciated. I'm on greysteil@github.com if you'd rather email it privately.\\r\\n\\r\\nThanks for all your do, and please don't hesitate to reach out if there's ever any way GitHub can help.\"}}",
      "stats": "{'additions': 1, 'deletions': 35, 'total': 36}",
      "files": "{'nltk/downloader.py': {'additions': 1, 'deletions': 35, 'changes': 36, 'status': 'modified', 'raw_url': 'https://github.com/nltk/nltk/raw/f59d7ed8df2e0e957f7f247fe218032abdbe9a10/nltk%2Fdownloader.py', 'patch': \"@@ -2260,42 +2260,8 @@ def _unzip_iter(filename, root, verbose=True):\\n         yield ErrorMessage(filename, e)\\n         return\\n \\n-    # Get lists of directories & files\\n-    namelist = zf.namelist()\\n-    dirlist = set()\\n-    for x in namelist:\\n-        if x.endswith('/'):\\n-            dirlist.add(x)\\n-        else:\\n-            dirlist.add(x.rsplit('/', 1)[0] + '/')\\n-    filelist = [x for x in namelist if not x.endswith('/')]\\n-\\n-    # Create the target directory if it doesn't exist\\n-    if not os.path.exists(root):\\n-        os.mkdir(root)\\n-\\n-    # Create the directory structure\\n-    for dirname in sorted(dirlist):\\n-        pieces = dirname[:-1].split('/')\\n-        for i in range(len(pieces)):\\n-            dirpath = os.path.join(root, *pieces[: i + 1])\\n-            if not os.path.exists(dirpath):\\n-                os.mkdir(dirpath)\\n-\\n-    # Extract files.\\n-    for i, filename in enumerate(filelist):\\n-        filepath = os.path.join(root, *filename.split('/'))\\n-\\n-        try:\\n-            with open(filepath, 'wb') as dstfile, zf.open(filename) as srcfile:\\n-                shutil.copyfileobj(srcfile, dstfile)\\n-        except Exception as e:\\n-            yield ErrorMessage(filename, e)\\n-            return\\n+    zf.extractall(root)\\n \\n-        if verbose and (i * 10 / len(filelist) > (i - 1) * 10 / len(filelist)):\\n-            sys.stdout.write('.')\\n-            sys.stdout.flush()\\n     if verbose:\\n         print()\"}}",
      "message_norm": "cve-2019-14751:\nfixed security bug in downloader\n(https://cve.mitre.org/cgi-bin/cvename.cgi?name=cve-2019-14751)",
      "language": "en",
      "entities": "[('cve-2019-14751', 'VULNID', 'CVE'), ('fixed', 'ACTION', ''), ('security', 'SECWORD', ''), ('bug', 'FLAW', ''), ('https://cve.mitre.org/cgi-bin/cvename.cgi?name=cve-2019-14751', 'VULNID', 'CVE')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['nltk/downloader.py'])",
      "num_files": 1.0
    },
    {
      "index": 7,
      "vuln_id": "GHSA-23c7-6444-399m",
      "cwe_id": "{'CWE-284', 'CWE-20'}",
      "score": 7.6,
      "chain": "{'https://github.com/MirahezeBots/sopel-channelmgnt/commit/643388365f28c5cc682254ab913c401f0e53260a', 'https://github.com/MirahezeBots/sopel-channelmgnt/commit/7c96d400358221e59135f0a0be0744f3fad73856'}",
      "dataset": "osv",
      "summary": "Improper Input Validation in sopel-plugins.channelmgnt ### Impact\nOn some IRC servers, restrictions around the removal of the bot using the kick/kickban command could be bypassed when kicking multiple users at once.\nWe also believe it may have been possible to remove users from other channels but due to the wonder that is IRC and following RfCs, We have no POC for that.\n\nFreenode is not affected.\n\n### Patches\nUpgrade to 2.0.1 or higher\n\n### Workarounds\nDo not use this plugin on networks where TARGMAX > 1.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue on [phab](https://phab.mirahezebots.org/maniphest/task/edit/form/1/).\n* Email us at [staff(at)mirahezebots(dot)org](mailto:staff@mirahezebots.org)",
      "published_date": "2021-04-09",
      "chain_len": 2,
      "project": "https://github.com/MirahezeBots/sopel-channelmgnt",
      "commit_href": "https://github.com/MirahezeBots/sopel-channelmgnt/commit/643388365f28c5cc682254ab913c401f0e53260a",
      "commit_sha": "643388365f28c5cc682254ab913c401f0e53260a",
      "patch": "MULTI",
      "chain_ord": "['643388365f28c5cc682254ab913c401f0e53260a', '7c96d400358221e59135f0a0be0744f3fad73856']",
      "before_first_fix_commit": "{'2f191af1a14fd5fbea7cba6b4ff078af253d3a05'}",
      "last_fix_commit": "7c96d400358221e59135f0a0be0744f3fad73856",
      "chain_ord_pos": 1.0,
      "commit_datetime": "04/08/2021, 17:08:28",
      "message": "Merge pull request from GHSA-23c7-6444-399m\n\n* ban use of , & # when kicking\n\n* Update __init__.py",
      "author": "RhinosF1",
      "comments": null,
      "stats": "{'additions': 12, 'deletions': 0, 'total': 12}",
      "files": "{'sopel_channelmgnt/channelmgnt/__init__.py': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https://github.com/FOSSBots/sopel-channelmgnt/raw/643388365f28c5cc682254ab913c401f0e53260a/sopel_channelmgnt%2Fchannelmgnt%2F__init__.py', 'patch': '@@ -216,6 +216,10 @@ def kick(bot, trigger):\\n             return\\n         nick = Identifier(text[1])\\n         reason = \\' \\'.join(text[2:])\\n+        if \\',\\' in str(nick):\\n+            return bot.reply(\\'Unable to kick. Kicking multiple users is not allowed.\\') \\n+        if \\'#\\' in str(nick):\\n+            return bot.reply(\\'Unable to kick. Use of # when kicking is not expected.\\')\\n         if nick != bot.config.core.nick and trigger.account in chanops:\\n             bot.write([\\'KICK\\', trigger.sender, nick, \\':\\' + reason])\\n             if dodeop:\\n@@ -263,6 +267,10 @@ def parse_host_mask(text):\\n @example(\\'.ban nick\\')\\n def ban(bot, trigger):\\n     \"\"\"Ban a user from the channel. The bot must be a channel operator for this command to work.\"\"\"\\n+    if \\',\\' in str(nick):\\n+        return bot.reply(\\'Unable to ban. Banning multiple users is not allowed.\\') \\n+    if \\'#\\' in str(nick):\\n+        return bot.reply(\\'Unable to ban. Use of # when banning is not expected.\\')\\n     makemodechange(bot, trigger, \\'+b\\', isbqmode=True)\\n \\n \\n@@ -312,6 +320,10 @@ def kickban(bot, trigger):\\n                 deopbot(trigger.sender, bot)\\n             return\\n         nick = Identifier(text[1])\\n+        if \\',\\' in str(nick):\\n+            return bot.reply(\\'Unable to kickban. Kickbanning multiple users is not allowed.\\') \\n+        if \\'#\\' in str(nick):\\n+            return bot.reply(\\'Unable to kickban. Use of # when kickbanning is not expected.\\')\\n         mask = text[2] if any(s in text[2] for s in \\'!@*\\') else \\'\\'\\n         reasonidx = 3 if mask != \\'\\' else 2\\n         reason = \\' \\'.join(text[reasonidx:])'}}",
      "message_norm": "merge pull request from ghsa-23c7-6444-399m\n\n* ban use of , & # when kicking\n\n* update __init__.py",
      "language": "en",
      "entities": "[('ghsa-23c7-6444-399m', 'VULNID', 'GHSA')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['sopel_channelmgnt/channelmgnt/__init__.py'])",
      "num_files": 1.0
    },
    {
      "index": 2479,
      "vuln_id": "GHSA-mw7r-3g6w-85qg",
      "cwe_id": "{'CWE-787'}",
      "score": 7.5,
      "chain": "{'https://github.com/chakra-core/ChakraCore/commit/6b1250b6ffea7006226dd937e52cf5b353fcfc15', 'https://github.com/chakra-core/ChakraCore/commit/242c59ea40c0428e1ced7366bf2c28bfbdda1999'}",
      "dataset": "osv",
      "summary": "Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-1139, CVE-2019-1140, CVE-2019-1141, CVE-2019-1195, CVE-2019-1196, CVE-2019-1197.",
      "published_date": "2021-03-29",
      "chain_len": 2,
      "project": "https://github.com/chakra-core/ChakraCore",
      "commit_href": "https://github.com/chakra-core/ChakraCore/commit/242c59ea40c0428e1ced7366bf2c28bfbdda1999",
      "commit_sha": "242c59ea40c0428e1ced7366bf2c28bfbdda1999",
      "patch": "MULTI",
      "chain_ord": "['242c59ea40c0428e1ced7366bf2c28bfbdda1999', '6b1250b6ffea7006226dd937e52cf5b353fcfc15']",
      "before_first_fix_commit": "{'75162b7f2d8ac2b37d17564e9c979ba1bae707e8', '450a349fda1b153d758a9e01698b977e60870e4c'}",
      "last_fix_commit": "6b1250b6ffea7006226dd937e52cf5b353fcfc15",
      "chain_ord_pos": 1.0,
      "commit_datetime": "07/02/2019, 20:12:05",
      "message": "[CVE-2019-1131] Chakra Type confusion",
      "author": "Taylor Woll",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 4, 'total': 5}",
      "files": "{'lib/Parser/Parse.cpp': {'additions': 1, 'deletions': 4, 'changes': 5, 'status': 'modified', 'raw_url': 'https://github.com/chakra-core/ChakraCore/raw/242c59ea40c0428e1ced7366bf2c28bfbdda1999/lib%2FParser%2FParse.cpp', 'patch': '@@ -4664,10 +4664,7 @@ ParseNodePtr Parser::ParseMemberList(LPCOLESTR pNameHint, uint32* pNameHintLengt\\n                     }\\n                 }\\n \\n-                if (buildAST)\\n-                {\\n-                    CheckArgumentsUse(pidHint, GetCurrentFunctionNode());\\n-                }\\n+                CheckArgumentsUse(pidHint, GetCurrentFunctionNode());\\n \\n                 bool couldBeObjectPattern = !isObjectPattern && m_token.tk == tkAsg;\\n                 // Saving the current state as we may change the isObjectPattern down below.'}}",
      "message_norm": "[cve-2019-1131] chakra type confusion",
      "language": "en",
      "entities": "[('cve-2019-1131', 'VULNID', 'CVE'), ('type confusion', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['lib/Parser/Parse.cpp'])",
      "num_files": 1.0
    },
    {
      "index": 2492,
      "vuln_id": "GHSA-p2vw-f87c-q597",
      "cwe_id": "{'CWE-863'}",
      "score": 6.5,
      "chain": "{'https://github.com/snipe/snipe-it/commit/2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c'}",
      "dataset": "osv",
      "summary": "Improper Access Control in snipe/snipe-it Improper Access Control in GitHub repository snipe/snipe-it prior to 5.4.4.",
      "published_date": "2022-04-29",
      "chain_len": 1,
      "project": "https://github.com/snipe/snipe-it",
      "commit_href": "https://github.com/snipe/snipe-it/commit/2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c",
      "commit_sha": "2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c",
      "patch": "SINGLE",
      "chain_ord": "['2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c']",
      "before_first_fix_commit": "{'126bb486b5146975f562d51b8f75dd2e30bee74d'}",
      "last_fix_commit": "2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c",
      "chain_ord_pos": 1.0,
      "commit_datetime": "04/28/2022, 14:45:37",
      "message": "Added access gate to the requested assets index\n\nSigned-off-by: snipe <snipe@snipe.net>",
      "author": "snipe",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 0, 'total': 1}",
      "files": "{'app/Http/Controllers/Assets/AssetsController.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https://github.com/snipe/snipe-it/raw/2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c/app%2FHttp%2FControllers%2FAssets%2FAssetsController.php', 'patch': \"@@ -861,6 +861,7 @@ public function auditStore(Request $request, $id)\\n \\n     public function getRequestedIndex($user_id = null)\\n     {\\n+        $this->authorize('index', Asset::class);\\n         $requestedItems = CheckoutRequest::with('user', 'requestedItem')->whereNull('canceled_at')->with('user', 'requestedItem');\\n \\n         if ($user_id) {\"}}",
      "message_norm": "added access gate to the requested assets index\n\nsigned-off-by: snipe <snipe@snipe.net>",
      "language": "en",
      "entities": "[('added', 'ACTION', ''), ('snipe@snipe.net', 'EMAIL', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['app/Http/Controllers/Assets/AssetsController.php'])",
      "num_files": 1.0
    },
    {
      "index": 486,
      "vuln_id": "GHSA-4rmr-c2jx-vx27",
      "cwe_id": "{'CWE-1336'}",
      "score": 8.8,
      "chain": "{'https://github.com/bobthecow/mustache.php/commit/579ffa5c96e1d292c060b3dd62811ff01ad8c24e'}",
      "dataset": "osv",
      "summary": "Mustache remote code injection vulnerability In Mustache.php v2.0.0 through v2.14.0, Sections tag can lead to arbitrary php code execution even if strict_callables is true when section value is controllable.",
      "published_date": "2022-01-27",
      "chain_len": 1,
      "project": "https://github.com/bobthecow/mustache.php",
      "commit_href": "https://github.com/bobthecow/mustache.php/commit/579ffa5c96e1d292c060b3dd62811ff01ad8c24e",
      "commit_sha": "579ffa5c96e1d292c060b3dd62811ff01ad8c24e",
      "patch": "SINGLE",
      "chain_ord": "['579ffa5c96e1d292c060b3dd62811ff01ad8c24e']",
      "before_first_fix_commit": "{'076209772dda21cbfdbf5ef99d202a0937da4826'}",
      "last_fix_commit": "579ffa5c96e1d292c060b3dd62811ff01ad8c24e",
      "chain_ord_pos": 1.0,
      "commit_datetime": "01/21/2022, 06:08:36",
      "message": "Fix CVE-2022-0323 (improper neutralization of section names) \n\n- Fixes possible RCE when rendering untrusted user templates.\n- Remove unnecessary comments in generated source.",
      "author": "Justin Hileman",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 4, 'total': 6}",
      "files": "{'src/Mustache/Compiler.php': {'additions': 2, 'deletions': 4, 'changes': 6, 'status': 'modified', 'raw_url': 'https://github.com/bobthecow/mustache.php/raw/579ffa5c96e1d292c060b3dd62811ff01ad8c24e/src%2FMustache%2FCompiler.php', 'patch': \"@@ -320,7 +320,6 @@ private function block($nodes)\\n     }\\n \\n     const SECTION_CALL = '\\n-        // %s section\\n         $value = $context->%s(%s);%s\\n         $buffer .= $this->section%s($context, $indent, $value);\\n     ';\\n@@ -391,11 +390,10 @@ private function section($nodes, $id, $filters, $start, $end, $otag, $ctag, $lev\\n         $id      = var_export($id, true);\\n         $filters = $this->getFilters($filters, $level);\\n \\n-        return sprintf($this->prepare(self::SECTION_CALL, $level), $id, $method, $id, $filters, $key);\\n+        return sprintf($this->prepare(self::SECTION_CALL, $level), $method, $id, $filters, $key);\\n     }\\n \\n     const INVERTED_SECTION = '\\n-        // %s inverted section\\n         $value = $context->%s(%s);%s\\n         if (empty($value)) {\\n             %s\\n@@ -418,7 +416,7 @@ private function invertedSection($nodes, $id, $filters, $level)\\n         $id      = var_export($id, true);\\n         $filters = $this->getFilters($filters, $level);\\n \\n-        return sprintf($this->prepare(self::INVERTED_SECTION, $level), $id, $method, $id, $filters, $this->walk($nodes, $level));\\n+        return sprintf($this->prepare(self::INVERTED_SECTION, $level), $method, $id, $filters, $this->walk($nodes, $level));\\n     }\\n \\n     const PARTIAL_INDENT = ', $indent . %s';\"}}",
      "message_norm": "fix cve-2022-0323 (improper neutralization of section names) \n\n- fixes possible rce when rendering untrusted user templates.\n- remove unnecessary comments in generated source.",
      "language": "en",
      "entities": "[('fix', 'ACTION', ''), ('cve-2022-0323', 'VULNID', 'CVE'), ('improper neutralization', 'SECWORD', ''), ('untrusted', 'SECWORD', ''), ('remove', 'ACTION', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/Mustache/Compiler.php'])",
      "num_files": 1.0
    },
    {
      "index": 2112,
      "vuln_id": "GHSA-hq37-853p-g5cf",
      "cwe_id": "{'CWE-400'}",
      "score": 0.0,
      "chain": "{'https://github.com/Kozea/CairoSVG/commit/cfc9175e590531d90384aa88845052de53d94bf3'}",
      "dataset": "osv",
      "summary": "Regular Expression Denial of Service in CairoSVG # Doyensec Vulnerability Advisory \n\n* Regular Expression Denial of Service (REDoS) in cairosvg\n* Affected Product: CairoSVG v2.0.0+\n* Vendor: https://github.com/Kozea\n* Severity: Medium\n* Vulnerability Class: Denial of Service\n* Author(s): Ben Caller ([Doyensec](https://doyensec.com))\n\n## Summary\n\nWhen processing SVG files, the python package CairoSVG uses two regular expressions which are vulnerable to Regular Expression Denial of Service (REDoS).\nIf an attacker provides a malicious SVG, it can make cairosvg get stuck processing the file for a very long time.\n\n## Technical description\n\nThe vulnerable regular expressions are\n\nhttps://github.com/Kozea/CairoSVG/blob/9c4a982b9a021280ad90e89707eacc1d114e4ac4/cairosvg/colors.py#L190-L191\n\nThe section between 'rgb(' and the final ')' contains multiple overlapping groups.\n\nSince all three infinitely repeating groups accept spaces, a long string of spaces causes catastrophic backtracking when it is not followed by a closing parenthesis.\n\nThe complexity is cubic, so doubling the length of the malicious string of spaces makes processing take 8 times as long.\n\n## Reproduction steps\n\nCreate a malicious SVG of the form:\n\n    <svg width=\"1\" height=\"1\"><rect fill=\"rgb(                     ;\"/></svg>\n\nwith the following code:\n\n    '<svg width=\"1\" height=\"1\"><rect fill=\"rgb(' + (' ' * 3456) + ';\"/></svg>'\n\nNote that there is no closing parenthesis before the semi-colon.\n\nRun cairosvg e.g.:\n\n    cairosvg cairo-redos.svg -o x.png\n\nand notice that it hangs at 100% CPU. Increasing the number of spaces increases the processing time with cubic complexity.\n\n## Remediation\n\nFix the regexes to avoid overlapping parts. Perhaps remove the [ \\n\\r\\t]* groups from the regex, and use .strip() on the returned capture group.\n\n## Disclosure timeline\n\n- 2020-12-30: Vulnerability disclosed via email to CourtBouillon",
      "published_date": "2021-01-06",
      "chain_len": 1,
      "project": "https://github.com/Kozea/CairoSVG",
      "commit_href": "https://github.com/Kozea/CairoSVG/commit/cfc9175e590531d90384aa88845052de53d94bf3",
      "commit_sha": "cfc9175e590531d90384aa88845052de53d94bf3",
      "patch": "SINGLE",
      "chain_ord": "['cfc9175e590531d90384aa88845052de53d94bf3']",
      "before_first_fix_commit": "{'9c4a982b9a021280ad90e89707eacc1d114e4ac4', '063185b60588a41d4df661ad70f9f7b699901abc'}",
      "last_fix_commit": "cfc9175e590531d90384aa88845052de53d94bf3",
      "chain_ord_pos": 1.0,
      "commit_datetime": "01/06/2021, 14:43:14",
      "message": "Merge pull request from GHSA-hq37-853p-g5cf\n\nDon\u2019t use overlapping groups for regular expressions",
      "author": "Guillaume Ayoub",
      "comments": null,
      "stats": "{'additions': 4, 'deletions': 4, 'total': 8}",
      "files": "{'cairosvg/colors.py': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https://github.com/Kozea/CairoSVG/raw/cfc9175e590531d90384aa88845052de53d94bf3/cairosvg%2Fcolors.py', 'patch': \"@@ -187,8 +187,8 @@\\n     'transparent': (0, 0, 0, 0),\\n }\\n \\n-RGBA = re.compile(r'rgba\\\\([ \\\\n\\\\r\\\\t]*(.+?)[ \\\\n\\\\r\\\\t]*\\\\)')\\n-RGB = re.compile(r'rgb\\\\([ \\\\n\\\\r\\\\t]*(.+?)[ \\\\n\\\\r\\\\t]*\\\\)')\\n+RGBA = re.compile(r'rgba\\\\((.+?)\\\\)')\\n+RGB = re.compile(r'rgb\\\\((.+?)\\\\)')\\n HEX_RRGGBB = re.compile('#[0-9a-f]{6}')\\n HEX_RGB = re.compile('#[0-9a-f]{3}')\\n \\n@@ -212,14 +212,14 @@ def color(string, opacity=1):\\n     if match:\\n         r, g, b, a = tuple(\\n             float(i.strip(' %')) / 100 if '%' in i else float(i) / 255\\n-            for i in match.group(1).split(','))\\n+            for i in match.group(1).strip().split(','))\\n         return (r, g, b, a * 255 * opacity)\\n \\n     match = RGB.search(string)\\n     if match:\\n         r, g, b = tuple(\\n             float(i.strip(' %')) / 100 if '%' in i else float(i) / 255\\n-            for i in match.group(1).split(','))\\n+            for i in match.group(1).strip().split(','))\\n         return (r, g, b, opacity)\\n \\n     match = HEX_RRGGBB.search(string)\"}}",
      "message_norm": "merge pull request from ghsa-hq37-853p-g5cf\n\ndon\u2019t use overlapping groups for regular expressions",
      "language": "en",
      "entities": "[('ghsa-hq37-853p-g5cf', 'VULNID', 'GHSA')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['cairosvg/colors.py'])",
      "num_files": 1.0
    },
    {
      "index": 3440,
      "vuln_id": "GHSA-xhp9-4947-rq78",
      "cwe_id": "{'CWE-755'}",
      "score": 9.8,
      "chain": "{'https://github.com/bottlepy/bottle/commit/a2b0ee6bb4ce88895429ec4aca856616244c4c4c', 'https://github.com/bottlepy/bottle/commit/e140e1b54da721a660f2eb9d58a106b7b3ff2f00'}",
      "dataset": "osv",
      "summary": "Denial of service in bottle Bottle before 0.12.20 mishandles errors during early request binding.",
      "published_date": "2022-06-03",
      "chain_len": 2,
      "project": "https://github.com/bottlepy/bottle",
      "commit_href": "https://github.com/bottlepy/bottle/commit/a2b0ee6bb4ce88895429ec4aca856616244c4c4c",
      "commit_sha": "a2b0ee6bb4ce88895429ec4aca856616244c4c4c",
      "patch": "MULTI",
      "chain_ord": "['e140e1b54da721a660f2eb9d58a106b7b3ff2f00', 'a2b0ee6bb4ce88895429ec4aca856616244c4c4c']",
      "before_first_fix_commit": "{'04b27f185412250f9389a6a14d1e1c516c87e13c'}",
      "last_fix_commit": "a2b0ee6bb4ce88895429ec4aca856616244c4c4c",
      "chain_ord_pos": 2.0,
      "commit_datetime": "05/26/2022, 13:36:31",
      "message": "Release of 0.12.20\n\nThis release contains a security fix.\nThanks Elton Nokaj for responsibly reporting this issue.",
      "author": "Marcel Hellkamp",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 1, 'total': 2}",
      "files": "{'bottle.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/bottlepy/bottle/raw/a2b0ee6bb4ce88895429ec4aca856616244c4c4c/bottle.py', 'patch': \"@@ -16,7 +16,7 @@\\n from __future__ import with_statement\\n \\n __author__ = 'Marcel Hellkamp'\\n-__version__ = '0.12.19'\\n+__version__ = '0.12.20'\\n __license__ = 'MIT'\\n \\n # The gevent server adapter needs to patch some modules before they are imported\"}}",
      "message_norm": "release of 0.12.20\n\nthis release contains a security fix.\nthanks elton nokaj for responsibly reporting this issue.",
      "language": "en",
      "entities": "[('0.12.20', 'VERSION', ''), ('security', 'SECWORD', ''), ('issue', 'FLAW', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['bottle.py'])",
      "num_files": 1.0
    },
    {
      "index": 102,
      "vuln_id": "GHSA-2hxv-mx8x-mcj9",
      "cwe_id": "{'CWE-352'}",
      "score": 8.8,
      "chain": "{'https://github.com/denkGroot/Spina/commit/bfe44f289e336f80b6593032679300c493735e75'}",
      "dataset": "osv",
      "summary": "Spina vulnerable to a cross-site request forgery (CSRF) vulnerability Cross-site request forgery (CSRF) vulnerability in Spina before commit bfe44f289e336f80b6593032679300c493735e75.",
      "published_date": "2018-08-28",
      "chain_len": 1,
      "project": "https://github.com/denkGroot/Spina",
      "commit_href": "https://github.com/denkGroot/Spina/commit/bfe44f289e336f80b6593032679300c493735e75",
      "commit_sha": "bfe44f289e336f80b6593032679300c493735e75",
      "patch": "SINGLE",
      "chain_ord": "['bfe44f289e336f80b6593032679300c493735e75']",
      "before_first_fix_commit": "{'2b3e8f724a97b312a61503f378a5ce6def58bfe2'}",
      "last_fix_commit": "bfe44f289e336f80b6593032679300c493735e75",
      "chain_ord_pos": 1.0,
      "commit_datetime": "06/16/2015, 14:23:27",
      "message": "protect from forgery",
      "author": "Bram Jetten",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 0, 'total': 2}",
      "files": "{'app/controllers/spina/application_controller.rb': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/denkGroot/Spina/raw/bfe44f289e336f80b6593032679300c493735e75/app%2Fcontrollers%2Fspina%2Fapplication_controller.rb', 'patch': '@@ -1,5 +1,7 @@\\n module Spina\\n   class ApplicationController < ActionController::Base\\n+    protect_from_forgery\\n+    \\n     include ApplicationHelper\\n \\n     private'}}",
      "message_norm": "protect from forgery",
      "language": "en",
      "entities": "[('protect', 'SECWORD', ''), ('forgery', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['app/controllers/spina/application_controller.rb'])",
      "num_files": 1.0
    },
    {
      "index": 220,
      "vuln_id": "GHSA-389p-fchr-q2mg",
      "cwe_id": "{'CWE-22'}",
      "score": 9.8,
      "chain": "{'https://github.com/ImpressCMS/impresscms/commit/a66d7bb499faafab803e24833606028fa0ba4261'}",
      "dataset": "osv",
      "summary": "Path Traversal in ImpressCMS ImpressCMS before 1.4.2 allows unauthenticated remote code execution via ...../// directory traversal in origName or imageName, leading to unsafe interaction with the CKEditor processImage.php script. The payload may be placed in PHP_SESSION_UPLOAD_PROGRESS when the PHP installation supports upload_progress.",
      "published_date": "2022-02-15",
      "chain_len": 1,
      "project": "https://github.com/ImpressCMS/impresscms",
      "commit_href": "https://github.com/ImpressCMS/impresscms/commit/a66d7bb499faafab803e24833606028fa0ba4261",
      "commit_sha": "a66d7bb499faafab803e24833606028fa0ba4261",
      "patch": "SINGLE",
      "chain_ord": "['a66d7bb499faafab803e24833606028fa0ba4261']",
      "before_first_fix_commit": "{'e174e84f000add55a731ffc435b8ed08b6a03d06'}",
      "last_fix_commit": "a66d7bb499faafab803e24833606028fa0ba4261",
      "chain_ord_pos": 1.0,
      "commit_datetime": "12/04/2020, 23:48:24",
      "message": "Prevents using submitted filenames with ../ for controller (#812)\n\n* Prevents using submitted filenames with ../ for controller\r\n\r\n* Using preg replace for better parent paths replaces\r\n\r\nCo-authored-by: Raimondas Rimkevi\u010dius (aka MekDrop) <mekdrop@impresscms.org>",
      "author": "Raimondas Rimkevi\u010dius",
      "comments": null,
      "stats": "{'additions': 643, 'deletions': 642, 'total': 1285}",
      "files": "{'htdocs/libraries/icms/ipf/Controller.php': {'additions': 643, 'deletions': 642, 'changes': 1285, 'status': 'modified', 'raw_url': 'https://github.com/ImpressCMS/impresscms/raw/a66d7bb499faafab803e24833606028fa0ba4261/htdocs%2Flibraries%2Ficms%2Fipf%2FController.php', 'patch': '@@ -1,642 +1,643 @@\\n-<?php\\r\\n-\\r\\n-/**\\r\\n- * This class is responsible for providing operations to an object for managing the object\\'s manipulation\\r\\n- *\\r\\n- * @copyright\\tThe ImpressCMS Project http://www.impresscms.org/\\r\\n- * @license\\t\\thttp://www.gnu.org/licenses/old-licenses/gpl-2.0.html GNU General Public License (GPL)\\r\\n- * @category\\tICMS\\r\\n- * @package\\t\\tIpf\\r\\n- * @subpackage\\tController\\r\\n- * @since\\t\\t1.1\\r\\n- * @author\\t\\tOriginal idea by Jan Keller Pedersen <mithrandir@xoops.org> - IDG Danmark A/S <www.idg.dk>\\r\\n- * @author\\t\\tmarcan <marcan@impresscms.org>\\r\\n- * @version\\t\\tSVN: $Id: Controller.php 11972 2012-08-26 17:49:13Z skenow $\\r\\n- * @todo\\t\\tUse language constants for messages\\r\\n- */\\r\\n-\\r\\n-defined(\\'ICMS_ROOT_PATH\\') or die(\"ImpressCMS root path not defined\");\\r\\n-\\r\\n-/**\\r\\n- *\\r\\n- *\\r\\n- * @category\\tICMS\\r\\n- * @package\\t\\tIpf\\r\\n- * @subpackage\\tController\\r\\n- *\\r\\n- */\\r\\n-class icms_ipf_Controller {\\r\\n-\\r\\n-\\t/** */\\r\\n-\\tpublic $handler;\\r\\n-\\r\\n-\\t/**\\r\\n-\\t *\\r\\n-\\t * @param $handler\\r\\n-\\t */\\r\\n-\\tpublic function __construct($handler) {\\r\\n-\\t\\t$this->handler=$handler;\\r\\n-\\t}\\r\\n-\\r\\n-\\t/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\r\\n-\\t */\\r\\n-\\tpublic function postDataToObject(&$icmsObj) {\\r\\n-\\t\\tforeach (array_keys($icmsObj->vars) as $key) {\\r\\n-\\t\\t\\t// do not post data if control is a label\\r\\n-\\t\\t\\t$control = $icmsObj->getControl($key);\\r\\n-\\t\\t\\tif (is_array($control) && isset($control[\\'name\\']) && $control[\\'name\\'] == \"label\") continue;\\r\\n-\\r\\n-\\t\\t\\tswitch ($icmsObj->vars[$key][\\'data_type\\']) {\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_IMAGE:\\r\\n-\\t\\t\\t\\t\\tif (isset($_POST[\\'url_\\' . $key]) && $_POST[\\'url_\\' . $key] !=\\'\\') {\\r\\n-\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, \\'e\\');\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, $_POST[\\'url_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\tif (is_file($oldFile) ) unlink($oldFile);\\r\\n-\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tif (isset($_POST[\\'delete_\\' . $key]) && $_POST[\\'delete_\\' . $key] == \\'1\\') {\\r\\n-\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, \\'e\\');\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, \\'\\');\\r\\n-\\t\\t\\t\\t\\t\\tif (is_file($oldFile) ) unlink($oldFile);\\r\\n-\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_URLLINK:\\r\\n-\\t\\t\\t\\t\\t$linkObj = $icmsObj->getUrlLinkObj($key);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'target\\', $_POST[\\'target_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'url\\', $_POST[\\'url_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\tif ($linkObj->getVar(\\'url\\') != \\'\\') {\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->storeUrlLinkObj($linkObj);\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t//@todo: catch errors\\r\\n-\\t\\t\\t\\t\\t$icmsObj->setVar($key, $linkObj->getVar(\\'urllinkid\\'));\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_FILE:\\r\\n-\\t\\t\\t\\t\\tif (!isset($_FILES[\\'upload_\\' . $key][\\'name\\']) || $_FILES[\\'upload_\\' . $key][\\'name\\'] == \\'\\') {\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj = $icmsObj->getFileObj($key);\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'url\\', $_POST[\\'url_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\tif (!($fileObj->getVar(\\'url\\') == \\'\\' && $fileObj->getVar(\\'url\\') == \\'\\' && $fileObj->getVar(\\'url\\') == \\'\\')) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$res = $icmsObj->storeFileObj($fileObj);\\r\\n-\\t\\t\\t\\t\\t\\t\\tif ($res) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, $fileObj->getVar(\\'fileid\\'));\\r\\n-\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t//error setted, but no error message (to be improved)\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($fileObj->getErrors());\\r\\n-\\t\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_STIME:\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_MTIME:\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_LTIME:\\r\\n-\\t\\t\\t\\t\\t// check if this field\\'s value is available in the POST array\\r\\n-\\t\\t\\t\\t\\tif (is_array($_POST[$key]) && isset($_POST[$key][\\'date\\'])) {\\r\\n-\\t\\t\\t\\t\\t\\t$value = strtotime($_POST[$key][\\'date\\']) + $_POST[$key][\\'time\\'];\\r\\n-\\t\\t\\t\\t\\t// in case the field is hidden, it\\'s not formated so we can simply take the value and store it\\r\\n-\\t\\t\\t\\t\\t} elseif (filter_var($_POST[$key], FILTER_VALIDATE_INT) == $_POST[$key]) {\\r\\n-\\t\\t\\t\\t\\t\\t$value = (int)$_POST[$key];\\r\\n-\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t$value = strtotime($_POST[$key]);\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t$icmsObj->setVar($key, $value);\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_URL:\\r\\n-\\t\\t\\t\\t\\tif (isset($_POST[$key])) {\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, filter_var($_POST[$key], FILTER_SANITIZE_URL));\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_ARRAY:\\r\\n-\\t\\t\\t\\t\\tif (is_array($_POST[$key])) {\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, serialize($_POST[$key]));\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tdefault:\\r\\n-\\t\\t\\t\\t\\t$icmsObj->setVar($key, $_POST[$key]);\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\t}\\r\\n-\\r\\n-\\t/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\tObject\\r\\n-\\t * @param\\tint\\t\\t$objectid\\r\\n-\\t * @param\\tstr\\t\\t$created_success_msg\\tMessage to display on successful creation\\r\\n-\\t * @param\\tstr\\t\\t$modified_success_msg\\tMessage to display on successful modification\\r\\n-\\t * @param\\tbool\\t$redirect_page\\t\\t\\tWhether to redirect afterwards, or not\\r\\n-\\t * @param\\tbool\\t$debug\\t\\t\\t\\t\\tWhether to display debug information, or not\\r\\n-\\t */\\r\\n-\\tpublic function &doStoreFromDefaultForm(&$icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false) {\\r\\n-\\t\\tglobal $impresscms;\\r\\n-\\t\\t$this->postDataToObject($icmsObj);\\r\\n-\\r\\n-\\t\\tif ($icmsObj->isNew()) {\\r\\n-\\t\\t\\t$redirect_msg = $created_success_msg;\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t$redirect_msg = $modified_success_msg;\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\t// Check if there were uploaded files\\r\\n-\\t\\t$uploaderResult = true;\\r\\n-\\t\\tif (isset($_POST[\\'icms_upload_image\\']) || isset($_POST[\\'icms_upload_file\\'])) {\\r\\n-\\t\\t\\t$uploaderObj = new icms_file_MediaUploadHandler($icmsObj->getImageDir(true), $this->handler->_allowedMimeTypes, $this->handler->_maxFileSize, $this->handler->_maxWidth, $this->handler->_maxHeight);\\r\\n-\\t\\t\\tforeach ( $_FILES as $name=>$file_array) {\\r\\n-\\t\\t\\t\\tif (isset ($file_array[\\'name\\']) && $file_array[\\'name\\'] != \"\" && in_array(str_replace(\\'upload_\\', \\'\\', $name), array_keys($icmsObj->vars))) {\\r\\n-\\t\\t\\t\\t\\tif ($uploaderObj->fetchMedia($name)) {\\r\\n-\\t\\t\\t\\t\\t\\t$uploaderObj->setTargetFileName(time() . \"_\" . $uploaderObj->getMediaName());\\r\\n-\\t\\t\\t\\t\\t\\tif ($uploaderObj->upload()) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && true;\\r\\n-\\t\\t\\t\\t\\t\\t\\t// Find the related field in the icms_ipf_Object\\r\\n-\\t\\t\\t\\t\\t\\t\\t$related_field = str_replace(\\'upload_\\', \\'\\', $name);\\r\\n-\\t\\t\\t\\t\\t\\t\\t$uploadedArray[] = $related_field;\\r\\n-\\t\\t\\t\\t\\t\\t\\t// if it\\'s a richfile\\r\\n-\\t\\t\\t\\t\\t\\t\\tif ($icmsObj->vars[$related_field][\\'data_type\\'] == XOBJ_DTYPE_FILE) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$object_fileurl = $icmsObj->getUploadDir();\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj = $icmsObj->getFileObj($related_field);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'url\\', $object_fileurl . $uploaderObj->getSavedFileName());\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $related_field]);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $related_field]);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $related_field]);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->storeFileObj($fileObj);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($related_field, $fileObj->getVar(\\'fileid\\'));\\r\\n-\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$old_file = $icmsObj->getUploadDir(true) . $icmsObj->getVar($related_field);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\tif (is_file($old_file) ) unlink($old_file);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($related_field, $uploaderObj->getSavedFileName());\\r\\n-\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($uploaderObj->getErrors(false));\\r\\n-\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($uploaderObj->getErrors(false));\\r\\n-\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\tif ($uploaderResult) {\\r\\n-\\t\\t\\tif ($debug) {\\r\\n-\\t\\t\\t\\t$storeResult = $this->handler->insertD($icmsObj);\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t$storeResult = $this->handler->insert($icmsObj);\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t$storeResult = false;\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\tif ($storeResult) {\\r\\n-\\t\\t\\tif ($this->handler->getPermissions()) {\\r\\n-\\t\\t\\t\\t$icmspermissions_handler = new icms_ipf_permission_Handler($this->handler);\\r\\n-\\t\\t\\t\\t$icmspermissions_handler->storeAllPermissionsForId($icmsObj->id());\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\tif ($redirect_page === null) {\\r\\n-\\t\\t\\treturn $icmsObj;\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\tif (!$storeResult) {\\r\\n-\\t\\t\\t\\tredirect_header($impresscms->urls[\\'previouspage\\'], 3, _CO_ICMS_SAVE_ERROR . $icmsObj->getHtmlErrors());\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t$redirect_page = $redirect_page ? $redirect_page : icms_get_page_before_form();\\r\\n-\\t\\t\\t\\tredirect_header($redirect_page, 2, $redirect_msg);\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\t}\\r\\n-\\r\\n-\\t/**\\r\\n-\\t * Store the object in the database autmatically from a form sending POST data\\r\\n-\\t *\\r\\n-\\t * @param string $created_success_msg message to display if new object was created\\r\\n-\\t * @param string $modified_success_msg message to display if object was successfully edited\\r\\n-\\t * @param string $created_redir_page redirect page after creating the object\\r\\n-\\t * @param string $modified_redir_page redirect page after editing the object\\r\\n-\\t * @param string $redirect_page redirect page, if not set, then we backup once\\r\\n-\\t * @param bool $exit if set to TRUE then the script ends\\r\\n-\\t * @return bool\\r\\n-\\t */\\r\\n-\\tpublic function &storeFromDefaultForm($created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false, $x_param = false) {\\r\\n-\\t\\t$objectid = ( isset($_POST[$this->handler->keyName]) )\\r\\n-\\t\\t\\t\\t? (int) $_POST[$this->handler->keyName]\\r\\n-\\t\\t\\t\\t: 0;\\r\\n-\\t\\tif ($debug) {\\r\\n-\\t\\t\\tif ($x_param) {\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->getD($objectid, true,  $x_param);\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->getD($objectid);\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\tif ($x_param) {\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid, true, false, false, $x_param);\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid);\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\t/**\\r\\n-\\t\\t * @todo multilanguage persistable handler is not fully implemented yet\\r\\n-\\t\\t */\\r\\n-\\r\\n-\\t\\t// if handler is the Multilanguage handler, we will need to treat this for multilanguage\\r\\n-\\t\\tif (is_subclass_of($this->handler, \\'icmspersistablemlobjecthandler\\')) {\\r\\n-\\r\\n-\\t\\t\\tif ($icmsObj->isNew()) {\\r\\n-\\t\\t\\t\\t// This is a new object. We need to store the meta data and then the language data\\r\\n-\\t\\t\\t\\t// First, we will get rid of the multilanguage data to only store the meta data\\r\\n-\\t\\t\\t\\t$icmsObj->stripMultilanguageFields();\\r\\n-\\t\\t\\t\\t$newObject =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\r\\n-\\t\\t\\t\\t/**\\r\\n-\\t\\t\\t\\t * @todo we need to trap potential errors here\\r\\n-\\t\\t\\t\\t */\\r\\n-\\r\\n-\\t\\t\\t\\t// ok, the meta daa is stored. Let\\'s recreate the object and then\\r\\n-\\t\\t\\t\\t// get rid of anything not multilanguage\\r\\n-\\t\\t\\t\\tunset($icmsObj);\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid);\\r\\n-\\t\\t\\t\\t$icmsObj->stripNonMultilanguageFields();\\r\\n-\\r\\n-\\t\\t\\t\\t$icmsObj->setVar($this->handler->keyName, $newObject->getVar($this->handler->keyName));\\r\\n-\\t\\t\\t\\t$this->handler->changeTableNameForML();\\r\\n-\\t\\t\\t\\t$ret =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\r\\n-\\r\\n-\\t\\t\\t\\treturn $ret;\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\treturn $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\r\\n-\\t\\t}\\r\\n-\\t}\\r\\n-\\r\\n-\\t/**\\r\\n-\\t * Stores an object and shows debug information\\r\\n-\\t */\\r\\n-\\tpublic function &storeicms_ipf_ObjectD() {\\r\\n-\\t\\treturn $this->storeicms_ipf_Object(true);\\r\\n-\\t}\\r\\n-\\r\\n-\\t/**\\r\\n-\\t *\\r\\n-\\t * @param\\tbool\\t$debug\\r\\n-\\t * @param\\tbool\\t$xparam\\r\\n-\\t * @see\\t\\tstoreFromDefaultForm\\r\\n-\\t */\\r\\n-\\tpublic function &storeicms_ipf_Object($debug=false, $xparam = false) {\\r\\n-\\t\\t$ret =& $this->storeFromDefaultForm(\\'\\', \\'\\', null, $debug, $xparam);\\r\\n-\\r\\n-\\t\\treturn $ret;\\r\\n-\\t}\\r\\n-\\r\\n-\\t/**\\r\\n-\\t * Handles deletion of an object which keyid is passed as a GET param\\r\\n-\\t *\\r\\n-\\t * @param string $redir_page redirect page after deleting the object\\r\\n-\\t * @return bool\\r\\n-\\t */\\r\\n-\\tpublic function handleObjectDeletion($confirm_msg = false, $op=\\'del\\', $userSide=false) {\\r\\n-\\t\\tglobal $impresscms;\\r\\n-\\r\\n-\\t\\t$objectid = (isset($_REQUEST[$this->handler->keyName])) ? (int) $_REQUEST[$this->handler->keyName] : 0;\\r\\n-\\t\\t$icmsObj = $this->handler->get($objectid);\\r\\n-\\r\\n-\\t\\tif ($icmsObj->isNew()) {\\r\\n-\\t\\t\\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\\r\\n-\\t\\t\\texit();\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\t$confirm = ( isset($_POST[\\'confirm\\']) ) ? $_POST[\\'confirm\\'] : 0;\\r\\n-\\t\\tif ($confirm) {\\r\\n-\\t\\t\\tif (!$this->handler->delete($icmsObj)) {\\r\\n-\\t\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\\r\\n-\\t\\t\\t\\texit;\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_SUCCESS);\\r\\n-\\t\\t\\texit();\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t// no confirm: show deletion condition\\r\\n-\\r\\n-\\t\\t\\ticms_cp_header();\\r\\n-\\r\\n-\\t\\t\\tif (!$confirm_msg) {\\r\\n-\\t\\t\\t\\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\t$hiddens = array(\\r\\n-\\t\\t\\t\\t\\t\\t\\'op\\' => $op,\\r\\n-\\t\\t\\t\\t\\t\\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\\r\\n-\\t\\t\\t\\t\\t\\t\\'confirm\\' => 1,\\r\\n-\\t\\t\\t\\t\\t\\t\\'redirect_page\\' => $impresscms->urls[\\'previouspage\\']\\r\\n-\\t\\t\\t);\\r\\n-\\t\\t\\tif ($this->handler->_moduleName == \\'system\\') {\\r\\n-\\t\\t\\t\\t$hiddens[\\'fct\\'] = isset($_GET[\\'fct\\']) ? $_GET[\\'fct\\'] : false;\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t\\ticms_core_Message::confirm($hiddens, xoops_getenv(\\'SCRIPT_NAME\\'), sprintf($confirm_msg , $icmsObj->getVar($this->handler->identifierName)), _CO_ICMS_DELETE);\\r\\n-\\r\\n-\\t\\t\\ticms_cp_footer();\\r\\n-\\r\\n-\\t\\t}\\r\\n-\\t\\texit();\\r\\n-\\t}\\r\\n-\\r\\n-\\t/**\\r\\n-\\t *\\r\\n-\\t * @param\\tbool\\t$confirm_msg\\r\\n-\\t * @param\\tstring\\t$op\\r\\n-\\t */\\r\\n-\\tpublic function handleObjectDeletionFromUserSide($confirm_msg = false, $op=\\'del\\') {\\r\\n-\\t\\tglobal $icmsTpl, $impresscms;\\r\\n-\\r\\n-\\t\\t$objectid = ( isset($_REQUEST[$this->handler->keyName]) ) ? (int) ($_REQUEST[$this->handler->keyName]) : 0;\\r\\n-\\t\\t$icmsObj = $this->handler->get($objectid);\\r\\n-\\r\\n-\\t\\tif ($icmsObj->isNew()) {\\r\\n-\\t\\t\\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\\r\\n-\\t\\t\\texit();\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\t$confirm = ( isset($_POST[\\'confirm\\']) ) ? $_POST[\\'confirm\\'] : 0;\\r\\n-\\t\\tif ($confirm) {\\r\\n-\\t\\t\\tif (!$this->handler->delete($icmsObj)) {\\r\\n-\\t\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\\r\\n-\\t\\t\\t\\texit;\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_SUCCESS);\\r\\n-\\t\\t\\texit();\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t// no confirm: show deletion condition\\r\\n-\\t\\t\\tif (!$confirm_msg) {\\r\\n-\\t\\t\\t\\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\tob_start();\\r\\n-\\t\\t\\ticms_core_Message::confirm(array(\\r\\n-\\t\\t\\t\\t\\'op\\' => $op,\\r\\n-\\t\\t\\t\\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\\r\\n-\\t\\t\\t\\t\\'confirm\\' => 1,\\r\\n-\\t\\t\\t\\t\\'redirect_page\\' => $impresscms->urls[\\'previouspage\\']),\\r\\n-\\t\\t\\t\\txoops_getenv(\\'SCRIPT_NAME\\'),\\r\\n-\\t\\t\\t\\tsprintf($confirm_msg ,\\r\\n-\\t\\t\\t\\t$icmsObj->getVar($this->handler->identifierName)),\\r\\n-\\t\\t\\t\\t_CO_ICMS_DELETE\\r\\n-\\t\\t\\t);\\r\\n-\\t\\t\\t$icmspersistable_delete_confirm = ob_get_clean();\\r\\n-\\t\\t\\t$icmsTpl->assign(\\'icmspersistable_delete_confirm\\', $icmspersistable_delete_confirm);\\r\\n-\\t\\t}\\r\\n-\\t}\\r\\n-\\r\\n-\\t/**\\r\\n-\\t * Retrieve the object admin side link for a {@link icms_ipf_view_Single} page\\r\\n-\\t *\\r\\n-\\t * @param\\tobject\\t$icmsObj\\treference to the object from which we want the user side link\\r\\n-\\t * @param\\tbool\\t$onlyUrl\\twhether or not to return a simple URL or a full <a> link\\r\\n-\\t * @param\\tbool\\t$withimage\\treturn a linked image instead of linked text\\r\\n-\\t * @return\\tstring\\tadmin side link to the object\\r\\n-\\t */\\r\\n-\\tpublic function getAdminViewItemLink($icmsObj, $onlyUrl=false, $withimage=false) {\\r\\n-\\t\\t$ret = $this->handler->_moduleUrl . \"admin/\"\\r\\n-\\t\\t\\t. $this->handler->_page . \"?op=view&amp;\"\\r\\n-\\t\\t\\t. $this->handler->keyName . \"=\"\\r\\n-\\t\\t\\t. $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL\\r\\n-\\t\\t\\t\\t\\t. \"/actions/viewmag.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t\\t. _CO_ICMS_ADMIN_VIEW . \"\\'  title=\\'\"\\r\\n-\\t\\t\\t\\t\\t. _CO_ICMS_ADMIN_VIEW . \"\\'/></a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t/**\\r\\n-\\t * Retrieve the object user side link\\r\\n-\\t *\\r\\n-\\t * @param object $icmsObj reference to the object from which we want the user side link\\r\\n-\\t * @param bool $onlyUrl wether or not to return a simple URL or a full <a> link\\r\\n-\\t * @return string user side link to the object\\r\\n-\\t */\\r\\n-\\tpublic function getItemLink(&$icmsObj, $onlyUrl=false) {\\r\\n-\\t\\t/**\\r\\n-\\t\\t * @todo URL Rewrite feature is not finished yet...\\r\\n-\\t\\t */\\r\\n-\\t\\t//$seoMode = smart_getModuleModeSEO($this->handler->_moduleName);\\r\\n-\\t\\t//$seoModuleName = smart_getModuleNameForSEO($this->handler->_moduleName);\\r\\n-\\t\\t$seoMode = false;\\r\\n-\\t\\t$seoModuleName = $this->handler->_moduleName;\\r\\n-\\r\\n-\\t\\t/**\\r\\n-\\t\\t * $seoIncludeId feature is not finished yet, so let\\'s put it always to true\\r\\n-\\t\\t */\\r\\n-\\t\\t//$seoIncludeId = smart_getModuleIncludeIdSEO($this->handler->_moduleName);\\r\\n-\\t\\t$seoIncludeId = true;\\r\\n-\\r\\n-\\t\\t/*if ($seoMode == \\'rewrite\\') {\\r\\n-\\t\\t\\t$ret = ICMS_URL . \\'/\\' . $seoModuleName . \\'.\\' . $this->handler->_itemname . ($seoIncludeId ? \\'.\\'\\t. $icmsObj->getVar($this->handler->keyName) : \\'\\'). \\'/\\' . $icmsObj->getVar(\\'short_url\\') . \\'.html\\';\\r\\n-\\t\\t\\t} else if ($seoMode == \\'pathinfo\\') {\\r\\n-\\t\\t\\t$ret = SMARTOBJECT_URL . \\'seo.php/\\' . $seoModuleName . \\'.\\' . $this->handler->_itemname . ($seoIncludeId ? \\'.\\'\\t. $icmsObj->getVar($this->handler->keyName) : \\'\\'). \\'/\\' . $icmsObj->getVar(\\'short_url\\') . \\'.html\\';\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t*/\\t$ret = $this->handler->_moduleUrl . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t//}\\r\\n-\\r\\n-\\t\\tif (!$onlyUrl) {\\r\\n-\\t\\t\\t$ret = \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\\r\\n-\\t\\t}\\r\\n-\\t\\treturn $ret;\\r\\n-\\t}\\r\\n-\\r\\n-\\t/**\\r\\n-\\t * This method returns a view link of the Object\\r\\n-\\t *\\r\\n-\\t * @param icms_ipf_Object $icmsObj\\r\\n-\\t * @param boolean $onlyUrl\\r\\n-\\t * @param boolean $withimage\\r\\n-\\t * @param boolean $userSide\\r\\n-\\t * @return string\\r\\n-\\t */\\r\\n-\\tpublic function getViewItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\r\\n-\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\r\\n-\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin/\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t$admin_side = \\'\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . \\'admin.php?fct=\\'\\r\\n-\\t\\t\\t\\t. $this->handler->_itemname . \"&amp;op=view&amp;\"\\r\\n-\\t\\t\\t\\t. $this->handler->keyName . \"=\"\\r\\n-\\t\\t\\t\\t. $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t}\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"/actions/viewmag.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t. _PREVIEW . \"\\'  title=\\'\" . _PREVIEW . \"\\'/></a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobject\\t$icmsObj\\r\\n-\\t * @param\\tbool\\t$onlyUrl\\r\\n-\\t * @param\\tbool\\t$withimage\\r\\n-\\t */\\r\\n-\\tpublic function getEditLanguageLink($icmsObj, $onlyUrl=false, $withimage=true) {\\r\\n-\\t\\t$ret = $this->handler->_moduleUrl . \"admin/\"\\r\\n-\\t\\t\\t. $this->handler->_page\\r\\n-\\t\\t\\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName)\\r\\n-\\t\\t\\t. \"&amp;language=\" . $icmsObj->getVar(\\'language\\');\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"/actions/wizard.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t. _CO_ICMS_LANGUAGE_MODIFY . \"\\'  title=\\'\" . _CO_ICMS_LANGUAGE_MODIFY . \"\\'/></a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\r\\n-\\t * @param\\tbool\\t$onlyUrl\\r\\n-\\t * @param\\tbool\\t$withimage\\r\\n-\\t * @param\\tbool\\t$userSide\\r\\n-\\t */\\r\\n-\\tpublic function getEditItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\r\\n-\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\r\\n-\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin/\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\\r\\n-\\t\\t\\t\\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t/**\\r\\n-\\t\\t\\t * @todo: to be implemented...\\r\\n-\\t\\t\\t */\\r\\n-\\t\\t\\t//$admin_side = $userSide ? \\'\\' : \\'admin/\\';\\r\\n-\\t\\t\\t$admin_side = \\'\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side\\r\\n-\\t\\t\\t\\t. \\'admin.php?fct=\\' . $this->handler->_itemname\\r\\n-\\t\\t\\t\\t. \"&amp;op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t}\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"/actions/edit.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t. _CO_ICMS_MODIFY . \"\\'  title=\\'\" . _CO_ICMS_MODIFY . \"\\'/></a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\r\\n-\\t * @param\\tbool\\t$onlyUrl\\r\\n-\\t * @param\\tbool\\t$withimage\\r\\n-\\t * @param\\tbool\\t$userSide\\r\\n-\\t */\\r\\n-\\tpublic function getDeleteItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\r\\n-\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\r\\n-\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin/\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\\r\\n-\\t\\t\\t\\t. \"?op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t/**\\r\\n-\\t\\t\\t * @todo: to be implemented...\\r\\n-\\t\\t\\t */\\r\\n-\\t\\t\\t//$admin_side = $userSide ? \\'\\' : \\'admin/\\';\\r\\n-\\t\\t\\t$admin_side = \\'\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side\\r\\n-\\t\\t\\t\\t. \\'admin.php?fct=\\' . $this->handler->_itemname\\r\\n-\\t\\t\\t\\t. \"&amp;op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t}\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"/actions/editdelete.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t. _CO_ICMS_DELETE . \"\\'  title=\\'\" . _CO_ICMS_DELETE . \"\\'/></a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\r\\n-\\t * @todo\\tNeeds to be completed\\r\\n-\\t */\\r\\n-\\tpublic function getPrintAndMailLink($icmsObj) {\\r\\n-\\t\\tglobal $icmsConfig, $impresscms;\\r\\n-\\r\\n-\\t\\t$ret = \\'\\';\\r\\n-\\t\\t/*\\t\\t$printlink = $this->handler->_moduleUrl . \"print.php?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t $js = \"javascript:openWithSelfMain(\\'\" . $printlink . \"\\', \\'smartpopup\\', 700, 519);\";\\r\\n-\\t\\t $printlink = \\'<a href=\"\\' . $js . \\'\"><img  src=\"\\' . ICMS_IMAGES_SET_URL . \\'/actions/fileprint.png\" alt=\"\" style=\"vertical-align: middle;\"/></a>\\';\\r\\n-\\r\\n-\\t\\t $icmsModule = icms_getModuleInfo($icmsObj->handler->_moduleName);\\r\\n-\\t\\t $link = $impresscms->urls[\\'full\\']();\\r\\n-\\t\\t $mid = $icmsModule->getVar(\\'mid\\');\\r\\n-\\t\\t $friendlink = \"<a href=\\\\\"javascript:openWithSelfMain(\\'\".SMARTOBJECT_URL.\"sendlink.php?link=\" . $link . \"&amp;mid=\" . $mid . \"\\', \\',\\',\\',\\',\\',\\',\\'sendmessage\\', 674, 500);\\\\\"><img src=\\\\\"\".SMARTOBJECT_IMAGES_ACTIONS_URL . \"mail_send.png\\\\\"  alt=\\\\\"\" . _CO_ICMS_EMAIL . \"\\\\\" title=\\\\\"\" . _CO_ICMS_EMAIL . \"\\\\\" style=\\\\\"vertical-align: middle;\\\\\"/></a>\";\\r\\n-\\r\\n-\\t\\t $ret = \\'<span id=\"smartobject_print_button\">\\' . $printlink . \"&nbsp;</span>\" . \\'<span id=\"smartobject_mail_button\">\\' . $friendlink . \\'</span>\\';\\r\\n-\\t\\t */\\r\\n-\\t\\treturn $ret;\\r\\n-\\t}\\r\\n-\\r\\n-\\t/**\\r\\n-\\t * Creates a string from the object\\'s module name and item name\\r\\n-\\t */\\r\\n-\\tpublic function getModuleItemString() {\\r\\n-\\t\\t$ret = $this->handler->_moduleName . \\'_\\' . $this->handler->_itemname;\\r\\n-\\t\\treturn $ret;\\r\\n-\\t}\\r\\n-}\\r\\n-\\r\\n+<?php\\n+\\n+/**\\n+ * This class is responsible for providing operations to an object for managing the object\\'s manipulation\\n+ *\\n+ * @copyright\\tThe ImpressCMS Project http://www.impresscms.org/\\n+ * @license\\t\\thttp://www.gnu.org/licenses/old-licenses/gpl-2.0.html GNU General Public License (GPL)\\n+ * @category\\tICMS\\n+ * @package\\t\\tIpf\\n+ * @subpackage\\tController\\n+ * @since\\t\\t1.1\\n+ * @author\\t\\tOriginal idea by Jan Keller Pedersen <mithrandir@xoops.org> - IDG Danmark A/S <www.idg.dk>\\n+ * @author\\t\\tmarcan <marcan@impresscms.org>\\n+ * @version\\t\\tSVN: $Id: Controller.php 11972 2012-08-26 17:49:13Z skenow $\\n+ * @todo\\t\\tUse language constants for messages\\n+ */\\n+\\n+defined(\\'ICMS_ROOT_PATH\\') or die(\"ImpressCMS root path not defined\");\\n+\\n+/**\\n+ *\\n+ *\\n+ * @category\\tICMS\\n+ * @package\\t\\tIpf\\n+ * @subpackage\\tController\\n+ *\\n+ */\\n+class icms_ipf_Controller {\\n+\\n+\\t/** */\\n+\\tpublic $handler;\\n+\\n+\\t/**\\n+\\t *\\n+\\t * @param $handler\\n+\\t */\\n+\\tpublic function __construct($handler) {\\n+\\t\\t$this->handler=$handler;\\n+\\t}\\n+\\n+\\t/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\n+\\t */\\n+\\tpublic function postDataToObject(&$icmsObj) {\\n+\\t\\tforeach (array_keys($icmsObj->vars) as $key) {\\n+\\t\\t\\t// do not post data if control is a label\\n+\\t\\t\\t$control = $icmsObj->getControl($key);\\n+\\t\\t\\tif (is_array($control) && isset($control[\\'name\\']) && $control[\\'name\\'] == \"label\") continue;\\n+\\n+\\t\\t\\tswitch ($icmsObj->vars[$key][\\'data_type\\']) {\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_IMAGE:\\n+\\t\\t\\t\\t\\tif (isset($_POST[\\'url_\\' . $key]) && $_POST[\\'url_\\' . $key] !=\\'\\') {\\n+\\t\\t\\t\\t\\t\\t$_POST[\\'url_\\' . $key] = preg_replace(\\'|[\\\\.]+\\\\/|\\', \\'./\\', $_POST[\\'url_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, \\'e\\');\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, $_POST[\\'url_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\tif (is_file($oldFile) ) unlink($oldFile);\\n+\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tif (isset($_POST[\\'delete_\\' . $key]) && $_POST[\\'delete_\\' . $key] == \\'1\\') {\\n+\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, \\'e\\');\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, \\'\\');\\n+\\t\\t\\t\\t\\t\\tif (is_file($oldFile) ) unlink($oldFile);\\n+\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_URLLINK:\\n+\\t\\t\\t\\t\\t$linkObj = $icmsObj->getUrlLinkObj($key);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $key]);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $key]);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $key]);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'target\\', $_POST[\\'target_\\' . $key]);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'url\\', $_POST[\\'url_\\' . $key]);\\n+\\t\\t\\t\\t\\tif ($linkObj->getVar(\\'url\\') != \\'\\') {\\n+\\t\\t\\t\\t\\t\\t$icmsObj->storeUrlLinkObj($linkObj);\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t//@todo: catch errors\\n+\\t\\t\\t\\t\\t$icmsObj->setVar($key, $linkObj->getVar(\\'urllinkid\\'));\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_FILE:\\n+\\t\\t\\t\\t\\tif (!isset($_FILES[\\'upload_\\' . $key][\\'name\\']) || $_FILES[\\'upload_\\' . $key][\\'name\\'] == \\'\\') {\\n+\\t\\t\\t\\t\\t\\t$fileObj = $icmsObj->getFileObj($key);\\n+\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'url\\', preg_replace(\\'|[\\\\.]+\\\\/|\\', \\'./\\', $_POST[\\'url_\\' . $key]));\\n+\\t\\t\\t\\t\\t\\tif (!($fileObj->getVar(\\'url\\') == \\'\\' && $fileObj->getVar(\\'url\\') == \\'\\' && $fileObj->getVar(\\'url\\') == \\'\\')) {\\n+\\t\\t\\t\\t\\t\\t\\t$res = $icmsObj->storeFileObj($fileObj);\\n+\\t\\t\\t\\t\\t\\t\\tif ($res) {\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, $fileObj->getVar(\\'fileid\\'));\\n+\\t\\t\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t\\t\\t//error setted, but no error message (to be improved)\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($fileObj->getErrors());\\n+\\t\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_STIME:\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_MTIME:\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_LTIME:\\n+\\t\\t\\t\\t\\t// check if this field\\'s value is available in the POST array\\n+\\t\\t\\t\\t\\tif (is_array($_POST[$key]) && isset($_POST[$key][\\'date\\'])) {\\n+\\t\\t\\t\\t\\t\\t$value = strtotime($_POST[$key][\\'date\\']) + $_POST[$key][\\'time\\'];\\n+\\t\\t\\t\\t\\t// in case the field is hidden, it\\'s not formated so we can simply take the value and store it\\n+\\t\\t\\t\\t\\t} elseif (filter_var($_POST[$key], FILTER_VALIDATE_INT) == $_POST[$key]) {\\n+\\t\\t\\t\\t\\t\\t$value = (int)$_POST[$key];\\n+\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t$value = strtotime($_POST[$key]);\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t$icmsObj->setVar($key, $value);\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_URL:\\n+\\t\\t\\t\\t\\tif (isset($_POST[$key])) {\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, filter_var($_POST[$key], FILTER_SANITIZE_URL));\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_ARRAY:\\n+\\t\\t\\t\\t\\tif (is_array($_POST[$key])) {\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, serialize($_POST[$key]));\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tdefault:\\n+\\t\\t\\t\\t\\t$icmsObj->setVar($key, $_POST[$key]);\\n+\\t\\t\\t\\t\\tbreak;\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\t}\\n+\\n+\\t/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\tObject\\n+\\t * @param\\tint\\t\\t$objectid\\n+\\t * @param\\tstr\\t\\t$created_success_msg\\tMessage to display on successful creation\\n+\\t * @param\\tstr\\t\\t$modified_success_msg\\tMessage to display on successful modification\\n+\\t * @param\\tbool\\t$redirect_page\\t\\t\\tWhether to redirect afterwards, or not\\n+\\t * @param\\tbool\\t$debug\\t\\t\\t\\t\\tWhether to display debug information, or not\\n+\\t */\\n+\\tpublic function &doStoreFromDefaultForm(&$icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false) {\\n+\\t\\tglobal $impresscms;\\n+\\t\\t$this->postDataToObject($icmsObj);\\n+\\n+\\t\\tif ($icmsObj->isNew()) {\\n+\\t\\t\\t$redirect_msg = $created_success_msg;\\n+\\t\\t} else {\\n+\\t\\t\\t$redirect_msg = $modified_success_msg;\\n+\\t\\t}\\n+\\n+\\t\\t// Check if there were uploaded files\\n+\\t\\t$uploaderResult = true;\\n+\\t\\tif (isset($_POST[\\'icms_upload_image\\']) || isset($_POST[\\'icms_upload_file\\'])) {\\n+\\t\\t\\t$uploaderObj = new icms_file_MediaUploadHandler($icmsObj->getImageDir(true), $this->handler->_allowedMimeTypes, $this->handler->_maxFileSize, $this->handler->_maxWidth, $this->handler->_maxHeight);\\n+\\t\\t\\tforeach ( $_FILES as $name=>$file_array) {\\n+\\t\\t\\t\\tif (isset ($file_array[\\'name\\']) && $file_array[\\'name\\'] != \"\" && in_array(str_replace(\\'upload_\\', \\'\\', $name), array_keys($icmsObj->vars))) {\\n+\\t\\t\\t\\t\\tif ($uploaderObj->fetchMedia($name)) {\\n+\\t\\t\\t\\t\\t\\t$uploaderObj->setTargetFileName(time() . \"_\" . $uploaderObj->getMediaName());\\n+\\t\\t\\t\\t\\t\\tif ($uploaderObj->upload()) {\\n+\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && true;\\n+\\t\\t\\t\\t\\t\\t\\t// Find the related field in the icms_ipf_Object\\n+\\t\\t\\t\\t\\t\\t\\t$related_field = str_replace(\\'upload_\\', \\'\\', $name);\\n+\\t\\t\\t\\t\\t\\t\\t$uploadedArray[] = $related_field;\\n+\\t\\t\\t\\t\\t\\t\\t// if it\\'s a richfile\\n+\\t\\t\\t\\t\\t\\t\\tif ($icmsObj->vars[$related_field][\\'data_type\\'] == XOBJ_DTYPE_FILE) {\\n+\\t\\t\\t\\t\\t\\t\\t\\t$object_fileurl = $icmsObj->getUploadDir();\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj = $icmsObj->getFileObj($related_field);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'url\\', $object_fileurl . $uploaderObj->getSavedFileName());\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $related_field]);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $related_field]);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $related_field]);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->storeFileObj($fileObj);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($related_field, $fileObj->getVar(\\'fileid\\'));\\n+\\t\\t\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\n+\\t\\t\\t\\t\\t\\t\\t\\t}\\n+\\n+\\t\\t\\t\\t\\t\\t\\t\\t$old_file = $icmsObj->getUploadDir(true) . $icmsObj->getVar($related_field);\\n+\\t\\t\\t\\t\\t\\t\\t\\tif (is_file($old_file) ) unlink($old_file);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($related_field, $uploaderObj->getSavedFileName());\\n+\\n+\\t\\t\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\n+\\t\\t\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($uploaderObj->getErrors(false));\\n+\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($uploaderObj->getErrors(false));\\n+\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t}\\n+\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\n+\\t\\tif ($uploaderResult) {\\n+\\t\\t\\tif ($debug) {\\n+\\t\\t\\t\\t$storeResult = $this->handler->insertD($icmsObj);\\n+\\t\\t\\t} else {\\n+\\t\\t\\t\\t$storeResult = $this->handler->insert($icmsObj);\\n+\\t\\t\\t}\\n+\\t\\t} else {\\n+\\t\\t\\t$storeResult = false;\\n+\\t\\t}\\n+\\n+\\t\\tif ($storeResult) {\\n+\\t\\t\\tif ($this->handler->getPermissions()) {\\n+\\t\\t\\t\\t$icmspermissions_handler = new icms_ipf_permission_Handler($this->handler);\\n+\\t\\t\\t\\t$icmspermissions_handler->storeAllPermissionsForId($icmsObj->id());\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\n+\\t\\tif ($redirect_page === null) {\\n+\\t\\t\\treturn $icmsObj;\\n+\\t\\t} else {\\n+\\t\\t\\tif (!$storeResult) {\\n+\\t\\t\\t\\tredirect_header($impresscms->urls[\\'previouspage\\'], 3, _CO_ICMS_SAVE_ERROR . $icmsObj->getHtmlErrors());\\n+\\t\\t\\t} else {\\n+\\t\\t\\t\\t$redirect_page = $redirect_page ? $redirect_page : icms_get_page_before_form();\\n+\\t\\t\\t\\tredirect_header($redirect_page, 2, $redirect_msg);\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\t}\\n+\\n+\\t/**\\n+\\t * Store the object in the database autmatically from a form sending POST data\\n+\\t *\\n+\\t * @param string $created_success_msg message to display if new object was created\\n+\\t * @param string $modified_success_msg message to display if object was successfully edited\\n+\\t * @param string $created_redir_page redirect page after creating the object\\n+\\t * @param string $modified_redir_page redirect page after editing the object\\n+\\t * @param string $redirect_page redirect page, if not set, then we backup once\\n+\\t * @param bool $exit if set to TRUE then the script ends\\n+\\t * @return bool\\n+\\t */\\n+\\tpublic function &storeFromDefaultForm($created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false, $x_param = false) {\\n+\\t\\t$objectid = ( isset($_POST[$this->handler->keyName]) )\\n+\\t\\t\\t\\t? (int) $_POST[$this->handler->keyName]\\n+\\t\\t\\t\\t: 0;\\n+\\t\\tif ($debug) {\\n+\\t\\t\\tif ($x_param) {\\n+\\t\\t\\t\\t$icmsObj = $this->handler->getD($objectid, true,  $x_param);\\n+\\t\\t\\t} else {\\n+\\t\\t\\t\\t$icmsObj = $this->handler->getD($objectid);\\n+\\t\\t\\t}\\n+\\n+\\t\\t} else {\\n+\\t\\t\\tif ($x_param) {\\n+\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid, true, false, false, $x_param);\\n+\\t\\t\\t} else {\\n+\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid);\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\n+\\t\\t/**\\n+\\t\\t * @todo multilanguage persistable handler is not fully implemented yet\\n+\\t\\t */\\n+\\n+\\t\\t// if handler is the Multilanguage handler, we will need to treat this for multilanguage\\n+\\t\\tif (is_subclass_of($this->handler, \\'icmspersistablemlobjecthandler\\')) {\\n+\\n+\\t\\t\\tif ($icmsObj->isNew()) {\\n+\\t\\t\\t\\t// This is a new object. We need to store the meta data and then the language data\\n+\\t\\t\\t\\t// First, we will get rid of the multilanguage data to only store the meta data\\n+\\t\\t\\t\\t$icmsObj->stripMultilanguageFields();\\n+\\t\\t\\t\\t$newObject =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\n+\\t\\t\\t\\t/**\\n+\\t\\t\\t\\t * @todo we need to trap potential errors here\\n+\\t\\t\\t\\t */\\n+\\n+\\t\\t\\t\\t// ok, the meta daa is stored. Let\\'s recreate the object and then\\n+\\t\\t\\t\\t// get rid of anything not multilanguage\\n+\\t\\t\\t\\tunset($icmsObj);\\n+\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid);\\n+\\t\\t\\t\\t$icmsObj->stripNonMultilanguageFields();\\n+\\n+\\t\\t\\t\\t$icmsObj->setVar($this->handler->keyName, $newObject->getVar($this->handler->keyName));\\n+\\t\\t\\t\\t$this->handler->changeTableNameForML();\\n+\\t\\t\\t\\t$ret =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\n+\\n+\\t\\t\\t\\treturn $ret;\\n+\\t\\t\\t}\\n+\\t\\t} else {\\n+\\t\\t\\treturn $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\n+\\t\\t}\\n+\\t}\\n+\\n+\\t/**\\n+\\t * Stores an object and shows debug information\\n+\\t */\\n+\\tpublic function &storeicms_ipf_ObjectD() {\\n+\\t\\treturn $this->storeicms_ipf_Object(true);\\n+\\t}\\n+\\n+\\t/**\\n+\\t *\\n+\\t * @param\\tbool\\t$debug\\n+\\t * @param\\tbool\\t$xparam\\n+\\t * @see\\t\\tstoreFromDefaultForm\\n+\\t */\\n+\\tpublic function &storeicms_ipf_Object($debug=false, $xparam = false) {\\n+\\t\\t$ret =& $this->storeFromDefaultForm(\\'\\', \\'\\', null, $debug, $xparam);\\n+\\n+\\t\\treturn $ret;\\n+\\t}\\n+\\n+\\t/**\\n+\\t * Handles deletion of an object which keyid is passed as a GET param\\n+\\t *\\n+\\t * @param string $redir_page redirect page after deleting the object\\n+\\t * @return bool\\n+\\t */\\n+\\tpublic function handleObjectDeletion($confirm_msg = false, $op=\\'del\\', $userSide=false) {\\n+\\t\\tglobal $impresscms;\\n+\\n+\\t\\t$objectid = (isset($_REQUEST[$this->handler->keyName])) ? (int) $_REQUEST[$this->handler->keyName] : 0;\\n+\\t\\t$icmsObj = $this->handler->get($objectid);\\n+\\n+\\t\\tif ($icmsObj->isNew()) {\\n+\\t\\t\\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\\n+\\t\\t\\texit();\\n+\\t\\t}\\n+\\n+\\t\\t$confirm = ( isset($_POST[\\'confirm\\']) ) ? $_POST[\\'confirm\\'] : 0;\\n+\\t\\tif ($confirm) {\\n+\\t\\t\\tif (!$this->handler->delete($icmsObj)) {\\n+\\t\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\\n+\\t\\t\\t\\texit;\\n+\\t\\t\\t}\\n+\\n+\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_SUCCESS);\\n+\\t\\t\\texit();\\n+\\t\\t} else {\\n+\\t\\t\\t// no confirm: show deletion condition\\n+\\n+\\t\\t\\ticms_cp_header();\\n+\\n+\\t\\t\\tif (!$confirm_msg) {\\n+\\t\\t\\t\\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\\n+\\t\\t\\t}\\n+\\n+\\t\\t\\t$hiddens = array(\\n+\\t\\t\\t\\t\\t\\t\\'op\\' => $op,\\n+\\t\\t\\t\\t\\t\\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\\n+\\t\\t\\t\\t\\t\\t\\'confirm\\' => 1,\\n+\\t\\t\\t\\t\\t\\t\\'redirect_page\\' => $impresscms->urls[\\'previouspage\\']\\n+\\t\\t\\t);\\n+\\t\\t\\tif ($this->handler->_moduleName == \\'system\\') {\\n+\\t\\t\\t\\t$hiddens[\\'fct\\'] = isset($_GET[\\'fct\\']) ? $_GET[\\'fct\\'] : false;\\n+\\t\\t\\t}\\n+\\t\\t\\ticms_core_Message::confirm($hiddens, xoops_getenv(\\'SCRIPT_NAME\\'), sprintf($confirm_msg , $icmsObj->getVar($this->handler->identifierName)), _CO_ICMS_DELETE);\\n+\\n+\\t\\t\\ticms_cp_footer();\\n+\\n+\\t\\t}\\n+\\t\\texit();\\n+\\t}\\n+\\n+\\t/**\\n+\\t *\\n+\\t * @param\\tbool\\t$confirm_msg\\n+\\t * @param\\tstring\\t$op\\n+\\t */\\n+\\tpublic function handleObjectDeletionFromUserSide($confirm_msg = false, $op=\\'del\\') {\\n+\\t\\tglobal $icmsTpl, $impresscms;\\n+\\n+\\t\\t$objectid = ( isset($_REQUEST[$this->handler->keyName]) ) ? (int) ($_REQUEST[$this->handler->keyName]) : 0;\\n+\\t\\t$icmsObj = $this->handler->get($objectid);\\n+\\n+\\t\\tif ($icmsObj->isNew()) {\\n+\\t\\t\\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\\n+\\t\\t\\texit();\\n+\\t\\t}\\n+\\n+\\t\\t$confirm = ( isset($_POST[\\'confirm\\']) ) ? $_POST[\\'confirm\\'] : 0;\\n+\\t\\tif ($confirm) {\\n+\\t\\t\\tif (!$this->handler->delete($icmsObj)) {\\n+\\t\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\\n+\\t\\t\\t\\texit;\\n+\\t\\t\\t}\\n+\\n+\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_SUCCESS);\\n+\\t\\t\\texit();\\n+\\t\\t} else {\\n+\\t\\t\\t// no confirm: show deletion condition\\n+\\t\\t\\tif (!$confirm_msg) {\\n+\\t\\t\\t\\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\\n+\\t\\t\\t}\\n+\\n+\\t\\t\\tob_start();\\n+\\t\\t\\ticms_core_Message::confirm(array(\\n+\\t\\t\\t\\t\\'op\\' => $op,\\n+\\t\\t\\t\\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\\n+\\t\\t\\t\\t\\'confirm\\' => 1,\\n+\\t\\t\\t\\t\\'redirect_page\\' => $impresscms->urls[\\'previouspage\\']),\\n+\\t\\t\\t\\txoops_getenv(\\'SCRIPT_NAME\\'),\\n+\\t\\t\\t\\tsprintf($confirm_msg ,\\n+\\t\\t\\t\\t$icmsObj->getVar($this->handler->identifierName)),\\n+\\t\\t\\t\\t_CO_ICMS_DELETE\\n+\\t\\t\\t);\\n+\\t\\t\\t$icmspersistable_delete_confirm = ob_get_clean();\\n+\\t\\t\\t$icmsTpl->assign(\\'icmspersistable_delete_confirm\\', $icmspersistable_delete_confirm);\\n+\\t\\t}\\n+\\t}\\n+\\n+\\t/**\\n+\\t * Retrieve the object admin side link for a {@link icms_ipf_view_Single} page\\n+\\t *\\n+\\t * @param\\tobject\\t$icmsObj\\treference to the object from which we want the user side link\\n+\\t * @param\\tbool\\t$onlyUrl\\twhether or not to return a simple URL or a full <a> link\\n+\\t * @param\\tbool\\t$withimage\\treturn a linked image instead of linked text\\n+\\t * @return\\tstring\\tadmin side link to the object\\n+\\t */\\n+\\tpublic function getAdminViewItemLink($icmsObj, $onlyUrl=false, $withimage=false) {\\n+\\t\\t$ret = $this->handler->_moduleUrl . \"admin/\"\\n+\\t\\t\\t. $this->handler->_page . \"?op=view&amp;\"\\n+\\t\\t\\t. $this->handler->keyName . \"=\"\\n+\\t\\t\\t. $icmsObj->getVar($this->handler->keyName);\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL\\n+\\t\\t\\t\\t\\t. \"/actions/viewmag.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t\\t. _CO_ICMS_ADMIN_VIEW . \"\\'  title=\\'\"\\n+\\t\\t\\t\\t\\t. _CO_ICMS_ADMIN_VIEW . \"\\'/></a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\\n+\\t}\\n+\\n+\\t/**\\n+\\t * Retrieve the object user side link\\n+\\t *\\n+\\t * @param object $icmsObj reference to the object from which we want the user side link\\n+\\t * @param bool $onlyUrl wether or not to return a simple URL or a full <a> link\\n+\\t * @return string user side link to the object\\n+\\t */\\n+\\tpublic function getItemLink(&$icmsObj, $onlyUrl=false) {\\n+\\t\\t/**\\n+\\t\\t * @todo URL Rewrite feature is not finished yet...\\n+\\t\\t */\\n+\\t\\t//$seoMode = smart_getModuleModeSEO($this->handler->_moduleName);\\n+\\t\\t//$seoModuleName = smart_getModuleNameForSEO($this->handler->_moduleName);\\n+\\t\\t$seoMode = false;\\n+\\t\\t$seoModuleName = $this->handler->_moduleName;\\n+\\n+\\t\\t/**\\n+\\t\\t * $seoIncludeId feature is not finished yet, so let\\'s put it always to true\\n+\\t\\t */\\n+\\t\\t//$seoIncludeId = smart_getModuleIncludeIdSEO($this->handler->_moduleName);\\n+\\t\\t$seoIncludeId = true;\\n+\\n+\\t\\t/*if ($seoMode == \\'rewrite\\') {\\n+\\t\\t\\t$ret = ICMS_URL . \\'/\\' . $seoModuleName . \\'.\\' . $this->handler->_itemname . ($seoIncludeId ? \\'.\\'\\t. $icmsObj->getVar($this->handler->keyName) : \\'\\'). \\'/\\' . $icmsObj->getVar(\\'short_url\\') . \\'.html\\';\\n+\\t\\t\\t} else if ($seoMode == \\'pathinfo\\') {\\n+\\t\\t\\t$ret = SMARTOBJECT_URL . \\'seo.php/\\' . $seoModuleName . \\'.\\' . $this->handler->_itemname . ($seoIncludeId ? \\'.\\'\\t. $icmsObj->getVar($this->handler->keyName) : \\'\\'). \\'/\\' . $icmsObj->getVar(\\'short_url\\') . \\'.html\\';\\n+\\t\\t\\t} else {\\n+\\t\\t\\t*/\\t$ret = $this->handler->_moduleUrl . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t//}\\n+\\n+\\t\\tif (!$onlyUrl) {\\n+\\t\\t\\t$ret = \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\\n+\\t\\t}\\n+\\t\\treturn $ret;\\n+\\t}\\n+\\n+\\t/**\\n+\\t * This method returns a view link of the Object\\n+\\t *\\n+\\t * @param icms_ipf_Object $icmsObj\\n+\\t * @param boolean $onlyUrl\\n+\\t * @param boolean $withimage\\n+\\t * @param boolean $userSide\\n+\\t * @return string\\n+\\t */\\n+\\tpublic function getViewItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\n+\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\n+\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin/\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t} else {\\n+\\t\\t\\t$admin_side = \\'\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . \\'admin.php?fct=\\'\\n+\\t\\t\\t\\t. $this->handler->_itemname . \"&amp;op=view&amp;\"\\n+\\t\\t\\t\\t. $this->handler->keyName . \"=\"\\n+\\t\\t\\t\\t. $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t}\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"/actions/viewmag.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t. _PREVIEW . \"\\'  title=\\'\" . _PREVIEW . \"\\'/></a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\\n+\\t}\\n+\\n+\\t/**\\n+\\t *\\n+\\t * @param\\tobject\\t$icmsObj\\n+\\t * @param\\tbool\\t$onlyUrl\\n+\\t * @param\\tbool\\t$withimage\\n+\\t */\\n+\\tpublic function getEditLanguageLink($icmsObj, $onlyUrl=false, $withimage=true) {\\n+\\t\\t$ret = $this->handler->_moduleUrl . \"admin/\"\\n+\\t\\t\\t. $this->handler->_page\\n+\\t\\t\\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName)\\n+\\t\\t\\t. \"&amp;language=\" . $icmsObj->getVar(\\'language\\');\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"/actions/wizard.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t. _CO_ICMS_LANGUAGE_MODIFY . \"\\'  title=\\'\" . _CO_ICMS_LANGUAGE_MODIFY . \"\\'/></a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\\n+\\t}\\n+\\n+\\t/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\n+\\t * @param\\tbool\\t$onlyUrl\\n+\\t * @param\\tbool\\t$withimage\\n+\\t * @param\\tbool\\t$userSide\\n+\\t */\\n+\\tpublic function getEditItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\n+\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\n+\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin/\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\\n+\\t\\t\\t\\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t} else {\\n+\\t\\t\\t/**\\n+\\t\\t\\t * @todo: to be implemented...\\n+\\t\\t\\t */\\n+\\t\\t\\t//$admin_side = $userSide ? \\'\\' : \\'admin/\\';\\n+\\t\\t\\t$admin_side = \\'\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side\\n+\\t\\t\\t\\t. \\'admin.php?fct=\\' . $this->handler->_itemname\\n+\\t\\t\\t\\t. \"&amp;op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t}\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"/actions/edit.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t. _CO_ICMS_MODIFY . \"\\'  title=\\'\" . _CO_ICMS_MODIFY . \"\\'/></a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\\n+\\t}\\n+\\n+\\t/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\n+\\t * @param\\tbool\\t$onlyUrl\\n+\\t * @param\\tbool\\t$withimage\\n+\\t * @param\\tbool\\t$userSide\\n+\\t */\\n+\\tpublic function getDeleteItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\n+\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\n+\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin/\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\\n+\\t\\t\\t\\t. \"?op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t} else {\\n+\\t\\t\\t/**\\n+\\t\\t\\t * @todo: to be implemented...\\n+\\t\\t\\t */\\n+\\t\\t\\t//$admin_side = $userSide ? \\'\\' : \\'admin/\\';\\n+\\t\\t\\t$admin_side = \\'\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side\\n+\\t\\t\\t\\t. \\'admin.php?fct=\\' . $this->handler->_itemname\\n+\\t\\t\\t\\t. \"&amp;op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t}\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"/actions/editdelete.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t. _CO_ICMS_DELETE . \"\\'  title=\\'\" . _CO_ICMS_DELETE . \"\\'/></a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"</a>\";\\n+\\t}\\n+\\n+\\t/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\n+\\t * @todo\\tNeeds to be completed\\n+\\t */\\n+\\tpublic function getPrintAndMailLink($icmsObj) {\\n+\\t\\tglobal $icmsConfig, $impresscms;\\n+\\n+\\t\\t$ret = \\'\\';\\n+\\t\\t/*\\t\\t$printlink = $this->handler->_moduleUrl . \"print.php?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t $js = \"javascript:openWithSelfMain(\\'\" . $printlink . \"\\', \\'smartpopup\\', 700, 519);\";\\n+\\t\\t $printlink = \\'<a href=\"\\' . $js . \\'\"><img  src=\"\\' . ICMS_IMAGES_SET_URL . \\'/actions/fileprint.png\" alt=\"\" style=\"vertical-align: middle;\"/></a>\\';\\n+\\n+\\t\\t $icmsModule = icms_getModuleInfo($icmsObj->handler->_moduleName);\\n+\\t\\t $link = $impresscms->urls[\\'full\\']();\\n+\\t\\t $mid = $icmsModule->getVar(\\'mid\\');\\n+\\t\\t $friendlink = \"<a href=\\\\\"javascript:openWithSelfMain(\\'\".SMARTOBJECT_URL.\"sendlink.php?link=\" . $link . \"&amp;mid=\" . $mid . \"\\', \\',\\',\\',\\',\\',\\',\\'sendmessage\\', 674, 500);\\\\\"><img src=\\\\\"\".SMARTOBJECT_IMAGES_ACTIONS_URL . \"mail_send.png\\\\\"  alt=\\\\\"\" . _CO_ICMS_EMAIL . \"\\\\\" title=\\\\\"\" . _CO_ICMS_EMAIL . \"\\\\\" style=\\\\\"vertical-align: middle;\\\\\"/></a>\";\\n+\\n+\\t\\t $ret = \\'<span id=\"smartobject_print_button\">\\' . $printlink . \"&nbsp;</span>\" . \\'<span id=\"smartobject_mail_button\">\\' . $friendlink . \\'</span>\\';\\n+\\t\\t */\\n+\\t\\treturn $ret;\\n+\\t}\\n+\\n+\\t/**\\n+\\t * Creates a string from the object\\'s module name and item name\\n+\\t */\\n+\\tpublic function getModuleItemString() {\\n+\\t\\t$ret = $this->handler->_moduleName . \\'_\\' . $this->handler->_itemname;\\n+\\t\\treturn $ret;\\n+\\t}\\n+}\\n+'}}",
      "message_norm": "prevents using submitted filenames with ../ for controller (#812)\n\n* prevents using submitted filenames with ../ for controller\r\n\r\n* using preg replace for better parent paths replaces\r\n\r\nco-authored-by: raimondas rimkevi\u010dius (aka mekdrop) <mekdrop@impresscms.org>",
      "language": "en",
      "entities": "[('prevents', 'ACTION', ''), ('#812', 'ISSUE', ''), ('prevents', 'ACTION', ''), ('mekdrop@impresscms.org', 'EMAIL', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['htdocs/libraries/icms/ipf/Controller.php'])",
      "num_files": 1.0
    },
    {
      "index": 2543,
      "vuln_id": "GHSA-p9m8-27x8-rg87",
      "cwe_id": "{'CWE-94'}",
      "score": 10.0,
      "chain": "{'https://github.com/jmrozanec/cron-utils/commit/cfd2880f80e62ea74b92fa83474c2aabdb9899da', 'https://github.com/jmrozanec/cron-utils/commit/d6707503ec2f20947f79e38f861dba93b39df9da'}",
      "dataset": "osv",
      "summary": "Critical vulnerability found in cron-utils ### Impact\nA Template Injection was identified in cron-utils enabling attackers to inject arbitrary Java EL expressions, leading to unauthenticated Remote Code Execution (RCE) vulnerability. Versions up to 9.1.2 are susceptible to this vulnerability. Please note, that only projects using the @Cron annotation to validate untrusted Cron expressions are affected.\n\n### Patches\nThe issue was patched and a new version was released. Please upgrade to version 9.1.6.\n\n### Workarounds\nThere are no known workarounds up to this moment.\n\n### References\nA description of the issue is provided in [issue 461](https://github.com/jmrozanec/cron-utils/issues/461)\n\n### For more information\nIf you have any questions or comments about this advisory:\n\nOpen an issue in the [cron-utils Github repository](https://github.com/jmrozanec/cron-utils)",
      "published_date": "2021-11-15",
      "chain_len": 2,
      "project": "https://github.com/jmrozanec/cron-utils",
      "commit_href": "https://github.com/jmrozanec/cron-utils/commit/d6707503ec2f20947f79e38f861dba93b39df9da",
      "commit_sha": "d6707503ec2f20947f79e38f861dba93b39df9da",
      "patch": "MULTI",
      "chain_ord": "['d6707503ec2f20947f79e38f861dba93b39df9da', 'cfd2880f80e62ea74b92fa83474c2aabdb9899da']",
      "before_first_fix_commit": "{'9c93c17b8107e58073443a045e22274467b88aae', 'd6707503ec2f20947f79e38f861dba93b39df9da'}",
      "last_fix_commit": "cfd2880f80e62ea74b92fa83474c2aabdb9899da",
      "chain_ord_pos": 1.0,
      "commit_datetime": "10/30/2021, 13:11:58",
      "message": "Merge pull request #493 from pwntester/patch-1\n\nPrevent arbitrary EL expression evaluation",
      "author": "jmrozanec",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 1, 'total': 2}",
      "files": "{'src/main/java/com/cronutils/validation/CronValidator.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/jmrozanec/cron-utils/raw/d6707503ec2f20947f79e38f861dba93b39df9da/src%2Fmain%2Fjava%2Fcom%2Fcronutils%2Fvalidation%2FCronValidator.java', 'patch': '@@ -30,7 +30,7 @@ public boolean isValid(String value, ConstraintValidatorContext context) {\\n             return true;\\n         } catch (IllegalArgumentException e) {\\n             context.disableDefaultConstraintViolation();\\n-            context.buildConstraintViolationWithTemplate(e.getMessage()).addConstraintViolation();\\n+            context.buildConstraintViolationWithTemplate(\"Error parsing the Cron expression\").addConstraintViolation();\\n             return false;\\n         }\\n     }'}}",
      "message_norm": "merge pull request #493 from pwntester/patch-1\n\nprevent arbitrary el expression evaluation",
      "language": "en",
      "entities": "[('#493', 'ISSUE', ''), ('prevent', 'ACTION', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/main/java/com/cronutils/validation/CronValidator.java'])",
      "num_files": 1.0
    },
    {
      "index": 1492,
      "vuln_id": "GHSA-c5r5-7pfh-6qg6",
      "cwe_id": "{'CWE-78'}",
      "score": 9.8,
      "chain": "{'https://github.com/inukshuk/bibtex-ruby/commit/14406f4460f4e1ecabd25ca94f809b3ea7c5fb11'}",
      "dataset": "osv",
      "summary": "OS command injection in BibTeX-Ruby BibTeX-ruby before 5.1.0 allows shell command injection due to unsanitized user input being passed directly to the built-in Ruby Kernel.open method through BibTeX.open.",
      "published_date": "2020-02-14",
      "chain_len": 1,
      "project": "https://github.com/inukshuk/bibtex-ruby",
      "commit_href": "https://github.com/inukshuk/bibtex-ruby/commit/14406f4460f4e1ecabd25ca94f809b3ea7c5fb11",
      "commit_sha": "14406f4460f4e1ecabd25ca94f809b3ea7c5fb11",
      "patch": "SINGLE",
      "chain_ord": "['14406f4460f4e1ecabd25ca94f809b3ea7c5fb11']",
      "before_first_fix_commit": "{'707b9303e4ed9a7e136dd1268e21d73d5faab817'}",
      "last_fix_commit": "14406f4460f4e1ecabd25ca94f809b3ea7c5fb11",
      "chain_ord_pos": 1.0,
      "commit_datetime": "01/17/2020, 13:34:37",
      "message": "Use File.read instead of Kernel.open\n\nTo avoid command injection with | strings",
      "author": "Sylvester Keil",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 1, 'total': 2}",
      "files": "{'lib/bibtex/bibliography.rb': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/inukshuk/bibtex-ruby/raw/14406f4460f4e1ecabd25ca94f809b3ea7c5fb11/lib%2Fbibtex%2Fbibliography.rb', 'patch': \"@@ -47,7 +47,7 @@ class << self\\n       # -:filter: convert all entries using the sepcified filter (not set by default)\\n       #\\n       def open(path, options = {})\\n-        b = parse(Kernel.open(path, 'r:UTF-8').read, options)\\n+        b = parse(File.read(path), options)\\n         b.path = path\\n         return b unless block_given?\"}}",
      "message_norm": "use file.read instead of kernel.open\n\nto avoid command injection with | strings",
      "language": "en",
      "entities": "[('command injection', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['lib/bibtex/bibliography.rb'])",
      "num_files": 1.0
    },
    {
      "index": 565,
      "vuln_id": "GHSA-56cx-wf47-hx7w",
      "cwe_id": "{'CWE-307'}",
      "score": 5.3,
      "chain": "{'https://github.com/firefly-iii/firefly-iii/commit/afc9f4b7ebc8a240c85864a6e1abda62bfeefae8'}",
      "dataset": "osv",
      "summary": " Improper Restriction of Excessive Authentication Attempts firefly-iii is vulnerable to Improper Restriction of Excessive Authentication Attempts",
      "published_date": "2021-08-09",
      "chain_len": 1,
      "project": "https://github.com/firefly-iii/firefly-iii",
      "commit_href": "https://github.com/firefly-iii/firefly-iii/commit/afc9f4b7ebc8a240c85864a6e1abda62bfeefae8",
      "commit_sha": "afc9f4b7ebc8a240c85864a6e1abda62bfeefae8",
      "patch": "SINGLE",
      "chain_ord": "['afc9f4b7ebc8a240c85864a6e1abda62bfeefae8']",
      "before_first_fix_commit": "{'cb759e5c21118cf18b29cb4619d7a2a540a9c76f'}",
      "last_fix_commit": "afc9f4b7ebc8a240c85864a6e1abda62bfeefae8",
      "chain_ord_pos": 1.0,
      "commit_datetime": "07/23/2021, 04:26:42",
      "message": "Add missing rate limiter.",
      "author": "James Cole",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 1, 'total': 3}",
      "files": "{'app/Http/Controllers/Auth/LoginController.php': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https://github.com/firefly-iii/firefly-iii/raw/afc9f4b7ebc8a240c85864a6e1abda62bfeefae8/app%2FHttp%2FControllers%2FAuth%2FLoginController.php', 'patch': '@@ -29,6 +29,7 @@\\n use FireflyIII\\\\Providers\\\\RouteServiceProvider;\\n use Illuminate\\\\Contracts\\\\View\\\\Factory;\\n use Illuminate\\\\Foundation\\\\Auth\\\\AuthenticatesUsers;\\n+use Illuminate\\\\Foundation\\\\Auth\\\\ThrottlesLogins;\\n use Illuminate\\\\Http\\\\JsonResponse;\\n use Illuminate\\\\Http\\\\RedirectResponse;\\n use Illuminate\\\\Http\\\\Request;\\n@@ -47,7 +48,7 @@\\n  */\\n class LoginController extends Controller\\n {\\n-    use AuthenticatesUsers;\\n+    use AuthenticatesUsers, ThrottlesLogins;\\n \\n     /**\\n      * Where to redirect users after login.'}}",
      "message_norm": "add missing rate limiter.",
      "language": "et",
      "entities": "[('add', 'ACTION', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['app/Http/Controllers/Auth/LoginController.php'])",
      "num_files": 1.0
    },
    {
      "index": 1666,
      "vuln_id": "GHSA-f55g-x8qq-2569",
      "cwe_id": "{'CWE-1236'}",
      "score": 9.8,
      "chain": "{'https://github.com/WeblateOrg/weblate/commit/d9e136ff228e3760fd6dd7572869ac38e9a81809'}",
      "dataset": "osv",
      "summary": "CSV-Safe improperly filters special characters potentially leading to CSV injection CSV-Safe gem < 3.0.0 doesn't filter out special characters which could trigger CSV Injection.",
      "published_date": "2022-05-03",
      "chain_len": 1,
      "project": "https://github.com/WeblateOrg/weblate",
      "commit_href": "https://github.com/WeblateOrg/weblate/commit/d9e136ff228e3760fd6dd7572869ac38e9a81809",
      "commit_sha": "d9e136ff228e3760fd6dd7572869ac38e9a81809",
      "patch": "SINGLE",
      "chain_ord": "['d9e136ff228e3760fd6dd7572869ac38e9a81809']",
      "before_first_fix_commit": "{'66f55341916de8a9e9125bb4af661373fb5c525b'}",
      "last_fix_commit": "d9e136ff228e3760fd6dd7572869ac38e9a81809",
      "chain_ord_pos": 1.0,
      "commit_datetime": "04/26/2017, 15:19:46",
      "message": "Improve filter on CSV formulas\n\nIt seems that Excel is interpreting way more than I originally thought.\n\nFixes https://hackerone.com/reports/223999\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>",
      "author": "Michal \u010ciha\u0159",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 2, 'total': 4}",
      "files": "{'weblate/trans/exporters.py': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https://github.com/WeblateOrg/weblate/raw/d9e136ff228e3760fd6dd7572869ac38e9a81809/weblate%2Ftrans%2Fexporters.py', 'patch': '@@ -279,6 +279,6 @@ def string_filter(self, text):\\n         used at first position of translatable strings, so the harm is not\\n         that big.\\n         \"\"\"\\n-        if text and text[0] in (\\'=\\', \\'+\\', \\'-\\', \\'@\\'):\\n-            return \"\\'\" + text\\n+        if text and text[0] in (\\'=\\', \\'+\\', \\'-\\', \\'@\\', \\'|\\', \\'%\\'):\\n+            return \"\\'{0}\\'\".format(text.replace(\\'|\\', \\'\\\\|\\'))\\n         return text'}}",
      "message_norm": "improve filter on csv formulas\n\nit seems that excel is interpreting way more than i originally thought.\n\nfixes https://hackerone.com/reports/223999\n\nsigned-off-by: michal \u010diha\u0159 <michal@cihar.com>",
      "language": "en",
      "entities": "[('improve', 'ACTION', ''), ('fixes', 'ACTION', ''), ('https://hackerone.com/reports/223999', 'URL', ''), ('michal@cihar.com', 'EMAIL', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['weblate/trans/exporters.py'])",
      "num_files": 1.0
    },
    {
      "index": 629,
      "vuln_id": "GHSA-5fxf-x22x-5q38",
      "cwe_id": "{'CWE-79'}",
      "score": 6.8,
      "chain": "{'https://github.com/microweber/microweber/commit/de6d17b52d261902653fbdd2ecefcaac82e54256'}",
      "dataset": "osv",
      "summary": "Cross-site Scripting in microweber XSS on dynamic_text module in GitHub repository microweber/microweber prior to 1.2.12.",
      "published_date": "2022-03-13",
      "chain_len": 1,
      "project": "https://github.com/microweber/microweber",
      "commit_href": "https://github.com/microweber/microweber/commit/de6d17b52d261902653fbdd2ecefcaac82e54256",
      "commit_sha": "de6d17b52d261902653fbdd2ecefcaac82e54256",
      "patch": "SINGLE",
      "chain_ord": "['de6d17b52d261902653fbdd2ecefcaac82e54256']",
      "before_first_fix_commit": "{'095b1bcea7a4384f0d0513906100212df136a1e4'}",
      "last_fix_commit": "de6d17b52d261902653fbdd2ecefcaac82e54256",
      "chain_ord_pos": 1.0,
      "commit_datetime": "03/11/2022, 13:38:50",
      "message": "Update build-and-upload.yml",
      "author": "Bozhidar Slaveykov",
      "comments": null,
      "stats": "{'additions': 0, 'deletions': 1, 'total': 1}",
      "files": "{'.github/workflows/build-and-upload.yml': {'additions': 0, 'deletions': 1, 'changes': 1, 'status': 'modified', 'raw_url': 'https://github.com/microweber/microweber/raw/de6d17b52d261902653fbdd2ecefcaac82e54256/.github%2Fworkflows%2Fbuild-and-upload.yml', 'patch': '@@ -6,7 +6,6 @@ on:\\n jobs:\\n   microweber-test-before-build:\\n     runs-on: ubuntu-latest\\n-    needs: stop-previous-runs\\n     steps:\\n       - uses: actions/checkout@v2'}}",
      "message_norm": "update build-and-upload.yml",
      "language": "en",
      "entities": "[('update', 'ACTION', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['.github/workflows/build-and-upload.yml'])",
      "num_files": 1.0
    },
    {
      "index": 2487,
      "vuln_id": "GHSA-p23j-g745-8449",
      "cwe_id": "{'CWE-787'}",
      "score": 7.5,
      "chain": "{'https://github.com/chakra-core/ChakraCore/commit/a4e56547fb8b7450656bfd26dfc52b8477c8ef27', 'https://github.com/chakra-core/ChakraCore/commit/cc871514deeaeaedb5b757c2ca8cd4ab9abccb5d'}",
      "dataset": "osv",
      "summary": "Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-1307, CVE-2019-1308, CVE-2019-1366.",
      "published_date": "2021-03-29",
      "chain_len": 2,
      "project": "https://github.com/chakra-core/ChakraCore",
      "commit_href": "https://github.com/chakra-core/ChakraCore/commit/a4e56547fb8b7450656bfd26dfc52b8477c8ef27",
      "commit_sha": "a4e56547fb8b7450656bfd26dfc52b8477c8ef27",
      "patch": "MULTI",
      "chain_ord": "['a4e56547fb8b7450656bfd26dfc52b8477c8ef27', 'cc871514deeaeaedb5b757c2ca8cd4ab9abccb5d']",
      "before_first_fix_commit": "{'7e9a2ee60baa95ceb4f48f522f823c812ca90c80', '5989c6e038d80f92dcd8e10d725cdf45396201bb'}",
      "last_fix_commit": "cc871514deeaeaedb5b757c2ca8cd4ab9abccb5d",
      "chain_ord_pos": 1.0,
      "commit_datetime": "09/03/2019, 21:52:17",
      "message": "CVE-2019-1335",
      "author": "Wyatt",
      "comments": null,
      "stats": "{'additions': 52, 'deletions': 13, 'total': 65}",
      "files": "{'lib/Backend/GlobOpt.cpp': {'additions': 52, 'deletions': 13, 'changes': 65, 'status': 'modified', 'raw_url': 'https://github.com/chakra-core/ChakraCore/raw/a4e56547fb8b7450656bfd26dfc52b8477c8ef27/lib%2FBackend%2FGlobOpt.cpp', 'patch': '@@ -2161,27 +2161,46 @@ GlobOpt::CollectMemOpInfo(IR::Instr *instrBegin, IR::Instr *instr, Value *src1Va\\n             return false;\\n         }\\n         break;\\n-    case Js::OpCode::Decr_A:\\n-        isIncr = false;\\n-    case Js::OpCode::Incr_A:\\n-        isChangedByOne = true;\\n-        goto MemOpCheckInductionVariable;\\n     case Js::OpCode::Sub_I4:\\n-    case Js::OpCode::Sub_A:\\n         isIncr = false;\\n-    case Js::OpCode::Add_A:\\n     case Js::OpCode::Add_I4:\\n     {\\n-MemOpCheckInductionVariable:\\n-        StackSym *sym = instr->GetSrc1()->GetStackSym();\\n-        if (!sym)\\n+        // The only case in which these OpCodes can contribute to an inductionVariableChangeInfo\\n+        // is when the induction variable is being modified and overwritten aswell (ex: j = j + 1)\\n+        // and not when the induction variable is modified but not overwritten (ex: k = j + 1).\\n+        // This can either be detected in IR as\\n+        // s1     = Add_I4 s1     1  // Case #1, can be seen with \"j++\".\\n+        // or as\\n+        // s4(s2) = Add_I4 s3(s1) 1  // Case #2, can be see with \"j = j + 1\".\\n+        // s1     = Ld_A   s2\\n+        bool isInductionVar = false;\\n+        IR::Instr* nextInstr = instr->m_next;\\n+        if (\\n+            // Checks for Case #1 and Case #2\\n+            instr->GetDst()->GetStackSym() != nullptr &&\\n+            instr->GetDst()->IsRegOpnd() &&\\n+            (\\n+                // Checks for Case #1\\n+                (instr->GetDst()->GetStackSym() == instr->GetSrc1()->GetStackSym()) ||\\n+\\n+                // Checks for Case #2\\n+                (nextInstr&& nextInstr->m_opcode == Js::OpCode::Ld_A &&\\n+                 nextInstr->GetSrc1()->IsRegOpnd() &&\\n+                 nextInstr->GetDst()->IsRegOpnd() &&\\n+                 GetVarSymID(instr->GetDst()->GetStackSym()) == nextInstr->GetSrc1()->GetStackSym()->m_id &&\\n+                 GetVarSymID(instr->GetSrc1()->GetStackSym()) == nextInstr->GetDst()->GetStackSym()->m_id)\\n+            )\\n+        )\\n         {\\n-            sym = instr->GetSrc2()->GetStackSym();\\n+            isInductionVar = true;\\n         }\\n+        \\n+        // Even if dstIsInductionVar then dst == src1 so it\\'s safe to use src1 as the induction sym always.\\n+        StackSym* sym = instr->GetSrc1()->GetStackSym();\\n \\n         SymID inductionSymID = GetVarSymID(sym);\\n \\n-        if (IsSymIDInductionVariable(inductionSymID, this->currentBlock->loop))\\n+        if (isInductionVar && IsSymIDInductionVariable(inductionSymID, this->currentBlock->loop))\\n         {\\n             if (!isChangedByOne)\\n             {\\n@@ -2246,7 +2265,6 @@ GlobOpt::CollectMemOpInfo(IR::Instr *instrBegin, IR::Instr *instr, Value *src1Va\\n                     {\\n                         inductionVariableChangeInfo.unroll++;\\n                     }\\n-                    \\n                     inductionVariableChangeInfo.isIncremental = isIncr;\\n                     loop->memOpInfo->inductionVariableChangeInfoMap->Item(inductionSymID, inductionVariableChangeInfo);\\n                 }\\n@@ -2284,6 +2302,27 @@ GlobOpt::CollectMemOpInfo(IR::Instr *instrBegin, IR::Instr *instr, Value *src1Va\\n             }\\n         }\\n         NEXT_INSTR_IN_RANGE;\\n+        IR::Instr* prevInstr = instr->m_prev;\\n+\\n+        // If an instr where the dst is an induction variable (and thus is being written to) is not caught by a case in the above\\n+        // switch statement (which implies that this instr does not contributes to a inductionVariableChangeInfo) and in the default\\n+        // case does not set doMemOp to false (which implies that this instr does not invalidate this MemOp), then FailFast as we\\n+        // should not be performing a MemOp under these conditions. \\n+        AssertOrFailFast(!instr->GetDst() || instr->m_opcode == Js::OpCode::IncrLoopBodyCount || !loop->memOpInfo ||\\n+\\n+            // Refer to \"Case #2\" described above in this function. For the following IR:\\n+            // Line #1: s4(s2) = Add_I4 s3(s1) 1\\n+            // Line #2: s3(s1) = Ld_A   s4(s2)\\n+            // do not consider line #2 as a violating instr\\n+            (instr->m_opcode == Js::OpCode::Ld_I4 &&\\n+                prevInstr && (prevInstr->m_opcode == Js::OpCode::Add_I4 || prevInstr->m_opcode == Js::OpCode::Sub_I4) &&\\n+                instr->GetSrc1()->IsRegOpnd() &&\\n+                instr->GetDst()->IsRegOpnd() &&\\n+                prevInstr->GetDst()->IsRegOpnd() &&\\n+                instr->GetDst()->GetStackSym() == prevInstr->GetSrc1()->GetStackSym() &&\\n+                instr->GetSrc1()->GetStackSym() == prevInstr->GetDst()->GetStackSym()) ||\\n+\\n+            !loop->memOpInfo->inductionVariableChangeInfoMap->ContainsKey(GetVarSymID(instr->GetDst()->GetStackSym())));\\n     }\\n \\n     return true;'}}",
      "message_norm": "cve-2019-1335",
      "language": "ro",
      "entities": "[('cve-2019-1335', 'VULNID', 'CVE')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['lib/Backend/GlobOpt.cpp'])",
      "num_files": 1.0
    },
    {
      "index": 3387,
      "vuln_id": "GHSA-x752-qjv4-c4hc",
      "cwe_id": "{'CWE-74'}",
      "score": 9.8,
      "chain": "{'https://github.com/dompdf/dompdf/commit/4c70e1025bcd9b7694b95dd552499bd83cd6141d'}",
      "dataset": "osv",
      "summary": "Remote code injection in dompdf/dompdf Dompdf is an HTML to PDF converter. Dompdf before 1.2.1 allows remote code execution via a .php file in the src:url field of an @font-face Cascading Style Sheets (CSS) statement (within an HTML input file).",
      "published_date": "2022-04-04",
      "chain_len": 1,
      "project": "https://github.com/dompdf/dompdf",
      "commit_href": "https://github.com/dompdf/dompdf/commit/4c70e1025bcd9b7694b95dd552499bd83cd6141d",
      "commit_sha": "4c70e1025bcd9b7694b95dd552499bd83cd6141d",
      "patch": "SINGLE",
      "chain_ord": "['4c70e1025bcd9b7694b95dd552499bd83cd6141d']",
      "before_first_fix_commit": "{'0347b9a73f8a03b1b7e659312416f6fd6c7a0cee'}",
      "last_fix_commit": "4c70e1025bcd9b7694b95dd552499bd83cd6141d",
      "chain_ord_pos": 1.0,
      "commit_datetime": "03/17/2022, 00:09:04",
      "message": "Match installed font filename extension to type\n\nfixes #2598",
      "author": "Brian Sweeney",
      "comments": "{'com_1': {'author': 'Jakess39', 'datetime': '04/16/2022, 09:55:58', 'body': '> #2526'}, 'com_2': {'author': 'Jakess39', 'datetime': '04/16/2022, 09:56:11', 'body': '> > #2526'}}",
      "stats": "{'additions': 7, 'deletions': 1, 'total': 8}",
      "files": "{'src/FontMetrics.php': {'additions': 7, 'deletions': 1, 'changes': 8, 'status': 'modified', 'raw_url': 'https://github.com/dompdf/dompdf/raw/4c70e1025bcd9b7694b95dd552499bd83cd6141d/src%2FFontMetrics.php', 'patch': '@@ -206,7 +206,6 @@ public function registerFont($style, $remoteFile, $context = null)\\n         }\\n \\n         $cacheEntry = $localFile;\\n-        $localFile .= \".\".strtolower(pathinfo(parse_url($remoteFile, PHP_URL_PATH), PATHINFO_EXTENSION));\\n \\n         $entry[$styleString] = $cacheEntry;\\n \\n@@ -258,6 +257,13 @@ public function registerFont($style, $remoteFile, $context = null)\\n             return false;\\n         }\\n \\n+        switch ($font->getFontType()) {\\n+            case \"TrueType\":\\n+            default:\\n+                $localFile .= \".ttf\";\\n+                break;\\n+        }\\n+\\n         $font->parse();\\n         $font->saveAdobeFontMetrics(\"$cacheEntry.ufm\");\\n         $font->close();'}}",
      "message_norm": "match installed font filename extension to type\n\nfixes #2598",
      "language": "en",
      "entities": "[('#2598', 'ISSUE', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/FontMetrics.php'])",
      "num_files": 1.0
    },
    {
      "index": 3417,
      "vuln_id": "GHSA-xf7w-r453-m56c",
      "cwe_id": "{'CWE-59'}",
      "score": 7.5,
      "chain": "{'https://github.com/npm/fstream/commit/6a77d2fa6e1462693cf8e46f930da96ec1b0bb22'}",
      "dataset": "osv",
      "summary": "Arbitrary File Overwrite in fstream Versions of `fstream` prior to 1.0.12 are vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system and a file that matches the hardlink will overwrite the system's file with the contents of the extracted file. The `fstream.DirWriter()` function is vulnerable.\n\n\n## Recommendation\n\nUpgrade to version 1.0.12 or later.",
      "published_date": "2019-05-30",
      "chain_len": 1,
      "project": "https://github.com/npm/fstream",
      "commit_href": "https://github.com/npm/fstream/commit/6a77d2fa6e1462693cf8e46f930da96ec1b0bb22",
      "commit_sha": "6a77d2fa6e1462693cf8e46f930da96ec1b0bb22",
      "patch": "SINGLE",
      "chain_ord": "['6a77d2fa6e1462693cf8e46f930da96ec1b0bb22']",
      "before_first_fix_commit": "{'1e4527ffe8688d4f5325283d7cf2cf2d61f14c6b'}",
      "last_fix_commit": "6a77d2fa6e1462693cf8e46f930da96ec1b0bb22",
      "chain_ord_pos": 1.0,
      "commit_datetime": "05/15/2019, 00:37:57",
      "message": "Clobber a Link if it's in the way of a File\n\nFixes https://github.com/npm/node-tar/issues/212",
      "author": "isaacs",
      "comments": "{'com_1': {'author': 'ret2libc', 'datetime': '06/24/2019, 10:41:00', 'body': \"Does this fix really solve the issue? Doesn't it make it just racy? (e.g. if at the time of check the file is a regular one and it is switched to an hardlink just before the `create()` function is called)\"}, 'com_2': {'author': 'mssalvatore', 'datetime': '08/29/2019, 11:35:42', 'body': 'I don\\'t believe this patch is attempting to resolve a TOCTOU condition. The context of the original issue (https://hackerone.com/reports/344595) is that arbitrary files on the filesystem could be overwritten if a crafted **tar archive** were extracted.\\r\\n\\r\\nWithin that context, I don\\'t believe this fix is has a race condition. It is not trying to prevent general TOCTOU issues. Rather, it\\'s preventing the condition where you\\'re in the process of iterating through the entries in a tar archive and you:\\r\\n\\r\\n1) Extract a hardlink named \"LINK\" that points to some arbitrary location (like /etc/passwd)\\r\\n2) Extract a regular file that also has the name \"LINK\"\\r\\n\\r\\nWithout this fix, this scenario would result in /etc/passwd being overwritten with the contents of the regular file \"LINK\".\\r\\n\\r\\nAll that being said, I am *really* not a javascript/node.js developer, so:\\r\\n\\r\\n1) Since node.js handles I/O asynchronously, are there concurrency concerns while looping through and extracting the entries of a tarball? \\r\\n2) Why would someone use fstream at all in this capacity when they could use the tar package instead? I\\'m curious as to why this fix was really necessary in the first place.'}, 'com_3': {'author': 'ret2libc', 'datetime': '09/10/2019, 15:20:25', 'body': \"> I don't believe this patch is attempting to resolve a TOCTOU condition. The context of the original issue (https://hackerone.com/reports/344595) is that arbitrary files on the filesystem could be overwritten if a crafted **tar archive** were extracted.\\r\\n\\r\\nTrue, though I was not able to trigger the issue while extracting a tar. Maybe I'm just missing something, but I ended up analyzing the issue in the context of a copy from one directory to another. Also, from reading various comments around this seemed more like a security fix to make npm-audit happy.\"}}",
      "stats": "{'additions': 1, 'deletions': 1, 'total': 2}",
      "files": "{'lib/writer.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/npm/fstream/raw/6a77d2fa6e1462693cf8e46f930da96ec1b0bb22/lib%2Fwriter.js', 'patch': \"@@ -147,7 +147,7 @@ Writer.prototype._stat = function (current) {\\n \\n     // if it's a type change, then we need to clobber or error.\\n     // if it's not a type change, then let the impl take care of it.\\n-    if (currentType !== self.type) {\\n+    if (currentType !== self.type || self.type === 'File' && current.nlink > 1) {\\n       return rimraf(self._path, function (er) {\\n         if (er) return self.error(er)\\n         self._old = null\"}}",
      "message_norm": "clobber a link if it's in the way of a file\n\nfixes https://github.com/npm/node-tar/issues/212",
      "language": "en",
      "entities": "[('https://github.com/npm/node-tar/issues/212', 'FLAW', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['lib/writer.js'])",
      "num_files": 1.0
    },
    {
      "index": 2074,
      "vuln_id": "GHSA-hhrj-wp42-32v3",
      "cwe_id": "{'CWE-209'}",
      "score": 7.5,
      "chain": "{'https://github.com/microweber/microweber/commit/2417bd2eda2aa2868c1dad1abf62341f22bfc20a'}",
      "dataset": "osv",
      "summary": "Generation of Error Message Containing Sensitive Information in microweber Generation of Error Message Containing Sensitive Information in Packagist microweber/microweber prior to 1.2.11.",
      "published_date": "2022-02-19",
      "chain_len": 1,
      "project": "https://github.com/microweber/microweber",
      "commit_href": "https://github.com/microweber/microweber/commit/2417bd2eda2aa2868c1dad1abf62341f22bfc20a",
      "commit_sha": "2417bd2eda2aa2868c1dad1abf62341f22bfc20a",
      "patch": "SINGLE",
      "chain_ord": "['2417bd2eda2aa2868c1dad1abf62341f22bfc20a']",
      "before_first_fix_commit": "{'8adc9da7307c89d7cb7b309f69d0c2922a56aa2e'}",
      "last_fix_commit": "2417bd2eda2aa2868c1dad1abf62341f22bfc20a",
      "chain_ord_pos": 1.0,
      "commit_datetime": "02/17/2022, 09:15:14",
      "message": "Update Comment.php",
      "author": "Bozhidar Slaveykov",
      "comments": null,
      "stats": "{'additions': 9, 'deletions': 0, 'total': 9}",
      "files": "{'src/MicroweberPackages/Comment/Models/Comment.php': {'additions': 9, 'deletions': 0, 'changes': 9, 'status': 'modified', 'raw_url': 'https://github.com/microweber/microweber/raw/2417bd2eda2aa2868c1dad1abf62341f22bfc20a/src%2FMicroweberPackages%2FComment%2FModels%2FComment.php', 'patch': \"@@ -5,10 +5,12 @@\\n use EloquentFilter\\\\Filterable;\\n use Illuminate\\\\Database\\\\Eloquent\\\\Model;\\n use MicroweberPackages\\\\Content\\\\Models\\\\ModelFilters\\\\ContentFilter;\\n+use MicroweberPackages\\\\Core\\\\Models\\\\HasSearchableTrait;\\n \\n class Comment extends Model\\n {\\n     use Filterable;\\n+    use HasSearchableTrait;\\n \\n     public $table = 'comments';\\n \\n@@ -21,6 +23,13 @@ class Comment extends Model\\n         'comment_body',\\n     ];\\n \\n+    protected $searchable = [\\n+        'comment_name',\\n+        'comment_email',\\n+        'comment_website',\\n+        'comment_body',\\n+    ];\\n+\\n     public function modelFilter()\\n     {\\n         return $this->provideFilter(ContentFilter::class);\"}}",
      "message_norm": "update comment.php",
      "language": "fr",
      "entities": "[('update', 'ACTION', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/MicroweberPackages/Comment/Models/Comment.php'])",
      "num_files": 1.0
    },
    {
      "index": 1915,
      "vuln_id": "GHSA-gq4h-f254-7cw9",
      "cwe_id": "{'CWE-362'}",
      "score": 8.1,
      "chain": "{'https://github.com/kvark/ticketed_lock/pull/8/commits/a986a9335d591fa5c826157d1674d47aa525357f'}",
      "dataset": "osv",
      "summary": "Data races in ticketed_lock Affected versions of this crate unconditionally implemented `Send` for `ReadTicket<T>` & `WriteTicket<T>`.\nThis allows to send non-Send `T` to other threads.\n\nThis can allows creating data races by cloning types with internal mutability and sending them to other threads (as `T` of `ReadTicket<T>`/`WriteTicket<T>`). Such data races can cause memory corruption or other undefined behavior.\n\nThe flaw was corrected in commit a986a93 by adding `T: Send` bounds to `Send` impls of `ReadTicket<T>`/`WriteTicket<T>`.",
      "published_date": "2021-08-25",
      "chain_len": 1,
      "project": "https://github.com/kvark/ticketed_lock",
      "commit_href": "https://github.com/kvark/ticketed_lock/pull/8/commits/a986a9335d591fa5c826157d1674d47aa525357f",
      "commit_sha": "a986a9335d591fa5c826157d1674d47aa525357f",
      "patch": "SINGLE",
      "chain_ord": "['a986a9335d591fa5c826157d1674d47aa525357f']",
      "before_first_fix_commit": "{'6d85af9eb5d8bb7cf142de8e832ce3af7e47e306'}",
      "last_fix_commit": "a986a9335d591fa5c826157d1674d47aa525357f",
      "chain_ord_pos": 1.0,
      "commit_datetime": "01/24/2021, 04:07:17",
      "message": "'T: Send' to prevent misuse",
      "author": "JOE1994",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 2, 'total': 4}",
      "files": "{'src/lib.rs': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https://github.com/kvark/ticketed_lock/raw/a986a9335d591fa5c826157d1674d47aa525357f/src%2Flib.rs', 'patch': '@@ -50,7 +50,7 @@ pub struct ReadTicket<T> {\\n     data: Arc<UnsafeCell<T>>,\\n }\\n \\n-unsafe impl<T> Send for ReadTicket<T> {}\\n+unsafe impl<T: Send> Send for ReadTicket<T> {}\\n \\n #[cfg(not(feature = \"futures\"))]\\n impl<T> ReadTicket<T> {\\n@@ -112,7 +112,7 @@ pub struct WriteTicket<T> {\\n     data: Arc<UnsafeCell<T>>,\\n }\\n \\n-unsafe impl<T> Send for WriteTicket<T> {}\\n+unsafe impl<T: Send> Send for WriteTicket<T> {}\\n \\n #[cfg(not(feature = \"futures\"))]\\n impl<T> WriteTicket<T> {'}}",
      "message_norm": "'t: send' to prevent misuse",
      "language": "en",
      "entities": "[('prevent', 'ACTION', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/lib.rs'])",
      "num_files": 1.0
    },
    {
      "index": 1334,
      "vuln_id": "GHSA-97gv-3p2c-xw7j",
      "cwe_id": "{'CWE-74', 'CWE-400'}",
      "score": 8.2,
      "chain": "{'https://github.com/oliversalzburg/i18n-node-angular/commit/877720d2d9bb90dc8233706e81ffa03f99fc9dc8'}",
      "dataset": "osv",
      "summary": "Denial of Service and Content Injection in i18n-node-angular Versions of `i18n-node-angular` prior to 1.4.0 are affected by denial of service and cross-site scripting vulnerabilities. The vulnerabilities exist in a REST endpoint that was created for development purposes, but was not disabled in production in affected versions.\n\n\n## Recommendation\n\nUpdate to version 1.4.0 or later.",
      "published_date": "2019-02-18",
      "chain_len": 1,
      "project": "https://github.com/oliversalzburg/i18n-node-angular",
      "commit_href": "https://github.com/oliversalzburg/i18n-node-angular/commit/877720d2d9bb90dc8233706e81ffa03f99fc9dc8",
      "commit_sha": "877720d2d9bb90dc8233706e81ffa03f99fc9dc8",
      "patch": "SINGLE",
      "chain_ord": "['877720d2d9bb90dc8233706e81ffa03f99fc9dc8']",
      "before_first_fix_commit": "{'85ba51ac9dc47a3e232a19926791219ef9de20ee'}",
      "last_fix_commit": "877720d2d9bb90dc8233706e81ffa03f99fc9dc8",
      "chain_ord_pos": 1.0,
      "commit_datetime": "01/07/2016, 08:40:02",
      "message": "[FIX] Only register translate route during development",
      "author": "Oliver Salzburg",
      "comments": null,
      "stats": "{'additions': 4, 'deletions': 1, 'total': 5}",
      "files": "{'i18n-node-routes.js': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https://github.com/oliversalzburg/i18n-node-angular/raw/877720d2d9bb90dc8233706e81ffa03f99fc9dc8/i18n-node-routes.js', 'patch': '@@ -49,7 +49,10 @@ var configure = function( app, configObject ) {\\n \\n \\t// Register routes\\n \\tapp.get( \"/i18n/:locale\", i18nRoutes.i18n );\\n-\\tapp.get( \"/i18n/:locale/:phrase\", i18nRoutes.translate );\\n+\\n+\\tif( process.env.NODE_ENV === \"development\" ) {\\n+\\t\\tapp.get( \"/i18n/:locale/:phrase\", i18nRoutes.translate );\\n+\\t}\\n };\\n \\n /**'}}",
      "message_norm": "[fix] only register translate route during development",
      "language": "en",
      "entities": "[('fix', 'ACTION', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['i18n-node-routes.js'])",
      "num_files": 1.0
    },
    {
      "index": 3194,
      "vuln_id": "GHSA-vxhc-c4qm-647p",
      "cwe_id": "{'CWE-284', 'CWE-863'}",
      "score": 4.3,
      "chain": "{'https://github.com/Dolibarr/dolibarr/commit/8cc100012d46282799fb19f735a53b7101569377'}",
      "dataset": "osv",
      "summary": "Improper Access Control in Dolibarr In \u201cDolibarr\u201d application, 2.8.1 to 13.0.4 don\u2019t restrict or incorrectly restricts access to a resource from an unauthorized actor. A low privileged attacker can modify the Private Note which only an administrator has rights to do, the affected field is at \u201c/adherents/note.php?id=1\u201d endpoint.",
      "published_date": "2021-08-11",
      "chain_len": 1,
      "project": "https://github.com/Dolibarr/dolibarr",
      "commit_href": "https://github.com/Dolibarr/dolibarr/commit/8cc100012d46282799fb19f735a53b7101569377",
      "commit_sha": "8cc100012d46282799fb19f735a53b7101569377",
      "patch": "SINGLE",
      "chain_ord": "['8cc100012d46282799fb19f735a53b7101569377']",
      "before_first_fix_commit": "{'0271645d8efd5815bbb2d8750c76e8b27ee974be'}",
      "last_fix_commit": "8cc100012d46282799fb19f735a53b7101569377",
      "chain_ord_pos": 1.0,
      "commit_datetime": "05/09/2021, 10:50:46",
      "message": "Fix vulnerabiity: External users can set a public note",
      "author": "Laurent Destailleur",
      "comments": null,
      "stats": "{'additions': 13, 'deletions': 11, 'total': 24}",
      "files": "{'htdocs/core/actions_setnotes.inc.php': {'additions': 13, 'deletions': 11, 'changes': 24, 'status': 'modified', 'raw_url': 'https://github.com/Dolibarr/dolibarr/raw/8cc100012d46282799fb19f735a53b7101569377/htdocs%2Fcore%2Factions_setnotes.inc.php', 'patch': \"@@ -67,16 +67,18 @@\\n \\t\\t\\t}\\n \\t\\t}\\n \\t}\\n-} elseif ($action == 'setnote_private' && !empty($permissionnote) && !GETPOST('cancel', 'alpha')) {\\n-\\t// Set public note\\n-\\tif (empty($action) || !is_object($object) || empty($id)) {\\n-\\t\\tdol_print_error('', 'Include of actions_setnotes.inc.php was done but required variable was not set before');\\n-\\t}\\n-\\tif (empty($object->id)) {\\n-\\t\\t$object->fetch($id); // Fetch may not be already done\\n-\\t}\\n-\\t$result = $object->update_note(dol_html_entity_decode(GETPOST('note_private', 'restricthtml'), ENT_QUOTES | ENT_HTML5), '_private');\\n-\\tif ($result < 0) {\\n-\\t\\tsetEventMessages($object->error, $object->errors, 'errors');\\n+} elseif ($action == 'setnote_private' && !empty($permissionnote) && !GETPOST('cancel', 'alpha')) {\\t// Set public note\\n+\\tif (empty($user->socid)) {\\n+\\t\\t// Private notes (always hidden to external users)\\n+\\t\\tif (empty($action) || !is_object($object) || empty($id)) {\\n+\\t\\t\\tdol_print_error('', 'Include of actions_setnotes.inc.php was done but required variable was not set before');\\n+\\t\\t}\\n+\\t\\tif (empty($object->id)) {\\n+\\t\\t\\t$object->fetch($id); // Fetch may not be already done\\n+\\t\\t}\\n+\\t\\t$result = $object->update_note(dol_html_entity_decode(GETPOST('note_private', 'restricthtml'), ENT_QUOTES | ENT_HTML5), '_private');\\n+\\t\\tif ($result < 0) {\\n+\\t\\t\\tsetEventMessages($object->error, $object->errors, 'errors');\\n+\\t\\t}\\n \\t}\\n }\"}}",
      "message_norm": "fix vulnerabiity: external users can set a public note",
      "language": "ca",
      "entities": "[('fix', 'ACTION', ''), ('vulnerabiity', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['htdocs/core/actions_setnotes.inc.php'])",
      "num_files": 1.0
    },
    {
      "index": 1004,
      "vuln_id": "GHSA-79jw-2f46-wv22",
      "cwe_id": "{'CWE-74'}",
      "score": 7.2,
      "chain": "{'https://github.com/octobercms/library/commit/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe'}",
      "dataset": "osv",
      "summary": "Authenticated remote code execution in October CMS ### Impact\n\nAn authenticated user with the permissions to create, modify and delete website pages can exploit this vulnerability to bypass  `cms.safe_mode` / `cms.enableSafeMode` in order to execute arbitrary code.\n\n- This issue only affects admin panels that rely on safe mode and restricted permissions.\n- To exploit this vulnerability, an attacker must first have access to the backend area.\n\n### Patches\n\nThe issue has been patched in Build 474 (v1.0.474) and v1.1.10.\n\n### Workarounds\n\nApply https://github.com/octobercms/library/commit/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe to your installation manually if unable to upgrade to Build 474 or v1.1.10.\n\n### References\n\nCredits to:\n- David Miller\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n- Email us at [hello@octobercms.com](mailto:hello@octobercms.com)",
      "published_date": "2022-02-23",
      "chain_len": 1,
      "project": "https://github.com/octobercms/library",
      "commit_href": "https://github.com/octobercms/library/commit/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe",
      "commit_sha": "c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe",
      "patch": "SINGLE",
      "chain_ord": "['c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe']",
      "before_first_fix_commit": "{'8f06437ab772b48dd7ea7079c293f436438f867d'}",
      "last_fix_commit": "c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe",
      "chain_ord_pos": 1.0,
      "commit_datetime": "01/20/2022, 00:25:32",
      "message": "Backport fix from 2.0",
      "author": "Samuel Georges",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 1, 'total': 3}",
      "files": "{'src/Halcyon/Processors/SectionParser.php': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https://github.com/octobercms/library/raw/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe/src%2FHalcyon%2FProcessors%2FSectionParser.php', 'patch': \"@@ -72,7 +72,8 @@ public static function render($data, $options = [])\\n             }\\n         }\\n \\n-        $content[] = $markup;\\n+        $sections = preg_split('/^'.preg_quote(self::SECTION_SEPARATOR).'\\\\s*$/m', $markup, -1);\\n+        $content[] = end($sections);\\n \\n         $content = trim(implode(PHP_EOL.self::SECTION_SEPARATOR.PHP_EOL, $content));\"}}",
      "message_norm": "backport fix from 2.0",
      "language": "en",
      "entities": null,
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/Halcyon/Processors/SectionParser.php'])",
      "num_files": 1.0
    },
    {
      "index": 2733,
      "vuln_id": "GHSA-qc36-q22q-cjw3",
      "cwe_id": "{'CWE-147'}",
      "score": 9.8,
      "chain": "{'https://github.com/lettre/lettre/pull/627/commits/93458d01fed0ec81c0e7b4e98e6f35961356fae2', 'https://github.com/lettre/lettre/commit/8bfc20506cc5e098fe6eb3d1cafe3bea791215ce'}",
      "dataset": "osv",
      "summary": "SMTP command injection in lettre ### Impact\n\nAffected versions of lettre allowed SMTP command injection through an attacker's controlled message body. The module for escaping lines starting with a period wouldn't catch a period that was placed after a double CRLF sequence, allowing the attacker to end the current message and write arbitrary SMTP commands after it.\n\n### Fix\n\nThe flaw is fixed by correctly handling consecutive CRLF sequences.\n\n### References\n\n* [RUSTSEC-2021-0069](https://rustsec.org/advisories/RUSTSEC-2021-0069.html)",
      "published_date": "2021-07-12",
      "chain_len": 2,
      "project": "https://github.com/lettre/lettre",
      "commit_href": "https://github.com/lettre/lettre/pull/627/commits/93458d01fed0ec81c0e7b4e98e6f35961356fae2",
      "commit_sha": "93458d01fed0ec81c0e7b4e98e6f35961356fae2",
      "patch": "MULTI",
      "chain_ord": "['93458d01fed0ec81c0e7b4e98e6f35961356fae2', '8bfc20506cc5e098fe6eb3d1cafe3bea791215ce']",
      "before_first_fix_commit": "{'d930c42d5069e344a9dfa84ebe4b60bf3b11ac64'}",
      "last_fix_commit": "8bfc20506cc5e098fe6eb3d1cafe3bea791215ce",
      "chain_ord_pos": 1.0,
      "commit_datetime": "05/22/2021, 17:31:36",
      "message": "fix(transport-smtp): Fix transparency codec\n\nIt fails to add transparency when a period is preceded by two\nsuccessive CRLF.",
      "author": "Paolo Barbolini",
      "comments": null,
      "stats": "{'additions': 11, 'deletions': 2, 'total': 13}",
      "files": "{'src/transport/smtp/client/mod.rs': {'additions': 11, 'deletions': 2, 'changes': 13, 'status': 'modified', 'raw_url': 'https://github.com/lettre/lettre/raw/93458d01fed0ec81c0e7b4e98e6f35961356fae2/src%2Ftransport%2Fsmtp%2Fclient%2Fmod.rs', 'patch': '@@ -78,7 +78,15 @@ impl ClientCodec {\\n                     match self.escape_count {\\n                         0 => self.escape_count = if *byte == b\\'\\\\r\\' { 1 } else { 0 },\\n                         1 => self.escape_count = if *byte == b\\'\\\\n\\' { 2 } else { 0 },\\n-                        2 => self.escape_count = if *byte == b\\'.\\' { 3 } else { 0 },\\n+                        2 => {\\n+                            self.escape_count = if *byte == b\\'.\\' {\\n+                                3\\n+                            } else if *byte == b\\'\\\\r\\' {\\n+                                1\\n+                            } else {\\n+                                0\\n+                            }\\n+                        }\\n                         _ => unreachable!(),\\n                     }\\n                     if self.escape_count == 3 {\\n@@ -111,6 +119,7 @@ mod test {\\n         let mut buf: Vec<u8> = vec![];\\n \\n         codec.encode(b\"test\\\\r\\\\n\", &mut buf);\\n+        codec.encode(b\"test\\\\r\\\\n\\\\r\\\\n\", &mut buf);\\n         codec.encode(b\".\\\\r\\\\n\", &mut buf);\\n         codec.encode(b\"\\\\r\\\\ntest\", &mut buf);\\n         codec.encode(b\"te\\\\r\\\\n.\\\\r\\\\nst\", &mut buf);\\n@@ -121,7 +130,7 @@ mod test {\\n         codec.encode(b\"test\", &mut buf);\\n         assert_eq!(\\n             String::from_utf8(buf).unwrap(),\\n-            \"test\\\\r\\\\n..\\\\r\\\\n\\\\r\\\\ntestte\\\\r\\\\n..\\\\r\\\\nsttesttest.test\\\\n.test\\\\ntest\"\\n+            \"test\\\\r\\\\ntest\\\\r\\\\n\\\\r\\\\n..\\\\r\\\\n\\\\r\\\\ntestte\\\\r\\\\n..\\\\r\\\\nsttesttest.test\\\\n.test\\\\ntest\"\\n         );\\n     }'}}",
      "message_norm": "fix(transport-smtp): fix transparency codec\n\nit fails to add transparency when a period is preceded by two\nsuccessive crlf.",
      "language": "en",
      "entities": "[('fix(transport', 'ACTION', ''), ('fix', 'ACTION', ''), ('add', 'ACTION', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/transport/smtp/client/mod.rs'])",
      "num_files": 1.0
    },
    {
      "index": 1244,
      "vuln_id": "GHSA-8r7q-r9mx-35rh",
      "cwe_id": "{'CWE-134'}",
      "score": 9.8,
      "chain": "{'https://github.com/rusqlite/rusqlite/commit/2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0'}",
      "dataset": "osv",
      "summary": "Mishandling of format strings in rusqlite An issue was discovered in the rusqlite crate before 0.23.0 for Rust. Memory safety can be violated because rusqlite::trace::log mishandles format strings.",
      "published_date": "2021-08-25",
      "chain_len": 1,
      "project": "https://github.com/rusqlite/rusqlite",
      "commit_href": "https://github.com/rusqlite/rusqlite/commit/2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0",
      "commit_sha": "2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0",
      "patch": "SINGLE",
      "chain_ord": "['2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0']",
      "before_first_fix_commit": "{'abbab7216a8b47108a0e1b7a26e429d6a990d7a6'}",
      "last_fix_commit": "2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0",
      "chain_ord_pos": 1.0,
      "commit_datetime": "04/14/2020, 19:08:26",
      "message": "Fix format string error in rusqlite::trace::log",
      "author": "Thom Chiovoloni",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 1, 'total': 2}",
      "files": "{'src/trace.rs': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/rusqlite/rusqlite/raw/2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0/src%2Ftrace.rs', 'patch': '@@ -61,7 +61,7 @@ pub unsafe fn config_log(callback: Option<fn(c_int, &str)>) -> Result<()> {\\n pub fn log(err_code: c_int, msg: &str) {\\n     let msg = CString::new(msg).expect(\"SQLite log messages cannot contain embedded zeroes\");\\n     unsafe {\\n-        ffi::sqlite3_log(err_code, msg.as_ptr());\\n+        ffi::sqlite3_log(err_code, b\"%s\\\\0\" as *const _ as *const c_char, msg.as_ptr());\\n     }\\n }'}}",
      "message_norm": "fix format string error in rusqlite::trace::log",
      "language": "en",
      "entities": "[('error', 'FLAW', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/trace.rs'])",
      "num_files": 1.0
    },
    {
      "index": 3480,
      "vuln_id": "GHSA-xqj7-j8j5-f2xr",
      "cwe_id": "{'CWE-327'}",
      "score": 7.5,
      "chain": "{'https://github.com/bcgit/bc-java/commit/73780ac522b7795fc165630aba8d5f5729acc839', 'https://github.com/bcgit/bc-java/commit/22467b6e8fe19717ecdf201c0cf91bacf04a55ad'}",
      "dataset": "osv",
      "summary": "Bouncy Castle has a flaw in the Low-level interface to RSA key pair generator Bouncy Castle BC 1.54 - 1.59, BC-FJA 1.0.0, BC-FJA 1.0.1 and earlier have a flaw in the Low-level interface to RSA key pair generator, specifically RSA Key Pairs generated in low-level API with added certainty may have less M-R tests than expected. This appears to be fixed in versions BC 1.60 beta 4 and later, BC-FJA 1.0.2 and later.",
      "published_date": "2018-10-16",
      "chain_len": 2,
      "project": "https://github.com/bcgit/bc-java",
      "commit_href": "https://github.com/bcgit/bc-java/commit/22467b6e8fe19717ecdf201c0cf91bacf04a55ad",
      "commit_sha": "22467b6e8fe19717ecdf201c0cf91bacf04a55ad",
      "patch": "MULTI",
      "chain_ord": "['73780ac522b7795fc165630aba8d5f5729acc839', '22467b6e8fe19717ecdf201c0cf91bacf04a55ad']",
      "before_first_fix_commit": "{'73780ac522b7795fc165630aba8d5f5729acc839'}",
      "last_fix_commit": "22467b6e8fe19717ecdf201c0cf91bacf04a55ad",
      "chain_ord_pos": 2.0,
      "commit_datetime": "04/22/2018, 22:14:24",
      "message": "BJA-694 minor tweak to avoid method signature change",
      "author": "David Hook",
      "comments": null,
      "stats": "{'additions': 4, 'deletions': 4, 'total': 8}",
      "files": "{'core/src/main/java/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.java': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https://github.com/bcgit/bc-java/raw/22467b6e8fe19717ecdf201c0cf91bacf04a55ad/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fbouncycastle%2Fcrypto%2Fgenerators%2FRSAKeyPairGenerator.java', 'patch': '@@ -157,8 +157,6 @@ public AsymmetricCipherKeyPair generateKeyPair()\\n      */\\n     protected BigInteger chooseRandomPrime(int bitlength, BigInteger e, BigInteger sqrdBound)\\n     {\\n-        int iterations = getNumberOfIterations(bitlength, param.getCertainty());\\n-\\n         for (int i = 0; i != 5 * bitlength; i++)\\n         {\\n             BigInteger p = new BigInteger(bitlength, 1, param.getRandom());\\n@@ -173,7 +171,7 @@ protected BigInteger chooseRandomPrime(int bitlength, BigInteger e, BigInteger s\\n                 continue;\\n             }\\n \\n-            if (!isProbablePrime(p, iterations))\\n+            if (!isProbablePrime(p))\\n             {\\n                 continue;\\n             }\\n@@ -189,8 +187,10 @@ protected BigInteger chooseRandomPrime(int bitlength, BigInteger e, BigInteger s\\n         throw new IllegalStateException(\"unable to generate prime number for RSA key\");\\n     }\\n \\n-    protected boolean isProbablePrime(BigInteger x, int iterations)\\n+    protected boolean isProbablePrime(BigInteger x)\\n     {\\n+        int iterations = getNumberOfIterations(x.bitLength(), param.getCertainty());\\n+\\n         /*\\n          * Primes class for FIPS 186-4 C.3 primality checking\\n          */'}}",
      "message_norm": "bja-694 minor tweak to avoid method signature change",
      "language": "en",
      "entities": "[('tweak', 'FLAW', ''), ('signature', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['core/src/main/java/org/bouncycastle/crypto/generators/RSAKeyPairGenerator.java'])",
      "num_files": 1.0
    },
    {
      "index": 1370,
      "vuln_id": "GHSA-9g9w-hmvj-5h57",
      "cwe_id": "{'CWE-471'}",
      "score": 0.0,
      "chain": "{'https://github.com/jonschlinkert/merge-deep/commit/2c33634da7129a5aefcc262d2fec2e72224404e5'}",
      "dataset": "osv",
      "summary": "Prototype Pollution in merge-deep Versions of `merge-deep` before 3.0.1 are vulnerable to prototype pollution via merging functions.\n\n\n## Recommendation\n\nUpdate to version 3.0.1 or later.",
      "published_date": "2018-07-26",
      "chain_len": 1,
      "project": "https://github.com/jonschlinkert/merge-deep",
      "commit_href": "https://github.com/jonschlinkert/merge-deep/commit/2c33634da7129a5aefcc262d2fec2e72224404e5",
      "commit_sha": "2c33634da7129a5aefcc262d2fec2e72224404e5",
      "patch": "SINGLE",
      "chain_ord": "['2c33634da7129a5aefcc262d2fec2e72224404e5']",
      "before_first_fix_commit": "{'7be7e50163dc4ef467ace5371186a77028a66cc9'}",
      "last_fix_commit": "2c33634da7129a5aefcc262d2fec2e72224404e5",
      "chain_ord_pos": 1.0,
      "commit_datetime": "02/07/2018, 16:43:20",
      "message": "exclude __proto__",
      "author": "doowb",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 1, 'total': 2}",
      "files": "{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/jonschlinkert/merge-deep/raw/2c33634da7129a5aefcc262d2fec2e72224404e5/index.js', 'patch': \"@@ -30,7 +30,7 @@ module.exports = function mergeDeep(orig, objects) {\\n \\n function merge(target, obj) {\\n   for (var key in obj) {\\n-    if (!hasOwn(obj, key)) {\\n+    if (key === '__proto__' || !hasOwn(obj, key)) {\\n       continue;\\n     }\"}}",
      "message_norm": "exclude __proto__",
      "language": "pt",
      "entities": null,
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['index.js'])",
      "num_files": 1.0
    },
    {
      "index": 2122,
      "vuln_id": "GHSA-hrgx-p36p-89q4",
      "cwe_id": "{'CWE-89', 'CWE-95'}",
      "score": 9.8,
      "chain": "{'https://github.com/PrestaShop/PrestaShop/commit/b6d96e7c2a4e35a44e96ffbcdfd34439b56af804'}",
      "dataset": "osv",
      "summary": "PrestaShop eval injection possible if shop vulnerable to SQL injection ### Impact\nEval injection possible if the shop is vulnerable to an SQL injection.\n\n### Patches\nThe problem is fixed in version 1.7.8.7\n\n### Workarounds\nDelete the MySQL Smarty cache feature by removing these lines in the file `config/smarty.config.inc.php` lines 43-46 (PrestaShop 1.7) or 40-43 (PrestaShop 1.6):\n```php\nif (Configuration::get('PS_SMARTY_CACHING_TYPE') == 'mysql') {\n    include _PS_CLASS_DIR_.'Smarty/SmartyCacheResourceMysql.php';\n    $smarty->caching_type = 'mysql';\n}\n```",
      "published_date": "2022-07-29",
      "chain_len": 1,
      "project": "https://github.com/PrestaShop/PrestaShop",
      "commit_href": "https://github.com/PrestaShop/PrestaShop/commit/b6d96e7c2a4e35a44e96ffbcdfd34439b56af804",
      "commit_sha": "b6d96e7c2a4e35a44e96ffbcdfd34439b56af804",
      "patch": "SINGLE",
      "chain_ord": "['b6d96e7c2a4e35a44e96ffbcdfd34439b56af804']",
      "before_first_fix_commit": "{'dc8dc1faef7185ad30fc8dcb0653524d9bfb7c82', 'f342765697f5f980e4c6bb537f6575bf5e657077'}",
      "last_fix_commit": "b6d96e7c2a4e35a44e96ffbcdfd34439b56af804",
      "chain_ord_pos": 1.0,
      "commit_datetime": "07/25/2022, 08:51:31",
      "message": "Merge pull request from GHSA-hrgx-p36p-89q4\n\nCrypt/decrypt smarty cache in DB",
      "author": "atomiix",
      "comments": null,
      "stats": "{'additions': 10, 'deletions': 2, 'total': 12}",
      "files": "{'classes/Smarty/SmartyCacheResourceMysql.php': {'additions': 10, 'deletions': 2, 'changes': 12, 'status': 'modified', 'raw_url': 'https://github.com/PrestaShop/PrestaShop/raw/b6d96e7c2a4e35a44e96ffbcdfd34439b56af804/classes%2FSmarty%2FSmartyCacheResourceMysql.php', 'patch': '@@ -25,6 +25,14 @@\\n  */\\n class Smarty_CacheResource_Mysql extends Smarty_CacheResource_Custom\\n {\\n+    /** @var PhpEncryption */\\n+    private $phpEncryption;\\n+\\n+    public function __construct()\\n+    {\\n+        $this->phpEncryption = new PhpEncryption(_NEW_COOKIE_KEY_);\\n+    }\\n+\\n     /**\\n      * fetch cached content and its modification time from data source.\\n      *\\n@@ -39,7 +47,7 @@ protected function fetch($id, $name, $cache_id, $compile_id, &$content, &$mtime)\\n     {\\n         $row = Db::getInstance()->getRow(\\'SELECT modified, content FROM \\' . _DB_PREFIX_ . \\'smarty_cache WHERE id_smarty_cache = \"\\' . pSQL($id, true) . \\'\"\\');\\n         if ($row) {\\n-            $content = $row[\\'content\\'];\\n+            $content = $this->phpEncryption->decrypt($row[\\'content\\']);\\n             $mtime = strtotime($row[\\'modified\\']);\\n         } else {\\n             $content = null;\\n@@ -87,7 +95,7 @@ protected function save($id, $name, $cache_id, $compile_id, $exp_time, $content)\\n \\t\\t\\t\"\\' . pSQL($id, true) . \\'\",\\n \\t\\t\\t\"\\' . pSQL(sha1($name)) . \\'\",\\n \\t\\t\\t\"\\' . pSQL($cache_id, true) . \\'\",\\n-\\t\\t\\t\"\\' . pSQL($content, true) . \\'\"\\n+\\t\\t\\t\"\\' . $this->phpEncryption->encrypt($content) . \\'\"\\n \\t\\t)\\');\\n \\n         return (bool) Db::getInstance()->Affected_Rows();'}}",
      "message_norm": "merge pull request from ghsa-hrgx-p36p-89q4\n\ncrypt/decrypt smarty cache in db",
      "language": "en",
      "entities": "[('ghsa-hrgx-p36p-89q4', 'VULNID', 'GHSA'), ('crypt', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['classes/Smarty/SmartyCacheResourceMysql.php'])",
      "num_files": 1.0
    },
    {
      "index": 671,
      "vuln_id": "GHSA-5ppx-rgw2-xg23",
      "cwe_id": "{'CWE-79'}",
      "score": 4.8,
      "chain": "{'https://github.com/jenkinsci/jenkins/commit/f67068170b55633571e5462e52b6124b23d7cb84'}",
      "dataset": "osv",
      "summary": "Improper Neutralization of Input During Web Page Generation in Jenkins Jenkins 2.88 and earlier; 2.73.2 and earlier Autocompletion suggestions for text fields were not escaped, resulting in a persisted cross-site scripting vulnerability if the source for the suggestions allowed specifying text that includes HTML metacharacters like less-than and greater-than characters.",
      "published_date": "2022-05-14",
      "chain_len": 1,
      "project": "https://github.com/jenkinsci/jenkins",
      "commit_href": "https://github.com/jenkinsci/jenkins/commit/f67068170b55633571e5462e52b6124b23d7cb84",
      "commit_sha": "f67068170b55633571e5462e52b6124b23d7cb84",
      "patch": "SINGLE",
      "chain_ord": "['f67068170b55633571e5462e52b6124b23d7cb84']",
      "before_first_fix_commit": "{'566a8ddb885f0bef9bc848e60455c0aabbf0c1d3'}",
      "last_fix_commit": "f67068170b55633571e5462e52b6124b23d7cb84",
      "chain_ord_pos": 1.0,
      "commit_datetime": "10/24/2017, 16:01:03",
      "message": "[SECURITY-641] Escape autocompletion suggestions",
      "author": "Daniel Beck",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 0, 'total': 1}",
      "files": "{'war/src/main/webapp/scripts/hudson-behavior.js': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https://github.com/jenkinsci/jenkins/raw/f67068170b55633571e5462e52b6124b23d7cb84/war%2Fsrc%2Fmain%2Fwebapp%2Fscripts%2Fhudson-behavior.js', 'patch': '@@ -712,6 +712,7 @@ var jenkinsRules = {\\n         };\\n         ac.prehighlightClassName = \"yui-ac-prehighlight\";\\n         ac.animSpeed = 0;\\n+        ac.formatResult = ac.formatEscapedResult;\\n         ac.useShadow = true;\\n         ac.autoSnapContainer = true;\\n         ac.delimChar = e.getAttribute(\"autoCompleteDelimChar\");'}}",
      "message_norm": "[security-641] escape autocompletion suggestions",
      "language": "fr",
      "entities": "[('security-641', 'SECWORD', ''), ('escape', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['war/src/main/webapp/scripts/hudson-behavior.js'])",
      "num_files": 1.0
    },
    {
      "index": 1473,
      "vuln_id": "GHSA-c45w-2wxr-pp53",
      "cwe_id": "{'CWE-125'}",
      "score": 2.5,
      "chain": "{'https://github.com/tensorflow/tensorflow/commit/5899741d0421391ca878da47907b1452f06aaf1b'}",
      "dataset": "osv",
      "summary": "Heap OOB read in `tf.raw_ops.Dequantize` ### Impact\nDue to lack of validation in `tf.raw_ops.Dequantize`, an attacker can trigger a read from outside of bounds of heap allocated data:\n\n```python\nimport tensorflow as tf\n\ninput_tensor=tf.constant(\n  [75, 75, 75, 75, -6, -9, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\\\n  -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\\\n  -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\\\n  -10, -10, -10, -10], shape=[5, 10], dtype=tf.int32)\ninput_tensor=tf.cast(input_tensor, dtype=tf.quint8)\nmin_range = tf.constant([-10], shape=[1], dtype=tf.float32)\nmax_range = tf.constant([24, 758, 758, 758, 758], shape=[5], dtype=tf.float32)\n  \ntf.raw_ops.Dequantize( \n  input=input_tensor, min_range=min_range, max_range=max_range, mode='SCALED',\n  narrow_range=True, axis=0, dtype=tf.dtypes.float32)\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/26003593aa94b1742f34dc22ce88a1e17776a67d/tensorflow/core/kernels/dequantize_op.cc#L106-L131) accesses the `min_range` and `max_range` tensors in parallel but fails to check that they have the same shape:\n\n```cc\nif (num_slices == 1) {\n  const float min_range = input_min_tensor.flat<float>()(0);\n  const float max_range = input_max_tensor.flat<float>()(0);\n  DequantizeTensor(ctx, input, min_range, max_range, &float_output);\n} else {\n  ...\n  auto min_ranges = input_min_tensor.vec<float>();\n  auto max_ranges = input_max_tensor.vec<float>();\n  for (int i = 0; i < num_slices; ++i) {\n    DequantizeSlice(ctx->eigen_device<Device>(), ctx,\n                    input_tensor.template chip<1>(i), min_ranges(i),\n                    max_ranges(i), output_tensor.template chip<1>(i));\n    ...\n  }\n}\n```\n\n### Patches\nWe have patched the issue in GitHub commit [5899741d0421391ca878da47907b1452f06aaf1b](https://github.com/tensorflow/tensorflow/commit/5899741d0421391ca878da47907b1452f06aaf1b).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
      "published_date": "2021-05-21",
      "chain_len": 1,
      "project": "https://github.com/tensorflow/tensorflow",
      "commit_href": "https://github.com/tensorflow/tensorflow/commit/5899741d0421391ca878da47907b1452f06aaf1b",
      "commit_sha": "5899741d0421391ca878da47907b1452f06aaf1b",
      "patch": "SINGLE",
      "chain_ord": "['5899741d0421391ca878da47907b1452f06aaf1b']",
      "before_first_fix_commit": "{'26003593aa94b1742f34dc22ce88a1e17776a67d'}",
      "last_fix_commit": "5899741d0421391ca878da47907b1452f06aaf1b",
      "chain_ord_pos": 1.0,
      "commit_datetime": "05/06/2021, 22:31:05",
      "message": "Fix heap OOB read in dequantize op.\n\nAlso fixes SEGV in same op\n\nPiperOrigin-RevId: 372437896\nChange-Id: I135e94d360c2a1ce374c10f7e0fed1af603dbc02",
      "author": "Mihai Maruseac",
      "comments": null,
      "stats": "{'additions': 12, 'deletions': 0, 'total': 12}",
      "files": "{'tensorflow/core/kernels/dequantize_op.cc': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https://github.com/tensorflow/tensorflow/raw/5899741d0421391ca878da47907b1452f06aaf1b/tensorflow%2Fcore%2Fkernels%2Fdequantize_op.cc', 'patch': '@@ -98,6 +98,18 @@ class DequantizeOp : public OpKernel {\\n     if (axis_ > -1) {\\n       num_slices = input.dim_size(axis_);\\n     }\\n+    OP_REQUIRES(ctx, input_min_tensor.NumElements() == num_slices,\\n+                errors::InvalidArgument(\\n+                    \"input_min_tensor must have as many elements as input on \"\\n+                    \"the dequantization axis (\",\\n+                    axis_, \"), got \", input_min_tensor.NumElements(),\\n+                    \", expected \", num_slices));\\n+    OP_REQUIRES(ctx, input_max_tensor.NumElements() == num_slices,\\n+                errors::InvalidArgument(\\n+                    \"input_max_tensor must have as many elements as input on \"\\n+                    \"the dequantization axis (\",\\n+                    axis_, \"), got \", input_max_tensor.NumElements(),\\n+                    \", expected \", num_slices));\\n \\n     Tensor* output = nullptr;\\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(0, input.shape(), &output));'}}",
      "message_norm": "fix heap oob read in dequantize op.\n\nalso fixes segv in same op\n\npiperorigin-revid: 372437896\nchange-id: i135e94d360c2a1ce374c10f7e0fed1af603dbc02",
      "language": "en",
      "entities": "[('fix', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('372437896', 'SHA', 'generic_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['tensorflow/core/kernels/dequantize_op.cc'])",
      "num_files": 1.0
    },
    {
      "index": 188,
      "vuln_id": "GHSA-338v-3958-8v8r",
      "cwe_id": "{'CWE-362'}",
      "score": 0.0,
      "chain": "{'https://github.com/weld/core/commit/6808b11cd6d97c71a2eed754ed4f955acd789086', 'https://github.com/weld/core/commit/29fd1107fd30579ad9bb23fae4dc3ba464205745', 'https://github.com/weld/core/commit/8e413202fa1af08c09c580f444e4fd16874f9c65'}",
      "dataset": "osv",
      "summary": "Information disclosure in JBoss Weld Race condition in JBoss Weld before 2.2.8 and 3.x before 3.0.0 Alpha3 allows remote attackers to obtain information from a previous conversation via vectors related to a stale thread state.",
      "published_date": "2020-06-10",
      "chain_len": 3,
      "project": "https://github.com/weld/core",
      "commit_href": "https://github.com/weld/core/commit/6808b11cd6d97c71a2eed754ed4f955acd789086",
      "commit_sha": "6808b11cd6d97c71a2eed754ed4f955acd789086",
      "patch": "MULTI",
      "chain_ord": "['29fd1107fd30579ad9bb23fae4dc3ba464205745', '6808b11cd6d97c71a2eed754ed4f955acd789086', '8e413202fa1af08c09c580f444e4fd16874f9c65']",
      "before_first_fix_commit": "{'6808b11cd6d97c71a2eed754ed4f955acd789086'}",
      "last_fix_commit": "8e413202fa1af08c09c580f444e4fd16874f9c65",
      "chain_ord_pos": 2.0,
      "commit_datetime": "12/01/2014, 16:48:56",
      "message": "WELD-1802 RequestScopedCache - Make sure each request is ended before a new one is started",
      "author": "Jozef Hartinger",
      "comments": null,
      "stats": "{'additions': 3, 'deletions': 1, 'total': 4}",
      "files": "{'impl/src/main/java/org/jboss/weld/context/cache/RequestScopedCache.java': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https://github.com/weld/core/raw/6808b11cd6d97c71a2eed754ed4f955acd789086/impl%2Fsrc%2Fmain%2Fjava%2Forg%2Fjboss%2Fweld%2Fcontext%2Fcache%2FRequestScopedCache.java', 'patch': '@@ -71,6 +71,8 @@ public void invalidate() {\\n     }\\n \\n     public static void beginRequest() {\\n+        // if the previous request was not ended properly for some reason, make sure it is ended now\\n+        endRequest();\\n         CACHE.set(new LinkedList<RequestScopedItem>());\\n     }\\n \\n@@ -80,8 +82,8 @@ public static void beginRequest() {\\n      */\\n     public static void endRequest() {\\n         final List<RequestScopedItem> result = CACHE.get();\\n-        CACHE.remove();\\n         if (result != null) {\\n+            CACHE.remove();\\n             for (final RequestScopedItem item : result) {\\n                 item.invalidate();\\n             }'}}",
      "message_norm": "weld-1802 requestscopedcache - make sure each request is ended before a new one is started",
      "language": "en",
      "entities": null,
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['impl/src/main/java/org/jboss/weld/context/cache/RequestScopedCache.java'])",
      "num_files": 1.0
    },
    {
      "index": 590,
      "vuln_id": "GHSA-58jx-f5rf-qgqf",
      "cwe_id": "{'CWE-22', 'CWE-502'}",
      "score": 8.8,
      "chain": "{'https://github.com/apache/hadoop/commit/ba041fe6d34215f075e0a7b2078d7273147e14b7', 'https://github.com/apache/hadoop/commit/227d64ab59e8aa6477769b2542ad0cd7a6d855cb', 'https://github.com/apache/hadoop/commit/45801fba8b00257ab32c02a7d1a05948ba687a49'}",
      "dataset": "osv",
      "summary": "User account escalation in Apache Hadoop In Apache Hadoop 2.2.0 to 2.10.1, 3.0.0-alpha1 to 3.1.4, 3.2.0 to 3.2.2, and 3.3.0 to 3.3.1, a user who can escalate to yarn user can possibly run arbitrary commands as root user. Users should upgrade to Apache Hadoop 2.10.2, 3.2.3, 3.3.2 or higher.",
      "published_date": "2022-06-16",
      "chain_len": 3,
      "project": "https://github.com/apache/hadoop",
      "commit_href": "https://github.com/apache/hadoop/commit/227d64ab59e8aa6477769b2542ad0cd7a6d855cb",
      "commit_sha": "227d64ab59e8aa6477769b2542ad0cd7a6d855cb",
      "patch": "MULTI",
      "chain_ord": "['ba041fe6d34215f075e0a7b2078d7273147e14b7', '45801fba8b00257ab32c02a7d1a05948ba687a49', '227d64ab59e8aa6477769b2542ad0cd7a6d855cb']",
      "before_first_fix_commit": "{'ba041fe6d34215f075e0a7b2078d7273147e14b7'}",
      "last_fix_commit": "227d64ab59e8aa6477769b2542ad0cd7a6d855cb",
      "chain_ord_pos": 3.0,
      "commit_datetime": "05/24/2022, 05:07:19",
      "message": "YARN-11162. Set the zk acl for nodes created by ZKConfigurationStore. (#4350)\n\n(cherry picked from commit f390edaec44cfa91b2b09549091f033f1749d8ac)\n\nConflicts:\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/ZKConfigurationStore.java\n\n(cherry picked from commit 88a8752fa2ba0c70b0df94a78eb9fd86b965acd5)",
      "author": "Owen O'Malley",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 2, 'total': 4}",
      "files": "{'hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/ZKConfigurationStore.java': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https://github.com/apache/hadoop/raw/227d64ab59e8aa6477769b2542ad0cd7a6d855cb/hadoop-yarn-project%2Fhadoop-yarn%2Fhadoop-yarn-server%2Fhadoop-yarn-server-resourcemanager%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fhadoop%2Fyarn%2Fserver%2Fresourcemanager%2Fscheduler%2Fcapacity%2Fconf%2FZKConfigurationStore.java', 'patch': '@@ -97,13 +97,13 @@ public void initialize(Configuration config, Configuration schedConf,\\n     zkManager.delete(fencingNodePath);\\n \\n     if (!zkManager.exists(logsPath)) {\\n-      zkManager.create(logsPath);\\n+      zkManager.create(logsPath, zkAcl);\\n       zkManager.setData(logsPath,\\n           serializeObject(new LinkedList<LogMutation>()), -1);\\n     }\\n \\n     if (!zkManager.exists(confStorePath)) {\\n-      zkManager.create(confStorePath);\\n+      zkManager.create(confStorePath, zkAcl);\\n       HashMap<String, String> mapSchedConf = new HashMap<>();\\n       for (Map.Entry<String, String> entry : schedConf) {\\n         mapSchedConf.put(entry.getKey(), entry.getValue());'}}",
      "message_norm": "yarn-11162. set the zk acl for nodes created by zkconfigurationstore. (#4350)\n\n(cherry picked from commit f390edaec44cfa91b2b09549091f033f1749d8ac)\n\nconflicts:\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/zkconfigurationstore.java\n\n(cherry picked from commit 88a8752fa2ba0c70b0df94a78eb9fd86b965acd5)",
      "language": "en",
      "entities": "[('#4350', 'ISSUE', ''), ('commit f390edaec44cfa91b2b09549091f033f1749d8ac', 'SHA', 'prefix_sha'), ('server', 'SECWORD', ''), ('server', 'SECWORD', ''), ('server', 'SECWORD', ''), ('commit 88a8752fa2ba0c70b0df94a78eb9fd86b965acd5', 'SHA', 'prefix_colon_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/conf/ZKConfigurationStore.java'])",
      "num_files": 1.0
    },
    {
      "index": 2306,
      "vuln_id": "GHSA-jvfv-hrrc-6q72",
      "cwe_id": "{'CWE-611'}",
      "score": 9.8,
      "chain": "{'https://github.com/liquibase/liquibase/commit/33d9d925082097fb1a3d2fc8e44423d964cd9381'}",
      "dataset": "osv",
      "summary": "Improper Restriction of XML External Entity Reference in Liquibase The XMLChangeLogSAXParser() function in Liquibase prior to version 4.8.0 contains an issue that may lead to to Improper Restriction of XML External Entity Reference.",
      "published_date": "2022-03-05",
      "chain_len": 1,
      "project": "https://github.com/liquibase/liquibase",
      "commit_href": "https://github.com/liquibase/liquibase/commit/33d9d925082097fb1a3d2fc8e44423d964cd9381",
      "commit_sha": "33d9d925082097fb1a3d2fc8e44423d964cd9381",
      "patch": "SINGLE",
      "chain_ord": "['33d9d925082097fb1a3d2fc8e44423d964cd9381']",
      "before_first_fix_commit": "{'8d90124793d0053520365b7686688a1af7cc5102'}",
      "last_fix_commit": "33d9d925082097fb1a3d2fc8e44423d964cd9381",
      "chain_ord_pos": 1.0,
      "commit_datetime": "02/04/2022, 17:43:43",
      "message": "Added liquibase.secureParsing test",
      "author": "Nathan Voxland",
      "comments": null,
      "stats": "{'additions': 3, 'deletions': 3, 'total': 6}",
      "files": "{'liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https://github.com/liquibase/liquibase/raw/33d9d925082097fb1a3d2fc8e44423d964cd9381/liquibase-core%2Fsrc%2Ftest%2Fgroovy%2Fliquibase%2Fparser%2Fcore%2Fxml%2FXMLChangeLogSAXParserTest.groovy', 'patch': '@@ -23,7 +23,7 @@ class XMLChangeLogSAXParserTest extends Specification {\\n \\n     def INSECURE_XML = \"\"\"\\n <!DOCTYPE databaseChangeLog [\\n-        <!ENTITY insecure SYSTEM \"https://localhost/insecure\">\\n+        <!ENTITY insecure SYSTEM \"file://invalid.txt\">\\n         ]>\\n \\n <databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\"\\n@@ -83,7 +83,7 @@ class XMLChangeLogSAXParserTest extends Specification {\\n \\n         then:\\n         def e = thrown(ChangeLogParseException)\\n-        e.message.contains(\"Failed to read external document \\'insecure\\'\")\\n+        e.message.contains(\"access is not allowed due to restriction set by the accessExternalDTD property\")\\n     }\\n \\n     def \"allows liquibase.secureParsing=false to disable secure parsing\"() {\\n@@ -97,7 +97,7 @@ class XMLChangeLogSAXParserTest extends Specification {\\n \\n         then:\\n         def e = thrown(ChangeLogParseException)\\n-        e.message.contains(\"Connection refused\")\\n+        e.message.contains(\"Error Reading Changelog File: invalid.txt\")\\n     }\\n \\n }'}}",
      "message_norm": "added liquibase.secureparsing test",
      "language": "en",
      "entities": "[('added', 'ACTION', ''), ('liquibase.secureparsing', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['liquibase-core/src/test/groovy/liquibase/parser/core/xml/XMLChangeLogSAXParserTest.groovy'])",
      "num_files": 1.0
    },
    {
      "index": 1482,
      "vuln_id": "GHSA-c53x-wwx2-pg96",
      "cwe_id": "{'CWE-79'}",
      "score": 6.5,
      "chain": "{'https://github.com/bersLucas/liljs/commit/779c0dcd8aba434a1c94db7d1d2d990a629f9a6c'}",
      "dataset": "osv",
      "summary": "Cross-Site Scripting in @berslucas/liljs Versions of  `@berslucas/liljs` prior to 1.0.2 are vulnerable to Cross-Site Scripting (XSS). The package uses the unsafe `innerHTML` function without sanitizing input, which may allow attackers to execute arbitrary JavaScript on the victim's browser.\n\n\n## Recommendation\n\nUpgrade to version 1.0.2 or later.",
      "published_date": "2020-09-03",
      "chain_len": 1,
      "project": "https://github.com/bersLucas/liljs",
      "commit_href": "https://github.com/bersLucas/liljs/commit/779c0dcd8aba434a1c94db7d1d2d990a629f9a6c",
      "commit_sha": "779c0dcd8aba434a1c94db7d1d2d990a629f9a6c",
      "patch": "SINGLE",
      "chain_ord": "['779c0dcd8aba434a1c94db7d1d2d990a629f9a6c']",
      "before_first_fix_commit": "{'bc0919e0031e6e6aa99be9793a6a9afa8ad2e5b1'}",
      "last_fix_commit": "779c0dcd8aba434a1c94db7d1d2d990a629f9a6c",
      "chain_ord_pos": 1.0,
      "commit_datetime": "02/10/2019, 03:29:54",
      "message": "Use textContent over innerHTML so you can bind untrusted text values\nwithout the possibility of an XSS attack.",
      "author": "Cody Mikol",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 2, 'total': 4}",
      "files": "{'src/liljs.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https://github.com/bersLucas/liljs/raw/779c0dcd8aba434a1c94db7d1d2d990a629f9a6c/src%2Fliljs.js', 'patch': '@@ -21,7 +21,7 @@ const liljs = (elem, data = {}) => {\\n      * @param {String} property Name of the property to render\\n      * @param {String} value (Optional) A value to use instead of a property (used in lil-list-text)\\n      */\\n-    const setText = (elem, property, value) => elem.innerHTML = value || state[property].value;\\n+    const setText = (elem, property, value) => elem.textContent = value || state[property].value;\\n \\n     /** Set style helper function\\n      * @function setStyle\\n@@ -43,7 +43,7 @@ const liljs = (elem, data = {}) => {\\n      */\\n     const setList = (elem, property) => {\\n       //TODO: Find a way to update without clearing lists\\n-      elem.innerHTML = \"\";\\n+      elem.textContent = \"\";\\n       state[property].value.forEach(value => {\\n         let clone = document.importNode(state[property].template.content, true);\\n         clone.querySelectorAll(\"[lil-list-text]\").forEach(node => {'}}",
      "message_norm": "use textcontent over innerhtml so you can bind untrusted text values\nwithout the possibility of an xss attack.",
      "language": "en",
      "entities": "[('untrusted', 'SECWORD', ''), ('xss', 'SECWORD', ''), ('attack', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/liljs.js'])",
      "num_files": 1.0
    },
    {
      "index": 3415,
      "vuln_id": "GHSA-xcwj-wfcm-m23c",
      "cwe_id": "{'CWE-476'}",
      "score": 2.5,
      "chain": "{'https://github.com/tensorflow/tensorflow/commit/e6a7c7cc18c3aaad1ae0872cb0a959f5c923d2bd'}",
      "dataset": "osv",
      "summary": "Invalid validation in `SparseMatrixSparseCholesky` ### Impact\nAn attacker can trigger a null pointer dereference by providing an invalid `permutation` to `tf.raw_ops.SparseMatrixSparseCholesky`:\n\n```python\nimport tensorflow as tf\nimport numpy as np\nfrom tensorflow.python.ops.linalg.sparse import sparse_csr_matrix_ops\n\nindices_array = np.array([[0, 0]])\nvalue_array = np.array([-10.0], dtype=np.float32)\ndense_shape = [1, 1]\nst = tf.SparseTensor(indices_array, value_array, dense_shape)\n\ninput = sparse_csr_matrix_ops.sparse_tensor_to_csr_sparse_matrix(\n       st.indices, st.values, st.dense_shape)\n\npermutation = tf.constant([], shape=[1, 0], dtype=tf.int32)\n \ntf.raw_ops.SparseMatrixSparseCholesky(input=input, permutation=permutation, type=tf.float32)\n```\n\nThis is because the [implementation](https://github.com/tensorflow/tensorflow/blob/080f1d9e257589f78b3ffb75debf584168aa6062/tensorflow/core/kernels/sparse/sparse_cholesky_op.cc#L85-L86) fails to properly validate the input arguments: \n                          \n```cc \nvoid Compute(OpKernelContext* ctx) final {\n  ...\n  const Tensor& input_permutation_indices = ctx->input(1);\n  ...\n  ValidateInputs(ctx, *input_matrix, input_permutation_indices, &batch_size, &num_rows);\n  ...\n}\n\nvoid ValidateInputs(OpKernelContext* ctx,\n    const CSRSparseMatrix& sparse_matrix,\n    const Tensor& permutation_indices, int* batch_size,\n    int64* num_rows) {\n  OP_REQUIRES(ctx, sparse_matrix.dtype() == DataTypeToEnum<T>::value, ...)\n  ...\n}\n```\nAlthough `ValidateInputs` is called and there are checks in the body of this function, the code proceeds to the next line in `ValidateInputs` since [`OP_REQUIRES`](https://github.com/tensorflow/tensorflow/blob/080f1d9e257589f78b3ffb75debf584168aa6062/tensorflow/core/framework/op_requires.h#L41-L48) is a macro that only exits the current function.\n\n```cc\n#define OP_REQUIRES(CTX, EXP, STATUS)                     \\\n  do {                                                    \\\n    if (!TF_PREDICT_TRUE(EXP)) {                          \\\n      CheckNotInComputeAsync((CTX), \"OP_REQUIRES_ASYNC\"); \\\n      (CTX)->CtxFailure(__FILE__, __LINE__, (STATUS));    \\\n      return;                                             \\\n    }                                                     \\\n  } while (0)\n```\n\nThus, the first validation condition that fails in `ValidateInputs` will cause an early return from that function. However, the caller will continue execution from the next line. The fix is to either explicitly check `context->status()` or to convert `ValidateInputs` to return a `Status`.\n\n### Patches\nWe have patched the issue in GitHub commit [e6a7c7cc18c3aaad1ae0872cb0a959f5c923d2bd](https://github.com/tensorflow/tensorflow/commit/e6a7c7cc18c3aaad1ae0872cb0a959f5c923d2bd).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
      "published_date": "2021-05-21",
      "chain_len": 1,
      "project": "https://github.com/tensorflow/tensorflow",
      "commit_href": "https://github.com/tensorflow/tensorflow/commit/e6a7c7cc18c3aaad1ae0872cb0a959f5c923d2bd",
      "commit_sha": "e6a7c7cc18c3aaad1ae0872cb0a959f5c923d2bd",
      "patch": "SINGLE",
      "chain_ord": "['e6a7c7cc18c3aaad1ae0872cb0a959f5c923d2bd']",
      "before_first_fix_commit": "{'080f1d9e257589f78b3ffb75debf584168aa6062'}",
      "last_fix_commit": "e6a7c7cc18c3aaad1ae0872cb0a959f5c923d2bd",
      "chain_ord_pos": 1.0,
      "commit_datetime": "04/20/2021, 21:45:33",
      "message": "Remove `OP_REQUIRES` call from helper function.\n\nSince `OP_REQUIRES` macro expands to a `return;` (among other), calling it in a helper function only ends the helper function's execution earlier, but the kernel will still run from start to end. Thus, all the expected validations are actually broken/useless as the code ploughs through the next crash anyway.\n\nPiperOrigin-RevId: 369524386\nChange-Id: I54f6cf9328445675ccc392e661b04336b229c9da",
      "author": "Mihai Maruseac",
      "comments": null,
      "stats": "{'additions': 34, 'deletions': 33, 'total': 67}",
      "files": "{'tensorflow/core/kernels/sparse/sparse_cholesky_op.cc': {'additions': 34, 'deletions': 33, 'changes': 67, 'status': 'modified', 'raw_url': 'https://github.com/tensorflow/tensorflow/raw/e6a7c7cc18c3aaad1ae0872cb0a959f5c923d2bd/tensorflow%2Fcore%2Fkernels%2Fsparse%2Fsparse_cholesky_op.cc', 'patch': '@@ -17,6 +17,8 @@ limitations under the License.\\n #include <numeric>\\n #include <vector>\\n \\n+#include \"tensorflow/core/framework/op_requires.h\"\\n+\\n #define EIGEN_USE_THREADS\\n \\n #include \"third_party/eigen3/Eigen/Core\"\\n@@ -82,8 +84,8 @@ class CSRSparseCholeskyCPUOp : public OpKernel {\\n \\n     int64 num_rows;\\n     int batch_size;\\n-    ValidateInputs(ctx, *input_matrix, input_permutation_indices, &batch_size,\\n-                   &num_rows);\\n+    OP_REQUIRES_OK(ctx, ValidateInputs(*input_matrix, input_permutation_indices,\\n+                                       &batch_size, &num_rows));\\n \\n     // Allocate batch pointers.\\n     Tensor batch_ptr(cpu_allocator(), DT_INT32, TensorShape({batch_size + 1}));\\n@@ -226,49 +228,48 @@ class CSRSparseCholeskyCPUOp : public OpKernel {\\n   }\\n \\n  private:\\n-  void ValidateInputs(OpKernelContext* ctx,\\n-                      const CSRSparseMatrix& sparse_matrix,\\n-                      const Tensor& permutation_indices, int* batch_size,\\n-                      int64* num_rows) {\\n-    OP_REQUIRES(ctx, sparse_matrix.dtype() == DataTypeToEnum<T>::value,\\n-                errors::InvalidArgument(\\n-                    \"Asked for a CSRSparseMatrix of type \",\\n-                    DataTypeString(DataTypeToEnum<T>::value),\\n-                    \" but saw dtype: \", DataTypeString(sparse_matrix.dtype())));\\n+  Status ValidateInputs(const CSRSparseMatrix& sparse_matrix,\\n+                        const Tensor& permutation_indices, int* batch_size,\\n+                        int64* num_rows) {\\n+    if (sparse_matrix.dtype() != DataTypeToEnum<T>::value)\\n+      return errors::InvalidArgument(\\n+          \"Asked for a CSRSparseMatrix of type \",\\n+          DataTypeString(DataTypeToEnum<T>::value),\\n+          \" but saw dtype: \", DataTypeString(sparse_matrix.dtype()));\\n \\n     const Tensor& dense_shape = sparse_matrix.dense_shape();\\n     const int rank = dense_shape.dim_size(0);\\n-    OP_REQUIRES(ctx, rank == 2 || rank == 3,\\n-                errors::InvalidArgument(\"sparse matrix must have rank 2 or 3; \",\\n-                                        \"but dense_shape has size \", rank));\\n+    if (rank < 2 || rank > 3)\\n+      return errors::InvalidArgument(\"sparse matrix must have rank 2 or 3; \",\\n+                                     \"but dense_shape has size \", rank);\\n     const int row_dim = (rank == 2) ? 0 : 1;\\n     auto dense_shape_vec = dense_shape.vec<int64>();\\n     *num_rows = dense_shape_vec(row_dim);\\n     const int64 num_cols = dense_shape_vec(row_dim + 1);\\n-    OP_REQUIRES(ctx, *num_rows == num_cols,\\n-                errors::InvalidArgument(\"sparse matrix must be square; got: \",\\n-                                        *num_rows, \" != \", num_cols));\\n+    if (*num_rows != num_cols)\\n+      return errors::InvalidArgument(\\n+          \"sparse matrix must be square; got: \", *num_rows, \" != \", num_cols);\\n     const TensorShape& perm_shape = permutation_indices.shape();\\n-    OP_REQUIRES(\\n-        ctx, perm_shape.dims() + 1 == rank,\\n-        errors::InvalidArgument(\\n-            \"sparse matrix must have the same rank as permutation; got: \", rank,\\n-            \" != \", perm_shape.dims(), \" + 1.\"));\\n-    OP_REQUIRES(\\n-        ctx, perm_shape.dim_size(rank - 2) == *num_rows,\\n-        errors::InvalidArgument(\\n-            \"permutation must have the same number of elements in each batch \"\\n-            \"as the number of rows in sparse matrix; got: \",\\n-            perm_shape.dim_size(rank - 2), \" != \", *num_rows));\\n+    if (perm_shape.dims() + 1 != rank)\\n+      return errors::InvalidArgument(\\n+          \"sparse matrix must have the same rank as permutation; got: \", rank,\\n+          \" != \", perm_shape.dims(), \" + 1.\");\\n+    if (perm_shape.dim_size(rank - 2) != *num_rows)\\n+      return errors::InvalidArgument(\\n+          \"permutation must have the same number of elements in each batch \"\\n+          \"as the number of rows in sparse matrix; got: \",\\n+          perm_shape.dim_size(rank - 2), \" != \", *num_rows);\\n \\n     *batch_size = sparse_matrix.batch_size();\\n     if (*batch_size > 1) {\\n-      OP_REQUIRES(\\n-          ctx, perm_shape.dim_size(0) == *batch_size,\\n-          errors::InvalidArgument(\"permutation must have the same batch size \"\\n-                                  \"as sparse matrix; got: \",\\n-                                  perm_shape.dim_size(0), \" != \", *batch_size));\\n+      if (perm_shape.dim_size(0) != *batch_size)\\n+        return errors::InvalidArgument(\\n+            \"permutation must have the same batch size \"\\n+            \"as sparse matrix; got: \",\\n+            perm_shape.dim_size(0), \" != \", *batch_size);\\n     }\\n+\\n+    return Status::OK();\\n   }\\n };'}}",
      "message_norm": "remove `op_requires` call from helper function.\n\nsince `op_requires` macro expands to a `return;` (among other), calling it in a helper function only ends the helper function's execution earlier, but the kernel will still run from start to end. thus, all the expected validations are actually broken/useless as the code ploughs through the next crash anyway.\n\npiperorigin-revid: 369524386\nchange-id: i54f6cf9328445675ccc392e661b04336b229c9da",
      "language": "en",
      "entities": "[('remove', 'ACTION', ''), ('369524386', 'SHA', 'generic_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['tensorflow/core/kernels/sparse/sparse_cholesky_op.cc'])",
      "num_files": 1.0
    },
    {
      "index": 358,
      "vuln_id": "GHSA-44qp-9wwf-734r",
      "cwe_id": "{'CWE-787', 'CWE-120'}",
      "score": 7.6,
      "chain": "{'https://github.com/tensorflow/tensorflow/commit/2b7100d6cdff36aa21010a82269bc05a6d1cc74a', 'https://github.com/tensorflow/tensorflow/commit/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3'}",
      "dataset": "osv",
      "summary": "Heap overflow in Tensorflow ### Impact \nThe [implementation of `SparseCountSparseOutput`](https://github.com/tensorflow/tensorflow/blob/5100e359aef5c8021f2e71c7b986420b85ce7b3d/tensorflow/core/kernels/count_ops.cc#L168-L273) is vulnerable to a heap overflow:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.raw_ops.SparseCountSparseOutput(\n  indices=[[-1,-1]],\n  values=[2],\n  dense_shape=[1, 1],\n  weights=[1],\n  binary_output=True,\n  minlength=-1,\n  maxlength=-1,\n  name=None)\n```\n\n### Patches\nWe have patched the issue in GitHub commits [2b7100d6cdff36aa21010a82269bc05a6d1cc74a](https://github.com/tensorflow/tensorflow/commit/2b7100d6cdff36aa21010a82269bc05a6d1cc74a) and [adbbabdb0d3abb3cdeac69e38a96de1d678b24b3](https://github.com/tensorflow/tensorflow/commit/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Faysal Hossain Shezan from University of Virginia.",
      "published_date": "2022-02-09",
      "chain_len": 2,
      "project": "https://github.com/tensorflow/tensorflow",
      "commit_href": "https://github.com/tensorflow/tensorflow/commit/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3",
      "commit_sha": "adbbabdb0d3abb3cdeac69e38a96de1d678b24b3",
      "patch": "MULTI",
      "chain_ord": "['2b7100d6cdff36aa21010a82269bc05a6d1cc74a', 'adbbabdb0d3abb3cdeac69e38a96de1d678b24b3']",
      "before_first_fix_commit": "{'2b7100d6cdff36aa21010a82269bc05a6d1cc74a'}",
      "last_fix_commit": "adbbabdb0d3abb3cdeac69e38a96de1d678b24b3",
      "chain_ord_pos": 2.0,
      "commit_datetime": "12/08/2021, 03:44:33",
      "message": "Further validate sparse tensor for `SparseCount`: indices must be valid within dense shape.\n\nPiperOrigin-RevId: 414888122\nChange-Id: I4552bd74c135ecd4bcb5448acc0a3ce9402d8286",
      "author": "Mihai Maruseac",
      "comments": null,
      "stats": "{'additions': 17, 'deletions': 3, 'total': 20}",
      "files": "{'tensorflow/core/kernels/count_ops.cc': {'additions': 17, 'deletions': 3, 'changes': 20, 'status': 'modified', 'raw_url': 'https://github.com/tensorflow/tensorflow/raw/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3/tensorflow%2Fcore%2Fkernels%2Fcount_ops.cc', 'patch': '@@ -206,6 +206,23 @@ class SparseCount : public OpKernel {\\n     OP_REQUIRES(context, shape.NumElements() > 0,\\n                 errors::InvalidArgument(\\n                     \"The shape argument requires at least one element.\"));\\n+    // Validate indices: each index must be valid for the corresponding\\n+    // dimension. This could be possibly done better.\\n+    const auto indices_values = indices.matrix<int64_t>();\\n+    const auto shape_vector = shape.vec<int64_t>();\\n+    int num_values = values.NumElements();  // same as first dim of indices\\n+    int rank = indices.shape().dim_size(1);\\n+    for (int i = 0; i < num_values; ++i) {\\n+      for (int j = 0; j < rank; ++j) {\\n+        OP_REQUIRES(\\n+            context,\\n+            indices_values(i, j) >= 0 && indices_values(i, j) < shape_vector(j),\\n+            errors::InvalidArgument(\\n+                \"Invalid index value at \", i, \": dimension \", j, \" has value \",\\n+                indices_values(i, j), \" which is not in [0, \", shape_vector(j),\\n+                \") (as given by dense shape \", shape.DebugString()));\\n+      }\\n+    }\\n \\n     if (use_weights) {\\n       OP_REQUIRES(\\n@@ -217,11 +234,8 @@ class SparseCount : public OpKernel {\\n     }\\n \\n     bool is_1d = shape.NumElements() == 1;\\n-    auto shape_vector = shape.flat<int64_t>();\\n     int num_batches = is_1d ? 1 : shape_vector(0);\\n-    int num_values = values.NumElements();\\n \\n-    const auto indices_values = indices.matrix<int64_t>();\\n     const auto values_values = values.flat<T>();\\n     const auto weight_values = weights.flat<W>();'}}",
      "message_norm": "further validate sparse tensor for `sparsecount`: indices must be valid within dense shape.\n\npiperorigin-revid: 414888122\nchange-id: i4552bd74c135ecd4bcb5448acc0a3ce9402d8286",
      "language": "en",
      "entities": "[('validate', 'ACTION', ''), ('414888122', 'SHA', 'generic_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['tensorflow/core/kernels/count_ops.cc'])",
      "num_files": 1.0
    },
    {
      "index": 264,
      "vuln_id": "GHSA-3j78-7m59-r7gv",
      "cwe_id": "{'CWE-284'}",
      "score": 8.0,
      "chain": "{'https://github.com/buddypress/BuddyPress/commit/39294680369a0c992290577a9d740f4a2f2c2ca3'}",
      "dataset": "osv",
      "summary": "Private data exposure via REST API in BuddyPress In BuddyPress before 5.1.2, requests to a certain REST API endpoint can result in private user data getting exposed. Authentication is not needed.\n\nThis has been patched in version 5.1.2.",
      "published_date": "2020-02-24",
      "chain_len": 1,
      "project": "https://github.com/buddypress/BuddyPress",
      "commit_href": "https://github.com/buddypress/BuddyPress/commit/39294680369a0c992290577a9d740f4a2f2c2ca3",
      "commit_sha": "39294680369a0c992290577a9d740f4a2f2c2ca3",
      "patch": "SINGLE",
      "chain_ord": "['39294680369a0c992290577a9d740f4a2f2c2ca3']",
      "before_first_fix_commit": "{'98da00c5892ccc7aca5702ffd43d651cb78c0c7c'}",
      "last_fix_commit": "39294680369a0c992290577a9d740f4a2f2c2ca3",
      "chain_ord_pos": 1.0,
      "commit_datetime": "01/31/2020, 16:32:54",
      "message": "Admin: Sanitize external links to activated BP component pages.\n\nProps imath.\nSee #8235.\n\ngit-svn-id: https://buddypress.svn.wordpress.org/trunk@12549 cdf35c40-ae34-48e0-9cc9-0c9da1808c22",
      "author": "Mercime",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 1, 'total': 2}",
      "files": "{'src/bp-core/admin/bp-core-admin-slugs.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/buddypress/buddypress/raw/39294680369a0c992290577a9d740f4a2f2c2ca3/src%2Fbp-core%2Fadmin%2Fbp-core-admin-slugs.php', 'patch': '@@ -145,7 +145,7 @@ function bp_core_admin_slugs_options() {\\n \\n \\t\\t\\t\\t\\t\\t\\t<?php if ( !empty( $existing_pages[$name] ) ) : ?>\\n \\n-\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"<?php echo get_permalink( $existing_pages[$name] ); ?>\" class=\"button-secondary\" target=\"_bp\"><?php _e( \\'View\\', \\'buddypress\\' ); ?></a>\\n+\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"<?php echo esc_url( get_permalink( $existing_pages[$name] ) ); ?>\" class=\"button-secondary\" target=\"_bp\"><?php _e( \\'View\\', \\'buddypress\\' ); ?></a>\\n \\n \\t\\t\\t\\t\\t\\t\\t<?php endif; ?>'}}",
      "message_norm": "admin: sanitize external links to activated bp component pages.\n\nprops imath.\nsee #8235.\n\ngit-svn-id: https://buddypress.svn.wordpress.org/trunk@12549 cdf35c40-ae34-48e0-9cc9-0c9da1808c22",
      "language": "en",
      "entities": "[('admin', 'SECWORD', ''), ('sanitize', 'SECWORD', ''), ('#8235', 'ISSUE', ''), ('https://buddypress.svn.wordpress.org/trunk@12549', 'URL', ''), ('cdf35c40', 'SHA', 'generic_sha'), ('0c9da1808c22', 'SHA', 'generic_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/bp-core/admin/bp-core-admin-slugs.php'])",
      "num_files": 1.0
    },
    {
      "index": 585,
      "vuln_id": "GHSA-5875-p652-2ppm",
      "cwe_id": "{'CWE-668'}",
      "score": 4.3,
      "chain": "{'https://github.com/microweber/microweber/commit/76361264d9fdfff38a1af79c63141455cc4d36e3'}",
      "dataset": "osv",
      "summary": "Exposure of Resource to Wrong Sphere in microweber Exposure of Resource to Wrong Sphere in microweber prior to 1.3 allows users to add deleted products to a cart and buy it.",
      "published_date": "2022-02-27",
      "chain_len": 1,
      "project": "https://github.com/microweber/microweber",
      "commit_href": "https://github.com/microweber/microweber/commit/76361264d9fdfff38a1af79c63141455cc4d36e3",
      "commit_sha": "76361264d9fdfff38a1af79c63141455cc4d36e3",
      "patch": "SINGLE",
      "chain_ord": "['76361264d9fdfff38a1af79c63141455cc4d36e3']",
      "before_first_fix_commit": "{'cc5947c83f05f5490c9190d4a68dc199461b34e3'}",
      "last_fix_commit": "76361264d9fdfff38a1af79c63141455cc4d36e3",
      "chain_ord_pos": 1.0,
      "commit_datetime": "02/25/2022, 09:43:45",
      "message": "check product is deleted before add to cart",
      "author": "Bozhidar Slaveykov",
      "comments": null,
      "stats": "{'additions': 14, 'deletions': 0, 'total': 14}",
      "files": "{'src/MicroweberPackages/Cart/CartManager.php': {'additions': 14, 'deletions': 0, 'changes': 14, 'status': 'modified', 'raw_url': 'https://github.com/microweber/microweber/raw/76361264d9fdfff38a1af79c63141455cc4d36e3/src%2FMicroweberPackages%2FCart%2FCartManager.php', 'patch': \"@@ -565,7 +565,21 @@ public function update_cart($data)\\n         }\\n \\n         if ($data['for'] == 'content') {\\n+\\n             $cont = $this->app->content_manager->get_by_id($for_id);\\n+\\n+            if (isset($cont['is_active'])) {\\n+                if ($cont['is_active'] != 1) {\\n+                    $cont = false;\\n+                }\\n+            }\\n+\\n+            if (isset($cont['is_deleted'])) {\\n+                if ($cont['is_deleted'] > 0) {\\n+                    $cont = false;\\n+                }\\n+            }\\n+\\n             $cont_data = $this->app->content_manager->data($for_id);\\n             if ($cont == false) {\\n                 return array('error' => 'Invalid product?');\"}}",
      "message_norm": "check product is deleted before add to cart",
      "language": "en",
      "entities": null,
      "classification_level_1": "POORLY_DOCUMENTED",
      "classification_level_2": "REDUNDANT_MESSAGE",
      "list_files": "dict_keys(['src/MicroweberPackages/Cart/CartManager.php'])",
      "num_files": 1.0
    },
    {
      "index": 675,
      "vuln_id": "GHSA-5q5w-mqp6-g2gh",
      "cwe_id": "{'CWE-434', 'CWE-79'}",
      "score": 5.4,
      "chain": "{'https://github.com/jsdecena/laracom/commit/256026193ce994dc4c1365e02f414d8a0cd77ae8'}",
      "dataset": "osv",
      "summary": "Unrestricted Upload of File with Dangerous Type in jsdecena/laracom jsdecena/laracom prior to version 2.0.9 is vulnerable to Unrestricted Upload of File with Dangerous Type.",
      "published_date": "2022-02-06",
      "chain_len": 1,
      "project": "https://github.com/jsdecena/laracom",
      "commit_href": "https://github.com/jsdecena/laracom/commit/256026193ce994dc4c1365e02f414d8a0cd77ae8",
      "commit_sha": "256026193ce994dc4c1365e02f414d8a0cd77ae8",
      "patch": "SINGLE",
      "chain_ord": "['256026193ce994dc4c1365e02f414d8a0cd77ae8']",
      "before_first_fix_commit": "{'8ef50622cb9c696d79a7a6b37e9b43266da6545d'}",
      "last_fix_commit": "256026193ce994dc4c1365e02f414d8a0cd77ae8",
      "chain_ord_pos": 1.0,
      "commit_datetime": "02/01/2022, 22:16:55",
      "message": "Fix vulnerability report from hunter.dev",
      "author": "Roland Jeffrey Decena",
      "comments": null,
      "stats": "{'additions': 3, 'deletions': 1, 'total': 4}",
      "files": "{'project/app/Shop/Products/Requests/UpdateProductRequest.php': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https://github.com/jsdecena/laracom/raw/256026193ce994dc4c1365e02f414d8a0cd77ae8/project%2Fapp%2FShop%2FProducts%2FRequests%2FUpdateProductRequest.php', 'patch': \"@@ -20,7 +20,9 @@ public function rules()\\n             'quantity' => ['required', 'integer', 'min:0'],\\n             'price' => ['required', 'numeric', 'min:0'],\\n             'sale_price' => ['nullable', 'numeric'],\\n-            'weight' => ['nullable', 'numeric', 'min:0']\\n+            'weight' => ['nullable', 'numeric', 'min:0'],\\n+            'image' => 'image|mimes:jpeg,png,jpg,gif,svg|max:2048',\\n+            'cover' => 'image|mimes:jpeg,png,jpg,gif,svg|max:2048',\\n         ];\\n     }\\n }\"}}",
      "message_norm": "fix vulnerability report from hunter.dev",
      "language": "en",
      "entities": "[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['project/app/Shop/Products/Requests/UpdateProductRequest.php'])",
      "num_files": 1.0
    },
    {
      "index": 2844,
      "vuln_id": "GHSA-r33q-22hv-j29q",
      "cwe_id": "{'CWE-400'}",
      "score": 6.5,
      "chain": "{'https://github.com/ethereum/go-ethereum/commit/bddd103a9f0af27ef533f04e06ea429cf76b6d46'}",
      "dataset": "osv",
      "summary": "Denial of service in github.com/ethereum/go-ethereum ### Impact\n\nA DoS vulnerability can make a LES server crash via malicious `GetProofsV2` request from a connected LES client.\n\n### Patches\n\nThe vulnerability was patched in https://github.com/ethereum/go-ethereum/pull/21896. \n\n### Workarounds\n\nThis vulnerability only concerns users explicitly enabling `les` server; disabling `les` prevents the exploit. \nIt can also be patched by manually applying the patch in https://github.com/ethereum/go-ethereum/pull/21896. \n\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-ethereum](https://github.com/ethereum/go-ethereum)\n* Email us at [security@ethereum.org](mailto:security@ethereum.org)",
      "published_date": "2021-06-29",
      "chain_len": 1,
      "project": "https://github.com/ethereum/go-ethereum",
      "commit_href": "https://github.com/ethereum/go-ethereum/commit/bddd103a9f0af27ef533f04e06ea429cf76b6d46",
      "commit_sha": "bddd103a9f0af27ef533f04e06ea429cf76b6d46",
      "patch": "SINGLE",
      "chain_ord": "['bddd103a9f0af27ef533f04e06ea429cf76b6d46']",
      "before_first_fix_commit": "{'6b5840961407960a06ed20cb5dd1b782080653ff'}",
      "last_fix_commit": "bddd103a9f0af27ef533f04e06ea429cf76b6d46",
      "chain_ord_pos": 1.0,
      "commit_datetime": "11/24/2020, 09:55:17",
      "message": "les: fix GetProofsV2 bug (#21896)",
      "author": "Felf\u00f6ldi Zsolt",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 4, 'total': 6}",
      "files": "{'les/server_handler.go': {'additions': 2, 'deletions': 4, 'changes': 6, 'status': 'modified', 'raw_url': 'https://github.com/ethereum/go-ethereum/raw/bddd103a9f0af27ef533f04e06ea429cf76b6d46/les%2Fserver_handler.go', 'patch': '@@ -610,6 +610,7 @@ func (h *serverHandler) handleMsg(p *clientPeer, wg *sync.WaitGroup) error {\\n \\t\\tvar (\\n \\t\\t\\tlastBHash common.Hash\\n \\t\\t\\troot      common.Hash\\n+\\t\\t\\theader    *types.Header\\n \\t\\t)\\n \\t\\treqCnt := len(req.Reqs)\\n \\t\\tif accept(req.ReqID, uint64(reqCnt), MaxProofsFetch) {\\n@@ -624,10 +625,6 @@ func (h *serverHandler) handleMsg(p *clientPeer, wg *sync.WaitGroup) error {\\n \\t\\t\\t\\t\\t\\treturn\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\t// Look up the root hash belonging to the request\\n-\\t\\t\\t\\t\\tvar (\\n-\\t\\t\\t\\t\\t\\theader *types.Header\\n-\\t\\t\\t\\t\\t\\ttrie   state.Trie\\n-\\t\\t\\t\\t\\t)\\n \\t\\t\\t\\t\\tif request.BHash != lastBHash {\\n \\t\\t\\t\\t\\t\\troot, lastBHash = common.Hash{}, request.BHash\\n \\n@@ -654,6 +651,7 @@ func (h *serverHandler) handleMsg(p *clientPeer, wg *sync.WaitGroup) error {\\n \\t\\t\\t\\t\\t// Open the account or storage trie for the request\\n \\t\\t\\t\\t\\tstatedb := h.blockchain.StateCache()\\n \\n+\\t\\t\\t\\t\\tvar trie state.Trie\\n \\t\\t\\t\\t\\tswitch len(request.AccKey) {\\n \\t\\t\\t\\t\\tcase 0:\\n \\t\\t\\t\\t\\t\\t// No account key specified, open an account trie'}}",
      "message_norm": "les: fix getproofsv2 bug (#21896)",
      "language": "af",
      "entities": "[('bug', 'FLAW', ''), ('#21896', 'ISSUE', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['les/server_handler.go'])",
      "num_files": 1.0
    },
    {
      "index": 3118,
      "vuln_id": "GHSA-vh5c-jqfg-mhrh",
      "cwe_id": "{'CWE-352'}",
      "score": 7.5,
      "chain": "{'https://github.com/xwiki/xwiki-platform/commit/69548c0320cbd772540cf4668743e69f879812cf', 'https://github.com/xwiki/xwiki-platform/commit/f0440dfcbba705e03f7565cd88893dde57ca3fa8'}",
      "dataset": "osv",
      "summary": "Cross-Site Request Forgery in xwiki-platform ### Impact\nIt's possible to know if a user has or not an account in a wiki related to an email address, and which username(s) is actually tight to that email by forging a request to the Forgot username page. Note that since this page does not have a CSRF check it's quite easy to perform a lot of those requests.\n\n### Patches\nThis issue has been patched in XWiki 12.10.5 and 13.2RC1. Two different patches are provided:\n  - a first one to fix the CSRF problem\n  - a more complex one that now relies on sending an email for the Forgot username process.\n\n### Workarounds\nIt's possible to fix the problem without uprading by editing the ForgotUsername page in version below 13.x, to use the following code: https://github.com/xwiki/xwiki-platform/blob/69548c0320cbd772540cf4668743e69f879812cf/xwiki-platform-core/xwiki-platform-administration/xwiki-platform-administration-ui/src/main/resources/XWiki/ForgotUsername.xml#L39-L123\n\nIn version after 13.x it's also possible to edit manually the forgotusername.vm file, but it's really encouraged to upgrade the version here.\n\n### References\n  * https://jira.xwiki.org/browse/XWIKI-18384\n  * https://jira.xwiki.org/browse/XWIKI-18408\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Jira XWiki](https://jira.xwiki.org)\n* Email us at [security ML](mailto:security@xwiki.org)",
      "published_date": "2022-02-10",
      "chain_len": 2,
      "project": "https://github.com/xwiki/xwiki-platform",
      "commit_href": "https://github.com/xwiki/xwiki-platform/commit/69548c0320cbd772540cf4668743e69f879812cf",
      "commit_sha": "69548c0320cbd772540cf4668743e69f879812cf",
      "patch": "MULTI",
      "chain_ord": "['f0440dfcbba705e03f7565cd88893dde57ca3fa8', '69548c0320cbd772540cf4668743e69f879812cf']",
      "before_first_fix_commit": "{'dfa1479abcdbc3a3b906fdab62841c22f5c13e38'}",
      "last_fix_commit": "69548c0320cbd772540cf4668743e69f879812cf",
      "chain_ord_pos": 2.0,
      "commit_datetime": "03/09/2021, 12:23:38",
      "message": "XWIKI-18408: Wrong check in forgot username",
      "author": "Simon Urli",
      "comments": null,
      "stats": "{'additions': 9, 'deletions': 2, 'total': 11}",
      "files": "{'xwiki-platform-core/xwiki-platform-administration/xwiki-platform-administration-ui/src/main/resources/XWiki/ForgotUsername.xml': {'additions': 9, 'deletions': 2, 'changes': 11, 'status': 'modified', 'raw_url': 'https://github.com/xwiki/xwiki-platform/raw/69548c0320cbd772540cf4668743e69f879812cf/xwiki-platform-core%2Fxwiki-platform-administration%2Fxwiki-platform-administration-ui%2Fsrc%2Fmain%2Fresources%2FXWiki%2FForgotUsername.xml', 'patch': '@@ -38,12 +38,19 @@\\n   <hidden>true</hidden>\\n   <content>{{velocity}}\\n #set($email = \"$!request.get(\\'e\\')\")\\n-#if($email == \\'\\')\\n+#if($email == \\'\\' || !$services.csrf.isTokenValid($request.form_token))\\n {{translation key=\"xe.admin.forgotUsername.instructions\"/}}\\n \\n {{html}}\\n   &lt;form method=\"post\" action=\"$doc.getURL()\" class=\"xformInline\"&gt;\\n-    &lt;div&gt;&lt;label for=\"e\"&gt;$services.localization.render(\\'xe.admin.forgotUsername.email.label\\')&lt;/label&gt; &lt;input type=\"text\" id=\"e\" name=\"e\"/&gt; &lt;span class=\"buttonwrapper\"&gt;&lt;input type=\"submit\" value=\"$services.localization.render(\\'xe.admin.forgotUsername.submit\\')\" class=\"button\"/&gt;&lt;/span&gt;&lt;/div&gt;\\n+    &lt;div&gt;\\n+      &lt;label for=\"e\"&gt;$services.localization.render(\\'xe.admin.forgotUsername.email.label\\')&lt;/label&gt;\\n+      &lt;input type=\"text\" id=\"e\" name=\"e\"/&gt;\\n+      &lt;input type=\"hidden\" name=\"form_token\" value=\"$services.csrf.getToken()\"/&gt;\\n+      &lt;span class=\"buttonwrapper\"&gt;\\n+        &lt;input type=\"submit\" value=\"$services.localization.render(\\'xe.admin.forgotUsername.submit\\')\" class=\"button\"/&gt;\\n+      &lt;/span&gt;\\n+    &lt;/div&gt;\\n   &lt;/form&gt;\\n {{/html}}'}}",
      "message_norm": "xwiki-18408: wrong check in forgot username",
      "language": "en",
      "entities": null,
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['xwiki-platform-core/xwiki-platform-administration/xwiki-platform-administration-ui/src/main/resources/XWiki/ForgotUsername.xml'])",
      "num_files": 1.0
    },
    {
      "index": 2047,
      "vuln_id": "GHSA-hf4q-52x6-4p57",
      "cwe_id": "{'CWE-79'}",
      "score": 4.8,
      "chain": "{'https://github.com/microweber/microweber/commit/d9bae9df873c2d2a13a2eb08d512019d49ebca68'}",
      "dataset": "osv",
      "summary": "Unrestricted file upload leads to stored cross-site scripting in Microweber Microweber prior to version 1.2.12 allows unrestricted file upload, which could lead to stored cross-site scripting.",
      "published_date": "2022-03-11",
      "chain_len": 1,
      "project": "https://github.com/microweber/microweber",
      "commit_href": "https://github.com/microweber/microweber/commit/d9bae9df873c2d2a13a2eb08d512019d49ebca68",
      "commit_sha": "d9bae9df873c2d2a13a2eb08d512019d49ebca68",
      "patch": "SINGLE",
      "chain_ord": "['d9bae9df873c2d2a13a2eb08d512019d49ebca68']",
      "before_first_fix_commit": "{'8902c415144823c48b056f881aa00ceb1f5d350f'}",
      "last_fix_commit": "d9bae9df873c2d2a13a2eb08d512019d49ebca68",
      "chain_ord_pos": 1.0,
      "commit_datetime": "03/09/2022, 14:55:02",
      "message": "update",
      "author": "Peter Ivanov",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 0, 'total': 1}",
      "files": "{'src/MicroweberPackages/Utils/System/Files.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https://github.com/microweber/microweber/raw/d9bae9df873c2d2a13a2eb08d512019d49ebca68/src%2FMicroweberPackages%2FUtils%2FSystem%2FFiles.php', 'patch': \"@@ -591,6 +591,7 @@ function get_dangerous_files_extentions()\\n             'py',\\n             'alfa',\\n             'asp',\\n+            'aspx',\\n             'htaccess',\\n             'exe',\\n             'msi',\"}}",
      "message_norm": "update",
      "language": "ro",
      "entities": "[('update', 'ACTION', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/MicroweberPackages/Utils/System/Files.php'])",
      "num_files": 1.0
    },
    {
      "index": 2173,
      "vuln_id": "GHSA-j383-35pm-c5h4",
      "cwe_id": "{'CWE-22'}",
      "score": 5.5,
      "chain": "{'https://github.com/gruntjs/grunt/commit/aad3d4521c3098fb255fb2db8f2e1d691a033665', 'https://github.com/gruntjs/grunt/commit/b0ec6e12426fc8d5720dee1702f6a67455c5986c'}",
      "dataset": "osv",
      "summary": "Path Traversal in Grunt Grunt prior to version 1.5.2 is vulnerable to path traversal.",
      "published_date": "2022-04-13",
      "chain_len": 2,
      "project": "https://github.com/gruntjs/grunt",
      "commit_href": "https://github.com/gruntjs/grunt/commit/b0ec6e12426fc8d5720dee1702f6a67455c5986c",
      "commit_sha": "b0ec6e12426fc8d5720dee1702f6a67455c5986c",
      "patch": "MULTI",
      "chain_ord": "['aad3d4521c3098fb255fb2db8f2e1d691a033665', 'b0ec6e12426fc8d5720dee1702f6a67455c5986c']",
      "before_first_fix_commit": "{'433f91b78df99d83daa6f56a5505ead743627c30', 'd5969eccf2493c2c579c55a617c70cab48dc12d3'}",
      "last_fix_commit": "b0ec6e12426fc8d5720dee1702f6a67455c5986c",
      "chain_ord_pos": 2.0,
      "commit_datetime": "04/12/2022, 11:51:53",
      "message": "Merge pull request #1743 from gruntjs/cleanup-link\n\nClean up link handling",
      "author": "Vlad Filippov",
      "comments": null,
      "stats": "{'additions': 6, 'deletions': 6, 'total': 12}",
      "files": "{'lib/grunt/file.js': {'additions': 6, 'deletions': 6, 'changes': 12, 'status': 'modified', 'raw_url': 'https://github.com/gruntjs/grunt/raw/b0ec6e12426fc8d5720dee1702f6a67455c5986c/lib%2Fgrunt%2Ffile.js', 'patch': \"@@ -294,7 +294,12 @@ file.write = function(filepath, contents, options) {\\n // processing content, writing output.\\n // Handles symlinks by coping them as files or directories.\\n file.copy = function copy(srcpath, destpath, options) {\\n-  if (file._isSymbolicLink(srcpath)) {\\n+  if (file.isLink(destpath)) {\\n+    // in case destpath is a symlink, avoid following the symlink, instead overwrite it later\\n+    fs.unlinkSync(destpath);\\n+  }\\n+\\n+  if (file.isLink(srcpath)) {\\n     file._copySymbolicLink(srcpath, destpath);\\n   } else if (file.isDir(srcpath)) {\\n     // Copy a directory, recursively.\\n@@ -452,11 +457,6 @@ file.isPathCwd = function() {\\n   }\\n };\\n \\n-file._isSymbolicLink = function() {\\n-  var filepath = path.join.apply(path, arguments);\\n-  return fs.lstatSync(filepath).isSymbolicLink();\\n-};\\n-\\n file._copySymbolicLink = function(srcpath, destpath) {\\n   var destdir = path.join(destpath, '..');\\n   // Use the correct relative path for the symlink\"}}",
      "message_norm": "merge pull request #1743 from gruntjs/cleanup-link\n\nclean up link handling",
      "language": "en",
      "entities": "[('#1743', 'ISSUE', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['lib/grunt/file.js'])",
      "num_files": 1.0
    },
    {
      "index": 2909,
      "vuln_id": "GHSA-r9vm-rhmf-7hxx",
      "cwe_id": "{'CWE-78'}",
      "score": 9.8,
      "chain": "{'https://github.com/Turistforeningen/node-im-resize/commit/de624dacf6a50e39fe3472af1414d44937ce1f03'}",
      "dataset": "osv",
      "summary": "OS Command Injection in im-resize im-resize through 2.3.2 allows remote attackers to execute arbitrary commands via the \"exec\" argument. The cmd argument used within index.js, can be controlled by user without any sanitization.",
      "published_date": "2021-04-13",
      "chain_len": 1,
      "project": "https://github.com/Turistforeningen/node-im-resize",
      "commit_href": "https://github.com/Turistforeningen/node-im-resize/commit/de624dacf6a50e39fe3472af1414d44937ce1f03",
      "commit_sha": "de624dacf6a50e39fe3472af1414d44937ce1f03",
      "patch": "SINGLE",
      "chain_ord": "['de624dacf6a50e39fe3472af1414d44937ce1f03']",
      "before_first_fix_commit": "{'499fe82028337ae55cb61c24696c1ec16f0f9c9a'}",
      "last_fix_commit": "de624dacf6a50e39fe3472af1414d44937ce1f03",
      "chain_ord_pos": 1.0,
      "commit_datetime": "02/03/2020, 21:25:54",
      "message": "fix: check image arguments before processing (#19)\n\nRegex hotfix to check for command injection",
      "author": "Sam Sanoop",
      "comments": null,
      "stats": "{'additions': 4, 'deletions': 0, 'total': 4}",
      "files": "{'index.js': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https://github.com/Turistforeningen/node-im-resize/raw/de624dacf6a50e39fe3472af1414d44937ce1f03/index.js', 'patch': \"@@ -7,13 +7,17 @@ var join = require('path').join;\\n var sprintf = require('util').format;\\n \\n module.exports = function(image, output, cb) {\\n+  if(/;|&|`|\\\\$|\\\\(|\\\\)|\\\\|\\\\||\\\\||!|>|<|\\\\?|\\\\${/g.test(JSON.stringify(image))) {\\n+    console.log('Input Validation failed, Suspicious Characters found');\\n+  } else {\\n   var cmd = module.exports.cmd(image, output);\\n   exec(cmd, {timeout: 30000}, function(e, stdout, stderr) {\\n     if (e) { return cb(e); }\\n     if (stderr) { return cb(new Error(stderr)); }\\n \\n     return cb(null, output.versions);\\n   });\\n+}\\n };\\n \\n /**\"}}",
      "message_norm": "fix: check image arguments before processing (#19)\n\nregex hotfix to check for command injection",
      "language": "en",
      "entities": "[('#19', 'ISSUE', ''), ('hotfix', 'ACTION', ''), ('command injection', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['index.js'])",
      "num_files": 1.0
    },
    {
      "index": 3240,
      "vuln_id": "GHSA-w74j-v8xh-3w5h",
      "cwe_id": "{'CWE-824'}",
      "score": 7.8,
      "chain": "{'https://github.com/tensorflow/tensorflow/commit/2e0ee46f1a47675152d3d865797a18358881d7a6'}",
      "dataset": "osv",
      "summary": "Reference binding to nullptr in unicode encoding ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.UnicodeEncode`:\n\n```python\nimport tensorflow as tf\nfrom tensorflow.python.ops import gen_string_ops\n\ngen_string_ops.unicode_encode(\n  input_values=[],\n  input_splits=[],\n  output_encoding='UTF-8',\n  errors='ignore',\n  replacement_char='a')\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/460e000de3a83278fb00b61a16d161b1964f15f4/tensorflow/core/kernels/unicode_ops.cc#L533-L539) reads the first dimension of the `input_splits` tensor before validating that this tensor is not empty: \n\n```cc\n  const Tensor& input_splits = context->input(1);\n  const auto input_splits_flat = input_splits.flat<SPLITS_TYPE>();\n  TensorShape output_shape({input_splits.dim_size(0) - 1});\n```\n\n### Patches\nWe have patched the issue in GitHub commit [2e0ee46f1a47675152d3d865797a18358881d7a6](https://github.com/tensorflow/tensorflow/commit/2e0ee46f1a47675152d3d865797a18358881d7a6).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
      "published_date": "2021-08-25",
      "chain_len": 1,
      "project": "https://github.com/tensorflow/tensorflow",
      "commit_href": "https://github.com/tensorflow/tensorflow/commit/2e0ee46f1a47675152d3d865797a18358881d7a6",
      "commit_sha": "2e0ee46f1a47675152d3d865797a18358881d7a6",
      "patch": "SINGLE",
      "chain_ord": "['2e0ee46f1a47675152d3d865797a18358881d7a6']",
      "before_first_fix_commit": "{'9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad'}",
      "last_fix_commit": "2e0ee46f1a47675152d3d865797a18358881d7a6",
      "chain_ord_pos": 1.0,
      "commit_datetime": "07/27/2021, 19:30:33",
      "message": "Ensure non-empty input_splits in tf.raw_ops.UnicodeEncode\n\nPiperOrigin-RevId: 387170080\nChange-Id: I3b489acc51c5cb4124c535b9df7cc6e62ef21766",
      "author": "Laura Pak",
      "comments": null,
      "stats": "{'additions': 4, 'deletions': 0, 'total': 4}",
      "files": "{'tensorflow/core/kernels/unicode_ops.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https://github.com/tensorflow/tensorflow/raw/2e0ee46f1a47675152d3d865797a18358881d7a6/tensorflow%2Fcore%2Fkernels%2Funicode_ops.cc', 'patch': '@@ -533,6 +533,10 @@ class UnicodeEncodeOp : public OpKernel {\\n     const Tensor& input_splits = context->input(1);\\n     const auto input_splits_flat = input_splits.flat<SPLITS_TYPE>();\\n \\n+    OP_REQUIRES(\\n+        context, input_splits.NumElements() > 0,\\n+        errors::InvalidArgument(\"Input_splits should contain elements, but \"\\n+                                \"given input_values has 0 elements\"));\\n     // Operation will treat first argument in input_splits as if it were zero\\n     // regardless of its actual value since splits should begin with zero and\\n     // end with the length of the input values vector.'}}",
      "message_norm": "ensure non-empty input_splits in tf.raw_ops.unicodeencode\n\npiperorigin-revid: 387170080\nchange-id: i3b489acc51c5cb4124c535b9df7cc6e62ef21766",
      "language": "en",
      "entities": "[('ensure', 'ACTION', ''), ('tf.raw_ops.unicodeencode', 'SECWORD', ''), ('387170080', 'SHA', 'generic_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['tensorflow/core/kernels/unicode_ops.cc'])",
      "num_files": 1.0
    },
    {
      "index": 3148,
      "vuln_id": "GHSA-vmm6-w4cf-7f3x",
      "cwe_id": "{'CWE-285'}",
      "score": 8.7,
      "chain": "{'https://github.com/opencast/opencast/commit/b157e1fb3b35991ca7bf59f0730329fbe7ce82e8'}",
      "dataset": "osv",
      "summary": "Authentication Bypass For Endpoints With Anonymous Access in Opencast ### Impact\n\nUsing a remember-me cookie with an arbitrary username can cause Opencast to assume proper authentication for that user even if the remember-me cookie was incorrect given that the attacked endpoint also allows anonymous access.\n\nThis way, an attacker can, for example, fake a remember-me token, assume the identity of the global system administrator and request non-public content from the search service without ever providing any proper authentication.\n\n\n### Patches\n\nThis problem is fixed in Opencast 7.6 and Opencast 8.1\n\n\n### Workarounds\n\nAs a workaround for older, unpatched versions, disabling remember-me cookies in `etc/security/mh_default_org.xml` will mitigate the problem but will obviously also disable this feature without obvious indication. To deactivate this, remove the following line from the security configuration:\n\n```xml\n<sec:remember-me \u2026 />\n```\n\n### References\n\n- [Remember-me cookie in the security configuration file](https://github.com/opencast/opencast/blob/161ee619382f144dc35eea211fc6b556025b98e1/etc/security/mh_default_org.xml#L335-L336)\n\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [opencast/opencast](https://github.com/opencast/opencast/issues)\n- For security-relevant information, email us at security@opencast.org",
      "published_date": "2020-01-30",
      "chain_len": 1,
      "project": "https://github.com/opencast/opencast",
      "commit_href": "https://github.com/opencast/opencast/commit/b157e1fb3b35991ca7bf59f0730329fbe7ce82e8",
      "commit_sha": "b157e1fb3b35991ca7bf59f0730329fbe7ce82e8",
      "patch": "SINGLE",
      "chain_ord": "['b157e1fb3b35991ca7bf59f0730329fbe7ce82e8']",
      "before_first_fix_commit": "{'1a7172c95af8d542a77ae5b153e4c834dd4788a6'}",
      "last_fix_commit": "b157e1fb3b35991ca7bf59f0730329fbe7ce82e8",
      "chain_ord_pos": 1.0,
      "commit_datetime": "01/13/2020, 22:55:50",
      "message": "Authentication Bypass For Endpoints With Anonymous Access\n\nUsing a remember-me cookie with an arbitrary username can cause Opencast\nto assume proper authentication for that user even if the remember-me\ncookie was incorrect given that the attacked endpoint also allows\nanonymous access.\n\nThis way, an attacker can, for example, fake a remember-me token, assume\nthe identity of the global system administrator and request non-public\ncontent from the search service without ever providing any proper\nauthentication.\n\nThe reason for this problem is that using a remember-me cookie will\nalways cause the user in the request context to be populated, even if\nthe cookie is invalid by now. This is usually no problem, except in\ncombination with anonymous access where anonymous authentication is\ngranted and the request may continue.\n\nIn such a case, Opencast's security service would just check that a user\nexisted in the request context and assume proper authentication of this\nuser, never checking if it's actually anonymous authentication.\n\nThis patch adds this additional check, falling back to the anonymous\nuser in case of anonymous authentication.",
      "author": "Lars Kiesow",
      "comments": null,
      "stats": "{'additions': 10, 'deletions': 6, 'total': 16}",
      "files": "{'modules/kernel/src/main/java/org/opencastproject/kernel/security/SecurityServiceSpringImpl.java': {'additions': 10, 'deletions': 6, 'changes': 16, 'status': 'modified', 'raw_url': 'https://github.com/opencast/opencast/raw/b157e1fb3b35991ca7bf59f0730329fbe7ce82e8/modules%2Fkernel%2Fsrc%2Fmain%2Fjava%2Forg%2Fopencastproject%2Fkernel%2Fsecurity%2FSecurityServiceSpringImpl.java', 'patch': '@@ -32,6 +32,7 @@\\n \\n import org.slf4j.Logger;\\n import org.slf4j.LoggerFactory;\\n+import org.springframework.security.authentication.AnonymousAuthenticationToken;\\n import org.springframework.security.core.Authentication;\\n import org.springframework.security.core.GrantedAuthority;\\n import org.springframework.security.core.context.SecurityContextHolder;\\n@@ -94,15 +95,19 @@ public User getUser() throws IllegalStateException {\\n \\n     User delegatedUser = delegatedUserHolder.get();\\n \\n+    Authentication auth = SecurityContextHolder.getContext().getAuthentication();\\n+    if (auth instanceof AnonymousAuthenticationToken) {\\n+      return SecurityUtil.createAnonymousUser(org);\\n+    }\\n+\\n     if (delegatedUser != null) {\\n       return delegatedUser;\\n     }\\n \\n-    Authentication auth = SecurityContextHolder.getContext().getAuthentication();\\n     JaxbOrganization jaxbOrganization = JaxbOrganization.fromOrganization(org);\\n     if (auth != null) {\\n       Object principal = auth.getPrincipal();\\n-      if ((principal != null) && (principal instanceof UserDetails)) {\\n+      if ((principal instanceof UserDetails)) {\\n         UserDetails userDetails = (UserDetails) principal;\\n \\n         User user = null;\\n@@ -111,16 +116,15 @@ public User getUser() throws IllegalStateException {\\n         if (userDirectory != null) {\\n           user = userDirectory.loadUser(userDetails.getUsername());\\n           if (user == null) {\\n-            logger.debug(\\n-                    \"Authenticated user \\'{}\\' could not be found in any of the current UserProviders. Continuing anyway...\",\\n-                    userDetails.getUsername());\\n+            logger.debug(\"Authenticated user \\'{}\\' could not be found in any of the current UserProviders. \"\\n+                + \"Continuing anyway...\", userDetails.getUsername());\\n           }\\n         } else {\\n           logger.debug(\"No UserDirectory was found when trying to search for user \\'{}\\'\", userDetails.getUsername());\\n         }\\n \\n         // Add the roles (authorities) in the security context\\n-        Set<JaxbRole> roles = new HashSet<JaxbRole>();\\n+        Set<JaxbRole> roles = new HashSet<>();\\n         Collection<? extends GrantedAuthority> authorities = auth.getAuthorities();\\n         if (authorities != null) {\\n           for (GrantedAuthority ga : authorities) {'}}",
      "message_norm": "authentication bypass for endpoints with anonymous access\n\nusing a remember-me cookie with an arbitrary username can cause opencast\nto assume proper authentication for that user even if the remember-me\ncookie was incorrect given that the attacked endpoint also allows\nanonymous access.\n\nthis way, an attacker can, for example, fake a remember-me token, assume\nthe identity of the global system administrator and request non-public\ncontent from the search service without ever providing any proper\nauthentication.\n\nthe reason for this problem is that using a remember-me cookie will\nalways cause the user in the request context to be populated, even if\nthe cookie is invalid by now. this is usually no problem, except in\ncombination with anonymous access where anonymous authentication is\ngranted and the request may continue.\n\nin such a case, opencast's security service would just check that a user\nexisted in the request context and assume proper authentication of this\nuser, never checking if it's actually anonymous authentication.\n\nthis patch adds this additional check, falling back to the anonymous\nuser in case of anonymous authentication.",
      "language": "en",
      "entities": "[('authentication bypass', 'SECWORD', ''), ('cookie', 'SECWORD', ''), ('authentication', 'SECWORD', ''), ('cookie', 'SECWORD', ''), ('attacked', 'SECWORD', ''), ('attacker', 'FLAW', ''), ('administrator', 'SECWORD', ''), ('authentication', 'SECWORD', ''), ('problem', 'FLAW', ''), ('cookie', 'SECWORD', ''), ('cookie', 'SECWORD', ''), ('problem', 'FLAW', ''), ('authentication', 'SECWORD', ''), ('security', 'SECWORD', ''), ('authentication', 'SECWORD', ''), ('authentication', 'SECWORD', ''), ('adds', 'ACTION', ''), ('authentication', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['modules/kernel/src/main/java/org/opencastproject/kernel/security/SecurityServiceSpringImpl.java'])",
      "num_files": 1.0
    },
    {
      "index": 539,
      "vuln_id": "GHSA-53m6-44rc-h2q5",
      "cwe_id": "{'CWE-347'}",
      "score": 4.8,
      "chain": "{'https://github.com/octobercms/october/commit/e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a'}",
      "dataset": "osv",
      "summary": "Missing server signature validation in OctoberCMS ### Impact\n\nThis advisory affects authors of plugins and themes listed on the October CMS marketplace where an end-user will inadvertently expose authors to potential financial loss by entering their private license key into a compromised server.\n\nIt has been disclosed that a project fork of October CMS v1.0 is using a compromised gateway to access the October CMS marketplace service. The compromised gateway captures the personal/business information of users and authors, including private source code files. It was also disclosed that captured plugin files are freely redistributed to other users without authorization.\n\n1. End-users are provided with a forked version of October CMS v1.0. The provided software is modified to use a compromised gateway server.\n\n2. The user is instructed to enter their October CMS license key into the administration panel to access the October CMS marketplace. The key is sent to the compromised server while appearing to access the genuine October CMS gateway server.\n\n3. The compromised gateway server uses a \"man in the middle\" mechanism that captures information while forwarding the request to the genuine October CMS gateway and relaying the response back to the client.\n\n4. The compromised gateway server stores the license key and other information about the user account including client name, email address and contents of purchased plugins and privately uploaded plugin files. \n\n5. The stored plugin files are made available to other users of the compromised gateway server.\n\n### Patches\n\nThe issue has been patched in Build 475 (v1.0.475) and v1.1.11.\n\n### Workarounds\n\nApply https://github.com/octobercms/october/commit/e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a to your installation manually if unable to upgrade to Build 475 or v1.1.11.\n\n### Recommendations\n\nWe recommend the following steps to make sure your account information stays secure:\n\n- Do not share your license key with anyone except October CMS.\n- Check to make sure that your gateway update server has not been modified.\n- Be aware of phishing websites, including other platforms that use the same appearance.\n- For authors, you may contact us for help requesting the removal of affected plugins.\n- Before providing plugin support, verify that the user holds a legitimate copy of the plugin.\n\n### References\n\nCredits for research on this exploit:\n\u2022 Nikita Khaetsky\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Email us at [hello@octobercms.com](mailto:hello@octobercms.com)",
      "published_date": "2022-02-24",
      "chain_len": 1,
      "project": "https://github.com/octobercms/october",
      "commit_href": "https://github.com/octobercms/october/commit/e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a",
      "commit_sha": "e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a",
      "patch": "SINGLE",
      "chain_ord": "['e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a']",
      "before_first_fix_commit": "{'e6867a5eb69f5c723adb33b6ca97fcda99634446'}",
      "last_fix_commit": "e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a",
      "chain_ord_pos": 1.0,
      "commit_datetime": "02/20/2022, 01:54:45",
      "message": "Checks gateway server has a valid signature",
      "author": "Sam Georges",
      "comments": null,
      "stats": "{'additions': 38, 'deletions': 2, 'total': 40}",
      "files": "{'modules/system/classes/UpdateManager.php': {'additions': 38, 'deletions': 2, 'changes': 40, 'status': 'modified', 'raw_url': 'https://github.com/octobercms/october/raw/e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a/modules%2Fsystem%2Fclasses%2FUpdateManager.php', 'patch': \"@@ -8,6 +8,7 @@\\n use Cache;\\n use Schema;\\n use Config;\\n+use Request;\\n use ApplicationException;\\n use Cms\\\\Classes\\\\ThemeManager;\\n use System\\\\Models\\\\Parameter;\\n@@ -885,6 +886,10 @@ public function requestServerData($uri, $postData = [])\\n             throw new ApplicationException(Lang::get('system::lang.server.response_invalid'));\\n         }\\n \\n+        if (!$this->validateServerSignature($resultData, $result->headers['Rest-Sign'] ?? '')) {\\n+            throw new ApplicationException(Lang::get('system::lang.server.response_invalid') . ' (Bad signature)');\\n+        }\\n+\\n         return $resultData;\\n     }\\n \\n@@ -963,12 +968,13 @@ protected function createServerUrl($uri)\\n      */\\n     protected function applyHttpAttributes($http, $postData)\\n     {\\n-        $postData['protocol_version'] = '1.2';\\n-        $postData['client'] = 'october';\\n+        $postData['protocol_version'] = '1.3';\\n+        $postData['client'] = 'October CMS';\\n \\n         $postData['server'] = base64_encode(json_encode([\\n             'php'   => PHP_VERSION,\\n             'url'   => Url::to('/'),\\n+            'ip'    => Request::ip(),\\n             'since' => PluginVersion::orderBy('created_at')->value('created_at')\\n         ]));\\n \\n@@ -1070,4 +1076,34 @@ protected function printMessages()\\n             }\\n         }\\n     }\\n+\\n+    /**\\n+     * validateServerSignature checks the server has provided a valid signature\\n+     *\\n+     * @return bool\\n+     */\\n+    protected function validateServerSignature($data, $signature)\\n+    {\\n+        if (!$signature) {\\n+            return false;\\n+        }\\n+\\n+        $signature = base64_decode($signature);\\n+\\n+        $pubKey = '-----BEGIN PUBLIC KEY-----\\n+MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt+KwvTXqC8Mz9vV4KIvX\\n+3y+aZusrlg26jdbNVUuhXNFbt1VisjJydHW2+WGsiEHSy2s61ZAV2dICR6f3huSw\\n+jY/MH9j23Oo/u61CBpvIS3Q8uC+TLtJl4/F9eqlnzocfMoKe8NmcBbUR3TKQoIok\\n+xbSMl6jiE2k5TJdzhHUxjZRIeeLDLMKYX6xt37LdhuM8zO6sXQmCGg4J6LmHTJph\\n+96H11gBvcFSFJSmIiDykJOELZl/aVcY1g3YgpL0mw5Bw1VTmKaRdz1eBi9DmKrKX\\n+UijG4gD8eLRV/FS/sZCFNR/evbQXvTBxO0TOIVi85PlQEcMl4SBj0CoTyNbcAGtz\\n+4wIDAQAB\\n+-----END PUBLIC KEY-----';\\n+\\n+        $pubKey = Config::get('system.update_gateway_key', $pubKey);\\n+\\n+        $data = base64_encode(json_encode($data));\\n+\\n+        return openssl_verify($data, $signature, $pubKey) === 1;\\n+    }\\n }\"}}",
      "message_norm": "checks gateway server has a valid signature",
      "language": "en",
      "entities": "[('server', 'SECWORD', ''), ('signature', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['modules/system/classes/UpdateManager.php'])",
      "num_files": 1.0
    },
    {
      "index": 2689,
      "vuln_id": "GHSA-q3x2-jvp3-wj78",
      "cwe_id": "{'CWE-79'}",
      "score": 5.4,
      "chain": "{'https://github.com/microweber/microweber/commit/975fc1d6d3fba598ee550849ceb81af23ce72e08'}",
      "dataset": "osv",
      "summary": "Unrestricted XML files leading to cross-site scripting in Microweber Microweber prior to 1.2.12 allows unrestricted upload of XML files, which malicious actors can exploit to cause a stored cross-site scripting attack.",
      "published_date": "2022-03-16",
      "chain_len": 1,
      "project": "https://github.com/microweber/microweber",
      "commit_href": "https://github.com/microweber/microweber/commit/975fc1d6d3fba598ee550849ceb81af23ce72e08",
      "commit_sha": "975fc1d6d3fba598ee550849ceb81af23ce72e08",
      "patch": "SINGLE",
      "chain_ord": "['975fc1d6d3fba598ee550849ceb81af23ce72e08']",
      "before_first_fix_commit": "{'27622f02c39d4cce67c43e5da38a6ab504202e13'}",
      "last_fix_commit": "975fc1d6d3fba598ee550849ceb81af23ce72e08",
      "chain_ord_pos": 1.0,
      "commit_datetime": "03/14/2022, 15:29:28",
      "message": "Update Files.php",
      "author": "Bozhidar Slaveykov",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 2, 'total': 4}",
      "files": "{'src/MicroweberPackages/Utils/System/Files.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https://github.com/microweber/microweber/raw/975fc1d6d3fba598ee550849ceb81af23ce72e08/src%2FMicroweberPackages%2FUtils%2FSystem%2FFiles.php', 'patch': \"@@ -1154,11 +1154,11 @@ function get_allowed_files_extensions_for_upload($fileTypes = 'images', $returnA\\n                 break;\\n             case 'file':\\n             case 'files':\\n-                $are_allowed .= ',doc,docx,pdf,json,rtf,txt,zip,gzip,rar,cad,xml,psd,xlsx,csv,7z';\\n+                $are_allowed .= ',doc,docx,pdf,json,rtf,txt,zip,gzip,rar,cad,psd,xlsx,csv,7z'; \\n                 break;\\n             case 'documents':\\n             case 'doc':\\n-                $are_allowed .= ',doc,docx,pdf,log,msg,odt,pages,rtf,tex,txt,wpd,wps,pps,ppt,pptx,xml,xlr,xls,xlsx';\\n+                $are_allowed .= ',doc,docx,pdf,log,msg,odt,pages,rtf,tex,txt,wpd,wps,pps,ppt,pptx,xlr,xls,xlsx';\\n                 break;\\n             case 'archives':\\n             case 'arc':\"}}",
      "message_norm": "update files.php",
      "language": "fr",
      "entities": "[('update', 'ACTION', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/MicroweberPackages/Utils/System/Files.php'])",
      "num_files": 1.0
    },
    {
      "index": 2148,
      "vuln_id": "GHSA-hwj9-h5mp-3pm3",
      "cwe_id": "{'CWE-400'}",
      "score": 5.3,
      "chain": "{'https://github.com/postcss/postcss/commit/54cbf3c4847eb0fb1501b9d2337465439e849734', 'https://github.com/postcss/postcss/commit/b6f3e4d5a8d7504d553267f80384373af3a3dec5', 'https://github.com/postcss/postcss/commit/8682b1e4e328432ba692bed52326e84439cec9e4'}",
      "dataset": "osv",
      "summary": "Regular Expression Denial of Service in postcss The npm package `postcss` from 7.0.0 and before versions 7.0.36 and 8.2.10 is vulnerable to Regular Expression Denial of Service (ReDoS) during source map parsing.",
      "published_date": "2021-05-10",
      "chain_len": 3,
      "project": "https://github.com/postcss/postcss",
      "commit_href": "https://github.com/postcss/postcss/commit/8682b1e4e328432ba692bed52326e84439cec9e4",
      "commit_sha": "8682b1e4e328432ba692bed52326e84439cec9e4",
      "patch": "MULTI",
      "chain_ord": "['8682b1e4e328432ba692bed52326e84439cec9e4', 'b6f3e4d5a8d7504d553267f80384373af3a3dec5', '54cbf3c4847eb0fb1501b9d2337465439e849734']",
      "before_first_fix_commit": "{'12832f3d203474bd273bd06bd3b2407567bfe09e'}",
      "last_fix_commit": "54cbf3c4847eb0fb1501b9d2337465439e849734",
      "chain_ord_pos": 1.0,
      "commit_datetime": "04/08/2021, 06:57:25",
      "message": "Fix unsafe regexp",
      "author": "Andrey Sitnik",
      "comments": "{'com_1': {'author': 'aw3218', 'datetime': '04/19/2021, 18:32:44', 'body': 'Any chance of getting this change into a 7.0.36 version?'}, 'com_2': {'author': 'ai', 'datetime': '04/19/2021, 18:35:03', 'body': '7.x support is over on Jan 1, 2020.\\r\\n\\r\\nThe issue is not so critical (it affects only online tools like CodePen). It is better to use this reason to update to PostCSS 8.'}, 'com_3': {'author': 'aw3218', 'datetime': '04/19/2021, 18:43:33', 'body': \"Angular 11 is calling cssnano@4.1.10 which calls version 7.0.35. Updating to cssnano@5.0.1 won't compile angular 11.\\r\\n\\r\\n`-- @angular-devkit/build-angular@0.1102.7\\r\\n  +-- css-loader@5.0.1\\r\\n  | `-- postcss@8.2.10\\r\\n  +-- **cssnano@4.1.10**\\r\\n  | +-- cssnano-preset-default@4.0.8\\r\\n  | | +-- css-declaration-sorter@4.0.1\\r\\n  | | | `-**- postcss@7.0.35**\"}, 'com_4': {'author': 'ai', 'datetime': '04/19/2021, 18:44:29', 'body': 'Ask Angular 11 to update cssnano.'}, 'com_5': {'author': 'GeorgiosP', 'datetime': '04/21/2021, 15:59:36', 'body': 'Would this effect any project using editors like [monaco-editor](https://github.com/microsoft/monaco-editor/blob/92d6800a00070f876faad9ee7997e9efea7c5e4b/package-lock.json#L2825) which has postcss or other browser based code editors with a dependency on V7 of postcss \ud83d\udcad'}, 'com_6': {'author': 'ai', 'datetime': '04/21/2021, 16:10:07', 'body': '@GeorgiosP it affects only use cases when:\\r\\n\\r\\n1. User send you CSS\\r\\n2. You compile this CSS on your servers\\r\\n\\r\\nIn this case, the user can generate special CSS which will take seconds or minutes to compile. An attacker can use it to DoS your servers.\\r\\n\\r\\nIf you can\u2019t update PostCSS, you can add timeout for CSS processing.'}, 'com_7': {'author': 'GeorgiosP', 'datetime': '04/21/2021, 16:16:41', 'body': '@ai thanks for the additional context \ud83d\ude4f\ud83c\udffc'}, 'com_8': {'author': 'Sesughter01', 'datetime': '05/17/2021, 08:22:18', 'body': 'how do I upgrade from 8.1.14 to the patched 8.2.10 in my laravel project?'}, 'com_9': {'author': 'Kmap-Holdings', 'datetime': '05/17/2021, 11:18:13', 'body': 'Eagerly waiting for this answer'}, 'com_10': {'author': 'ai', 'datetime': '05/17/2021, 11:30:43', 'body': '@Sesughter01 `yarn upgrade` or `npm update` should update your nested dependencies. But it is better to ask in Laravel community.'}, 'com_11': {'author': 'josephzidell', 'datetime': '05/21/2021, 14:00:06', 'body': \"@ai We run a DevSecOps pipeline (gov't work), and these vulns are causing full blockages. Not every plugin is compatible with v8 at the moment. Seems like it's taking the community some time to make the jump. Would you consider cutting a 7.x release for this?\"}, 'com_12': {'author': 'ai', 'datetime': '05/21/2021, 14:11:11', 'body': '@josephzidell this vulnerability affects only runner (`postcss-loader`, `postcss-cli`, `gulp-postcss`) and only on web compilers accepting user-generated CSS (like CodePen).\\r\\n\\r\\nPostCSS in plugin dependencies doesn\u2019t affect by this vulnerability.\\r\\n\\r\\nPostCSS 7 support ended in January 2021.\\r\\n\\r\\nIf you want extended support, you can pay for PostCSS commercial support.'}, 'com_13': {'author': 'josaphatmayuba', 'datetime': '01/13/2022, 06:07:16', 'body': 'I have\\r\\n\\r\\n> npm update\\r\\n\\r\\n![image](https://user-images.githubusercontent.com/97654468/149274944-50df9859-8e4d-4d20-8532-e43bdfd949da.png)'}, 'com_14': {'author': 'hakkisabah', 'datetime': '01/15/2022, 08:45:37', 'body': \"> I have\\r\\n> \\r\\n> > npm update\\r\\n> \\r\\n> ![image](https://user-images.githubusercontent.com/97654468/149274944-50df9859-8e4d-4d20-8532-e43bdfd949da.png)\\r\\n\\r\\nI don't understand, i have same issue and even more...\\r\\n![Screenshot (11)](https://user-images.githubusercontent.com/10910670/149615701-8738f08d-e779-4fa6-9587-94c524e1d140.png)\"}}",
      "stats": "{'additions': 1, 'deletions': 1, 'total': 2}",
      "files": "{'lib/previous-map.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/postcss/postcss/raw/8682b1e4e328432ba692bed52326e84439cec9e4/lib%2Fprevious-map.js', 'patch': '@@ -54,7 +54,7 @@ class PreviousMap {\\n   }\\n \\n   loadAnnotation(css) {\\n-    let annotations = css.match(/\\\\/\\\\*\\\\s*# sourceMappingURL=.*\\\\s*\\\\*\\\\//gm)\\n+    let annotations = css.match(/\\\\/\\\\*\\\\s*# sourceMappingURL=.*\\\\*\\\\//gm)\\n \\n     if (annotations && annotations.length > 0) {\\n       // Locate the last sourceMappingURL to avoid picking up'}}",
      "message_norm": "fix unsafe regexp",
      "language": "ca",
      "entities": "[('fix', 'ACTION', ''), ('unsafe', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['lib/previous-map.js'])",
      "num_files": 1.0
    },
    {
      "index": 1737,
      "vuln_id": "GHSA-fj59-f6c3-3vw4",
      "cwe_id": "{'CWE-78'}",
      "score": 5.9,
      "chain": "{'https://github.com/sebhildebrandt/systeminformation/commit/bad372e654cdd549e7d786acbba0035ded54c607'}",
      "dataset": "osv",
      "summary": "Command Injection in systeminformation ### Impact\ncommand injection vulnerability\n\n### Patches\nProblem was fixed with a shell string sanitation fix. Please upgrade to version >= 4.26.2\n\n### Workarounds\nIf you cannot upgrade, be sure to check or sanitize service parameter strings that are passed to `is.services()`, `is.inetChecksite()`, `si.inetLatency()`, `si.networkStats()`, `is.services()` and `si.processLoad()`\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [systeminformation](https://github.com/sebhildebrandt/systeminformation)",
      "published_date": "2020-10-27",
      "chain_len": 1,
      "project": "https://github.com/sebhildebrandt/systeminformation",
      "commit_href": "https://github.com/sebhildebrandt/systeminformation/commit/bad372e654cdd549e7d786acbba0035ded54c607",
      "commit_sha": "bad372e654cdd549e7d786acbba0035ded54c607",
      "patch": "SINGLE",
      "chain_ord": "['bad372e654cdd549e7d786acbba0035ded54c607']",
      "before_first_fix_commit": "{'147550532ab11cac4b609844a519a1d945f5c103'}",
      "last_fix_commit": "bad372e654cdd549e7d786acbba0035ded54c607",
      "chain_ord_pos": 1.0,
      "commit_datetime": "05/19/2020, 15:02:51",
      "message": "improved shell sanitation",
      "author": "Sebastian Hildebrandt",
      "comments": null,
      "stats": "{'additions': 3, 'deletions': 0, 'total': 3}",
      "files": "{'lib/util.js': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https://github.com/sebhildebrandt/systeminformation/raw/bad372e654cdd549e7d786acbba0035ded54c607/lib%2Futil.js', 'patch': '@@ -503,6 +503,9 @@ function sanitizeShellString(str) {\\n   result = result.replace(/\\\\$/g, \"\");\\n   result = result.replace(/#/g, \"\");\\n   result = result.replace(/\\\\\\\\/g, \"\");\\n+  result = result.replace(/\\\\t/g, \"\");\\n+  result = result.replace(/\\\\n/g, \"\");\\n+  result = result.replace(/\\\\\"/g, \"\");\\n   return result\\n }'}}",
      "message_norm": "improved shell sanitation",
      "language": "en",
      "entities": "[('improved', 'ACTION', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['lib/util.js'])",
      "num_files": 1.0
    },
    {
      "index": 2486,
      "vuln_id": "GHSA-mxvc-fwgx-j778",
      "cwe_id": "{'CWE-79'}",
      "score": 5.4,
      "chain": "{'https://github.com/benbusby/whoogle-search/commit/abc30d7da3b5c67be7ce84d4699f327442d44606'}",
      "dataset": "osv",
      "summary": "Whoogle Search Cross-site Scripting via string parameter The package whoogle-search before 0.7.2 is vulnerable to Cross-site Scripting (XSS) via the query string parameter q. In the case where it does not contain the http string, it is used to build the error_message that is then rendered in the error.html template, using the [flask.render_template](https://flask.palletsprojects.com/en/2.1.x/api/flask.render_template) function. However, the error_message is rendered using the [| safe filter](https://jinja.palletsprojects.com/en/3.1.x/templates/working-with-automatic-escaping), meaning the user input is not escaped.",
      "published_date": "2022-07-15",
      "chain_len": 1,
      "project": "https://github.com/benbusby/whoogle-search",
      "commit_href": "https://github.com/benbusby/whoogle-search/commit/abc30d7da3b5c67be7ce84d4699f327442d44606",
      "commit_sha": "abc30d7da3b5c67be7ce84d4699f327442d44606",
      "patch": "SINGLE",
      "chain_ord": "['abc30d7da3b5c67be7ce84d4699f327442d44606']",
      "before_first_fix_commit": "{'d62ceb84239ee0df677851f46eb885c40e98211f'}",
      "last_fix_commit": "abc30d7da3b5c67be7ce84d4699f327442d44606",
      "chain_ord_pos": 1.0,
      "commit_datetime": "04/26/2022, 15:28:05",
      "message": "Render error message w/o `safe` filter\n\nThe error message shown in the error template does not need to be\nrendered using the safe filter, and furthermore opens up an XSS\nvulnerability.",
      "author": "Ben Busby",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 1, 'total': 2}",
      "files": "{'app/templates/error.html': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/benbusby/whoogle-search/raw/abc30d7da3b5c67be7ce84d4699f327442d44606/app%2Ftemplates%2Ferror.html', 'patch': '@@ -16,7 +16,7 @@\\n <div>\\n     <h1>Error</h1>\\n     <p>\\n-        {{ error_message|safe }}\\n+        {{ error_message }}\\n     </p>\\n     <hr>\\n     <p>'}}",
      "message_norm": "render error message w/o `safe` filter\n\nthe error message shown in the error template does not need to be\nrendered using the safe filter, and furthermore opens up an xss\nvulnerability.",
      "language": "en",
      "entities": "[('error', 'FLAW', ''), ('safe', 'SECWORD', ''), ('error', 'FLAW', ''), ('error', 'FLAW', ''), ('safe', 'SECWORD', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['app/templates/error.html'])",
      "num_files": 1.0
    },
    {
      "index": 1802,
      "vuln_id": "GHSA-g25h-jr74-qp5j",
      "cwe_id": "{'CWE-20'}",
      "score": 7.8,
      "chain": "{'https://github.com/tensorflow/tensorflow/commit/6da6620efad397c85493b8f8667b821403516708'}",
      "dataset": "osv",
      "summary": "Incomplete validation in `QuantizeV2` ### Impact                                                                                                                                                                                                                                                                                \nDue to incomplete validation in `tf.raw_ops.QuantizeV2`, an attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.QuantizeV2(\n  input=[1,2,3],\n  min_range=[1,2],\n  max_range=[],\n  T=tf.qint32,\n  mode='SCALED',\n  round_mode='HALF_AWAY_FROM_ZERO',\n  narrow_range=False,\n  axis=1,\n  ensure_minimum_range=3)\n```\n\nThe [implementation](https://github.com/tensorflow/tensorflow/blob/84d053187cb80d975ef2b9684d4b61981bca0c41/tensorflow/core/kernels/quantize_op.cc#L59) has some validation but does not check that `min_range` and `max_range` both have the same non-zero number of elements. If `axis` is provided (i.e., not `-1`), then validation should check that it is a value in range for the rank of `input` tensor and then the lengths of `min_range` and `max_range` inputs match the `axis` dimension of the `input` tensor.\n  \n### Patches\nWe have patched the issue in GitHub commit [6da6620efad397c85493b8f8667b821403516708](https://github.com/tensorflow/tensorflow/commit/6da6620efad397c85493b8f8667b821403516708).\n  \nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
      "published_date": "2021-08-25",
      "chain_len": 1,
      "project": "https://github.com/tensorflow/tensorflow",
      "commit_href": "https://github.com/tensorflow/tensorflow/commit/6da6620efad397c85493b8f8667b821403516708",
      "commit_sha": "6da6620efad397c85493b8f8667b821403516708",
      "patch": "SINGLE",
      "chain_ord": "['6da6620efad397c85493b8f8667b821403516708']",
      "before_first_fix_commit": "{'eb921122119a6b6e470ee98b89e65d721663179d'}",
      "last_fix_commit": "6da6620efad397c85493b8f8667b821403516708",
      "chain_ord_pos": 1.0,
      "commit_datetime": "07/28/2021, 00:19:57",
      "message": "Secure tf.raw_ops.QuantizeV2\n\nValidate size and shape of min_range and max_range\nEnsure axis is within input dims limits\n\nPiperOrigin-RevId: 387232799\nChange-Id: I36975281f7b5758e9e31a8dcc73fe610ef456318",
      "author": "Laura Pak",
      "comments": null,
      "stats": "{'additions': 43, 'deletions': 0, 'total': 43}",
      "files": "{'tensorflow/core/kernels/quantize_op.cc': {'additions': 43, 'deletions': 0, 'changes': 43, 'status': 'modified', 'raw_url': 'https://github.com/tensorflow/tensorflow/raw/6da6620efad397c85493b8f8667b821403516708/tensorflow%2Fcore%2Fkernels%2Fquantize_op.cc', 'patch': '@@ -113,7 +113,50 @@ class QuantizeV2Op : public OpKernel {\\n \\n     int num_slices = 1;\\n     if (axis_ > -1) {\\n+      OP_REQUIRES(\\n+          ctx, input.dims() > axis_,\\n+          errors::InvalidArgument(\\n+              \"Axis is on a zero-based index, so its value must always be less \"\\n+              \"than number of input\\'s dims, but given axis value was \",\\n+              axis_, \" and input\\'s dims was \", input.dims()));\\n       num_slices = input.dim_size(axis_);\\n+      OP_REQUIRES(ctx, input_min_range.dims() == 1,\\n+                  errors::InvalidArgument(\\n+                      \"If axis is specified, min_range must be a 1-D tensor \"\\n+                      \"whose size matches the axis dimension of the input and \"\\n+                      \"output tensors, but min_range dims are \",\\n+                      input_min_range.dims()));\\n+      OP_REQUIRES(ctx, input_min_range.dim_size(0) == num_slices,\\n+                  errors::InvalidArgument(\\n+                      \"If axis is specified, min_range must be a 1-D tensor \"\\n+                      \"whose size matches the axis dimension of the input and \"\\n+                      \"output tensors, but min_range is a 1-D tensor of size \",\\n+                      input_min_range.dim_size(0),\\n+                      \" and input\\'s axis dimension is of size \", num_slices));\\n+      OP_REQUIRES(ctx, input_max_range.dims() == 1,\\n+                  errors::InvalidArgument(\\n+                      \"If axis is specified, max_range must be a 1-D tensor \"\\n+                      \"whose size matches the axis dimension of the input and \"\\n+                      \"output tensors, but max_range dims are \",\\n+                      input_max_range.dims()));\\n+      OP_REQUIRES(ctx, input_max_range.dim_size(0) == num_slices,\\n+                  errors::InvalidArgument(\\n+                      \"If axis is specified, max_range must be a 1-D tensor \"\\n+                      \"whose size matches the axis dimension of the input and \"\\n+                      \"output tensors, but max_range is a 1-D tensor of size \",\\n+                      input_max_range.dim_size(0),\\n+                      \" and input\\'s axis dimension is of size \", num_slices));\\n+    } else {\\n+      OP_REQUIRES(ctx, input_min_range.NumElements() == 1,\\n+                  errors::InvalidArgument(\\n+                      \"If axis is not specified, min_range must contain a \"\\n+                      \"single float element, but it contains \",\\n+                      input_min_range.NumElements(), \" elements\"));\\n+      OP_REQUIRES(ctx, input_max_range.NumElements() == 1,\\n+                  errors::InvalidArgument(\\n+                      \"If axis is not specified, max_range must contain a \"\\n+                      \"single float element, but it contains \",\\n+                      input_max_range.NumElements(), \" elements\"));\\n     }\\n \\n     const TensorShape& minmax_shape = ctx->input(1).shape();'}}",
      "message_norm": "secure tf.raw_ops.quantizev2\n\nvalidate size and shape of min_range and max_range\nensure axis is within input dims limits\n\npiperorigin-revid: 387232799\nchange-id: i36975281f7b5758e9e31a8dcc73fe610ef456318",
      "language": "en",
      "entities": "[('secure', 'SECWORD', ''), ('validate', 'ACTION', ''), ('ensure', 'ACTION', ''), ('387232799', 'SHA', 'generic_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['tensorflow/core/kernels/quantize_op.cc'])",
      "num_files": 1.0
    },
    {
      "index": 2185,
      "vuln_id": "GHSA-j47c-j42c-mwqq",
      "cwe_id": "{'CWE-670'}",
      "score": 5.3,
      "chain": "{'https://github.com/solana-labs/solana-pay/commit/ac6ce0d0a81137700874a8bf5a7caac3be999fad'}",
      "dataset": "osv",
      "summary": "Solana Pay Vulnerable to Weakness in Transfer Validation Logic ### Description\nWhen a Solana Pay transaction is located using a [reference key](https://github.com/solana-labs/solana-pay/blob/master/SPEC.md#reference), it may be checked to represent a transfer of the desired amount to the recipient, using the supplied [`validateTransfer` function](https://github.com/solana-labs/solana-pay/blob/master/core/src/validateTransfer.ts). An edge case regarding this mechanism could cause the validation logic to validate multiple transfers.\n\n### Impact\nMost known Solana Pay point of sale applications are currently run on physical point of sale devices, which makes this issue unlikely to occur. However, there may be web-based point of sale applications using the protocol where it may be more likely to occur.\n\n### Patches\nThis issue has been patched as of version [`0.2.1`](https://www.npmjs.com/package/@solana/pay/v/0.2.1). Users of the Solana Pay SDK should upgrade to it.",
      "published_date": "2022-08-06",
      "chain_len": 1,
      "project": "https://github.com/solana-labs/solana-pay",
      "commit_href": "https://github.com/solana-labs/solana-pay/commit/ac6ce0d0a81137700874a8bf5a7caac3be999fad",
      "commit_sha": "ac6ce0d0a81137700874a8bf5a7caac3be999fad",
      "patch": "SINGLE",
      "chain_ord": "['ac6ce0d0a81137700874a8bf5a7caac3be999fad']",
      "before_first_fix_commit": "{'f41701dc7931f7882c6eb0582c9ddd796eb9d3aa'}",
      "last_fix_commit": "ac6ce0d0a81137700874a8bf5a7caac3be999fad",
      "chain_ord_pos": 1.0,
      "commit_datetime": "07/28/2022, 17:15:33",
      "message": "finish transfer validation implementation",
      "author": "Jordan Sexton",
      "comments": null,
      "stats": "{'additions': 60, 'deletions': 18, 'total': 78}",
      "files": "{'core/src/validateTransfer.ts': {'additions': 60, 'deletions': 18, 'changes': 78, 'status': 'modified', 'raw_url': 'https://github.com/solana-labs/solana-pay/raw/ac6ce0d0a81137700874a8bf5a7caac3be999fad/core%2Fsrc%2FvalidateTransfer.ts', 'patch': \"@@ -1,15 +1,23 @@\\n-import { getAssociatedTokenAddress } from '@solana/spl-token';\\n+import {\\n+    decodeInstruction,\\n+    getAssociatedTokenAddress,\\n+    isTransferCheckedInstruction,\\n+    isTransferInstruction,\\n+} from '@solana/spl-token';\\n import {\\n     ConfirmedTransactionMeta,\\n     Connection,\\n     Finality,\\n     LAMPORTS_PER_SOL,\\n     Message,\\n+    SystemInstruction,\\n+    Transaction,\\n     TransactionResponse,\\n     TransactionSignature,\\n } from '@solana/web3.js';\\n import BigNumber from 'bignumber.js';\\n-import { Amount, Memo, Recipient, References, SPLToken } from './types';\\n+import { MEMO_PROGRAM_ID } from './constants';\\n+import { Amount, Memo, Recipient, Reference, References, SPLToken } from './types';\\n \\n /**\\n  * Thrown when a transaction doesn't contain a valid Solana Pay transfer.\\n@@ -58,33 +66,49 @@ export async function validateTransfer(\\n     if (!meta) throw new ValidateTransferError('missing meta');\\n     if (meta.err) throw meta.err;\\n \\n-    const [preAmount, postAmount] = splToken\\n-        ? await validateSPLTokenTransfer(message, meta, recipient, splToken)\\n-        : await validateSystemTransfer(message, meta, recipient);\\n+    if (reference && !Array.isArray(reference)) {\\n+        reference = [reference];\\n+    }\\n \\n+    const [preAmount, postAmount] = splToken\\n+        ? await validateSPLTokenTransfer(message, meta, recipient, splToken, reference)\\n+        : await validateSystemTransfer(message, meta, recipient, reference);\\n     if (postAmount.minus(preAmount).lt(amount)) throw new ValidateTransferError('amount not transferred');\\n \\n-    if (reference) {\\n-        if (!Array.isArray(reference)) {\\n-            reference = [reference];\\n-        }\\n-\\n-        for (const pubkey of reference) {\\n-            if (!message.accountKeys.some((accountKey) => accountKey.equals(pubkey)))\\n-                throw new ValidateTransferError('reference not found');\\n-        }\\n+    if (memo) {\\n+        // Check that the second instruction is a memo instruction with the expected memo.\\n+        const transaction = Transaction.populate(message);\\n+        const instruction = transaction.instructions[1];\\n+        if (!instruction) throw new ValidateTransferError('missing memo instruction');\\n+        if (!instruction.programId.equals(MEMO_PROGRAM_ID)) throw new ValidateTransferError('invalid memo program');\\n+        if (!instruction.data.equals(Buffer.from(memo, 'utf8'))) throw new ValidateTransferError('invalid memo');\\n     }\\n \\n-    // FIXME: add memo check\\n-\\n     return response;\\n }\\n \\n async function validateSystemTransfer(\\n     message: Message,\\n     meta: ConfirmedTransactionMeta,\\n-    recipient: Recipient\\n+    recipient: Recipient,\\n+    references?: Reference[]\\n ): Promise<[BigNumber, BigNumber]> {\\n+    if (references) {\\n+        // Check that the first instruction is a system transfer instruction.\\n+        const transaction = Transaction.populate(message);\\n+        const instruction = transaction.instructions[0];\\n+        SystemInstruction.decodeTransfer(instruction);\\n+\\n+        // Check that the expected reference keys exactly match the extra keys provided to the instruction.\\n+        const [_from, _to, ...extraKeys] = instruction.keys;\\n+        const length = extraKeys.length;\\n+        if (length !== references.length) throw new ValidateTransferError('invalid references');\\n+\\n+        for (let i = 0; i < length; i++) {\\n+            if (!extraKeys[i].pubkey.equals(references[i])) throw new ValidateTransferError(`invalid reference ${i}`);\\n+        }\\n+    }\\n+\\n     const accountIndex = message.accountKeys.findIndex((pubkey) => pubkey.equals(recipient));\\n     if (accountIndex === -1) throw new ValidateTransferError('recipient not found');\\n \\n@@ -98,8 +122,26 @@ async function validateSPLTokenTransfer(\\n     message: Message,\\n     meta: ConfirmedTransactionMeta,\\n     recipient: Recipient,\\n-    splToken: SPLToken\\n+    splToken: SPLToken,\\n+    references?: Reference[]\\n ): Promise<[BigNumber, BigNumber]> {\\n+    if (references) {\\n+        // Check that the first instruction is an SPL token transfer instruction.\\n+        const transaction = Transaction.populate(message);\\n+        const instruction = decodeInstruction(transaction.instructions[0]);\\n+        if (!isTransferCheckedInstruction(instruction) && !isTransferInstruction(instruction))\\n+            throw new ValidateTransferError('invalid transfer');\\n+\\n+        // Check that the expected reference keys exactly match the extra keys provided to the instruction.\\n+        const extraKeys = instruction.keys.multiSigners;\\n+        const length = extraKeys.length;\\n+        if (length !== references.length) throw new ValidateTransferError('invalid references');\\n+\\n+        for (let i = 0; i < length; i++) {\\n+            if (!extraKeys[i].pubkey.equals(references[i])) throw new ValidateTransferError(`invalid reference ${i}`);\\n+        }\\n+    }\\n+\\n     const recipientATA = await getAssociatedTokenAddress(splToken, recipient);\\n     const accountIndex = message.accountKeys.findIndex((pubkey) => pubkey.equals(recipientATA));\\n     if (accountIndex === -1) throw new ValidateTransferError('recipient not found');\"}}",
      "message_norm": "finish transfer validation implementation",
      "language": "en",
      "entities": null,
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['core/src/validateTransfer.ts'])",
      "num_files": 1.0
    },
    {
      "index": 487,
      "vuln_id": "GHSA-4rq4-32rv-6wp6",
      "cwe_id": "{'CWE-269'}",
      "score": 7.1,
      "chain": "{'https://github.com/shelljs/shelljs/commit/d919d22dd6de385edaa9d90313075a77f74b338c'}",
      "dataset": "osv",
      "summary": "Improper Privilege Management in shelljs shelljs is vulnerable to Improper Privilege Management",
      "published_date": "2022-01-21",
      "chain_len": 1,
      "project": "https://github.com/shelljs/shelljs",
      "commit_href": "https://github.com/shelljs/shelljs/commit/d919d22dd6de385edaa9d90313075a77f74b338c",
      "commit_sha": "d919d22dd6de385edaa9d90313075a77f74b338c",
      "patch": "SINGLE",
      "chain_ord": "['d919d22dd6de385edaa9d90313075a77f74b338c']",
      "before_first_fix_commit": "{'fcf1651be9a3bb8e20ba1fd24b8a91f369829c53'}",
      "last_fix_commit": "d919d22dd6de385edaa9d90313075a77f74b338c",
      "chain_ord_pos": 1.0,
      "commit_datetime": "01/07/2022, 05:14:23",
      "message": "fix(exec): lockdown file permissions (#1060)\n\nThis locks down file permissions used by the internal implementation of\r\n`shell.exec()`.\r\n\r\nIssue #1058\r\nTested manually using the documented scenarios",
      "author": "Nate Fischer",
      "comments": null,
      "stats": "{'additions': 19, 'deletions': 1, 'total': 20}",
      "files": "{'src/exec.js': {'additions': 19, 'deletions': 1, 'changes': 20, 'status': 'modified', 'raw_url': 'https://github.com/shelljs/shelljs/raw/d919d22dd6de385edaa9d90313075a77f74b338c/src%2Fexec.js', 'patch': \"@@ -48,7 +48,24 @@ function execSync(cmd, opts, pipe) {\\n     stderrFile: stderrFile,\\n   };\\n \\n-  fs.writeFileSync(paramsFile, JSON.stringify(paramsToSerialize), 'utf8');\\n+  // Create the files and ensure these are locked down (for read and write) to\\n+  // the current user. The main concerns here are:\\n+  //\\n+  // * If we execute a command which prints sensitive output, then\\n+  //   stdoutFile/stderrFile must not be readable by other users.\\n+  // * paramsFile must not be readable by other users, or else they can read it\\n+  //   to figure out the path for stdoutFile/stderrFile and create these first\\n+  //   (locked down to their own access), which will crash exec() when it tries\\n+  //   to write to the files.\\n+  function writeFileLockedDown(filePath, data) {\\n+    fs.writeFileSync(filePath, data, {\\n+      encoding: 'utf8',\\n+      mode: parseInt('600', 8),\\n+    });\\n+  }\\n+  writeFileLockedDown(stdoutFile, '');\\n+  writeFileLockedDown(stderrFile, '');\\n+  writeFileLockedDown(paramsFile, JSON.stringify(paramsToSerialize));\\n \\n   var execArgs = [\\n     path.join(__dirname, 'exec-child.js'),\\n@@ -91,6 +108,7 @@ function execSync(cmd, opts, pipe) {\\n   }\\n \\n   // No biggie if we can't erase the files now -- they're in a temp dir anyway\\n+  // and we locked down permissions (see the note above).\\n   try { common.unlinkSync(paramsFile); } catch (e) {}\\n   try { common.unlinkSync(stderrFile); } catch (e) {}\\n   try { common.unlinkSync(stdoutFile); } catch (e) {}\"}}",
      "message_norm": "fix(exec): lockdown file permissions (#1060)\n\nthis locks down file permissions used by the internal implementation of\r\n`shell.exec()`.\r\n\r\nissue #1058\r\ntested manually using the documented scenarios",
      "language": "en",
      "entities": "[('fix(exec', 'ACTION', ''), ('file permissions', 'SECWORD', ''), ('#1060', 'ISSUE', ''), ('file permissions', 'SECWORD', ''), ('#1058', 'ISSUE', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/exec.js'])",
      "num_files": 1.0
    },
    {
      "index": 1463,
      "vuln_id": "GHSA-c32w-3cqh-f6jx",
      "cwe_id": "{'CWE-640'}",
      "score": 8.8,
      "chain": "{'https://github.com/Dolibarr/dolibarr/commit/87f9530272925f0d651f59337a35661faeb6f377'}",
      "dataset": "osv",
      "summary": "Weak Password Recovery Mechanism for Forgotten Password In \u201cDolibarr\u201d application, v2.8.1 to v13.0.2 are vulnerable to account takeover via password reset functionality. A low privileged attacker can reset the password of any user in the application using the password reset link the user received through email when requested for a forgotten password.",
      "published_date": "2021-09-02",
      "chain_len": 1,
      "project": "https://github.com/Dolibarr/dolibarr",
      "commit_href": "https://github.com/Dolibarr/dolibarr/commit/87f9530272925f0d651f59337a35661faeb6f377",
      "commit_sha": "87f9530272925f0d651f59337a35661faeb6f377",
      "patch": "SINGLE",
      "chain_ord": "['87f9530272925f0d651f59337a35661faeb6f377']",
      "before_first_fix_commit": "{'8b07e99e05a9ed3c57bdc00c6a469fbbaa5672ef'}",
      "last_fix_commit": "87f9530272925f0d651f59337a35661faeb6f377",
      "chain_ord_pos": 1.0,
      "commit_datetime": "07/05/2021, 15:29:10",
      "message": "Fix report by Ahsan Aziz (can reset the password of another user that\ndid not request password reset).",
      "author": "Laurent Destailleur",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 2, 'total': 4}",
      "files": "{'htdocs/user/passwordforgotten.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https://github.com/Dolibarr/dolibarr/raw/87f9530272925f0d651f59337a35661faeb6f377/htdocs%2Fuser%2Fpasswordforgotten.php', 'patch': '@@ -87,14 +87,14 @@\\n \\t// Validate new password\\n \\tif ($action == \\'validatenewpassword\\' && $username && $passworduidhash) {\\n \\t\\t$edituser = new User($db);\\n-\\t\\t$result = $edituser->fetch(\\'\\', $_GET[\"username\"]);\\n+\\t\\t$result = $edituser->fetch(\\'\\', $username);\\n \\t\\tif ($result < 0) {\\n \\t\\t\\t$message = \\'<div class=\"error\">\\'.dol_escape_htmltag($langs->trans(\"ErrorLoginDoesNotExists\", $username)).\\'</div>\\';\\n \\t\\t} else {\\n \\t\\t\\tglobal $dolibarr_main_instance_unique_id;\\n \\n \\t\\t\\t//print $edituser->pass_temp.\\'-\\'.$edituser->id.\\'-\\'.$dolibarr_main_instance_unique_id.\\' \\'.$passworduidhash;\\n-\\t\\t\\tif (dol_verifyHash($edituser->pass_temp.\\'-\\'.$edituser->id.\\'-\\'.$dolibarr_main_instance_unique_id, $passworduidhash)) {\\n+\\t\\t\\tif ($edituser->pass_temp && dol_verifyHash($edituser->pass_temp.\\'-\\'.$edituser->id.\\'-\\'.$dolibarr_main_instance_unique_id, $passworduidhash)) {\\n \\t\\t\\t\\t// Clear session\\n \\t\\t\\t\\tunset($_SESSION[\\'dol_login\\']);\\n \\t\\t\\t\\t$_SESSION[\\'dol_loginmesg\\'] = $langs->trans(\\'NewPasswordValidated\\'); // Save message for the session page'}}",
      "message_norm": "fix report by ahsan aziz (can reset the password of another user that\ndid not request password reset).",
      "language": "en",
      "entities": "[('fix', 'ACTION', ''), ('password', 'SECWORD', ''), ('password', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['htdocs/user/passwordforgotten.php'])",
      "num_files": 1.0
    },
    {
      "index": 205,
      "vuln_id": "GHSA-36p3-wjmg-h94x",
      "cwe_id": "{'CWE-74', 'CWE-94'}",
      "score": 9.8,
      "chain": "{'https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15'}",
      "dataset": "osv",
      "summary": "Remote Code Execution in Spring Framework Spring Framework prior to versions 5.2.20 and 5.3.18 contains a remote code execution vulnerability known as `Spring4Shell`. \n\n## Impact\n\nA Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.\n\nThese are the prerequisites for the exploit:\n- JDK 9 or higher\n- Apache Tomcat as the Servlet container\n- Packaged as WAR\n- `spring-webmvc` or `spring-webflux` dependency\n\n## Patches\n\n- Spring Framework [5.3.18](https://github.com/spring-projects/spring-framework/releases/tag/v5.3.18) and [5.2.20](https://github.com/spring-projects/spring-framework/releases/tag/v5.2.20.RELEASE)\n- Spring Boot [2.6.6](https://github.com/spring-projects/spring-boot/releases/tag/v2.6.6) and [2.5.12](https://github.com/spring-projects/spring-boot/releases/tag/v2.5.12)\n\n## Workarounds\n\nFor those who are unable to upgrade, leaked reports recommend setting `disallowedFields` on `WebDataBinder` through an `@ControllerAdvice`. This works generally, but as a centrally applied workaround fix, may leave some loopholes, in particular if a controller sets `disallowedFields` locally through its own `@InitBinder` method, which overrides the global setting.\n\nTo apply the workaround in a more fail-safe way, applications could extend `RequestMappingHandlerAdapter` to update the `WebDataBinder` at the end after all other initialization. In order to do that, a Spring Boot application can declare a `WebMvcRegistrations` bean (Spring MVC) or a `WebFluxRegistrations` bean (Spring WebFlux).",
      "published_date": "2022-03-31",
      "chain_len": 1,
      "project": "https://github.com/spring-projects/spring-framework",
      "commit_href": "https://github.com/spring-projects/spring-framework/commit/002546b3e4b8d791ea6acccb81eb3168f51abb15",
      "commit_sha": "002546b3e4b8d791ea6acccb81eb3168f51abb15",
      "patch": "SINGLE",
      "chain_ord": "['002546b3e4b8d791ea6acccb81eb3168f51abb15']",
      "before_first_fix_commit": "{'1627f57f1f77abe17dd607c75476b9e4cb22ffbb'}",
      "last_fix_commit": "002546b3e4b8d791ea6acccb81eb3168f51abb15",
      "chain_ord_pos": 1.0,
      "commit_datetime": "03/31/2022, 07:34:51",
      "message": "Refine PropertyDescriptor filtering\n\nRestrict property paths under `Class` and properties of types\n`ClassLoader` or `ProtectionDomain`.",
      "author": "Brian Clozel",
      "comments": null,
      "stats": "{'additions': 14, 'deletions': 4, 'total': 18}",
      "files": "{'spring-beans/src/main/java/org/springframework/beans/CachedIntrospectionResults.java': {'additions': 14, 'deletions': 4, 'changes': 18, 'status': 'modified', 'raw_url': 'https://github.com/spring-projects/spring-framework/raw/002546b3e4b8d791ea6acccb81eb3168f51abb15/spring-beans%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fbeans%2FCachedIntrospectionResults.java', 'patch': '@@ -1,5 +1,5 @@\\n /*\\n- * Copyright 2002-2020 the original author or authors.\\n+ * Copyright 2002-2022 the original author or authors.\\n  *\\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\\n  * you may not use this file except in compliance with the License.\\n@@ -22,6 +22,7 @@\\n import java.beans.PropertyDescriptor;\\n import java.lang.reflect.Method;\\n import java.lang.reflect.Modifier;\\n+import java.security.ProtectionDomain;\\n import java.util.Collections;\\n import java.util.HashSet;\\n import java.util.LinkedHashMap;\\n@@ -286,9 +287,13 @@ private CachedIntrospectionResults(Class<?> beanClass) throws BeansException {\\n \\t\\t\\t// This call is slow so we do it once.\\n \\t\\t\\tPropertyDescriptor[] pds = this.beanInfo.getPropertyDescriptors();\\n \\t\\t\\tfor (PropertyDescriptor pd : pds) {\\n-\\t\\t\\t\\tif (Class.class == beanClass &&\\n-\\t\\t\\t\\t\\t\\t(\"classLoader\".equals(pd.getName()) ||  \"protectionDomain\".equals(pd.getName()))) {\\n-\\t\\t\\t\\t\\t// Ignore Class.getClassLoader() and getProtectionDomain() methods - nobody needs to bind to those\\n+\\t\\t\\t\\tif (Class.class == beanClass && (!\"name\".equals(pd.getName()) && !pd.getName().endsWith(\"Name\"))) {\\n+\\t\\t\\t\\t\\t// Only allow all name variants of Class properties\\n+\\t\\t\\t\\t\\tcontinue;\\n+\\t\\t\\t\\t}\\n+\\t\\t\\t\\tif (pd.getPropertyType() != null && (ClassLoader.class.isAssignableFrom(pd.getPropertyType())\\n+\\t\\t\\t\\t\\t\\t|| ProtectionDomain.class.isAssignableFrom(pd.getPropertyType()))) {\\n+\\t\\t\\t\\t\\t// Ignore ClassLoader and ProtectionDomain types - nobody needs to bind to those\\n \\t\\t\\t\\t\\tcontinue;\\n \\t\\t\\t\\t}\\n \\t\\t\\t\\tif (logger.isTraceEnabled()) {\\n@@ -337,6 +342,11 @@ private void introspectInterfaces(Class<?> beanClass, Class<?> currClass, Set<St\\n \\t\\t\\t\\t\\t\\t// GenericTypeAwarePropertyDescriptor leniently resolves a set* write method\\n \\t\\t\\t\\t\\t\\t// against a declared read method, so we prefer read method descriptors here.\\n \\t\\t\\t\\t\\t\\tpd = buildGenericTypeAwarePropertyDescriptor(beanClass, pd);\\n+\\t\\t\\t\\t\\t\\tif (pd.getPropertyType() != null && (ClassLoader.class.isAssignableFrom(pd.getPropertyType())\\n+\\t\\t\\t\\t\\t\\t\\t\\t|| ProtectionDomain.class.isAssignableFrom(pd.getPropertyType()))) {\\n+\\t\\t\\t\\t\\t\\t\\t// Ignore ClassLoader and ProtectionDomain types - nobody needs to bind to those\\n+\\t\\t\\t\\t\\t\\t\\tcontinue;\\n+\\t\\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\t\\tthis.propertyDescriptors.put(pd.getName(), pd);\\n \\t\\t\\t\\t\\t\\tMethod readMethod = pd.getReadMethod();\\n \\t\\t\\t\\t\\t\\tif (readMethod != null) {'}}",
      "message_norm": "refine propertydescriptor filtering\n\nrestrict property paths under `class` and properties of types\n`classloader` or `protectiondomain`.",
      "language": "en",
      "entities": "[('protectiondomain', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['spring-beans/src/main/java/org/springframework/beans/CachedIntrospectionResults.java'])",
      "num_files": 1.0
    },
    {
      "index": 2158,
      "vuln_id": "GHSA-hx9q-2mx4-m4pg",
      "cwe_id": "{'CWE-191', 'CWE-20'}",
      "score": 5.5,
      "chain": "{'https://github.com/tensorflow/tensorflow/commit/20cb18724b0bf6c09071a3f53434c4eec53cc147', 'https://github.com/tensorflow/tensorflow/commit/84563f265f28b3c36a15335c8b005d405260e943'}",
      "dataset": "osv",
      "summary": "Missing validation causes denial of service via `Conv3DBackpropFilterV2` ### Impact\nThe implementation of [`tf.raw_ops.UnsortedSegmentJoin`](https://github.com/tensorflow/tensorflow/blob/f3b9bf4c3c0597563b289c0512e98d4ce81f886e/tensorflow/core/kernels/unsorted_segment_join_op.cc#L83-L148) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport tensorflow as tf\n\ntf.strings.unsorted_segment_join(\n  inputs=['123'],\n  segment_ids=[0],\n  num_segments=-1)\n```\n\nThe code assumes `num_segments` is a positive scalar but there is no validation:\n\n```cc\nconst Tensor& num_segments_tensor = context->input(2);\nauto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\n// ...\nTensor* output_tensor = nullptr;\nTensorShape output_shape =\n    GetOutputShape(input_shape, segment_id_shape, num_segments);\n```\n\nSince this value is used to allocate the output tensor, a negative value would result in a `CHECK`-failure (assertion failure), as per [TFSA-2021-198](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/security/advisory/tfsa-2021-198.md).\n\n### Patches \nWe have patched the issue in GitHub commit [84563f265f28b3c36a15335c8b005d405260e943](https://github.com/tensorflow/tensorflow/commit/84563f265f28b3c36a15335c8b005d405260e943) and GitHub commit [20cb18724b0bf6c09071a3f53434c4eec53cc147](https://github.com/tensorflow/tensorflow/commit/20cb18724b0bf6c09071a3f53434c4eec53cc147).\n  \nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n      \n### For more information \nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n                       \n### Attribution \nThis vulnerability has been reported externally via a [GitHub issue](https://github.com/tensorflow/tensorflow/issues/55305).",
      "published_date": "2022-05-24",
      "chain_len": 2,
      "project": "https://github.com/tensorflow/tensorflow",
      "commit_href": "https://github.com/tensorflow/tensorflow/commit/84563f265f28b3c36a15335c8b005d405260e943",
      "commit_sha": "84563f265f28b3c36a15335c8b005d405260e943",
      "patch": "MULTI",
      "chain_ord": "['84563f265f28b3c36a15335c8b005d405260e943', '20cb18724b0bf6c09071a3f53434c4eec53cc147']",
      "before_first_fix_commit": "{'3f30e4965889b1b86b1d56392e437ccc08907f65'}",
      "last_fix_commit": "20cb18724b0bf6c09071a3f53434c4eec53cc147",
      "chain_ord_pos": 1.0,
      "commit_datetime": "04/15/2022, 17:34:16",
      "message": "Validate `num_segments > 0` in `unsorted_segment_join`\n\nFixes #55305\n\nPiperOrigin-RevId: 442047005",
      "author": "Mihai Maruseac",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 0, 'total': 2}",
      "files": "{'tensorflow/core/kernels/unsorted_segment_join_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/tensorflow/tensorflow/raw/84563f265f28b3c36a15335c8b005d405260e943/tensorflow%2Fcore%2Fkernels%2Funsorted_segment_join_op.cc', 'patch': '@@ -94,6 +94,8 @@ class UnsortedSegmentJoinOp : public OpKernel {\\n                 errors::InvalidArgument(\"Number of segments cannot be empty.\"));\\n     auto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\\n \\n+    OP_REQUIRES(context, num_segments > 0,\\n+                errors::InvalidArgument(\"Number of segments must be positive\"));\\n     OP_REQUIRES(context, segment_dims != 0,\\n                 errors::InvalidArgument(\"Segment_id cannot have rank 0\"));'}}",
      "message_norm": "validate `num_segments > 0` in `unsorted_segment_join`\n\nfixes #55305\n\npiperorigin-revid: 442047005",
      "language": "ca",
      "entities": "[('validate', 'ACTION', ''), ('fixes', 'ACTION', ''), ('#55305', 'ISSUE', ''), ('442047005', 'SHA', 'generic_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['tensorflow/core/kernels/unsorted_segment_join_op.cc'])",
      "num_files": 1.0
    },
    {
      "index": 1745,
      "vuln_id": "GHSA-fjqr-fx3f-g4rv",
      "cwe_id": "{'CWE-78'}",
      "score": 8.8,
      "chain": "{'https://github.com/electron/electron/commit/ce361a12e355f9e1e99c989f1ea056c9e502dbe7'}",
      "dataset": "osv",
      "summary": "Electron protocol handler browser vulnerable to Command Injection Github Electron version Electron 1.8.2-beta.4 and earlier contains a Command Injection vulnerability in Protocol Handler that can result in command execute. This attack appear to be exploitable via the victim opening an electron protocol handler in their browser. This vulnerability appears to have been fixed in Electron 1.8.2-beta.5. This issue is due to an incomplete fix for CVE-2018-1000006, specifically the black list used was not case insensitive allowing an attacker to potentially bypass it.",
      "published_date": "2018-03-26",
      "chain_len": 1,
      "project": "https://github.com/electron/electron",
      "commit_href": "https://github.com/electron/electron/commit/ce361a12e355f9e1e99c989f1ea056c9e502dbe7",
      "commit_sha": "ce361a12e355f9e1e99c989f1ea056c9e502dbe7",
      "patch": "SINGLE",
      "chain_ord": "['ce361a12e355f9e1e99c989f1ea056c9e502dbe7']",
      "before_first_fix_commit": "{'278c58055ed36f6f22cea05a9cd85a5ab4fb3010'}",
      "last_fix_commit": "ce361a12e355f9e1e99c989f1ea056c9e502dbe7",
      "chain_ord_pos": 1.0,
      "commit_datetime": "02/01/2018, 00:35:09",
      "message": "Use case-insensitive switch comparisons",
      "author": "Samuel Attard",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 1, 'total': 3}",
      "files": "{'atom/app/command_line_args.cc': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https://github.com/electron/electron/raw/ce361a12e355f9e1e99c989f1ea056c9e502dbe7/atom%2Fapp%2Fcommand_line_args.cc', 'patch': '@@ -1390,7 +1390,8 @@ bool IsBlacklistedArg(const base::CommandLine::CharType* arg) {\\n \\n   if (prefix_length > 0) {\\n     a += prefix_length;\\n-    std::string switch_name(a, strcspn(a, \"=\"));\\n+    std::string switch_name =\\n+        base::ToLowerASCII(base::StringPiece(a, strcspn(a, \"=\")));\\n     auto* iter = std::lower_bound(std::begin(kBlacklist), std::end(kBlacklist),\\n                                   switch_name);\\n     if (iter != std::end(kBlacklist) && switch_name == *iter) {'}}",
      "message_norm": "use case-insensitive switch comparisons",
      "language": "en",
      "entities": null,
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['atom/app/command_line_args.cc'])",
      "num_files": 1.0
    },
    {
      "index": 1271,
      "vuln_id": "GHSA-8w3x-r6x7-c5r5",
      "cwe_id": "{'CWE-79'}",
      "score": 6.1,
      "chain": "{'https://github.com/pimcore/pimcore/commit/3c2a14e676a57e5d77a16255965988eef48f9065'}",
      "dataset": "osv",
      "summary": "Cross-site Scripting in pimcore pimcore is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "published_date": "2021-12-16",
      "chain_len": 1,
      "project": "https://github.com/pimcore/pimcore",
      "commit_href": "https://github.com/pimcore/pimcore/commit/3c2a14e676a57e5d77a16255965988eef48f9065",
      "commit_sha": "3c2a14e676a57e5d77a16255965988eef48f9065",
      "patch": "SINGLE",
      "chain_ord": "['3c2a14e676a57e5d77a16255965988eef48f9065']",
      "before_first_fix_commit": "{'a5e13bea6315b7bee8fb44f83a38029d065f97a3'}",
      "last_fix_commit": "3c2a14e676a57e5d77a16255965988eef48f9065",
      "chain_ord_pos": 1.0,
      "commit_datetime": "12/09/2021, 11:53:00",
      "message": "[Admin UI] DataObject Class - escape general settings input values (#10991)\n\n* [Admin UI] DataObject Class - escape general settings input values\r\n\r\n* Update bundles/AdminBundle/Resources/public/js/pimcore/object/classes/class.js\r\n\r\n* [Admin UI] DataObject Class - escape general settings input values\r\n\r\n* [Admin UI] DataObject Class - escape general settings input values",
      "author": "Divesh Pahuja",
      "comments": null,
      "stats": "{'additions': 20, 'deletions': 1, 'total': 21}",
      "files": "{'bundles/AdminBundle/Resources/public/js/pimcore/object/classes/class.js': {'additions': 20, 'deletions': 1, 'changes': 21, 'status': 'modified', 'raw_url': 'https://github.com/pimcore/pimcore/raw/3c2a14e676a57e5d77a16255965988eef48f9065/bundles%2FAdminBundle%2FResources%2Fpublic%2Fjs%2Fpimcore%2Fobject%2Fclasses%2Fclass.js', 'patch': '@@ -607,7 +607,12 @@ pimcore.object.classes.klass = Class.create({\\n                 for (var i = 0; i < items.length; i++) {\\n                     var item = items[i];\\n                     if (typeof item.getValue == \"function\") {\\n-                        this.data[item.name] = item.getValue();\\n+                        let value = item.getValue();\\n+                        if (typeof item.config.xtype !== \\'undefined\\' && item.config.xtype === \\'textfield\\') {\\n+                            value = Ext.util.Format.htmlEncode(value);\\n+                        }\\n+\\n+                        this.data[item.name] = value;\\n                     }\\n                 }\\n \\n@@ -705,6 +710,7 @@ pimcore.object.classes.klass = Class.create({\\n             id: \"iconfield-\" + this.getId(),\\n             name: \"icon\",\\n             width: 396,\\n+            renderer: Ext.util.Format.htmlEncode,\\n             value: this.data.icon,\\n             listeners: {\\n                 \"afterrender\": function (el) {\\n@@ -752,6 +758,7 @@ pimcore.object.classes.klass = Class.create({\\n                     width: 500,\\n                     enableKeyEvents: true,\\n                     value: this.data.name,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     listeners: {\\n                         keyup: function (el) {\\n                             this.rootPanel.getComponent(\"phpClassName\").setValue(getPhpClassName(el.getValue()))\\n@@ -763,12 +770,14 @@ pimcore.object.classes.klass = Class.create({\\n                     fieldLabel: t(\"description\"),\\n                     name: \"description\",\\n                     width: 500,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.description\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"unique_identifier\"),\\n                     disabled: true,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.id,\\n                     width: 500\\n                 },\\n@@ -779,62 +788,71 @@ pimcore.object.classes.klass = Class.create({\\n                     itemId: \"phpClassName\",\\n                     width: 500,\\n                     disabled: true,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: getPhpClassName(this.data.name)\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"parent_php_class\"),\\n                     name: \"parentClass\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.parentClass\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     width: 600,\\n                     name: \"implementsInterfaces\",\\n                     fieldLabel: t(\"implements_interfaces\"),\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.implementsInterfaces\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"use_traits\"),\\n                     name: \"useTraits\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.useTraits\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"listing_parent_php_class\"),\\n                     name: \"listingParentClass\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.listingParentClass\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"listing_use_traits\"),\\n                     name: \"listingUseTraits\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.listingUseTraits\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"link_generator_reference\"),\\n                     name: \"linkGeneratorReference\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.linkGeneratorReference\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"preview_generator_reference\"),\\n                     name: \"previewGeneratorReference\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.previewGeneratorReference\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"preview_url\"),\\n                     name: \"previewUrl\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.previewUrl\\n                 },\\n                 {\\n@@ -885,6 +903,7 @@ pimcore.object.classes.klass = Class.create({\\n                     fieldLabel: t(\"group\"),\\n                     name: \"group\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.group\\n                 },\\n                 this.allowInheritance,'}}",
      "message_norm": "[admin ui] dataobject class - escape general settings input values (#10991)\n\n* [admin ui] dataobject class - escape general settings input values\r\n\r\n* update bundles/adminbundle/resources/public/js/pimcore/object/classes/class.js\r\n\r\n* [admin ui] dataobject class - escape general settings input values\r\n\r\n* [admin ui] dataobject class - escape general settings input values",
      "language": "ca",
      "entities": "[('admin', 'SECWORD', ''), ('escape', 'SECWORD', ''), ('#10991', 'ISSUE', ''), ('admin', 'SECWORD', ''), ('escape', 'SECWORD', ''), ('update', 'ACTION', ''), ('adminbundle', 'SECWORD', ''), ('admin', 'SECWORD', ''), ('escape', 'SECWORD', ''), ('admin', 'SECWORD', ''), ('escape', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['bundles/AdminBundle/Resources/public/js/pimcore/object/classes/class.js'])",
      "num_files": 1.0
    },
    {
      "index": 2440,
      "vuln_id": "GHSA-mmhj-4w6j-76h7",
      "cwe_id": "{'CWE-913'}",
      "score": 8.0,
      "chain": "{'https://github.com/laverdet/isolated-vm/commit/2646e6c1558bac66285daeab54c7d490ed332b15', 'https://github.com/laverdet/isolated-vm/commit/27151bfecc260e96714443613880e3b2e6596704'}",
      "dataset": "osv",
      "summary": "Misuse of `Reference` and other transferable APIs may lead to access to nodejs isolate Versions of `isolated-vm` before v4.0.0, and especially before v3.0.0, have API pitfalls which may make it easy for implementers to expose supposed secure isolates to the permissions of the main nodejs isolate.\n\n`Reference` objects allow access to the underlying reference's full prototype chain. In an environment where the implementer has exposed a `Reference` instance to an attacker they would be able to use it to acquire a `Reference` to the nodejs context's `Function` object.\n\nSimilar application-specific attacks could be possible by modifying the local prototype of other API objects.\n\nAccess to `NativeModule` objects could allow an attacker to load and run native code from anywhere on the filesystem. If combined with, for example, a file upload API this would allow for arbitrary code execution.\n\nTo address these issues the following changes were made in v4.0.0:\n- Documentation was updated with more explicit guidelines on building secure applications.\n- `Reference` instances will no longer follow prototype chains by default, nor will they invoke accessors or proxies.\n- All `isolated-vm` API prototypes are now immutable.\n- `NativeModule` constructor may only be invoked from a nodejs isolate.",
      "published_date": "2021-04-06",
      "chain_len": 2,
      "project": "https://github.com/laverdet/isolated-vm",
      "commit_href": "https://github.com/laverdet/isolated-vm/commit/27151bfecc260e96714443613880e3b2e6596704",
      "commit_sha": "27151bfecc260e96714443613880e3b2e6596704",
      "patch": "MULTI",
      "chain_ord": "['27151bfecc260e96714443613880e3b2e6596704', '2646e6c1558bac66285daeab54c7d490ed332b15']",
      "before_first_fix_commit": "{'3a2408a2b42ac51c64a6c10f9388a6f7cc311156'}",
      "last_fix_commit": "2646e6c1558bac66285daeab54c7d490ed332b15",
      "chain_ord_pos": 1.0,
      "commit_datetime": "03/18/2021, 20:20:24",
      "message": "Disallow NativeModule creation unless main isolate",
      "author": "Marcel Laverdet",
      "comments": null,
      "stats": "{'additions': 3, 'deletions': 0, 'total': 3}",
      "files": "{'src/module/native_module_handle.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https://github.com/laverdet/isolated-vm/raw/27151bfecc260e96714443613880e3b2e6596704/src%2Fmodule%2Fnative_module_handle.cc', 'patch': '@@ -15,6 +15,9 @@ namespace ivm {\\n  * RAII wrapper around libuv dlopen\\n  */\\n NativeModule::NativeModule(const std::string& filename) : init(nullptr) {\\n+\\tif (!IsolateEnvironment::GetCurrent()->IsDefault()) {\\n+\\t\\tthrow RuntimeGenericError(\"NativeModule may only be instantiated from default nodejs isolate\");\\n+\\t}\\n \\tif (uv_dlopen(filename.c_str(), &lib) != 0) {\\n \\t\\tthrow RuntimeGenericError(\"Failed to load module\");\\n \\t}'}}",
      "message_norm": "disallow nativemodule creation unless main isolate",
      "language": "en",
      "entities": null,
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/module/native_module_handle.cc'])",
      "num_files": 1.0
    },
    {
      "index": 743,
      "vuln_id": "GHSA-6445-fm66-fvq2",
      "cwe_id": "{'CWE-190'}",
      "score": 6.5,
      "chain": "{'https://github.com/tensorflow/tensorflow/commit/b51b82fe65ebace4475e3c54eb089c18a4403f1c', 'https://github.com/tensorflow/tensorflow/commit/a68f68061e263a88321c104a6c911fe5598050a8'}",
      "dataset": "osv",
      "summary": "Integer overflows in Tensorflow ### Impact \nThe [implementation of `AddManySparseToTensorsMap`](https://github.com/tensorflow/tensorflow/blob/5100e359aef5c8021f2e71c7b986420b85ce7b3d/tensorflow/core/kernels/sparse_tensors_map_ops.cc) is vulnerable to an integer overflow which results in a `CHECK`-fail when building new `TensorShape` objects (so, an assert failure based denial of service):\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.raw_ops.AddManySparseToTensorsMap(\n    sparse_indices=[(0,0),(0,1),(0,2),(4,3),(5,0),(5,1)],\n    sparse_values=[1,1,1,1,1,1],\n    sparse_shape=[2**32,2**32],\n    container='',\n    shared_name='',\n    name=None)\n```\n\nWe are missing some validation on the shapes of the input tensors as well as directly constructing a large `TensorShape` with user-provided dimensions. The latter is an instance of [TFSA-2021-198](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/security/advisory/tfsa-2021-198.md) (CVE-2021-41197) and is easily fixed by replacing a call to `TensorShape` constructor with a call to `BuildTensorShape` static helper factory.\n### Patches\nWe have patched the issue in GitHub commits [b51b82fe65ebace4475e3c54eb089c18a4403f1c](https://github.com/tensorflow/tensorflow/commit/b51b82fe65ebace4475e3c54eb089c18a4403f1c) and [a68f68061e263a88321c104a6c911fe5598050a8](https://github.com/tensorflow/tensorflow/commit/a68f68061e263a88321c104a6c911fe5598050a8).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Faysal Hossain Shezan from University of Virginia.",
      "published_date": "2022-02-09",
      "chain_len": 2,
      "project": "https://github.com/tensorflow/tensorflow",
      "commit_href": "https://github.com/tensorflow/tensorflow/commit/a68f68061e263a88321c104a6c911fe5598050a8",
      "commit_sha": "a68f68061e263a88321c104a6c911fe5598050a8",
      "patch": "MULTI",
      "chain_ord": "['b51b82fe65ebace4475e3c54eb089c18a4403f1c', 'a68f68061e263a88321c104a6c911fe5598050a8']",
      "before_first_fix_commit": "{'e8f4be7958736823b9f56090611ec2fb09824d51'}",
      "last_fix_commit": "a68f68061e263a88321c104a6c911fe5598050a8",
      "chain_ord_pos": 2.0,
      "commit_datetime": "12/10/2021, 00:17:26",
      "message": "Replace faulty overflow check with a builder for `TensorShape`.\n\nPrevents an integer overflow that was not caught before.\n\nPiperOrigin-RevId: 415381595\nChange-Id: I76585ddedc912bd9f4a390aeafa8e2ced1a28863",
      "author": "Mihai Maruseac",
      "comments": null,
      "stats": "{'additions': 3, 'deletions': 15, 'total': 18}",
      "files": "{'tensorflow/core/kernels/sparse_tensors_map_ops.cc': {'additions': 3, 'deletions': 15, 'changes': 18, 'status': 'modified', 'raw_url': 'https://github.com/tensorflow/tensorflow/raw/a68f68061e263a88321c104a6c911fe5598050a8/tensorflow%2Fcore%2Fkernels%2Fsparse_tensors_map_ops.cc', 'patch': '@@ -263,22 +263,10 @@ class AddManySparseToTensorsMapOp : public SparseTensorAccessingOp {\\n             \"Rank of input SparseTensor should be > 1, but saw rank: \", rank));\\n \\n     auto input_shape_vec = input_shape->vec<int64_t>();\\n-    int new_num_elements = 1;\\n-    bool overflow_ocurred = false;\\n-    for (int i = 0; i < input_shape_vec.size(); i++) {\\n-      new_num_elements =\\n-          MultiplyWithoutOverflow(new_num_elements, input_shape_vec(i));\\n-      if (new_num_elements < 0) {\\n-        overflow_ocurred = true;\\n-        break;\\n-      }\\n-    }\\n-\\n-    OP_REQUIRES(\\n-        context, !overflow_ocurred,\\n-        errors::Internal(\"Encountered overflow from large input shape.\"));\\n \\n-    TensorShape tensor_input_shape(input_shape_vec);\\n+    TensorShape tensor_input_shape;\\n+    OP_REQUIRES_OK(context, TensorShape::BuildTensorShape(input_shape_vec,\\n+                                                          &tensor_input_shape));\\n     gtl::InlinedVector<int64_t, 8> std_order(rank);\\n     std::iota(std_order.begin(), std_order.end(), 0);\\n     SparseTensor input_st;'}}",
      "message_norm": "replace faulty overflow check with a builder for `tensorshape`.\n\nprevents an integer overflow that was not caught before.\n\npiperorigin-revid: 415381595\nchange-id: i76585ddedc912bd9f4a390aeafa8e2ced1a28863",
      "language": "en",
      "entities": "[('overflow', 'SECWORD', ''), ('prevents', 'ACTION', ''), ('integer overflow', 'SECWORD', ''), ('415381595', 'SHA', 'generic_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['tensorflow/core/kernels/sparse_tensors_map_ops.cc'])",
      "num_files": 1.0
    },
    {
      "index": 318,
      "vuln_id": "GHSA-3wcq-x3mq-6r9p",
      "cwe_id": "{'CWE-908', 'CWE-200'}",
      "score": 7.7,
      "chain": "{'https://github.com/mafintosh/dns-packet/commit/0d0d593f8df4e2712c43957a6c62e95047f12b2d', 'https://github.com/mafintosh/dns-packet/commit/25f15dd0fedc53688b25fd053ebbdffe3d5c1c56'}",
      "dataset": "osv",
      "summary": "Potential memory exposure in dns-packet This affects the package dns-packet before versions 1.3.2 and 5.2.2. It creates buffers with allocUnsafe and does not always fill them before forming network packets. This can expose internal application memory over unencrypted network when querying crafted invalid domain names.",
      "published_date": "2021-05-24",
      "chain_len": 2,
      "project": "https://github.com/mafintosh/dns-packet",
      "commit_href": "https://github.com/mafintosh/dns-packet/commit/0d0d593f8df4e2712c43957a6c62e95047f12b2d",
      "commit_sha": "0d0d593f8df4e2712c43957a6c62e95047f12b2d",
      "patch": "MULTI",
      "chain_ord": "['25f15dd0fedc53688b25fd053ebbdffe3d5c1c56', '0d0d593f8df4e2712c43957a6c62e95047f12b2d']",
      "before_first_fix_commit": "{'7f35bac5b4680d7bfbb34fbc475ecfdbf9d25092'}",
      "last_fix_commit": "0d0d593f8df4e2712c43957a6c62e95047f12b2d",
      "chain_ord_pos": 2.0,
      "commit_datetime": "05/25/2021, 08:35:02",
      "message": "backport encodingLength fix to v1",
      "author": "Mathias Buus",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 1, 'total': 3}",
      "files": "{'index.js': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https://github.com/mafintosh/dns-packet/raw/0d0d593f8df4e2712c43957a6c62e95047f12b2d/index.js', 'patch': \"@@ -74,7 +74,8 @@ name.decode = function (buf, offset) {\\n name.decode.bytes = 0\\n \\n name.encodingLength = function (n) {\\n-  return Buffer.byteLength(n) + 2\\n+  if (n === '.') return 1\\n+  return Buffer.byteLength(n.replace(/^\\\\.|\\\\.$/gm, '')) + 2\\n }\\n \\n var string = {}\"}}",
      "message_norm": "backport encodinglength fix to v1",
      "language": "en",
      "entities": "[('encodinglength', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['index.js'])",
      "num_files": 1.0
    },
    {
      "index": 784,
      "vuln_id": "GHSA-6898-wx94-8jq8",
      "cwe_id": "{'CWE-74'}",
      "score": 9.8,
      "chain": "{'https://github.com/mytrile/node-libnotify/commit/dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448'}",
      "dataset": "osv",
      "summary": "Potential Command Injection in libnotify Versions 1.0.3 and earlier of libnotify are affected by a shell command injection vulnerability. This may result in execution of arbitrary shell commands, if user input is passed into libnotify.notify.\n\nUntrusted input passed in the call to libnotify.notify could result in execution of shell commands. Callers may be unaware of this.\n\n### Example\n```\nvar libnotify = require('libnotify')\nlibnotify.notify('UNTRUSTED INPUT', { title: \\\"\\\" }, function () {\n    console.log(arguments);\n})\n```\n\nSpecial thanks to Neal Poole for submitting the pull request to fix this issue.\n\n\n## Recommendation\n\nUpdate to version 1.0.4 or greater",
      "published_date": "2020-08-31",
      "chain_len": 1,
      "project": "https://github.com/mytrile/node-libnotify",
      "commit_href": "https://github.com/mytrile/node-libnotify/commit/dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448",
      "commit_sha": "dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448",
      "patch": "SINGLE",
      "chain_ord": "['dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448']",
      "before_first_fix_commit": "{'8e2e7306088624503ba5eec592b502c4f97d8846', '688e135134c4e45abf18d42ddb85a7ab8c9a7ab8'}",
      "last_fix_commit": "dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448",
      "chain_ord_pos": 1.0,
      "commit_datetime": "05/14/2013, 19:46:34",
      "message": "Merge pull request #4 from nealpoole/exec-fix\n\nReplacing call to exec with execFile.",
      "author": "Dimitar Kostov",
      "comments": null,
      "stats": "{'additions': 4, 'deletions': 5, 'total': 9}",
      "files": "{'lib/libnotify.js': {'additions': 4, 'deletions': 5, 'changes': 9, 'status': 'modified', 'raw_url': 'https://github.com/mytrile/node-libnotify/raw/dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448/lib%2Flibnotify.js', 'patch': '@@ -55,18 +55,17 @@ exports.binVersion = function(callback) {\\n \\n exports.notify = function(msg, options, callback) {\\n   var image,\\n-      args = [\\'notify-send\\',\\'\"\\' + msg + \\'\"\\'],\\n+      args = [msg],\\n       options = options || {}\\n   this.binVersion(function(err, version){\\n     if (err) return callback(err)\\n-    if (image = options.image) args.push(\\'-i \\' + image)\\n+    if (image = options.image) args.push(\\'-i\\', image)\\n     if (options.time) args.push(\\'-t\\', options.time)\\n     if (options.category) args.push(\\'-c\\', options.category)\\n     if (options.urgency) args.push(\\'-u\\', options.urgency)\\n     if (options.title) {\\n-      args.shift()\\n-      args.unshift(\\'notify-send\\', \\'\"\\'+ options.title +\\'\"\\')\\n+      args.unshift(options.title)\\n     }\\n-    child_process.exec(args.join(\\' \\'), callback)\\n+    child_process.execFile(\\'notify-send\\', args, {}, callback)\\n   })\\n }'}}",
      "message_norm": "merge pull request #4 from nealpoole/exec-fix\n\nreplacing call to exec with execfile.",
      "language": "en",
      "entities": "[('#4', 'ISSUE', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['lib/libnotify.js'])",
      "num_files": 1.0
    },
    {
      "index": 792,
      "vuln_id": "GHSA-694p-xrhg-x3wm",
      "cwe_id": "{'CWE-444'}",
      "score": 9.8,
      "chain": "{'https://github.com/micronaut-projects/micronaut-core/commit/9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1', 'https://github.com/micronaut-projects/micronaut-core/commit/6deb60b75517f80c57b42d935f07955c773b766d', 'https://github.com/micronaut-projects/micronaut-core/commit/bc855e439c4a5ced3d83195bb59d0679cbd95add'}",
      "dataset": "osv",
      "summary": "CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request Header Injection') ### Vulnerability\n\nMicronaut's HTTP client is vulnerable to \"HTTP Request Header Injection\" due to not validating request headers passed to the client.\n\nExample of vulnerable code:\n\n```java\n@Controller(\"/hello\")\npublic class HelloController {\n\n    @Inject\n    @Client(\"/\")\n    RxHttpClient client;\n\n    @Get(\"/external-exploit\")\n    @Produces(MediaType.TEXT_PLAIN)\n    public String externalExploit(@QueryValue(\"header-value\") String headerValue) {\n        return client.toBlocking().retrieve(\n            HttpRequest.GET(\"/hello\")\n                .header(\"Test\", headerValue)\n        );\n    }\n}\n```\n\nIn the above case a query value received from a user is passed as a header value to the client. Since the client doesn't validate the header value the request headers and body have the potential to be manipulated.\n\nFor example, a user that supplies the following payload, can force the client to make multiple attacker-controlled HTTP requests.\n\n```java\nList<String> headerData = List.of(\n    \"Connection: Keep-Alive\", // This keeps the connection open so another request can be stuffed in.\n    \"\",\n    \"\",\n    \"POST /hello/super-secret HTTP/1.1\",\n    \"Host: 127.0.0.1\",\n    \"Content-Length: 31\",\n    \"\",\n    \"{\\\"new\\\":\\\"json\\\",\\\"content\\\":\\\"here\\\"}\",\n    \"\",\n    \"\"\n);\nString headerValue = \"H\\r\\n\" + String.join(\"\\r\\n\", headerData);;\nURI theURI =\n    UriBuilder\n        .of(\"/hello/external-exploit\")\n        .queryParam(\"header-value\", headerValue) // Automatically URL encodes data\n        .build();\nHttpRequest<String> request = HttpRequest.GET(theURI);\nString body = client.toBlocking().retrieve(request);\n```\n\nNote that using `@HeaderValue` instead of `@QueryValue` is not vulnerable since Micronaut's HTTP server does validate the headers passed to the server, so the exploit can only be triggered by using user data that is not an HTTP header (query values, form data etc.).\n\n### Impact\n\nThe attacker is able to control the entirety of the HTTP body for their custom requests.\nAs such, this vulnerability enables attackers to perform a variant of [Server Side Request Forgery](https://cwe.mitre.org/data/definitions/918.html).\n\n### Patches\n\nThe problem has been patched in the `micronaut-http-client` versions 1.2.11 and 1.3.2 and above.\n\n### Workarounds\n\nDo not pass user data directly received from HTTP request parameters as headers in the HTTP client.\n\n### References\n\nFix commits\n- https://github.com/micronaut-projects/micronaut-core/commit/9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1\n- https://github.com/micronaut-projects/micronaut-core/commit/6deb60b75517f80c57b42d935f07955c773b766d\n- https://github.com/micronaut-projects/micronaut-core/commit/bc855e439c4a5ced3d83195bb59d0679cbd95add\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [micronaut-core](https://github.com/micronaut-projects/micronaut-core)\n* Email us at [info@micronaut.io](mailto:info@micronaut.io)\n\n### Credit\n\nOriginally reported by @JLLeitschuh",
      "published_date": "2020-03-30",
      "chain_len": 3,
      "project": "https://github.com/micronaut-projects/micronaut-core",
      "commit_href": "https://github.com/micronaut-projects/micronaut-core/commit/9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1",
      "commit_sha": "9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1",
      "patch": "MULTI",
      "chain_ord": "['6deb60b75517f80c57b42d935f07955c773b766d', 'bc855e439c4a5ced3d83195bb59d0679cbd95add', '9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1']",
      "before_first_fix_commit": "{'a2392f4289f7777c4a310c3ae3bb4bc0ce5a65c2'}",
      "last_fix_commit": "9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1",
      "chain_ord_pos": 3.0,
      "commit_datetime": "03/09/2020, 18:20:28",
      "message": "Validate client headers",
      "author": "jameskleeh",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 1, 'total': 2}",
      "files": "{'http-netty/src/main/java/io/micronaut/http/netty/NettyHttpHeaders.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/micronaut-projects/micronaut-core/raw/9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1/http-netty%2Fsrc%2Fmain%2Fjava%2Fio%2Fmicronaut%2Fhttp%2Fnetty%2FNettyHttpHeaders.java', 'patch': '@@ -53,7 +53,7 @@ public NettyHttpHeaders(io.netty.handler.codec.http.HttpHeaders nettyHeaders, Co\\n      * Default constructor.\\n      */\\n     public NettyHttpHeaders() {\\n-        this.nettyHeaders = new DefaultHttpHeaders(false);\\n+        this.nettyHeaders = new DefaultHttpHeaders();\\n         this.conversionService = ConversionService.SHARED;\\n     }'}}",
      "message_norm": "validate client headers",
      "language": "nl",
      "entities": "[('validate', 'ACTION', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['http-netty/src/main/java/io/micronaut/http/netty/NettyHttpHeaders.java'])",
      "num_files": 1.0
    },
    {
      "index": 223,
      "vuln_id": "GHSA-38m9-3vg4-rwvp",
      "cwe_id": "{'CWE-79'}",
      "score": 6.5,
      "chain": "{'https://github.com/microweber/microweber/commit/2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8'}",
      "dataset": "osv",
      "summary": "Cross-site Scripting in microweber microweber prior to version 1.2.11 is vulnerable to cross-site scripting.",
      "published_date": "2022-02-20",
      "chain_len": 1,
      "project": "https://github.com/microweber/microweber",
      "commit_href": "https://github.com/microweber/microweber/commit/2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8",
      "commit_sha": "2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8",
      "patch": "SINGLE",
      "chain_ord": "['2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8']",
      "before_first_fix_commit": "{'93e1e59185d1fdf921d89a887887bca988b12085'}",
      "last_fix_commit": "2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8",
      "chain_ord_pos": 1.0,
      "commit_datetime": "02/18/2022, 10:09:45",
      "message": "Update UrlManager.php",
      "author": "Bozhidar Slaveykov",
      "comments": null,
      "stats": "{'additions': 3, 'deletions': 0, 'total': 3}",
      "files": "{'src/MicroweberPackages/Helper/UrlManager.php': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https://github.com/microweber/microweber/raw/2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8/src%2FMicroweberPackages%2FHelper%2FUrlManager.php', 'patch': '@@ -114,6 +114,9 @@ public function redirect($url)\\n         $redirectUrl = str_replace(\"\\\\r\", \"\", $redirectUrl);\\n         $redirectUrl = str_replace(\"\\\\n\", \"\", $redirectUrl);\\n \\n+        $clearInput = new HTMLClean();\\n+        $redirectUrl = $clearInput->clean($redirectUrl);\\n+\\n         if (headers_sent()) {\\n             echo \\'<meta http-equiv=\"refresh\" content=\"0;url=\\' . $redirectUrl . \\'\">\\';\\n         } else {'}}",
      "message_norm": "update urlmanager.php",
      "language": "sv",
      "entities": null,
      "classification_level_1": "POORLY_DOCUMENTED",
      "classification_level_2": "SUBMIT_CENTERED",
      "list_files": "dict_keys(['src/MicroweberPackages/Helper/UrlManager.php'])",
      "num_files": 1.0
    },
    {
      "index": 1073,
      "vuln_id": "GHSA-7r8m-45gc-m2c8",
      "cwe_id": "{'CWE-311'}",
      "score": 0.0,
      "chain": "{'https://github.com/Janpot/mongodb-instance/commit/c8fea750f8020ace8410c442b2684b33a9fddd3b'}",
      "dataset": "osv",
      "summary": "Downloads Resources over HTTP in mongodb-instance Affected versions of `mongodb-instance` insecurely download an executable over an unencrypted HTTP connection. \n\nIn scenarios where an attacker has a privileged network position, it is possible to intercept the response and replace the executable with a malicious one, resulting in code execution on the system running `mongodb-instance`.\n\n\n## Recommendation\n\nUpdate to version 0.0.3 or later.",
      "published_date": "2019-02-18",
      "chain_len": 1,
      "project": "https://github.com/Janpot/mongodb-instance",
      "commit_href": "https://github.com/Janpot/mongodb-instance/commit/c8fea750f8020ace8410c442b2684b33a9fddd3b",
      "commit_sha": "c8fea750f8020ace8410c442b2684b33a9fddd3b",
      "patch": "SINGLE",
      "chain_ord": "['c8fea750f8020ace8410c442b2684b33a9fddd3b']",
      "before_first_fix_commit": "{'02ce5a3c48d7ac1f6c33819b0c79afecbacace70'}",
      "last_fix_commit": "c8fea750f8020ace8410c442b2684b33a9fddd3b",
      "chain_ord_pos": 1.0,
      "commit_datetime": "11/02/2016, 14:19:21",
      "message": "use https",
      "author": "Jan Potoms",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 1, 'total': 2}",
      "files": "{'install.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/Janpot/mongodb-instance/raw/c8fea750f8020ace8410c442b2684b33a9fddd3b/install.js', 'patch': \"@@ -37,7 +37,7 @@ if (process.platform === 'linux' && process.arch === 'x64') {\\n \\n \\n var downloadUrl = util.format(\\n-  'http://downloads.mongodb.org/osx/mongodb-%s-%s.%s',\\n+  'https://fastdl.mongodb.org/osx/mongodb-%s-%s.%s',\\n   platformPart,\\n   versionPart,\\n   extension\"}}",
      "message_norm": "use https",
      "language": "et",
      "entities": null,
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['install.js'])",
      "num_files": 1.0
    },
    {
      "index": 3395,
      "vuln_id": "GHSA-x83m-p7pv-ch8v",
      "cwe_id": "{'CWE-369'}",
      "score": 2.5,
      "chain": "{'https://github.com/tensorflow/tensorflow/commit/744009c9e5cc5d0447f0dc39d055f917e1fd9e16'}",
      "dataset": "osv",
      "summary": "Division by 0 in `QuantizedAdd` ### Impact\nAn attacker can cause a runtime division by zero error and denial of service in `tf.raw_ops.QuantizedAdd`:\n\n```python\nimport tensorflow as tf\n\nx = tf.constant([68, 228], shape=[2, 1], dtype=tf.quint8)\ny = tf.constant([], shape=[2, 0], dtype=tf.quint8)\n\nmin_x = tf.constant(10.723421015884028)\nmax_x = tf.constant(15.19578006631113)\nmin_y = tf.constant(-5.539003866682977)\nmax_y = tf.constant(42.18819949559947)\n\ntf.raw_ops.QuantizedAdd(x=x, y=y, min_x=min_x, max_x=max_x, min_y=min_y, max_y=max_y)\n```\n\nThis is because the [implementation](https://github.com/tensorflow/tensorflow/blob/6f26b3f3418201479c264f2a02000880d8df151c/tensorflow/core/kernels/quantized_add_op.cc#L289-L295) computes a modulo operation without validating that the divisor is not zero.\n\n```cc\nvoid VectorTensorAddition(const T* vector_data, float min_vector,\n                          float max_vector, int64 vector_num_elements,\n                          const T* tensor_data, float min_tensor,\n                          float max_tensor, int64 tensor_num_elements,\n                          float output_min, float output_max, Toutput* output) {\n  for (int i = 0; i < tensor_num_elements; ++i) {\n    const int64 vector_i = i % vector_num_elements;\n    ...\n  }\n}\n```\n\nSince `vector_num_elements` is [determined based on input shapes](https://github.com/tensorflow/tensorflow/blob/6f26b3f3418201479c264f2a02000880d8df151c/tensorflow/core/kernels/quantized_add_op.cc#L522-L544), a user can trigger scenarios where this quantity is 0.\n\n### Patches\nWe have patched the issue in GitHub commit [744009c9e5cc5d0447f0dc39d055f917e1fd9e16](https://github.com/tensorflow/tensorflow/commit/744009c9e5cc5d0447f0dc39d055f917e1fd9e16).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
      "published_date": "2021-05-21",
      "chain_len": 1,
      "project": "https://github.com/tensorflow/tensorflow",
      "commit_href": "https://github.com/tensorflow/tensorflow/commit/744009c9e5cc5d0447f0dc39d055f917e1fd9e16",
      "commit_sha": "744009c9e5cc5d0447f0dc39d055f917e1fd9e16",
      "patch": "SINGLE",
      "chain_ord": "['744009c9e5cc5d0447f0dc39d055f917e1fd9e16']",
      "before_first_fix_commit": "{'6f26b3f3418201479c264f2a02000880d8df151c'}",
      "last_fix_commit": "744009c9e5cc5d0447f0dc39d055f917e1fd9e16",
      "chain_ord_pos": 1.0,
      "commit_datetime": "04/23/2021, 19:00:12",
      "message": "Validate work in `QuantizedAdd`, ensure at least one element.\n\nPiperOrigin-RevId: 370127996\nChange-Id: I57c6f3e01afdeada84737820a131590137463855",
      "author": "Mihai Maruseac",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 0, 'total': 2}",
      "files": "{'tensorflow/core/kernels/quantized_add_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/tensorflow/tensorflow/raw/744009c9e5cc5d0447f0dc39d055f917e1fd9e16/tensorflow%2Fcore%2Fkernels%2Fquantized_add_op.cc', 'patch': '@@ -538,6 +538,8 @@ class QuantizedAddOp : public OpKernel {\\n         tensor_min = min_x;\\n         tensor_max = max_x;\\n       }\\n+      OP_REQUIRES(context, vector_num_elements > 0,\\n+                  errors::InvalidArgument(\"Must have some elements to add\"));\\n       VectorTensorAddition<T, Toutput>(\\n           vector_data, vector_min, vector_max, vector_num_elements, tensor_data,\\n           tensor_min, tensor_max, tensor_num_elements, min_z_value, max_z_value,'}}",
      "message_norm": "validate work in `quantizedadd`, ensure at least one element.\n\npiperorigin-revid: 370127996\nchange-id: i57c6f3e01afdeada84737820a131590137463855",
      "language": "en",
      "entities": "[('validate', 'ACTION', ''), ('ensure', 'ACTION', ''), ('370127996', 'SHA', 'generic_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['tensorflow/core/kernels/quantized_add_op.cc'])",
      "num_files": 1.0
    },
    {
      "index": 299,
      "vuln_id": "GHSA-3q55-66g3-p8xq",
      "cwe_id": "{'CWE-79'}",
      "score": 4.8,
      "chain": "{'https://github.com/microweber/microweber/commit/89200cfcc2cfefe5554721e7fa3cf52f6a2a9120'}",
      "dataset": "osv",
      "summary": "Cross-site Scripting in microweber File upload filter bypass leading to stored XSS in GitHub repository microweber/microweber prior to 1.2.12.",
      "published_date": "2022-03-13",
      "chain_len": 1,
      "project": "https://github.com/microweber/microweber",
      "commit_href": "https://github.com/microweber/microweber/commit/89200cfcc2cfefe5554721e7fa3cf52f6a2a9120",
      "commit_sha": "89200cfcc2cfefe5554721e7fa3cf52f6a2a9120",
      "patch": "SINGLE",
      "chain_ord": "['89200cfcc2cfefe5554721e7fa3cf52f6a2a9120']",
      "before_first_fix_commit": "{'077b1e2d5dda0c6611b65bce849a18a5620c5c98'}",
      "last_fix_commit": "89200cfcc2cfefe5554721e7fa3cf52f6a2a9120",
      "chain_ord_pos": 1.0,
      "commit_datetime": "03/11/2022, 10:04:52",
      "message": "Update Files.php",
      "author": "Bozhidar Slaveykov",
      "comments": null,
      "stats": "{'additions': 254, 'deletions': 2, 'total': 256}",
      "files": "{'src/MicroweberPackages/Utils/System/Files.php': {'additions': 254, 'deletions': 2, 'changes': 256, 'status': 'modified', 'raw_url': 'https://github.com/microweber/microweber/raw/89200cfcc2cfefe5554721e7fa3cf52f6a2a9120/src%2FMicroweberPackages%2FUtils%2FSystem%2FFiles.php', 'patch': \"@@ -834,10 +834,262 @@ function get_dangerous_files_extentions()\\n             'xqt',        //    SuperCalc Macro File',\\n             'xys',        //    XYplorer Script File',\\n             'zl9',        //    ZoneAlarm Quarantined EXE File\\n-\\n-\\n             'swf',        //    Flash File\\n \\n+            'key',\\n+            'asax',\\n+            'btapp',\\n+            'xd',\\n+            'fwtemplate',\\n+            'crdownload',\\n+            'whtt',\\n+            'ssp',\\n+            'fmp',\\n+            'jspa',\\n+            'obml16',\\n+            'a5w',\\n+            'crt',\\n+            'vrt',\\n+            'website',\\n+            'p7c',\\n+            'dll',\\n+            'php',\\n+            'mjs',\\n+            'dhtml',\\n+            'xul',\\n+            'bml',\\n+            'download',\\n+            'cshtml',\\n+            'vsdisco',\\n+            'codasite',\\n+            'webbookmark',\\n+            'rjs',\\n+            'wsdl',\\n+            'dml',\\n+            'aro',\\n+            'dcr',\\n+            'shtml',\\n+            'dochtml',\\n+            'dwt',\\n+            'spc',\\n+            'a4p',\\n+            'htaccess',\\n+            'ascx',\\n+            'pac',\\n+            'p7b',\\n+            'xhtm',\\n+            'oam',\\n+            'site',\\n+            'kit',\\n+            'aspx',\\n+            'zul',\\n+            'tpl',\\n+            'htm',\\n+            'seam',\\n+            'svr',\\n+            'pem',\\n+            'url',\\n+            'dap',\\n+            'appcache',\\n+            'chm',\\n+            'wbs',\\n+            'htc',\\n+            'ewp',\\n+            'gsp',\\n+            'asr',\\n+            'der',\\n+            'master',\\n+            'stc',\\n+            'ap',\\n+            'html',\\n+            'p12',\\n+            'xpd',\\n+            'fwp',\\n+            'epibrw',\\n+            'strm',\\n+            'xss',\\n+            'node',\\n+            'disco',\\n+            'gsp',\\n+            'pro',\\n+            'rss',\\n+            'gne',\\n+            'sdb',\\n+            'compressed',\\n+            'asp',\\n+            'browser',\\n+            'php2',\\n+            'sites2',\\n+            'dothtml',\\n+            'bok',\\n+            'axd',\\n+            'nzb',\\n+            'vdw',\\n+            'obml',\\n+            'mhtml',\\n+            'ashx',\\n+            'con',\\n+            'rhtml',\\n+            'alx',\\n+            'opml',\\n+            'web',\\n+            'chat',\\n+            'csr',\\n+            'do',\\n+            'sht',\\n+            'asa',\\n+            'cha',\\n+            'h5p',\\n+            'qf',\\n+            'olp',\\n+            'hyperesources',\\n+            'sparkle',\\n+            'razor',\\n+            'php4',\\n+            'cms',\\n+            'mml',\\n+            'jnlp',\\n+            'har',\\n+            'br',\\n+            'webloc',\\n+            'srf',\\n+            'cer',\\n+            'uhtml',\\n+            'pptmhtml',\\n+            'phtml',\\n+            'xbel',\\n+            'cfm',\\n+            'fwtemplateb',\\n+            'jspx',\\n+            'jsp',\\n+            'xfdl',\\n+            'zhtml',\\n+            'stml',\\n+            'jsonl',\\n+            'maff',\\n+            'dbm',\\n+            'aex',\\n+            'crl',\\n+            'mht',\\n+            'wml',\\n+            'sass',\\n+            'xht',\\n+            'awm',\\n+            'page',\\n+            'hdml',\\n+            'webmanifest',\\n+            'itms',\\n+            'sitemap',\\n+            'shtm',\\n+            'wpp',\\n+            'jss',\\n+            'oth',\\n+            'ucf',\\n+            'prf',\\n+            'freeway',\\n+            'edge',\\n+            'iqy',\\n+            'vrml',\\n+            'mvc',\\n+            'wdgt',\\n+            'discomap',\\n+            'psp',\\n+            'hxs',\\n+            'adr',\\n+            'hype',\\n+            'csp',\\n+            'xhtml',\\n+            'webarchive',\\n+            'qbo',\\n+            'jhtml',\\n+            'svc',\\n+            'phtm',\\n+            'rw3',\\n+            'tpl',\\n+            'stl',\\n+            'wbxml',\\n+            'p7',\\n+            'ndjson',\\n+            'ognc',\\n+            'fwtb',\\n+            'muse',\\n+            'vbd',\\n+            'sites',\\n+            'rt',\\n+            'esproj',\\n+            'private',\\n+            'srl',\\n+            'zhtml',\\n+            'vbhtml', \\n+            'hypetemplate',\\n+            'obml15',\\n+            'hypesymbol',\\n+            'pub',\\n+            'ece',\\n+            'mspx',\\n+            'docmhtml',\\n+            'xws',\\n+            'wgp',\\n+            'tvpi',\\n+            'woa',\\n+            'asmx',\\n+            'xbl',\\n+            'webhistory',\\n+            'idc',\\n+            'jws',\\n+            'lbc',\\n+            'att',\\n+            'tvvi',\\n+            'zvz',\\n+            'php3',\\n+            'webarchivexml',\\n+            'widget',\\n+            'swz',\\n+            'qrm',\\n+            'bwp',\\n+            'atom',\\n+            'cdf',\\n+            'map',\\n+            'hdm',\\n+            'php5',\\n+            'rwsw',\\n+            'wgt',\\n+            'nod',\\n+            'rflw',\\n+            'htx',\\n+            'mvr',\\n+            'an',\\n+            'rwp',\\n+            'lasso',\\n+            'vlp',\\n+            'stp',\\n+            'nxg',\\n+            'faces',\\n+            'kcmsf',\\n+            'ptw',\\n+            'less',\\n+            'saveddeck',\\n+            'ccbjs',\\n+            'wn',\\n+            'ppthtml',\\n+            'jcz',\\n+            'jvs',\\n+            'rwtheme',\\n+            'jst',\\n+            'mapx',\\n+            'cpg',\\n+            'wpx',\\n+            'qbx',\\n+            'suck',\\n+            'iwdgt',\\n+            'public',\\n+            'cphd',\\n+            'moz',\\n+            'zfo',\\n+            'stm',\\n+            'fcgi',\\n+            'itpc',\\n+            'cfml'\\n         );\"}}",
      "message_norm": "update files.php",
      "language": "fr",
      "entities": "[('update', 'ACTION', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/MicroweberPackages/Utils/System/Files.php'])",
      "num_files": 1.0
    },
    {
      "index": 2508,
      "vuln_id": "GHSA-p4v2-r99v-wjc2",
      "cwe_id": "{'CWE-116'}",
      "score": 7.5,
      "chain": "{'https://github.com/nicotine-plus/nicotine-plus/commit/0e3e2fac27a518f0a84330f1ddf1193424522045'}",
      "dataset": "osv",
      "summary": "Improper Encoding or Escaping of Output in Nicotine+ Denial of service (DoS) vulnerability in Nicotine+ starting with version 3.0.3 and prior to version 3.2.1 allows a user with a modified Soulseek client to crash Nicotine+ by sending a file download request with a file path containing a null character.",
      "published_date": "2022-03-16",
      "chain_len": 1,
      "project": "https://github.com/nicotine-plus/nicotine-plus",
      "commit_href": "https://github.com/nicotine-plus/nicotine-plus/commit/0e3e2fac27a518f0a84330f1ddf1193424522045",
      "commit_sha": "0e3e2fac27a518f0a84330f1ddf1193424522045",
      "patch": "SINGLE",
      "chain_ord": "['0e3e2fac27a518f0a84330f1ddf1193424522045']",
      "before_first_fix_commit": "{'aabfa856bd57bcf986c2ea296457986e83c0c98b'}",
      "last_fix_commit": "0e3e2fac27a518f0a84330f1ddf1193424522045",
      "chain_ord_pos": 1.0,
      "commit_datetime": "12/22/2021, 18:49:21",
      "message": "Handle invalid file paths in file download requests\n\nFixes #1777",
      "author": "mathiascode",
      "comments": null,
      "stats": "{'additions': 13, 'deletions': 4, 'total': 17}",
      "files": "{'pynicotine/shares.py': {'additions': 13, 'deletions': 4, 'changes': 17, 'status': 'modified', 'raw_url': 'https://github.com/nicotine-plus/nicotine-plus/raw/0e3e2fac27a518f0a84330f1ddf1193424522045/pynicotine%2Fshares.py', 'patch': '@@ -609,13 +609,22 @@ def load_shares(cls, shares, dbs, reset_shares=False):\\n \\n     def file_is_shared(self, user, virtualfilename, realfilename):\\n \\n-        log.add_transfer(\"Checking if file %(virtual_name)s with real path %(path)s is shared\", {\\n+        log.add_transfer(\"Checking if file is shared: %(virtual_name)s with real path %(path)s\", {\\n             \"virtual_name\": virtualfilename,\\n             \"path\": realfilename\\n         })\\n \\n-        if not os.access(realfilename, os.R_OK):\\n-            log.add_transfer(\"Can\\'t access file %(virtual_name)s with real path %(path)s, not sharing\", {\\n+        try:\\n+            if not os.access(realfilename, os.R_OK):\\n+                log.add_transfer(\"Cannot access file, not sharing: %(virtual_name)s with real path %(path)s\", {\\n+                    \"virtual_name\": virtualfilename,\\n+                    \"path\": realfilename\\n+                })\\n+                return False\\n+\\n+        except Exception:\\n+            log.add_transfer((\"Requested file path contains invalid characters or other errors, not sharing: \"\\n+                              \"%(virtual_name)s with real path %(path)s\"), {\\n                 \"virtual_name\": virtualfilename,\\n                 \"path\": realfilename\\n             })\\n@@ -643,7 +652,7 @@ def file_is_shared(self, user, virtualfilename, realfilename):\\n                 if file == fileinfo[0]:\\n                     return True\\n \\n-        log.add_transfer(\"Failed to share file %(virtual_name)s with real path %(path)s, since it wasn\\'t found\", {\\n+        log.add_transfer(\"Failed to share file, since it wasn\\'t found: %(virtual_name)s with real path %(path)s\", {\\n             \"virtual_name\": virtualfilename,\\n             \"path\": realfilename\\n         })'}}",
      "message_norm": "handle invalid file paths in file download requests\n\nfixes #1777",
      "language": "en",
      "entities": "[('fixes', 'ACTION', ''), ('#1777', 'ISSUE', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['pynicotine/shares.py'])",
      "num_files": 1.0
    },
    {
      "index": 3095,
      "vuln_id": "GHSA-vcfc-9wcp-j623",
      "cwe_id": "{'CWE-79'}",
      "score": 6.1,
      "chain": "{'https://github.com/ServiceStack/ServiceStack/commit/a0e0d7de20f5d1712f1793f925496def4383c610'}",
      "dataset": "osv",
      "summary": "Cross site scripting attack in ServiceStack Framework ServiceStack ServiceStack Framework 4.5.14 is affected by: Cross Site Scripting (XSS). The impact is: JavaScrpit is reflected in the server response, hence executed by the browser. The component is: the query used in the GET request is prone. The attack vector is: Since there is no server-side validation and If Browser encoding is bypassed, the victim is affected when opening a crafted URL. The fixed version is: 5.2.0.",
      "published_date": "2022-05-24",
      "chain_len": 1,
      "project": "https://github.com/ServiceStack/ServiceStack",
      "commit_href": "https://github.com/ServiceStack/ServiceStack/commit/a0e0d7de20f5d1712f1793f925496def4383c610",
      "commit_sha": "a0e0d7de20f5d1712f1793f925496def4383c610",
      "patch": "SINGLE",
      "chain_ord": "['a0e0d7de20f5d1712f1793f925496def4383c610']",
      "before_first_fix_commit": "{'2c6fbe4554014ead15b7b188bb748b655b30807c'}",
      "last_fix_commit": "a0e0d7de20f5d1712f1793f925496def4383c610",
      "chain_ord_pos": 1.0,
      "commit_datetime": "08/17/2018, 15:05:59",
      "message": "HtmlEncode Raw URL in HtmlFormat snapshot",
      "author": "Demis Bellot",
      "comments": null,
      "stats": "{'additions': 3, 'deletions': 2, 'total': 5}",
      "files": "{'src/ServiceStack/Formats/HtmlFormat.cs': {'additions': 3, 'deletions': 2, 'changes': 5, 'status': 'modified', 'raw_url': 'https://github.com/ServiceStack/ServiceStack/raw/a0e0d7de20f5d1712f1793f925496def4383c610/src%2FServiceStack%2FFormats%2FHtmlFormat.cs', 'patch': '@@ -90,12 +90,13 @@ public async Task SerializeToStreamAsync(IRequest req, object response, Stream o\\n             {\\n                 // Serialize then escape any potential script tags to avoid XSS when displaying as HTML\\n                 var json = JsonDataContractSerializer.Instance.SerializeToString(dto) ?? \"null\";\\n-                json = json.Replace(\"<\", \"&lt;\").Replace(\">\", \"&gt;\");\\n+                json = json.HtmlEncode();\\n \\n                 var url = req.ResolveAbsoluteUrl()\\n                     .Replace(\"format=html\", \"\")\\n                     .Replace(\"format=shtm\", \"\")\\n-                    .TrimEnd(\\'?\\', \\'&\\');\\n+                    .TrimEnd(\\'?\\', \\'&\\')\\n+                    .HtmlEncode();\\n \\n                 url += url.Contains(\"?\") ? \"&\" : \"?\";'}}",
      "message_norm": "htmlencode raw url in htmlformat snapshot",
      "language": "en",
      "entities": "[('htmlencode', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/ServiceStack/Formats/HtmlFormat.cs'])",
      "num_files": 1.0
    },
    {
      "index": 78,
      "vuln_id": "GHSA-2ccx-2gf3-8xvv",
      "cwe_id": "{'CWE-346'}",
      "score": 6.8,
      "chain": "{'https://github.com/getkirby-v2/panel/commit/7f9ac1876bacb89fd8f142f5e561a02ebb725baa'}",
      "dataset": "osv",
      "summary": "Kirby .dev domains and some reverse proxy setups were treated as local ### Impact\n\n#### About our registration block\n\nIn order to protect new installations on public servers that don't have an admin account for the Panel yet, we block account registration there by default. This is a security feature, which we implemented years ago in Kirby 2. It helps to avoid that you forget registering your first admin account on a public server. \n\nIn this case \u2013 without our security block \u2013 someone else might theoretically be able to find your site, find out it's running on Kirby, find the Panel and then register the account first. It's an unlikely situation, but it's still a certain risk.\n\nTo be able to register the first Panel account on a public server, you have to enforce the installer via a config setting. This helps to push all users to the best practice of registering your first Panel account on your local machine and upload it together with the rest of the site. \n\n#### The issue\n\nAs noted by [Jukka Rautanen](https://github.com/jukra), this installation block implementation in Kirby versions before 3.3.6 still assumed that .dev domains are local domains, which is no longer true. In the meantime, those domains became publicly available. This means that our installation block is no longer working as expected if you use a .dev domain for your Kirby site.\n\nIn fixing this issue, we've also found out that the local installation check may also fail if your site is behind a reverse proxy. \n\n#### Am I affected?\n\nYou are only affected if:\n\n1. you use a .dev domain or your site is behind a reverse proxy &\n2. you have not yet registered your first Panel account on the public server & \n3. someone finds your site and tries to login at `yourdomain.dev/panel` before you register your first account.\n\nYou are not affected if you have already created one or multiple Panel accounts (no matter if on a .dev domain or behind a reverse proxy).\n\n### Patches\n\nThe problem has been patched in [Kirby 2.5.14](https://github.com/getkirby-v2/panel/releases/tag/2.5.14) and [Kirby 3.3.6](https://github.com/getkirby/kirby/releases/tag/3.3.6). Please update to one of these or a [later version](https://github.com/getkirby/kirby/releases) to fix the vulnerability.\n\n**Note:** Kirby 2 reaches end of life on December 31, 2020. We therefore recommend to upgrade your Kirby 2 sites to Kirby 3. If you cannot upgrade, we still recommend to update to Kirby 2.5.14.\n\n### Workarounds\n\nKirby 2 sites on older releases can also be patched by applying the [changes from this commit](https://github.com/getkirby-v2/panel/commit/7f9ac1876bacb89fd8f142f5e561a02ebb725baa).",
      "published_date": "2021-01-14",
      "chain_len": 1,
      "project": "https://github.com/getkirby-v2/panel",
      "commit_href": "https://github.com/getkirby-v2/panel/commit/7f9ac1876bacb89fd8f142f5e561a02ebb725baa",
      "commit_sha": "7f9ac1876bacb89fd8f142f5e561a02ebb725baa",
      "patch": "SINGLE",
      "chain_ord": "['7f9ac1876bacb89fd8f142f5e561a02ebb725baa']",
      "before_first_fix_commit": "{'5a569d4e3ddaea2b6628d7ec1472a3e8bc410881'}",
      "last_fix_commit": "7f9ac1876bacb89fd8f142f5e561a02ebb725baa",
      "chain_ord_pos": 1.0,
      "commit_datetime": "12/01/2020, 10:11:11",
      "message": "Better check for local environments",
      "author": "Bastian Allgeier",
      "comments": null,
      "stats": "{'additions': 41, 'deletions': 7, 'total': 48}",
      "files": "{'app/src/panel.php': {'additions': 41, 'deletions': 7, 'changes': 48, 'status': 'modified', 'raw_url': 'https://github.com/getkirby-v2/panel/raw/7f9ac1876bacb89fd8f142f5e561a02ebb725baa/app%2Fsrc%2Fpanel.php', 'patch': \"@@ -493,13 +493,47 @@ public function license() {\\n   }\\n \\n   public function isLocal() {\\n-    $localhosts = array('::1', '127.0.0.1', '0.0.0.0');\\n-    return (\\n-      in_array(server::get('SERVER_ADDR'), $localhosts) ||\\n-      server::get('SERVER_NAME') == 'localhost' ||\\n-      str::endsWith(server::get('SERVER_NAME'), '.localhost') ||\\n-      str::endsWith(server::get('SERVER_NAME'), '.test')\\n-    );\\n+\\n+    $host = server::get('SERVER_NAME');\\n+    $ip   = server::get('SERVER_ADDR');\\n+\\n+    if ($host === 'localhost') {\\n+      return true;\\n+    }\\n+\\n+    if (str::endsWith($host, '.localhost') === true) {\\n+      return true;\\n+    }\\n+\\n+    if (str::endsWith($host, '.local') === true) {\\n+      return true;\\n+    }\\n+\\n+    if (str::endsWith($host, '.test') === true) {\\n+      return true;\\n+    }\\n+\\n+    if (in_array($ip, ['::1', '127.0.0.1']) === true) {\\n+\\n+      if (\\n+        isset($_SERVER['HTTP_X_FORWARDED_FOR']) === true &&\\n+        in_array($_SERVER['HTTP_X_FORWARDED_FOR'], ['::1', '127.0.0.1']) === false\\n+      ) {\\n+        return false;\\n+      }\\n+\\n+      if (\\n+        isset($_SERVER['HTTP_CLIENT_IP']) === true &&\\n+        in_array($_SERVER['HTTP_CLIENT_IP'], ['::1', '127.0.0.1']) === false\\n+      ) {\\n+        return false;\\n+      }\\n+\\n+      // no reverse proxy or the real client also comes from localhost\\n+      return true;\\n+    }\\n+\\n+    return false;\\n   }\\n \\n   public function notify($text) {\"}}",
      "message_norm": "better check for local environments",
      "language": "en",
      "entities": null,
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['app/src/panel.php'])",
      "num_files": 1.0
    },
    {
      "index": 2748,
      "vuln_id": "GHSA-qg48-85hg-mqc5",
      "cwe_id": "{'CWE-369'}",
      "score": 2.5,
      "chain": "{'https://github.com/tensorflow/tensorflow/commit/da5ff2daf618591f64b2b62d9d9803951b945e9f'}",
      "dataset": "osv",
      "summary": "Division by 0 in `DenseCountSparseOutput` ### Impact\nAn attacker can cause a denial of service via a FPE runtime error in `tf.raw_ops.DenseCountSparseOutput`:\n\n```python\nimport tensorflow as tf\n\nvalues = tf.constant([], shape=[0, 0], dtype=tf.int64)\nweights = tf.constant([])\n\ntf.raw_ops.DenseCountSparseOutput(\n  values=values, weights=weights,\n  minlength=-1, maxlength=58, binary_output=True)\n```\n  \nThis is because the [implementation](https://github.com/tensorflow/tensorflow/blob/efff014f3b2d8ef6141da30c806faf141297eca1/tensorflow/core/kernels/count_ops.cc#L123-L127) computes a divisor value from user data but does not check that the result is 0 before doing the division:\n\n```cc\nint num_batch_elements = 1;\nfor (int i = 0; i < num_batch_dimensions; ++i) {\n  num_batch_elements *= data.shape().dim_size(i);\n}\nint num_value_elements = data.shape().num_elements() / num_batch_elements;\n```\n\nSince `data` is given by the `values` argument, `num_batch_elements` is 0.\n\n### Patches\nWe have patched the issue in GitHub commit [da5ff2daf618591f64b2b62d9d9803951b945e9f](https://github.com/tensorflow/tensorflow/commit/da5ff2daf618591f64b2b62d9d9803951b945e9f).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, and TensorFlow 2.3.3, as these are also affected.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
      "published_date": "2021-05-21",
      "chain_len": 1,
      "project": "https://github.com/tensorflow/tensorflow",
      "commit_href": "https://github.com/tensorflow/tensorflow/commit/da5ff2daf618591f64b2b62d9d9803951b945e9f",
      "commit_sha": "da5ff2daf618591f64b2b62d9d9803951b945e9f",
      "patch": "SINGLE",
      "chain_ord": "['da5ff2daf618591f64b2b62d9d9803951b945e9f']",
      "before_first_fix_commit": "{'efff014f3b2d8ef6141da30c806faf141297eca1'}",
      "last_fix_commit": "da5ff2daf618591f64b2b62d9d9803951b945e9f",
      "chain_ord_pos": 1.0,
      "commit_datetime": "04/28/2021, 18:24:45",
      "message": "Fix FPE issue with `tf.raw_ops.DenseCountSparseOutput`.\n\nPiperOrigin-RevId: 370946862\nChange-Id: I3752584ad04aaecb327ff6793a9640ac56acfe7a",
      "author": "Amit Patankar",
      "comments": null,
      "stats": "{'additions': 3, 'deletions': 0, 'total': 3}",
      "files": "{'tensorflow/core/kernels/count_ops.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https://github.com/tensorflow/tensorflow/raw/da5ff2daf618591f64b2b62d9d9803951b945e9f/tensorflow%2Fcore%2Fkernels%2Fcount_ops.cc', 'patch': '@@ -122,6 +122,9 @@ class DenseCount : public OpKernel {\\n \\n     int num_batch_elements = 1;\\n     for (int i = 0; i < num_batch_dimensions; ++i) {\\n+      OP_REQUIRES(context, data.shape().dim_size(i) != 0,\\n+                  errors::InvalidArgument(\\n+                      \"Invalid input: Shapes dimension cannot be 0.\"));\\n       num_batch_elements *= data.shape().dim_size(i);\\n     }\\n     int num_value_elements = data.shape().num_elements() / num_batch_elements;'}}",
      "message_norm": "fix fpe issue with `tf.raw_ops.densecountsparseoutput`.\n\npiperorigin-revid: 370946862\nchange-id: i3752584ad04aaecb327ff6793a9640ac56acfe7a",
      "language": "en",
      "entities": "[('fix', 'ACTION', ''), ('fpe', 'SECWORD', ''), ('issue', 'FLAW', ''), ('370946862', 'SHA', 'generic_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['tensorflow/core/kernels/count_ops.cc'])",
      "num_files": 1.0
    },
    {
      "index": 381,
      "vuln_id": "GHSA-484f-743f-6jx2",
      "cwe_id": "{'CWE-94'}",
      "score": 4.4,
      "chain": "{'https://github.com/PHPSocialNetwork/phpfastcache/commit/c4527205cb7a402b595790c74310791f5b04a1a4'}",
      "dataset": "osv",
      "summary": "Object injection in cookie driver in phpfastcache ### Impact\nAn possible object injection has been discovered in cookie driver prior 5.0.13 versions (of 5.x releases).\n\n### Patches\nThe issue has been addressed by enforcing JSON conversion when deserializing\n\n### Workarounds\nIf you can't fix it, use another driver such as \"Files\" (Filesystem)\n\n### References\nFixing release: https://github.com/PHPSocialNetwork/phpfastcache/releases/tag/5.0.13\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the issue tracker](https://github.com/PHPSocialNetwork/phpfastcache/issues)\n* Email us at [security@geolim4.com](mailto:security@geolim4.com)",
      "published_date": "2019-12-12",
      "chain_len": 1,
      "project": "https://github.com/PHPSocialNetwork/phpfastcache",
      "commit_href": "https://github.com/PHPSocialNetwork/phpfastcache/commit/c4527205cb7a402b595790c74310791f5b04a1a4",
      "commit_sha": "c4527205cb7a402b595790c74310791f5b04a1a4",
      "patch": "SINGLE",
      "chain_ord": "['c4527205cb7a402b595790c74310791f5b04a1a4']",
      "before_first_fix_commit": "{'afb1d158aee1eaa07857909d43f6ce3570b82a30'}",
      "last_fix_commit": "c4527205cb7a402b595790c74310791f5b04a1a4",
      "chain_ord_pos": 1.0,
      "commit_datetime": "12/30/2016, 08:40:00",
      "message": "Fixed critical vulnerability on cookie driver",
      "author": "Geolim4",
      "comments": null,
      "stats": "{'additions': 1, 'deletions': 1, 'total': 2}",
      "files": "{'src/phpFastCache/Drivers/Cookie/Driver.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https://github.com/PHPSocialNetwork/phpfastcache/raw/c4527205cb7a402b595790c74310791f5b04a1a4/src%2FphpFastCache%2FDrivers%2FCookie%2FDriver.php', 'patch': '@@ -99,7 +99,7 @@ protected function driverRead(CacheItemInterface $item)\\n         // return null if no caching\\n         // return value if in caching\\n         $keyword = self::PREFIX . $item->getKey();\\n-        $x = isset($_COOKIE[ $keyword ]) ? $this->decode(json_decode($_COOKIE[ $keyword ], true)) : false;\\n+        $x = isset($_COOKIE[ $keyword ]) ? json_decode($_COOKIE[ $keyword ], true) : false;\\n \\n         if ($x == false) {\\n             return null;'}}",
      "message_norm": "fixed critical vulnerability on cookie driver",
      "language": "en",
      "entities": "[('fixed', 'ACTION', ''), ('critical', 'SEVERITY', ''), ('vulnerability', 'SECWORD', ''), ('cookie', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['src/phpFastCache/Drivers/Cookie/Driver.php'])",
      "num_files": 1.0
    },
    {
      "index": 1450,
      "vuln_id": "GHSA-9xh4-23q4-v6wr",
      "cwe_id": "{'CWE-476', 'CWE-787', 'CWE-125'}",
      "score": 2.5,
      "chain": "{'https://github.com/tensorflow/tensorflow/commit/6972f9dfe325636b3db4e0bc517ee22a159365c0'}",
      "dataset": "osv",
      "summary": "Heap buffer overflow and undefined behavior in `FusedBatchNorm` ### Impact\nThe implementation of `tf.raw_ops.FusedBatchNorm` is vulnerable to a heap buffer overflow:\n      \n```python\nimport tensorflow as tf\n\nx = tf.zeros([10, 10, 10, 6], dtype=tf.float32)\nscale = tf.constant([0.0], shape=[1], dtype=tf.float32)\noffset = tf.constant([0.0], shape=[1], dtype=tf.float32)\nmean = tf.constant([0.0], shape=[1], dtype=tf.float32)\nvariance = tf.constant([0.0], shape=[1], dtype=tf.float32)\nepsilon = 0.0\nexponential_avg_factor = 0.0\ndata_format = \"NHWC\"\nis_training = False\n    \ntf.raw_ops.FusedBatchNorm(\n  x=x, scale=scale, offset=offset, mean=mean, variance=variance,\n  epsilon=epsilon, exponential_avg_factor=exponential_avg_factor,\n  data_format=data_format, is_training=is_training)\n```\n  \nIf the tensors are empty, the same implementation can trigger undefined behavior by dereferencing null pointers:\n\n```python \nimport tensorflow as tf\nimport numpy as np\n\nx = tf.zeros([10, 10, 10, 1], dtype=tf.float32)\nscale = tf.constant([], shape=[0], dtype=tf.float32)\noffset = tf.constant([], shape=[0], dtype=tf.float32)\nmean = tf.constant([], shape=[0], dtype=tf.float32)\nvariance = tf.constant([], shape=[0], dtype=tf.float32)\nepsilon = 0.0\nexponential_avg_factor = 0.0\ndata_format = \"NHWC\"\nis_training = False\n\ntf.raw_ops.FusedBatchNorm(\n  x=x, scale=scale, offset=offset, mean=mean, variance=variance, \n  epsilon=epsilon, exponential_avg_factor=exponential_avg_factor,\n  data_format=data_format, is_training=is_training)\n``` \n\nThe  [implementation](https://github.com/tensorflow/tensorflow/blob/57d86e0db5d1365f19adcce848dfc1bf89fdd4c7/tensorflow/core/kernels/fused_batch_norm_op.cc) fails to validate that `scale`, `offset`, `mean` and `variance` (the last two only when required) all have the same number of elements as the number of channels of `x`. This results in heap out of bounds reads when the buffers backing these tensors are indexed past their boundary.\n\nIf the tensors are empty, the validation mentioned in the above paragraph would also trigger and prevent the undefined behavior.\n\n### Patches\nWe have patched the issue in GitHub commit [6972f9dfe325636b3db4e0bc517ee22a159365c0](https://github.com/tensorflow/tensorflow/commit/6972f9dfe325636b3db4e0bc517ee22a159365c0).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https://github.com/tensorflow/tensorflow/blob/master/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
      "published_date": "2021-05-21",
      "chain_len": 1,
      "project": "https://github.com/tensorflow/tensorflow",
      "commit_href": "https://github.com/tensorflow/tensorflow/commit/6972f9dfe325636b3db4e0bc517ee22a159365c0",
      "commit_sha": "6972f9dfe325636b3db4e0bc517ee22a159365c0",
      "patch": "SINGLE",
      "chain_ord": "['6972f9dfe325636b3db4e0bc517ee22a159365c0']",
      "before_first_fix_commit": "{'57d86e0db5d1365f19adcce848dfc1bf89fdd4c7'}",
      "last_fix_commit": "6972f9dfe325636b3db4e0bc517ee22a159365c0",
      "chain_ord_pos": 1.0,
      "commit_datetime": "05/07/2021, 00:45:51",
      "message": "Add missing valuidation to FusedBatchNorm.\n\nPiperOrigin-RevId: 372460336\nChange-Id: Ic8c4e4de67c58a741bd87f2e182bed07247d1126",
      "author": "Mihai Maruseac",
      "comments": null,
      "stats": "{'additions': 27, 'deletions': 1, 'total': 28}",
      "files": "{'tensorflow/core/kernels/fused_batch_norm_op.cc': {'additions': 27, 'deletions': 1, 'changes': 28, 'status': 'modified', 'raw_url': 'https://github.com/tensorflow/tensorflow/raw/6972f9dfe325636b3db4e0bc517ee22a159365c0/tensorflow%2Fcore%2Fkernels%2Ffused_batch_norm_op.cc', 'patch': '@@ -1282,6 +1282,32 @@ class FusedBatchNormOpBase : public OpKernel {\\n                   errors::InvalidArgument(\"Error during tensor copy.\"));\\n     }\\n \\n+    const auto num_channels = GetTensorDim(x, tensor_format_, \\'C\\');\\n+    OP_REQUIRES(\\n+        context, scale.NumElements() == num_channels,\\n+        errors::InvalidArgument(\"scale must have the same number of elements \"\\n+                                \"as the channels of x, got \",\\n+                                scale.NumElements(), \" and \", num_channels));\\n+    OP_REQUIRES(\\n+        context, offset.NumElements() == num_channels,\\n+        errors::InvalidArgument(\"offset must have the same number of elements \"\\n+                                \"as the channels of x, got \",\\n+                                offset.NumElements(), \" and \", num_channels));\\n+    if (estimated_mean.NumElements() != 0) {\\n+      OP_REQUIRES(context, estimated_mean.NumElements() == num_channels,\\n+                  errors::InvalidArgument(\\n+                      \"mean must be empty or have the same number of \"\\n+                      \"elements as the channels of x, got \",\\n+                      estimated_mean.NumElements(), \" and \", num_channels));\\n+    }\\n+    if (estimated_variance.NumElements() != 0) {\\n+      OP_REQUIRES(context, estimated_variance.NumElements() == num_channels,\\n+                  errors::InvalidArgument(\\n+                      \"variance must be empty or have the same number of \"\\n+                      \"elements as the channels of x, got \",\\n+                      estimated_variance.NumElements(), \" and \", num_channels));\\n+    }\\n+\\n     if (has_side_input_) {\\n       OP_REQUIRES(context, side_input->shape() == x.shape(),\\n                   errors::InvalidArgument(\\n@@ -1294,7 +1320,7 @@ class FusedBatchNormOpBase : public OpKernel {\\n       // NOTE(ezhulenev): This requirement is coming from implementation\\n       // details of cudnnBatchNormalizationForwardTrainingEx.\\n       OP_REQUIRES(\\n-          context, !is_training_ || x.dim_size(3) % 4 == 0,\\n+          context, !is_training_ || num_channels % 4 == 0,\\n           errors::InvalidArgument(\"FusedBatchNorm with activation requires \"\\n                                   \"channel dimension to be a multiple of 4.\"));\\n     }'}}",
      "message_norm": "add missing valuidation to fusedbatchnorm.\n\npiperorigin-revid: 372460336\nchange-id: ic8c4e4de67c58a741bd87f2e182bed07247d1126",
      "language": "en",
      "entities": "[('add', 'ACTION', ''), ('372460336', 'SHA', 'generic_sha')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['tensorflow/core/kernels/fused_batch_norm_op.cc'])",
      "num_files": 1.0
    },
    {
      "index": 2568,
      "vuln_id": "GHSA-pfxf-wh96-fvjc",
      "cwe_id": "{'CWE-117'}",
      "score": 5.3,
      "chain": "{'https://github.com/jhipster/jhipster-kotlin/commit/426ccab85e7e0da562643200637b99b6a2a99449'}",
      "dataset": "osv",
      "summary": "Log Forging in generator-jhipster-kotlin ### Impact\n\nWe log the mail for invalid password reset attempts. \nAs the email is provided by a user and the api is public this can be used by an attacker to forge log entries.\nThis is vulnerable to https://cwe.mitre.org/data/definitions/117.html\n\nThis problem affects only application generated with jwt or session authentication. Applications using oauth are not vulnerable.\n\n### Patches\n\nversion 1.7.0.\n\n### Workarounds\n\nIn `AccountResource.kt` you should change the line\n\n```kotlin\n log.warn(\"Password reset requested for non existing mail '$mail'\");\n```\n\nto \n\n```kotlin\n log.warn(\"Password reset requested for non existing mail\");\n```\n\n### References\n\n* https://cwe.mitre.org/data/definitions/117.html\n* https://owasp.org/www-community/attacks/Log_Injection\n* https://www.baeldung.com/jvm-log-forging\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [jhipster kotlin](https://github.com/jhipster/jhipster-kotlin)",
      "published_date": "2020-06-25",
      "chain_len": 1,
      "project": "https://github.com/jhipster/jhipster-kotlin",
      "commit_href": "https://github.com/jhipster/jhipster-kotlin/commit/426ccab85e7e0da562643200637b99b6a2a99449",
      "commit_sha": "426ccab85e7e0da562643200637b99b6a2a99449",
      "patch": "SINGLE",
      "chain_ord": "['426ccab85e7e0da562643200637b99b6a2a99449']",
      "before_first_fix_commit": "{'72d229b48b87c5575c116a8b0ba6c3c9f02ac287'}",
      "last_fix_commit": "426ccab85e7e0da562643200637b99b6a2a99449",
      "chain_ord_pos": 1.0,
      "commit_datetime": "05/06/2020, 20:18:48",
      "message": "prevent log forging when doing password reset init request",
      "author": "Frederik Hahne",
      "comments": null,
      "stats": "{'additions': 2, 'deletions': 2, 'total': 4}",
      "files": "{'generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https://github.com/jhipster/jhipster-kotlin/raw/426ccab85e7e0da562643200637b99b6a2a99449/generators%2Fserver%2Ftemplates%2Fsrc%2Fmain%2Fkotlin%2Fpackage%2Fweb%2Frest%2FAccountResource.kt.ejs', 'patch': '@@ -406,7 +406,7 @@ class AccountResource(\\n         } else {\\n             // Pretend the request has been successful to prevent checking which emails really exist\\n             // but log that an invalid attempt has been made\\n-            log.warn(\"Password reset requested for non existing mail \\'$mail\\'\");\\n+            log.warn(\"Password reset requested for non existing mail\");\\n         }\\n     }\\n     <%_ } else { _%>\\n@@ -418,7 +418,7 @@ class AccountResource(\\n                 } else {\\n                     // Pretend the request has been successful to prevent checking which emails really exist\\n                     // but log that an invalid attempt has been made\\n-                    log.warn(\"Password reset request for non existing email \\'$mail\\'\")\\n+                    log.warn(\"Password reset request for non existing email\")\\n                 }\\n             }.then()\\n     <%_ } _%>'}}",
      "message_norm": "prevent log forging when doing password reset init request",
      "language": "en",
      "entities": "[('prevent', 'ACTION', ''), ('password', 'SECWORD', '')]",
      "classification_level_1": null,
      "classification_level_2": null,
      "list_files": "dict_keys(['generators/server/templates/src/main/kotlin/package/web/rest/AccountResource.kt.ejs'])",
      "num_files": 1.0
    }
  ]
}