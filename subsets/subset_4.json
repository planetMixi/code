{
    "schema":{
        "fields":[
            {
                "name":"index",
                "type":"integer"
            },
            {
                "name":"vuln_id",
                "type":"string"
            },
            {
                "name":"cwe_id",
                "type":"string"
            },
            {
                "name":"score",
                "type":"number"
            },
            {
                "name":"chain",
                "type":"string"
            },
            {
                "name":"dataset",
                "type":"string"
            },
            {
                "name":"summary",
                "type":"string"
            },
            {
                "name":"published_date",
                "type":"string"
            },
            {
                "name":"chain_len",
                "type":"integer"
            },
            {
                "name":"project",
                "type":"string"
            },
            {
                "name":"commit_href",
                "type":"string"
            },
            {
                "name":"commit_sha",
                "type":"string"
            },
            {
                "name":"patch",
                "type":"string"
            },
            {
                "name":"chain_ord",
                "type":"string"
            },
            {
                "name":"before_first_fix_commit",
                "type":"string"
            },
            {
                "name":"last_fix_commit",
                "type":"string"
            },
            {
                "name":"chain_ord_pos",
                "type":"number"
            },
            {
                "name":"commit_datetime",
                "type":"string"
            },
            {
                "name":"message",
                "type":"string"
            },
            {
                "name":"author",
                "type":"string"
            },
            {
                "name":"comments",
                "type":"string"
            },
            {
                "name":"stats",
                "type":"string"
            },
            {
                "name":"files",
                "type":"string"
            },
            {
                "name":"message_norm",
                "type":"string"
            },
            {
                "name":"language",
                "type":"string"
            },
            {
                "name":"entities",
                "type":"string"
            },
            {
                "name":"classification_level_1",
                "type":"string"
            },
            {
                "name":"classification_level_2",
                "type":"string"
            },
            {
                "name":"list_files",
                "type":"string"
            },
            {
                "name":"num_files",
                "type":"number"
            },
            {
                "name":"patch_content",
                "type":"string"
            }
        ],
        "primaryKey":[
            "index"
        ],
        "pandas_version":"1.4.0"
    },
    "data":[
        {
            "index":414,
            "vuln_id":"GHSA-8fvr-5rqf-3wwh",
            "cwe_id":"{'CWE-285'}",
            "score":8.4,
            "chain":"{'https:\/\/github.com\/moby\/moby\/commit\/545b440a80f676a506e5837678dd4c4f65e78660'}",
            "dataset":"osv",
            "summary":"Information Exposure in Docker Engine Docker Engine before 1.6.1 uses weak permissions for (1) \/proc\/asound, (2) \/proc\/timer_stats, (3) \/proc\/latency_stats, and (4) \/proc\/fs, which allows local users to modify the host, obtain sensitive information, and perform protocol downgrade attacks via a crafted image.",
            "published_date":"2022-02-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/moby\/moby",
            "commit_href":"https:\/\/github.com\/moby\/moby\/commit\/545b440a80f676a506e5837678dd4c4f65e78660",
            "commit_sha":"545b440a80f676a506e5837678dd4c4f65e78660",
            "patch":"SINGLE",
            "chain_ord":"['545b440a80f676a506e5837678dd4c4f65e78660']",
            "before_first_fix_commit":"{'3162024e28c401750388da3417a44a552c6d5011'}",
            "last_fix_commit":"545b440a80f676a506e5837678dd4c4f65e78660",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/20\/2015, 20:33:51",
            "message":"Mount \/proc\/fs as readonly\n\nSigned-off-by: Michael Crosby <crosbymichael@gmail.com>",
            "author":"Michael Crosby",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'daemon\/execdriver\/native\/template\/default_template.go': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moby\/moby\/raw\/545b440a80f676a506e5837678dd4c4f65e78660\/daemon%2Fexecdriver%2Fnative%2Ftemplate%2Fdefault_template.go', 'patch': '@@ -86,6 +86,7 @@ func New() *configs.Config {\\n \\t\\tReadonlyPaths: []string{\\n \\t\\t\\t\"\/proc\/asound\",\\n \\t\\t\\t\"\/proc\/bus\",\\n+\\t\\t\\t\"\/proc\/fs\",\\n \\t\\t\\t\"\/proc\/irq\",\\n \\t\\t\\t\"\/proc\/sys\",\\n \\t\\t\\t\"\/proc\/sysrq-trigger\",'}}",
            "message_norm":"mount \/proc\/fs as readonly\n\nsigned-off-by: michael crosby <crosbymichael@gmail.com>",
            "language":"en",
            "entities":"[('crosbymichael@gmail.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['daemon\/execdriver\/native\/template\/default_template.go'])",
            "num_files":1.0,
            "patch_content":"From 545b440a80f676a506e5837678dd4c4f65e78660 Mon Sep 17 00:00:00 2001\nFrom: Michael Crosby <crosbymichael@gmail.com>\nDate: Mon, 20 Apr 2015 13:33:51 -0700\nSubject: [PATCH] Mount \/proc\/fs as readonly\n\nSigned-off-by: Michael Crosby <crosbymichael@gmail.com>\n---\n daemon\/execdriver\/native\/template\/default_template.go | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/daemon\/execdriver\/native\/template\/default_template.go b\/daemon\/execdriver\/native\/template\/default_template.go\nindex 530bd9596057e..5e48e623ef9db 100644\n--- a\/daemon\/execdriver\/native\/template\/default_template.go\n+++ b\/daemon\/execdriver\/native\/template\/default_template.go\n@@ -86,6 +86,7 @@ func New() *configs.Config {\n \t\tReadonlyPaths: []string{\n \t\t\t\"\/proc\/asound\",\n \t\t\t\"\/proc\/bus\",\n+\t\t\t\"\/proc\/fs\",\n \t\t\t\"\/proc\/irq\",\n \t\t\t\"\/proc\/sys\",\n \t\t\t\"\/proc\/sysrq-trigger\","
        },
        {
            "index":54,
            "vuln_id":"GHSA-4449-hg37-77v8",
            "cwe_id":"{'CWE-78'}",
            "score":8.6,
            "chain":"{'https:\/\/github.com\/totaljs\/framework\/commit\/6192491ab2631e7c1d317c221f18ea613e2c18a5'}",
            "dataset":"osv",
            "summary":"Command injection in total.js There is a command injection vulnerability that affects the package total.js before version 3.4.7. The issue occurs in the image.pipe and image.stream functions. The type parameter is used to build the command that is then executed using child_process.spawn. The issue occurs because child_process.spawn is called with the option shell set to true and because the type parameter is not properly sanitized.",
            "published_date":"2021-02-05",
            "chain_len":1,
            "project":"https:\/\/github.com\/totaljs\/framework",
            "commit_href":"https:\/\/github.com\/totaljs\/framework\/commit\/6192491ab2631e7c1d317c221f18ea613e2c18a5",
            "commit_sha":"6192491ab2631e7c1d317c221f18ea613e2c18a5",
            "patch":"SINGLE",
            "chain_ord":"['6192491ab2631e7c1d317c221f18ea613e2c18a5']",
            "before_first_fix_commit":"{'79e84ada0a4455a2fe2383bed6436f231290276a'}",
            "last_fix_commit":"6192491ab2631e7c1d317c221f18ea613e2c18a5",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/27\/2020, 16:36:16",
            "message":"Fixed \"Command Injection\" in `image.stream()` - thank to Sam Sanoop.",
            "author":"Peter Sirka",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'image.js': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/totaljs\/framework\/raw\/6192491ab2631e7c1d317c221f18ea613e2c18a5\/image.js', 'patch': '@@ -38,6 +38,7 @@ const SPAWN_OPT = { shell: true };\\n const D = require(\\'os\\').platform().substring(0, 3).toLowerCase() === \\'win\\' ? \\'\"\\' : \\'\\\\\\'\\';\\n const CMD_CONVERT = { gm: \\'gm\\', im: \\'convert\\', magick: \\'magick\\' };\\n const CMD_CONVERT2 = { gm: \\'gm convert\\', im: \\'convert\\', magick: \\'magick\\' };\\n+const SUPPORTEDIMAGES = { jpg: 1, png: 1, gif: 1, apng: 1, jpeg: 1, heif: 1, heic: 1, webp: 1, ico: 1 };\\n \\n var CACHE = {};\\n var middlewares = {};\\n@@ -322,7 +323,7 @@ ImageProto.stream = function(type, writer) {\\n \\n \\t!self.builder.length && self.minify();\\n \\n-\\tif (!type)\\n+\\tif (!type || !SUPPORTEDIMAGES[type])\\n \\t\\ttype = self.outputType;\\n \\n \\tF.stats.performance.open++;'}}",
            "message_norm":"fixed \"command injection\" in `image.stream()` - thank to sam sanoop.",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('command injection', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['image.js'])",
            "num_files":1.0,
            "patch_content":"From 6192491ab2631e7c1d317c221f18ea613e2c18a5 Mon Sep 17 00:00:00 2001\nFrom: Peter Sirka <petersirka@gmail.com>\nDate: Fri, 27 Nov 2020 17:36:16 +0100\nSubject: [PATCH] Fixed \"Command Injection\" in `image.stream()` - thank to Sam\n Sanoop.\n\n---\n image.js | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ndiff --git a\/image.js b\/image.js\nindex 19631b27d..b01a99984 100755\n--- a\/image.js\n+++ b\/image.js\n@@ -38,6 +38,7 @@ const SPAWN_OPT = { shell: true };\n const D = require('os').platform().substring(0, 3).toLowerCase() === 'win' ? '\"' : '\\'';\n const CMD_CONVERT = { gm: 'gm', im: 'convert', magick: 'magick' };\n const CMD_CONVERT2 = { gm: 'gm convert', im: 'convert', magick: 'magick' };\n+const SUPPORTEDIMAGES = { jpg: 1, png: 1, gif: 1, apng: 1, jpeg: 1, heif: 1, heic: 1, webp: 1, ico: 1 };\n \n var CACHE = {};\n var middlewares = {};\n@@ -322,7 +323,7 @@ ImageProto.stream = function(type, writer) {\n \n \t!self.builder.length && self.minify();\n \n-\tif (!type)\n+\tif (!type || !SUPPORTEDIMAGES[type])\n \t\ttype = self.outputType;\n \n \tF.stats.performance.open++;"
        },
        {
            "index":647,
            "vuln_id":"GHSA-247x-2f9f-5wp7",
            "cwe_id":"{'CWE-400'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/448a16182065bd08a202d9057dd8ca541e67996c'}",
            "dataset":"osv",
            "summary":"Stack overflow in TensorFlow ### Impact\nThe `GraphDef` format in TensorFlow does not allow self recursive functions. The runtime assumes that this invariant is satisfied. However, a `GraphDef` containing a fragment such as the following can be consumed when loading a `SavedModel`:\n\n```\n  library {\n    function {\n      signature {\n        name: \"SomeOp\"\n        description: \"Self recursive op\"\n      }\n      node_def {\n        name: \"1\"\n        op: \"SomeOp\"\n      }\n      node_def {\n        name: \"2\"\n        op: \"SomeOp\"\n      }\n    }\n  } \n```\n\nThis would result in a stack overflow during execution as resolving each `NodeDef` means resolving the function itself and its nodes.\n\n### Patches\nWe have patched the issue in GitHub commit [448a16182065bd08a202d9057dd8ca541e67996c](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/448a16182065bd08a202d9057dd8ca541e67996c).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/448a16182065bd08a202d9057dd8ca541e67996c",
            "commit_sha":"448a16182065bd08a202d9057dd8ca541e67996c",
            "patch":"SINGLE",
            "chain_ord":"['448a16182065bd08a202d9057dd8ca541e67996c']",
            "before_first_fix_commit":"{'7b1eba4193a389c7e92e01e585aeb71be97529cd'}",
            "last_fix_commit":"448a16182065bd08a202d9057dd8ca541e67996c",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/08\/2021, 00:49:32",
            "message":"Prevent stack overflow when FunctionLib in GraphDef has a self-recursive function.\n\nIt is likely that no recursivity is supported, but we should handle this separately.\n\nPiperOrigin-RevId: 414860329\nChange-Id: I02a2270e86282b37362ddd485eeef16fb986a9e0",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 18, 'deletions': 0, 'total': 18}",
            "files":"{'tensorflow\/cc\/saved_model\/loader.cc': {'additions': 18, 'deletions': 0, 'changes': 18, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/448a16182065bd08a202d9057dd8ca541e67996c\/tensorflow%2Fcc%2Fsaved_model%2Floader.cc', 'patch': '@@ -25,6 +25,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/framework\/attr_value.pb.h\"\\n #include \"tensorflow\/core\/framework\/function.pb.h\"\\n #include \"tensorflow\/core\/framework\/node_def.pb.h\"\\n+#include \"tensorflow\/core\/framework\/op_def.pb.h\"\\n #include \"tensorflow\/core\/framework\/tensor.pb.h\"\\n #include \"tensorflow\/core\/lib\/io\/path.h\"\\n #include \"tensorflow\/core\/lib\/monitoring\/counter.h\"\\n@@ -99,6 +100,19 @@ static Status ValidateNode(const NodeDef& node) {\\n   return Status::OK();\\n }\\n \\n+static Status ValidateFunctionNotRecursive(const FunctionDef& function) {\\n+  const auto& function_name = function.signature().name();\\n+  for (const auto& node : function.node_def()) {\\n+    if (node.op() == function_name) {\\n+      return errors::FailedPrecondition(\\n+          \"Function \", function_name,\\n+          \" is self recursive and TensorFlow does not support this scenario.\");\\n+    }\\n+  }\\n+\\n+  return Status::OK();\\n+}\\n+\\n static Status ValidateSavedTensors(const GraphDef& graph_def) {\\n   for (const auto& node : graph_def.node()) {\\n     TF_RETURN_IF_ERROR(ValidateNode(node));\\n@@ -110,6 +124,10 @@ static Status ValidateSavedTensors(const GraphDef& graph_def) {\\n       for (const auto& node : function.node_def()) {\\n         TF_RETURN_IF_ERROR(ValidateNode(node));\\n       }\\n+\\n+      \/\/ Also check that there is no recursivity in the library\\n+      \/\/ TODO(mihaimaruseac): Do more than self-recursivity\\n+      TF_RETURN_IF_ERROR(ValidateFunctionNotRecursive(function));\\n     }\\n   }'}}",
            "message_norm":"prevent stack overflow when functionlib in graphdef has a self-recursive function.\n\nit is likely that no recursivity is supported, but we should handle this separately.\n\npiperorigin-revid: 414860329\nchange-id: i02a2270e86282b37362ddd485eeef16fb986a9e0",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('414860329', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/cc\/saved_model\/loader.cc'])",
            "num_files":1.0,
            "patch_content":"From 448a16182065bd08a202d9057dd8ca541e67996c Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Tue, 7 Dec 2021 16:49:32 -0800\nSubject: [PATCH] Prevent stack overflow when FunctionLib in GraphDef has a\n self-recursive function.\n\nIt is likely that no recursivity is supported, but we should handle this separately.\n\nPiperOrigin-RevId: 414860329\nChange-Id: I02a2270e86282b37362ddd485eeef16fb986a9e0\n---\n tensorflow\/cc\/saved_model\/loader.cc | 18 ++++++++++++++++++\n 1 file changed, 18 insertions(+)\n\ndiff --git a\/tensorflow\/cc\/saved_model\/loader.cc b\/tensorflow\/cc\/saved_model\/loader.cc\nindex b06f2281d6a595..1022793fda08ef 100644\n--- a\/tensorflow\/cc\/saved_model\/loader.cc\n+++ b\/tensorflow\/cc\/saved_model\/loader.cc\n@@ -25,6 +25,7 @@ limitations under the License.\n #include \"tensorflow\/core\/framework\/attr_value.pb.h\"\n #include \"tensorflow\/core\/framework\/function.pb.h\"\n #include \"tensorflow\/core\/framework\/node_def.pb.h\"\n+#include \"tensorflow\/core\/framework\/op_def.pb.h\"\n #include \"tensorflow\/core\/framework\/tensor.pb.h\"\n #include \"tensorflow\/core\/lib\/io\/path.h\"\n #include \"tensorflow\/core\/lib\/monitoring\/counter.h\"\n@@ -99,6 +100,19 @@ static Status ValidateNode(const NodeDef& node) {\n   return Status::OK();\n }\n \n+static Status ValidateFunctionNotRecursive(const FunctionDef& function) {\n+  const auto& function_name = function.signature().name();\n+  for (const auto& node : function.node_def()) {\n+    if (node.op() == function_name) {\n+      return errors::FailedPrecondition(\n+          \"Function \", function_name,\n+          \" is self recursive and TensorFlow does not support this scenario.\");\n+    }\n+  }\n+\n+  return Status::OK();\n+}\n+\n static Status ValidateSavedTensors(const GraphDef& graph_def) {\n   for (const auto& node : graph_def.node()) {\n     TF_RETURN_IF_ERROR(ValidateNode(node));\n@@ -110,6 +124,10 @@ static Status ValidateSavedTensors(const GraphDef& graph_def) {\n       for (const auto& node : function.node_def()) {\n         TF_RETURN_IF_ERROR(ValidateNode(node));\n       }\n+\n+      \/\/ Also check that there is no recursivity in the library\n+      \/\/ TODO(mihaimaruseac): Do more than self-recursivity\n+      TF_RETURN_IF_ERROR(ValidateFunctionNotRecursive(function));\n     }\n   }"
        },
        {
            "index":176,
            "vuln_id":"GHSA-6jmh-9gqm-5xrx",
            "cwe_id":"{'CWE-352'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/f59ffb02984c0ce2fbb19ac39365066507de9370'}",
            "dataset":"osv",
            "summary":"Cross-Site Request Forgery (CSRF) in livehelperchat A CSRF issue is found in the audit configuration under settings. It was found that no CSRF token validation is getting done on the server-side. If we remove the CSRF token and keep the CSRF token field empty, the action is getting performed.",
            "published_date":"2022-01-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/livehelperchat\/livehelperchat",
            "commit_href":"https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/f59ffb02984c0ce2fbb19ac39365066507de9370",
            "commit_sha":"f59ffb02984c0ce2fbb19ac39365066507de9370",
            "patch":"SINGLE",
            "chain_ord":"['f59ffb02984c0ce2fbb19ac39365066507de9370']",
            "before_first_fix_commit":"{'58df43e89c5b2c11be4994a71e84c93d469dc7bd'}",
            "last_fix_commit":"f59ffb02984c0ce2fbb19ac39365066507de9370",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/13\/2022, 19:04:29",
            "message":"Missing csfr check",
            "author":"Remigijus Kiminas",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'lhc_web\/modules\/lhaudit\/configuration.php': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/LiveHelperChat\/livehelperchat\/raw\/f59ffb02984c0ce2fbb19ac39365066507de9370\/lhc_web%2Fmodules%2Flhaudit%2Fconfiguration.php', 'patch': \"@@ -7,6 +7,11 @@\\n \\n if ( isset($_POST['StoreOptions']) ) {\\n \\n+    if (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\\n+        erLhcoreClassModule::redirect();\\n+        exit;\\n+    }\\n+    \\n     $definition = array(\\n         'days_log' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int'),\\n         'log_js' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'boolean'),\"}}",
            "message_norm":"missing csfr check",
            "language":"de",
            "entities":"[('csfr', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lhc_web\/modules\/lhaudit\/configuration.php'])",
            "num_files":1.0,
            "patch_content":"From f59ffb02984c0ce2fbb19ac39365066507de9370 Mon Sep 17 00:00:00 2001\nFrom: Remigijus Kiminas <remdex@gmail.com>\nDate: Thu, 13 Jan 2022 14:04:29 -0500\nSubject: [PATCH] Missing csfr check\n\n---\n lhc_web\/modules\/lhaudit\/configuration.php | 5 +++++\n 1 file changed, 5 insertions(+)\n\ndiff --git a\/lhc_web\/modules\/lhaudit\/configuration.php b\/lhc_web\/modules\/lhaudit\/configuration.php\nindex d90131d366..a4b68ce03f 100644\n--- a\/lhc_web\/modules\/lhaudit\/configuration.php\n+++ b\/lhc_web\/modules\/lhaudit\/configuration.php\n@@ -7,6 +7,11 @@\n \n if ( isset($_POST['StoreOptions']) ) {\n \n+    if (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\n+        erLhcoreClassModule::redirect();\n+        exit;\n+    }\n+    \n     $definition = array(\n         'days_log' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int'),\n         'log_js' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'boolean'),"
        },
        {
            "index":756,
            "vuln_id":"GHSA-jjcx-999m-35hc",
            "cwe_id":"{'CWE-20'}",
            "score":3.3,
            "chain":"{'https:\/\/github.com\/firefly-iii\/firefly-iii\/commit\/e80d616ef4397e6e764f6b7b7a5b30121244933c'}",
            "dataset":"osv",
            "summary":"Improper Input Validation in Firefly III Firefly III 4.7.17.3 is vulnerable to local file enumeration. An attacker can enumerate local files due to the lack of protocol scheme sanitization, such as for file:\/\/\/ URLs. This is related to fints_url to import\/job\/configuration, and import\/create\/fints.",
            "published_date":"2021-09-08",
            "chain_len":1,
            "project":"https:\/\/github.com\/firefly-iii\/firefly-iii",
            "commit_href":"https:\/\/github.com\/firefly-iii\/firefly-iii\/commit\/e80d616ef4397e6e764f6b7b7a5b30121244933c",
            "commit_sha":"e80d616ef4397e6e764f6b7b7a5b30121244933c",
            "patch":"SINGLE",
            "chain_ord":"['e80d616ef4397e6e764f6b7b7a5b30121244933c']",
            "before_first_fix_commit":"{'2ddf48f15cbdbb475221c299872420f625c3bc3f'}",
            "last_fix_commit":"e80d616ef4397e6e764f6b7b7a5b30121244933c",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/02\/2019, 15:05:54",
            "message":"Fix #2367",
            "author":"James Cole",
            "comments":null,
            "stats":"{'additions': 20, 'deletions': 0, 'total': 20}",
            "files":"{'app\/Support\/Import\/JobConfiguration\/FinTS\/NewFinTSJobHandler.php': {'additions': 20, 'deletions': 0, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/firefly-iii\/firefly-iii\/raw\/e80d616ef4397e6e764f6b7b7a5b30121244933c\/app%2FSupport%2FImport%2FJobConfiguration%2FFinTS%2FNewFinTSJobHandler.php', 'patch': \"@@ -60,6 +60,9 @@ public function configureJob(array $data): MessageBag\\n         $config['fints_password']  = (string)(Crypt::encrypt($data['fints_password']) ?? '');\\n         $config['apply-rules']     = 1 === (int)$data['apply_rules'];\\n \\n+        \/\/ sanitize FinTS URL.\\n+        $config['fints_url'] = $this->validURI($config['fints_url']) ? $config['fints_url'] : '';\\n+\\n         $this->repository->setConfiguration($this->importJob, $config);\\n \\n \\n@@ -108,4 +111,21 @@ public function setImportJob(ImportJob $importJob): void\\n         $this->repository->setUser($importJob->user);\\n     }\\n \\n+    \/**\\n+     * @param string $fints_url\\n+     *\\n+     * @return bool\\n+     *\/\\n+    private function validURI(string $fintsUri): bool\\n+    {\\n+        $res = filter_var($fintsUri, FILTER_VALIDATE_URL);\\n+        if (false === $res) {\\n+            return false;\\n+        }\\n+        $scheme = parse_url($fintsUri, PHP_URL_SCHEME);\\n+\\n+        return 'https' === $scheme;\\n+    }\\n+\\n+\\n }\"}}",
            "message_norm":"fix #2367",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('#2367', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/Support\/Import\/JobConfiguration\/FinTS\/NewFinTSJobHandler.php'])",
            "num_files":1.0,
            "patch_content":"From e80d616ef4397e6e764f6b7b7a5b30121244933c Mon Sep 17 00:00:00 2001\nFrom: James Cole <thegrumpydictator@gmail.com>\nDate: Fri, 2 Aug 2019 17:05:54 +0200\nSubject: [PATCH] Fix #2367\n\n---\n ...\/FinTS\/NewFinTSJobHandler.php              | 20 +++++++++++++++++++\n 1 file changed, 20 insertions(+)\n\ndiff --git a\/app\/Support\/Import\/JobConfiguration\/FinTS\/NewFinTSJobHandler.php b\/app\/Support\/Import\/JobConfiguration\/FinTS\/NewFinTSJobHandler.php\nindex 2c688158e0a..51da2ed0f02 100644\n--- a\/app\/Support\/Import\/JobConfiguration\/FinTS\/NewFinTSJobHandler.php\n+++ b\/app\/Support\/Import\/JobConfiguration\/FinTS\/NewFinTSJobHandler.php\n@@ -60,6 +60,9 @@ public function configureJob(array $data): MessageBag\n         $config['fints_password']  = (string)(Crypt::encrypt($data['fints_password']) ?? '');\n         $config['apply-rules']     = 1 === (int)$data['apply_rules'];\n \n+        \/\/ sanitize FinTS URL.\n+        $config['fints_url'] = $this->validURI($config['fints_url']) ? $config['fints_url'] : '';\n+\n         $this->repository->setConfiguration($this->importJob, $config);\n \n \n@@ -108,4 +111,21 @@ public function setImportJob(ImportJob $importJob): void\n         $this->repository->setUser($importJob->user);\n     }\n \n+    \/**\n+     * @param string $fints_url\n+     *\n+     * @return bool\n+     *\/\n+    private function validURI(string $fintsUri): bool\n+    {\n+        $res = filter_var($fintsUri, FILTER_VALIDATE_URL);\n+        if (false === $res) {\n+            return false;\n+        }\n+        $scheme = parse_url($fintsUri, PHP_URL_SCHEME);\n+\n+        return 'https' === $scheme;\n+    }\n+\n+\n }"
        },
        {
            "index":700,
            "vuln_id":"GHSA-rrx2-r989-2c43",
            "cwe_id":"{'CWE-190'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1b54cadd19391b60b6fcccd8d076426f7221d5e8', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e952a89b7026b98fe8cbe626514a93ed68b7c510'}",
            "dataset":"osv",
            "summary":"Integer overflows in Tensorflow ### Impact \nThe [implementations of `Sparse*Cwise*` ops](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc) are vulnerable to integer overflows. These can be used to trigger large allocations (so, OOM based denial of service) or `CHECK`-fails when building new `TensorShape` objects (so, assert failures based denial of service):\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.raw_ops.SparseDenseCwiseDiv(\n    sp_indices=np.array([[9]]),\n    sp_values=np.array([5]),\n    sp_shape=np.array([92233720368., 92233720368]),\n    dense=np.array([4]))\n```\n\nWe are missing some validation on the shapes of the input tensors as well as directly constructing a large `TensorShape` with user-provided dimensions. The latter is an instance of [TFSA-2021-198](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/tensorflow\/security\/advisory\/tfsa-2021-198.md) (CVE-2021-41197) and is easily fixed by replacing a call to `TensorShape` constructor with a call to `BuildTensorShape` static helper factory.\n\n### Patches\nWe have patched the issue in GitHub commits [1b54cadd19391b60b6fcccd8d076426f7221d5e8](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1b54cadd19391b60b6fcccd8d076426f7221d5e8) and [e952a89b7026b98fe8cbe626514a93ed68b7c510](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e952a89b7026b98fe8cbe626514a93ed68b7c510).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Faysal Hossain Shezan from University of Virginia.",
            "published_date":"2022-02-09",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1b54cadd19391b60b6fcccd8d076426f7221d5e8",
            "commit_sha":"1b54cadd19391b60b6fcccd8d076426f7221d5e8",
            "patch":"MULTI",
            "chain_ord":"['1b54cadd19391b60b6fcccd8d076426f7221d5e8', 'e952a89b7026b98fe8cbe626514a93ed68b7c510']",
            "before_first_fix_commit":"{'1b54cadd19391b60b6fcccd8d076426f7221d5e8'}",
            "last_fix_commit":"e952a89b7026b98fe8cbe626514a93ed68b7c510",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/10\/2021, 17:46:39",
            "message":"Add missing validation to sparse dense cwise ops.\n\nPiperOrigin-RevId: 415543133\nChange-Id: I5baf3284e919338afb96178c468ad3d3cb0d956c",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 0, 'total': 13}",
            "files":"{'tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1b54cadd19391b60b6fcccd8d076426f7221d5e8\/tensorflow%2Fcore%2Fkernels%2Fsparse_dense_binary_op_shared.cc', 'patch': '@@ -78,11 +78,24 @@ class SparseDenseBinaryOpShared : public OpKernel {\\n                     \"but received shapes: \",\\n                     values_t->shape().DebugString(), \" and \",\\n                     shape_t->shape().DebugString()));\\n+    OP_REQUIRES(\\n+        ctx, TensorShapeUtils::IsVector(shape_t->shape()),\\n+        errors::InvalidArgument(\"Input sp_shape must be a vector. Got: \",\\n+                                shape_t->shape().DebugString()));\\n     OP_REQUIRES(\\n         ctx, values_t->dim_size(0) == indices_t->dim_size(0),\\n         errors::InvalidArgument(\\n             \"The first dimension of values and indices should match. (\",\\n             values_t->dim_size(0), \" vs. \", indices_t->dim_size(0), \")\"));\\n+    OP_REQUIRES(\\n+        ctx, shape_t->shape().dim_size(0) == indices_t->shape().dim_size(1),\\n+        errors::InvalidArgument(\\n+            \"Number of dimensions must match second dimension of indices. \",\\n+            \"Got \", shape_t->shape().dim_size(0),\\n+            \" dimensions, indices shape: \", indices_t->shape().DebugString()));\\n+    OP_REQUIRES(ctx, shape_t->NumElements() > 0,\\n+                errors::InvalidArgument(\\n+                    \"The shape argument requires at least one element.\"));\\n \\n     const auto indices_mat = indices_t->matrix<int64_t>();\\n     const auto shape_vec = shape_t->vec<int64_t>();'}}",
            "message_norm":"add missing validation to sparse dense cwise ops.\n\npiperorigin-revid: 415543133\nchange-id: i5baf3284e919338afb96178c468ad3d3cb0d956c",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('415543133', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc'])",
            "num_files":1.0,
            "patch_content":"From 1b54cadd19391b60b6fcccd8d076426f7221d5e8 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Fri, 10 Dec 2021 09:46:39 -0800\nSubject: [PATCH] Add missing validation to sparse dense cwise ops.\n\nPiperOrigin-RevId: 415543133\nChange-Id: I5baf3284e919338afb96178c468ad3d3cb0d956c\n---\n ...\/core\/kernels\/sparse_dense_binary_op_shared.cc   | 13 +++++++++++++\n 1 file changed, 13 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc b\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc\nindex b8a391b560f3c1..db27abfda7e537 100644\n--- a\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc\n+++ b\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc\n@@ -78,11 +78,24 @@ class SparseDenseBinaryOpShared : public OpKernel {\n                     \"but received shapes: \",\n                     values_t->shape().DebugString(), \" and \",\n                     shape_t->shape().DebugString()));\n+    OP_REQUIRES(\n+        ctx, TensorShapeUtils::IsVector(shape_t->shape()),\n+        errors::InvalidArgument(\"Input sp_shape must be a vector. Got: \",\n+                                shape_t->shape().DebugString()));\n     OP_REQUIRES(\n         ctx, values_t->dim_size(0) == indices_t->dim_size(0),\n         errors::InvalidArgument(\n             \"The first dimension of values and indices should match. (\",\n             values_t->dim_size(0), \" vs. \", indices_t->dim_size(0), \")\"));\n+    OP_REQUIRES(\n+        ctx, shape_t->shape().dim_size(0) == indices_t->shape().dim_size(1),\n+        errors::InvalidArgument(\n+            \"Number of dimensions must match second dimension of indices. \",\n+            \"Got \", shape_t->shape().dim_size(0),\n+            \" dimensions, indices shape: \", indices_t->shape().DebugString()));\n+    OP_REQUIRES(ctx, shape_t->NumElements() > 0,\n+                errors::InvalidArgument(\n+                    \"The shape argument requires at least one element.\"));\n \n     const auto indices_mat = indices_t->matrix<int64_t>();\n     const auto shape_vec = shape_t->vec<int64_t>();"
        },
        {
            "index":811,
            "vuln_id":"GHSA-6gv8-p3vj-pxvr",
            "cwe_id":"{'CWE-476'}",
            "score":7.7,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7bdf50bb4f5c54a4997c379092888546c97c3ebd'}",
            "dataset":"osv",
            "summary":"Null pointer dereference in `UncompressElement` ### Impact\nThe code for `tf.raw_ops.UncompressElement` can be made to trigger a null pointer dereference: \n\n```python\nimport tensorflow as tf\n\ndata = tf.data.Dataset.from_tensors([0.0])\ntf.raw_ops.UncompressElement(\n  compressed=tf.data.experimental.to_variant(data),\n  output_types=[tf.int64],\n  output_shapes=[2])\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f24faa153ad31a4b51578f8181d3aaab77a1ddeb\/tensorflow\/core\/kernels\/data\/experimental\/compression_ops.cc#L50-L53) obtains a pointer to a `CompressedElement` from a `Variant` tensor and then proceeds to dereference it for decompressing. There is no check that the `Variant` tensor contained a `CompressedElement`, so the pointer is actually `nullptr`.\n\n### Patches\nWe have patched the issue in GitHub commit [7bdf50bb4f5c54a4997c379092888546c97c3ebd](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7bdf50bb4f5c54a4997c379092888546c97c3ebd).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7bdf50bb4f5c54a4997c379092888546c97c3ebd",
            "commit_sha":"7bdf50bb4f5c54a4997c379092888546c97c3ebd",
            "patch":"SINGLE",
            "chain_ord":"['7bdf50bb4f5c54a4997c379092888546c97c3ebd']",
            "before_first_fix_commit":"{'a21a1226a1dbc08e257e4344324d5881fbd95d4e'}",
            "last_fix_commit":"7bdf50bb4f5c54a4997c379092888546c97c3ebd",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/10\/2021, 00:45:15",
            "message":"Ensure non-empty compressed input in tf.raw_ops.UncompressElement\n\nPiperOrigin-RevId: 383955815\nChange-Id: I072a84fd02738dd2f51b3f42836ed80067dba4a8",
            "author":"Laura Pak",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/data\/experimental\/compression_ops.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/7bdf50bb4f5c54a4997c379092888546c97c3ebd\/tensorflow%2Fcore%2Fkernels%2Fdata%2Fexperimental%2Fcompression_ops.cc', 'patch': '@@ -48,6 +48,11 @@ void UncompressElementOp::Compute(OpKernelContext* ctx) {\\n   Tensor tensor = ctx->input(0);\\n   const Variant& variant = tensor.scalar<Variant>()();\\n   const CompressedElement* compressed = variant.get<CompressedElement>();\\n+  OP_REQUIRES(\\n+      ctx, compressed != nullptr,\\n+      errors::InvalidArgument(\\n+          \"Input does not contain a compressed element. Instead got tensor \",\\n+          tensor.DebugString()));\\n \\n   std::vector<Tensor> components;\\n   OP_REQUIRES_OK(ctx, UncompressElement(*compressed, &components));'}}",
            "message_norm":"ensure non-empty compressed input in tf.raw_ops.uncompresselement\n\npiperorigin-revid: 383955815\nchange-id: i072a84fd02738dd2f51b3f42836ed80067dba4a8",
            "language":"en",
            "entities":"[('ensure', 'ACTION', ''), ('compressed', 'SECWORD', ''), ('tf.raw_ops.uncompresselement', 'SECWORD', ''), ('383955815', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/data\/experimental\/compression_ops.cc'])",
            "num_files":1.0,
            "patch_content":"From 7bdf50bb4f5c54a4997c379092888546c97c3ebd Mon Sep 17 00:00:00 2001\nFrom: Laura Pak <lpak@google.com>\nDate: Fri, 9 Jul 2021 17:45:15 -0700\nSubject: [PATCH] Ensure non-empty compressed input in\n tf.raw_ops.UncompressElement\n\nPiperOrigin-RevId: 383955815\nChange-Id: I072a84fd02738dd2f51b3f42836ed80067dba4a8\n---\n tensorflow\/core\/kernels\/data\/experimental\/compression_ops.cc | 5 +++++\n 1 file changed, 5 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/data\/experimental\/compression_ops.cc b\/tensorflow\/core\/kernels\/data\/experimental\/compression_ops.cc\nindex efa7018acb6293..8cc214671bd742 100644\n--- a\/tensorflow\/core\/kernels\/data\/experimental\/compression_ops.cc\n+++ b\/tensorflow\/core\/kernels\/data\/experimental\/compression_ops.cc\n@@ -48,6 +48,11 @@ void UncompressElementOp::Compute(OpKernelContext* ctx) {\n   Tensor tensor = ctx->input(0);\n   const Variant& variant = tensor.scalar<Variant>()();\n   const CompressedElement* compressed = variant.get<CompressedElement>();\n+  OP_REQUIRES(\n+      ctx, compressed != nullptr,\n+      errors::InvalidArgument(\n+          \"Input does not contain a compressed element. Instead got tensor \",\n+          tensor.DebugString()));\n \n   std::vector<Tensor> components;\n   OP_REQUIRES_OK(ctx, UncompressElement(*compressed, &components));"
        },
        {
            "index":162,
            "vuln_id":"GHSA-8687-vv9j-hgph",
            "cwe_id":"{'CWE-20'}",
            "score":9.1,
            "chain":"{'https:\/\/github.com\/Automattic\/mongoose\/commit\/f3eca5b94d822225c04e96cbeed9f095afb3c31c'}",
            "dataset":"osv",
            "summary":"Improper Input Validation in Automattic Mongoose Automattic Mongoose through 5.7.4 allows attackers to bypass access control (in some applications) because any query object with a _bsontype attribute is ignored. For example, adding \"_bsontype\":\"a\" can sometimes interfere with a query filter. NOTE: this CVE is about Mongoose's failure to work around this _bsontype special case that exists in older versions of the bson parser (aka the mongodb\/js-bson project).",
            "published_date":"2019-10-22",
            "chain_len":1,
            "project":"https:\/\/github.com\/Automattic\/mongoose",
            "commit_href":"https:\/\/github.com\/Automattic\/mongoose\/commit\/f3eca5b94d822225c04e96cbeed9f095afb3c31c",
            "commit_sha":"f3eca5b94d822225c04e96cbeed9f095afb3c31c",
            "patch":"SINGLE",
            "chain_ord":"['f3eca5b94d822225c04e96cbeed9f095afb3c31c']",
            "before_first_fix_commit":"{'cc10e0dc441f469330c1af2822d171fcd6fa8f89'}",
            "last_fix_commit":"f3eca5b94d822225c04e96cbeed9f095afb3c31c",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/09\/2019, 22:41:25",
            "message":"fix(query): delete top-level `_bsontype` property in queries to prevent silent empty queries\n\nFix #8222",
            "author":"Valeri Karpov",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'lib\/cast.js': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Automattic\/mongoose\/raw\/f3eca5b94d822225c04e96cbeed9f095afb3c31c\/lib%2Fcast.js', 'patch': \"@@ -27,6 +27,12 @@ module.exports = function cast(schema, obj, options, context) {\\n     throw new Error('Query filter must be an object, got an array ', util.inspect(obj));\\n   }\\n \\n+  \/\/ bson 1.x has the unfortunate tendency to remove filters that have a top-level\\n+  \/\/ `_bsontype` property. Should remove this when we upgrade to bson 4.x. See gh-8222\\n+  if (obj.hasOwnProperty('_bsontype')) {\\n+    delete obj._bsontype;\\n+  }\\n+\\n   const paths = Object.keys(obj);\\n   let i = paths.length;\\n   let _keys;\"}}",
            "message_norm":"fix(query): delete top-level `_bsontype` property in queries to prevent silent empty queries\n\nfix #8222",
            "language":"fr",
            "entities":"[('fix(query', 'ACTION', ''), ('prevent', 'ACTION', ''), ('fix', 'ACTION', ''), ('#8222', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/cast.js'])",
            "num_files":1.0,
            "patch_content":"From f3eca5b94d822225c04e96cbeed9f095afb3c31c Mon Sep 17 00:00:00 2001\nFrom: Valeri Karpov <val@karpov.io>\nDate: Wed, 9 Oct 2019 18:41:25 -0400\nSubject: [PATCH] fix(query): delete top-level `_bsontype` property in queries\n to prevent silent empty queries\n\nFix #8222\n---\n lib\/cast.js | 6 ++++++\n 1 file changed, 6 insertions(+)\n\ndiff --git a\/lib\/cast.js b\/lib\/cast.js\nindex 928fe9d1ba4..3dfd651acd2 100644\n--- a\/lib\/cast.js\n+++ b\/lib\/cast.js\n@@ -27,6 +27,12 @@ module.exports = function cast(schema, obj, options, context) {\n     throw new Error('Query filter must be an object, got an array ', util.inspect(obj));\n   }\n \n+  \/\/ bson 1.x has the unfortunate tendency to remove filters that have a top-level\n+  \/\/ `_bsontype` property. Should remove this when we upgrade to bson 4.x. See gh-8222\n+  if (obj.hasOwnProperty('_bsontype')) {\n+    delete obj._bsontype;\n+  }\n+\n   const paths = Object.keys(obj);\n   let i = paths.length;\n   let _keys;"
        },
        {
            "index":370,
            "vuln_id":"GHSA-2hxv-mx8x-mcj9",
            "cwe_id":"{'CWE-352'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/denkGroot\/Spina\/commit\/bfe44f289e336f80b6593032679300c493735e75'}",
            "dataset":"osv",
            "summary":"Spina vulnerable to a cross-site request forgery (CSRF) vulnerability Cross-site request forgery (CSRF) vulnerability in Spina before commit bfe44f289e336f80b6593032679300c493735e75.",
            "published_date":"2018-08-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/denkGroot\/Spina",
            "commit_href":"https:\/\/github.com\/denkGroot\/Spina\/commit\/bfe44f289e336f80b6593032679300c493735e75",
            "commit_sha":"bfe44f289e336f80b6593032679300c493735e75",
            "patch":"SINGLE",
            "chain_ord":"['bfe44f289e336f80b6593032679300c493735e75']",
            "before_first_fix_commit":"{'2b3e8f724a97b312a61503f378a5ce6def58bfe2'}",
            "last_fix_commit":"bfe44f289e336f80b6593032679300c493735e75",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/16\/2015, 14:23:27",
            "message":"protect from forgery",
            "author":"Bram Jetten",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'app\/controllers\/spina\/application_controller.rb': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/denkGroot\/Spina\/raw\/bfe44f289e336f80b6593032679300c493735e75\/app%2Fcontrollers%2Fspina%2Fapplication_controller.rb', 'patch': '@@ -1,5 +1,7 @@\\n module Spina\\n   class ApplicationController < ActionController::Base\\n+    protect_from_forgery\\n+    \\n     include ApplicationHelper\\n \\n     private'}}",
            "message_norm":"protect from forgery",
            "language":"en",
            "entities":"[('protect', 'SECWORD', ''), ('forgery', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/controllers\/spina\/application_controller.rb'])",
            "num_files":1.0,
            "patch_content":"From bfe44f289e336f80b6593032679300c493735e75 Mon Sep 17 00:00:00 2001\nFrom: Bram Jetten <mail@bramjetten.nl>\nDate: Tue, 16 Jun 2015 16:23:27 +0200\nSubject: [PATCH] protect from forgery\n\n---\n app\/controllers\/spina\/application_controller.rb | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/app\/controllers\/spina\/application_controller.rb b\/app\/controllers\/spina\/application_controller.rb\nindex 257f5fb8c..bf39207e4 100644\n--- a\/app\/controllers\/spina\/application_controller.rb\n+++ b\/app\/controllers\/spina\/application_controller.rb\n@@ -1,5 +1,7 @@\n module Spina\n   class ApplicationController < ActionController::Base\n+    protect_from_forgery\n+    \n     include ApplicationHelper\n \n     private"
        },
        {
            "index":292,
            "vuln_id":"GHSA-4574-qv3w-fcmg",
            "cwe_id":"{'CWE-502'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/Codeception\/Codeception\/commit\/cbce9ea7f4664052fa1ac6b36f5b5a6dbd864d71', 'https:\/\/github.com\/Codeception\/Codeception\/commit\/802a108057d250ee563120eaa5365a519afc0a71'}",
            "dataset":"osv",
            "summary":" Deserialization of Untrusted Data in codeception\/codeception This affects the package codeception\/codeception from 4.0.0 before 4.1.22 and before 3.1.3. The RunProcess class can be leveraged as a gadget to run arbitrary commands on a system that is deserializing user input without validation.",
            "published_date":"2021-09-01",
            "chain_len":2,
            "project":"https:\/\/github.com\/Codeception\/Codeception",
            "commit_href":"https:\/\/github.com\/Codeception\/Codeception\/commit\/cbce9ea7f4664052fa1ac6b36f5b5a6dbd864d71",
            "commit_sha":"cbce9ea7f4664052fa1ac6b36f5b5a6dbd864d71",
            "patch":"MULTI",
            "chain_ord":"['cbce9ea7f4664052fa1ac6b36f5b5a6dbd864d71', '802a108057d250ee563120eaa5365a519afc0a71']",
            "before_first_fix_commit":"{'5ea172de7b1b2e61dcdd50d73f8368886c549fb4'}",
            "last_fix_commit":"802a108057d250ee563120eaa5365a519afc0a71",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/06\/2021, 07:46:35",
            "message":"Security: Disable deserialization of RunProcess class (#6241)",
            "author":"Gintautas Miselis",
            "comments":null,
            "stats":"{'additions': 22, 'deletions': 0, 'total': 22}",
            "files":"{'ext\/RunProcess.php': {'additions': 22, 'deletions': 0, 'changes': 22, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Codeception\/Codeception\/raw\/cbce9ea7f4664052fa1ac6b36f5b5a6dbd864d71\/ext%2FRunProcess.php', 'patch': \"@@ -107,4 +107,26 @@ public function stopProcess()\\n         }\\n         $this->processes = [];\\n     }\\n+\\n+    \/**\\n+     * Disable the deserialization of the class to prevent attacker executing\\n+     * code by leveraging the __destruct method.\\n+     *\\n+     * @see https:\/\/owasp.org\/www-community\/vulnerabilities\/PHP_Object_Injection\\n+     *\/\\n+    public function __sleep()\\n+    {\\n+        throw new \\\\BadMethodCallException('Cannot serialize ' . __CLASS__);\\n+    }\\n+\\n+    \/**\\n+     * Disable the deserialization of the class to prevent attacker executing\\n+     * code by leveraging the __destruct method.\\n+     *\\n+     * @see https:\/\/owasp.org\/www-community\/vulnerabilities\/PHP_Object_Injection\\n+     *\/\\n+    public function __wakeup()\\n+    {\\n+        throw new \\\\BadMethodCallException('Cannot unserialize ' . __CLASS__);\\n+    }\\n }\"}}",
            "message_norm":"security: disable deserialization of runprocess class (#6241)",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('deserialization', 'SECWORD', ''), ('#6241', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['ext\/RunProcess.php'])",
            "num_files":1.0,
            "patch_content":"From cbce9ea7f4664052fa1ac6b36f5b5a6dbd864d71 Mon Sep 17 00:00:00 2001\nFrom: Gintautas Miselis <gintautas@miselis.lt>\nDate: Fri, 6 Aug 2021 10:46:35 +0300\nSubject: [PATCH] Security: Disable deserialization of RunProcess class (#6241)\n\n---\n ext\/RunProcess.php | 22 ++++++++++++++++++++++\n 1 file changed, 22 insertions(+)\n\ndiff --git a\/ext\/RunProcess.php b\/ext\/RunProcess.php\nindex 3bab2d7a31..fe2de54659 100644\n--- a\/ext\/RunProcess.php\n+++ b\/ext\/RunProcess.php\n@@ -107,4 +107,26 @@ public function stopProcess()\n         }\n         $this->processes = [];\n     }\n+\n+    \/**\n+     * Disable the deserialization of the class to prevent attacker executing\n+     * code by leveraging the __destruct method.\n+     *\n+     * @see https:\/\/owasp.org\/www-community\/vulnerabilities\/PHP_Object_Injection\n+     *\/\n+    public function __sleep()\n+    {\n+        throw new \\BadMethodCallException('Cannot serialize ' . __CLASS__);\n+    }\n+\n+    \/**\n+     * Disable the deserialization of the class to prevent attacker executing\n+     * code by leveraging the __destruct method.\n+     *\n+     * @see https:\/\/owasp.org\/www-community\/vulnerabilities\/PHP_Object_Injection\n+     *\/\n+    public function __wakeup()\n+    {\n+        throw new \\BadMethodCallException('Cannot unserialize ' . __CLASS__);\n+    }\n }"
        },
        {
            "index":387,
            "vuln_id":"GHSA-2927-hv3p-f3vp",
            "cwe_id":"{'CWE-601'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/caddyserver\/caddy\/pull\/4499\/commits\/b23bdcf99cfbd09d50555a999a16468404789230'}",
            "dataset":"osv",
            "summary":"Open redirect in caddy Caddy v2.4 was discovered to contain an open redirect vulnerability. A remote unauthenticated attacker may exploit this vulnerability to redirect users to arbitrary web URLs by tricking the victim users to click on crafted links.",
            "published_date":"2022-06-03",
            "chain_len":1,
            "project":"https:\/\/github.com\/caddyserver\/caddy",
            "commit_href":"https:\/\/github.com\/caddyserver\/caddy\/pull\/4499\/commits\/b23bdcf99cfbd09d50555a999a16468404789230",
            "commit_sha":"b23bdcf99cfbd09d50555a999a16468404789230",
            "patch":"SINGLE",
            "chain_ord":"['b23bdcf99cfbd09d50555a999a16468404789230']",
            "before_first_fix_commit":"{'5333c3528bd2badf1676efcced322d151e3706c8'}",
            "last_fix_commit":"b23bdcf99cfbd09d50555a999a16468404789230",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/30\/2021, 04:31:51",
            "message":"caddyhttp: Fix `MatchPath` sanitizing\n\nThis is a followup to #4407, in response to a report on the forums: https:\/\/caddy.community\/t\/php-fastcgi-phishing-redirection\/14542\n\nTurns out that doing `TrimRight` to remove trailing dots, _before_ cleaning the path, will cause double-dots at the end of the path to not be cleaned away as they should. We should instead remove the dots _after_ cleaning.",
            "author":"Francis Lavoie",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 5, 'total': 10}",
            "files":"{'modules\/caddyhttp\/matchers.go': {'additions': 5, 'deletions': 5, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/caddyserver\/caddy\/raw\/b23bdcf99cfbd09d50555a999a16468404789230\/modules%2Fcaddyhttp%2Fmatchers.go', 'patch': '@@ -325,18 +325,18 @@ func (m MatchPath) Match(r *http.Request) bool {\\n \\n \\tlowerPath := strings.ToLower(unescapedPath)\\n \\n+\\t\/\/ Clean the path, merges doubled slashes, etc.\\n+\\t\/\/ This ensures maliciously crafted requests can\\'t bypass\\n+\\t\/\/ the path matcher. See #4407\\n+\\tlowerPath = path.Clean(lowerPath)\\n+\\n \\t\/\/ see #2917; Windows ignores trailing dots and spaces\\n \\t\/\/ when accessing files (sigh), potentially causing a\\n \\t\/\/ security risk (cry) if PHP files end up being served\\n \\t\/\/ as static files, exposing the source code, instead of\\n \\t\/\/ being matched by *.php to be treated as PHP scripts\\n \\tlowerPath = strings.TrimRight(lowerPath, \". \")\\n \\n-\\t\/\/ Clean the path, merges doubled slashes, etc.\\n-\\t\/\/ This ensures maliciously crafted requests can\\'t bypass\\n-\\t\/\/ the path matcher. See #4407\\n-\\tlowerPath = path.Clean(lowerPath)\\n-\\n \\t\/\/ Cleaning may remove the trailing slash, but we want to keep it\\n \\tif lowerPath != \"\/\" && strings.HasSuffix(r.URL.Path, \"\/\") {\\n \\t\\tlowerPath = lowerPath + \"\/\"'}}",
            "message_norm":"caddyhttp: fix `matchpath` sanitizing\n\nthis is a followup to #4407, in response to a report on the forums: https:\/\/caddy.community\/t\/php-fastcgi-phishing-redirection\/14542\n\nturns out that doing `trimright` to remove trailing dots, _before_ cleaning the path, will cause double-dots at the end of the path to not be cleaned away as they should. we should instead remove the dots _after_ cleaning.",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('sanitizing', 'SECWORD', ''), ('#4407', 'ISSUE', ''), ('https:\/\/caddy.community\/t\/php-fastcgi-phishing-redirection\/14542', 'URL', ''), ('remove', 'ACTION', ''), ('remove', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/caddyhttp\/matchers.go'])",
            "num_files":1.0,
            "patch_content":"From b23bdcf99cfbd09d50555a999a16468404789230 Mon Sep 17 00:00:00 2001\nFrom: Francis Lavoie <lavofr@gmail.com>\nDate: Wed, 29 Dec 2021 23:31:51 -0500\nSubject: [PATCH] caddyhttp: Fix `MatchPath` sanitizing\n\nThis is a followup to #4407, in response to a report on the forums: https:\/\/caddy.community\/t\/php-fastcgi-phishing-redirection\/14542\n\nTurns out that doing `TrimRight` to remove trailing dots, _before_ cleaning the path, will cause double-dots at the end of the path to not be cleaned away as they should. We should instead remove the dots _after_ cleaning.\n---\n modules\/caddyhttp\/matchers.go | 10 +++++-----\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\ndiff --git a\/modules\/caddyhttp\/matchers.go b\/modules\/caddyhttp\/matchers.go\nindex 439c40730e5..272c92421fd 100644\n--- a\/modules\/caddyhttp\/matchers.go\n+++ b\/modules\/caddyhttp\/matchers.go\n@@ -325,6 +325,11 @@ func (m MatchPath) Match(r *http.Request) bool {\n \n \tlowerPath := strings.ToLower(unescapedPath)\n \n+\t\/\/ Clean the path, merges doubled slashes, etc.\n+\t\/\/ This ensures maliciously crafted requests can't bypass\n+\t\/\/ the path matcher. See #4407\n+\tlowerPath = path.Clean(lowerPath)\n+\n \t\/\/ see #2917; Windows ignores trailing dots and spaces\n \t\/\/ when accessing files (sigh), potentially causing a\n \t\/\/ security risk (cry) if PHP files end up being served\n@@ -332,11 +337,6 @@ func (m MatchPath) Match(r *http.Request) bool {\n \t\/\/ being matched by *.php to be treated as PHP scripts\n \tlowerPath = strings.TrimRight(lowerPath, \". \")\n \n-\t\/\/ Clean the path, merges doubled slashes, etc.\n-\t\/\/ This ensures maliciously crafted requests can't bypass\n-\t\/\/ the path matcher. See #4407\n-\tlowerPath = path.Clean(lowerPath)\n-\n \t\/\/ Cleaning may remove the trailing slash, but we want to keep it\n \tif lowerPath != \"\/\" && strings.HasSuffix(r.URL.Path, \"\/\") {\n \t\tlowerPath = lowerPath + \"\/\""
        },
        {
            "index":440,
            "vuln_id":"GHSA-566m-qj78-rww5",
            "cwe_id":"{'CWE-400'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/postcss\/postcss\/commit\/2b1d04c867995e55124e0a165b7c6622c1735956'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service in postcss The package postcss versions before 7.0.36 or between 8.0.0 and 8.2.13 are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib\/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern \\\/\\*\\s* sourceMappingURL=(.*).",
            "published_date":"2022-01-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/postcss\/postcss",
            "commit_href":"https:\/\/github.com\/postcss\/postcss\/commit\/2b1d04c867995e55124e0a165b7c6622c1735956",
            "commit_sha":"2b1d04c867995e55124e0a165b7c6622c1735956",
            "patch":"SINGLE",
            "chain_ord":"['2b1d04c867995e55124e0a165b7c6622c1735956']",
            "before_first_fix_commit":"{'dc6cff1d7f9e0d6cba440d1b4f797a0f57b13595', '2ad1ca9b965dde32223bee28dc259c339cbaaa05'}",
            "last_fix_commit":"2b1d04c867995e55124e0a165b7c6622c1735956",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/26\/2021, 12:08:17",
            "message":"Merge pull request #1567 from yetingli\/main\n\nFix ReDoS in previous-map",
            "author":"Andrey Sitnik",
            "comments":"{'com_1': {'author': 'abergmann', 'datetime': '04\/27\/2021, 06:37:03', 'body': '[CVE-2021-23382](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2021-23382) was assigned to this commit.'}}",
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'lib\/previous-map.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/postcss\/postcss\/raw\/2b1d04c867995e55124e0a165b7c6622c1735956\/lib%2Fprevious-map.js', 'patch': '@@ -48,11 +48,11 @@ class PreviousMap {\\n   }\\n \\n   getAnnotationURL(sourceMapString) {\\n-    return sourceMapString.match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=(.*)\\\\*\\\\\/\/)[1].trim()\\n+    return sourceMapString.match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=((?:(?!sourceMappingURL=).)*)\\\\*\\\\\/\/)[1].trim()\\n   }\\n \\n   loadAnnotation(css) {\\n-    let annotations = css.match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=.*\\\\*\\\\\/\/gm)\\n+    let annotations = css.match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=(?:(?!sourceMappingURL=).)*\\\\*\\\\\/\/gm)\\n \\n     if (annotations && annotations.length > 0) {\\n       \/\/ Locate the last sourceMappingURL to avoid picking up'}}",
            "message_norm":"merge pull request #1567 from yetingli\/main\n\nfix redos in previous-map",
            "language":"en",
            "entities":"[('#1567', 'ISSUE', ''), ('redos', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/previous-map.js'])",
            "num_files":1.0,
            "patch_content":"From 2ad1ca9b965dde32223bee28dc259c339cbaaa05 Mon Sep 17 00:00:00 2001\nFrom: Yeting Li <liyt@ios.ac.cn>\nDate: Mon, 26 Apr 2021 14:26:52 +0800\nSubject: [PATCH] Fix ReDoS in previous-map\n\nFix Strategy: Replace `(.*)` with `(?:(?!sourceMappingURL=).)*`\n---\n lib\/previous-map.js | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/lib\/previous-map.js b\/lib\/previous-map.js\nindex d9308ff26..4928e1c23 100644\n--- a\/lib\/previous-map.js\n+++ b\/lib\/previous-map.js\n@@ -48,11 +48,11 @@ class PreviousMap {\n   }\n \n   getAnnotationURL(sourceMapString) {\n-    return sourceMapString.match(\/\\\/\\*\\s*# sourceMappingURL=(.*)\\*\\\/\/)[1].trim()\n+    return sourceMapString.match(\/\\\/\\*\\s*# sourceMappingURL=((?:(?!sourceMappingURL=).)*)\\*\\\/\/)[1].trim()\n   }\n \n   loadAnnotation(css) {\n-    let annotations = css.match(\/\\\/\\*\\s*# sourceMappingURL=.*\\*\\\/\/gm)\n+    let annotations = css.match(\/\\\/\\*\\s*# sourceMappingURL=(?:(?!sourceMappingURL=).)*\\*\\\/\/gm)\n \n     if (annotations && annotations.length > 0) {\n       \/\/ Locate the last sourceMappingURL to avoid picking up"
        },
        {
            "index":531,
            "vuln_id":"GHSA-p23j-g745-8449",
            "cwe_id":"{'CWE-787'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/a4e56547fb8b7450656bfd26dfc52b8477c8ef27', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/cc871514deeaeaedb5b757c2ca8cd4ab9abccb5d'}",
            "dataset":"osv",
            "summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-1307, CVE-2019-1308, CVE-2019-1366.",
            "published_date":"2021-03-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/chakra-core\/ChakraCore",
            "commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/a4e56547fb8b7450656bfd26dfc52b8477c8ef27",
            "commit_sha":"a4e56547fb8b7450656bfd26dfc52b8477c8ef27",
            "patch":"MULTI",
            "chain_ord":"['a4e56547fb8b7450656bfd26dfc52b8477c8ef27', 'cc871514deeaeaedb5b757c2ca8cd4ab9abccb5d']",
            "before_first_fix_commit":"{'7e9a2ee60baa95ceb4f48f522f823c812ca90c80', '5989c6e038d80f92dcd8e10d725cdf45396201bb'}",
            "last_fix_commit":"cc871514deeaeaedb5b757c2ca8cd4ab9abccb5d",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/03\/2019, 21:52:17",
            "message":"CVE-2019-1335",
            "author":"Wyatt",
            "comments":null,
            "stats":"{'additions': 52, 'deletions': 13, 'total': 65}",
            "files":"{'lib\/Backend\/GlobOpt.cpp': {'additions': 52, 'deletions': 13, 'changes': 65, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/a4e56547fb8b7450656bfd26dfc52b8477c8ef27\/lib%2FBackend%2FGlobOpt.cpp', 'patch': '@@ -2161,27 +2161,46 @@ GlobOpt::CollectMemOpInfo(IR::Instr *instrBegin, IR::Instr *instr, Value *src1Va\\n             return false;\\n         }\\n         break;\\n-    case Js::OpCode::Decr_A:\\n-        isIncr = false;\\n-    case Js::OpCode::Incr_A:\\n-        isChangedByOne = true;\\n-        goto MemOpCheckInductionVariable;\\n     case Js::OpCode::Sub_I4:\\n-    case Js::OpCode::Sub_A:\\n         isIncr = false;\\n-    case Js::OpCode::Add_A:\\n     case Js::OpCode::Add_I4:\\n     {\\n-MemOpCheckInductionVariable:\\n-        StackSym *sym = instr->GetSrc1()->GetStackSym();\\n-        if (!sym)\\n+        \/\/ The only case in which these OpCodes can contribute to an inductionVariableChangeInfo\\n+        \/\/ is when the induction variable is being modified and overwritten aswell (ex: j = j + 1)\\n+        \/\/ and not when the induction variable is modified but not overwritten (ex: k = j + 1).\\n+        \/\/ This can either be detected in IR as\\n+        \/\/ s1     = Add_I4 s1     1  \/\/ Case #1, can be seen with \"j++\".\\n+        \/\/ or as\\n+        \/\/ s4(s2) = Add_I4 s3(s1) 1  \/\/ Case #2, can be see with \"j = j + 1\".\\n+        \/\/ s1     = Ld_A   s2\\n+        bool isInductionVar = false;\\n+        IR::Instr* nextInstr = instr->m_next;\\n+        if (\\n+            \/\/ Checks for Case #1 and Case #2\\n+            instr->GetDst()->GetStackSym() != nullptr &&\\n+            instr->GetDst()->IsRegOpnd() &&\\n+            (\\n+                \/\/ Checks for Case #1\\n+                (instr->GetDst()->GetStackSym() == instr->GetSrc1()->GetStackSym()) ||\\n+\\n+                \/\/ Checks for Case #2\\n+                (nextInstr&& nextInstr->m_opcode == Js::OpCode::Ld_A &&\\n+                 nextInstr->GetSrc1()->IsRegOpnd() &&\\n+                 nextInstr->GetDst()->IsRegOpnd() &&\\n+                 GetVarSymID(instr->GetDst()->GetStackSym()) == nextInstr->GetSrc1()->GetStackSym()->m_id &&\\n+                 GetVarSymID(instr->GetSrc1()->GetStackSym()) == nextInstr->GetDst()->GetStackSym()->m_id)\\n+            )\\n+        )\\n         {\\n-            sym = instr->GetSrc2()->GetStackSym();\\n+            isInductionVar = true;\\n         }\\n+        \\n+        \/\/ Even if dstIsInductionVar then dst == src1 so it\\'s safe to use src1 as the induction sym always.\\n+        StackSym* sym = instr->GetSrc1()->GetStackSym();\\n \\n         SymID inductionSymID = GetVarSymID(sym);\\n \\n-        if (IsSymIDInductionVariable(inductionSymID, this->currentBlock->loop))\\n+        if (isInductionVar && IsSymIDInductionVariable(inductionSymID, this->currentBlock->loop))\\n         {\\n             if (!isChangedByOne)\\n             {\\n@@ -2246,7 +2265,6 @@ GlobOpt::CollectMemOpInfo(IR::Instr *instrBegin, IR::Instr *instr, Value *src1Va\\n                     {\\n                         inductionVariableChangeInfo.unroll++;\\n                     }\\n-                    \\n                     inductionVariableChangeInfo.isIncremental = isIncr;\\n                     loop->memOpInfo->inductionVariableChangeInfoMap->Item(inductionSymID, inductionVariableChangeInfo);\\n                 }\\n@@ -2284,6 +2302,27 @@ GlobOpt::CollectMemOpInfo(IR::Instr *instrBegin, IR::Instr *instr, Value *src1Va\\n             }\\n         }\\n         NEXT_INSTR_IN_RANGE;\\n+        IR::Instr* prevInstr = instr->m_prev;\\n+\\n+        \/\/ If an instr where the dst is an induction variable (and thus is being written to) is not caught by a case in the above\\n+        \/\/ switch statement (which implies that this instr does not contributes to a inductionVariableChangeInfo) and in the default\\n+        \/\/ case does not set doMemOp to false (which implies that this instr does not invalidate this MemOp), then FailFast as we\\n+        \/\/ should not be performing a MemOp under these conditions. \\n+        AssertOrFailFast(!instr->GetDst() || instr->m_opcode == Js::OpCode::IncrLoopBodyCount || !loop->memOpInfo ||\\n+\\n+            \/\/ Refer to \"Case #2\" described above in this function. For the following IR:\\n+            \/\/ Line #1: s4(s2) = Add_I4 s3(s1) 1\\n+            \/\/ Line #2: s3(s1) = Ld_A   s4(s2)\\n+            \/\/ do not consider line #2 as a violating instr\\n+            (instr->m_opcode == Js::OpCode::Ld_I4 &&\\n+                prevInstr && (prevInstr->m_opcode == Js::OpCode::Add_I4 || prevInstr->m_opcode == Js::OpCode::Sub_I4) &&\\n+                instr->GetSrc1()->IsRegOpnd() &&\\n+                instr->GetDst()->IsRegOpnd() &&\\n+                prevInstr->GetDst()->IsRegOpnd() &&\\n+                instr->GetDst()->GetStackSym() == prevInstr->GetSrc1()->GetStackSym() &&\\n+                instr->GetSrc1()->GetStackSym() == prevInstr->GetDst()->GetStackSym()) ||\\n+\\n+            !loop->memOpInfo->inductionVariableChangeInfoMap->ContainsKey(GetVarSymID(instr->GetDst()->GetStackSym())));\\n     }\\n \\n     return true;'}}",
            "message_norm":"cve-2019-1335",
            "language":"ro",
            "entities":"[('cve-2019-1335', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/Backend\/GlobOpt.cpp'])",
            "num_files":1.0,
            "patch_content":"From a4e56547fb8b7450656bfd26dfc52b8477c8ef27 Mon Sep 17 00:00:00 2001\nFrom: Wyatt <wyrichte@microsoft.com>\nDate: Tue, 3 Sep 2019 14:52:17 -0700\nSubject: [PATCH] CVE-2019-1335\n\n---\n lib\/Backend\/GlobOpt.cpp | 65 ++++++++++++++++++++++++++++++++---------\n 1 file changed, 52 insertions(+), 13 deletions(-)\n\ndiff --git a\/lib\/Backend\/GlobOpt.cpp b\/lib\/Backend\/GlobOpt.cpp\nindex e19eed15127..1a7530499c2 100644\n--- a\/lib\/Backend\/GlobOpt.cpp\n+++ b\/lib\/Backend\/GlobOpt.cpp\n@@ -2161,27 +2161,46 @@ GlobOpt::CollectMemOpInfo(IR::Instr *instrBegin, IR::Instr *instr, Value *src1Va\n             return false;\n         }\n         break;\n-    case Js::OpCode::Decr_A:\n-        isIncr = false;\n-    case Js::OpCode::Incr_A:\n-        isChangedByOne = true;\n-        goto MemOpCheckInductionVariable;\n     case Js::OpCode::Sub_I4:\n-    case Js::OpCode::Sub_A:\n         isIncr = false;\n-    case Js::OpCode::Add_A:\n     case Js::OpCode::Add_I4:\n     {\n-MemOpCheckInductionVariable:\n-        StackSym *sym = instr->GetSrc1()->GetStackSym();\n-        if (!sym)\n+        \/\/ The only case in which these OpCodes can contribute to an inductionVariableChangeInfo\n+        \/\/ is when the induction variable is being modified and overwritten aswell (ex: j = j + 1)\n+        \/\/ and not when the induction variable is modified but not overwritten (ex: k = j + 1).\n+        \/\/ This can either be detected in IR as\n+        \/\/ s1     = Add_I4 s1     1  \/\/ Case #1, can be seen with \"j++\".\n+        \/\/ or as\n+        \/\/ s4(s2) = Add_I4 s3(s1) 1  \/\/ Case #2, can be see with \"j = j + 1\".\n+        \/\/ s1     = Ld_A   s2\n+        bool isInductionVar = false;\n+        IR::Instr* nextInstr = instr->m_next;\n+        if (\n+            \/\/ Checks for Case #1 and Case #2\n+            instr->GetDst()->GetStackSym() != nullptr &&\n+            instr->GetDst()->IsRegOpnd() &&\n+            (\n+                \/\/ Checks for Case #1\n+                (instr->GetDst()->GetStackSym() == instr->GetSrc1()->GetStackSym()) ||\n+\n+                \/\/ Checks for Case #2\n+                (nextInstr&& nextInstr->m_opcode == Js::OpCode::Ld_A &&\n+                 nextInstr->GetSrc1()->IsRegOpnd() &&\n+                 nextInstr->GetDst()->IsRegOpnd() &&\n+                 GetVarSymID(instr->GetDst()->GetStackSym()) == nextInstr->GetSrc1()->GetStackSym()->m_id &&\n+                 GetVarSymID(instr->GetSrc1()->GetStackSym()) == nextInstr->GetDst()->GetStackSym()->m_id)\n+            )\n+        )\n         {\n-            sym = instr->GetSrc2()->GetStackSym();\n+            isInductionVar = true;\n         }\n+        \n+        \/\/ Even if dstIsInductionVar then dst == src1 so it's safe to use src1 as the induction sym always.\n+        StackSym* sym = instr->GetSrc1()->GetStackSym();\n \n         SymID inductionSymID = GetVarSymID(sym);\n \n-        if (IsSymIDInductionVariable(inductionSymID, this->currentBlock->loop))\n+        if (isInductionVar && IsSymIDInductionVariable(inductionSymID, this->currentBlock->loop))\n         {\n             if (!isChangedByOne)\n             {\n@@ -2246,7 +2265,6 @@ GlobOpt::CollectMemOpInfo(IR::Instr *instrBegin, IR::Instr *instr, Value *src1Va\n                     {\n                         inductionVariableChangeInfo.unroll++;\n                     }\n-                    \n                     inductionVariableChangeInfo.isIncremental = isIncr;\n                     loop->memOpInfo->inductionVariableChangeInfoMap->Item(inductionSymID, inductionVariableChangeInfo);\n                 }\n@@ -2284,6 +2302,27 @@ GlobOpt::CollectMemOpInfo(IR::Instr *instrBegin, IR::Instr *instr, Value *src1Va\n             }\n         }\n         NEXT_INSTR_IN_RANGE;\n+        IR::Instr* prevInstr = instr->m_prev;\n+\n+        \/\/ If an instr where the dst is an induction variable (and thus is being written to) is not caught by a case in the above\n+        \/\/ switch statement (which implies that this instr does not contributes to a inductionVariableChangeInfo) and in the default\n+        \/\/ case does not set doMemOp to false (which implies that this instr does not invalidate this MemOp), then FailFast as we\n+        \/\/ should not be performing a MemOp under these conditions. \n+        AssertOrFailFast(!instr->GetDst() || instr->m_opcode == Js::OpCode::IncrLoopBodyCount || !loop->memOpInfo ||\n+\n+            \/\/ Refer to \"Case #2\" described above in this function. For the following IR:\n+            \/\/ Line #1: s4(s2) = Add_I4 s3(s1) 1\n+            \/\/ Line #2: s3(s1) = Ld_A   s4(s2)\n+            \/\/ do not consider line #2 as a violating instr\n+            (instr->m_opcode == Js::OpCode::Ld_I4 &&\n+                prevInstr && (prevInstr->m_opcode == Js::OpCode::Add_I4 || prevInstr->m_opcode == Js::OpCode::Sub_I4) &&\n+                instr->GetSrc1()->IsRegOpnd() &&\n+                instr->GetDst()->IsRegOpnd() &&\n+                prevInstr->GetDst()->IsRegOpnd() &&\n+                instr->GetDst()->GetStackSym() == prevInstr->GetSrc1()->GetStackSym() &&\n+                instr->GetSrc1()->GetStackSym() == prevInstr->GetDst()->GetStackSym()) ||\n+\n+            !loop->memOpInfo->inductionVariableChangeInfoMap->ContainsKey(GetVarSymID(instr->GetDst()->GetStackSym())));\n     }\n \n     return true;"
        },
        {
            "index":933,
            "vuln_id":"GHSA-3j58-p785-f27x",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/fc7e1a026735b93f0e0047700d08c44954fce9ce'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in microweber There is a reflected cross sitem scripting attack in microweber via url parameters.",
            "published_date":"2022-01-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/fc7e1a026735b93f0e0047700d08c44954fce9ce",
            "commit_sha":"fc7e1a026735b93f0e0047700d08c44954fce9ce",
            "patch":"SINGLE",
            "chain_ord":"['fc7e1a026735b93f0e0047700d08c44954fce9ce']",
            "before_first_fix_commit":"{'6e9fcaa043b4211ef21a494f9892dd19ba8a572c'}",
            "last_fix_commit":"fc7e1a026735b93f0e0047700d08c44954fce9ce",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/19\/2022, 10:33:18",
            "message":"fix xss on module api call in value parameters",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/fc7e1a026735b93f0e0047700d08c44954fce9ce\/src%2FMicroweberPackages%2FApp%2FHttp%2FControllers%2FApiController.php', 'patch': \"@@ -17,9 +17,6 @@\\n class ApiController  extends FrontendController\\n {\\n \\n-\\n-\\n-\\n     public function api_html()\\n     {\\n         if (!defined('MW_API_HTML_OUTPUT')) {\\n@@ -609,12 +606,14 @@ public function module()\\n \\n         $request_data = array_merge($_GET, $_POST);\\n \\n-\\n         \/\/ sanitize attributes\\n         if($request_data){\\n             $request_data_new = [];\\n             $antixss = new AntiXSS();\\n             foreach ($request_data as $k=>$v){\\n+\\n+                $v = $antixss->xss_clean($v);\\n+\\n                 if(is_string($k)){\\n                     $k = $antixss->xss_clean($k);\\n                     if($k){\\n@@ -623,6 +622,7 @@ public function module()\\n                 } else {\\n                     $request_data_new[$k] = $v;\\n                 }\\n+                \\n             }\\n             $request_data = $request_data_new;\\n         }\"}}",
            "message_norm":"fix xss on module api call in value parameters",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php'])",
            "num_files":1.0,
            "patch_content":"From fc7e1a026735b93f0e0047700d08c44954fce9ce Mon Sep 17 00:00:00 2001\nFrom: Bozhidar Slaveykov <bobi@microweber.com>\nDate: Wed, 19 Jan 2022 12:33:18 +0200\nSubject: [PATCH] fix xss on module api call in value parameters\n\n---\n ...\/App\/Http\/Controllers\/ApiController.php                | 8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ndiff --git a\/src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php b\/src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php\nindex 7973615d77b..6d628263d5b 100644\n--- a\/src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php\n+++ b\/src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php\n@@ -17,9 +17,6 @@\n class ApiController  extends FrontendController\n {\n \n-\n-\n-\n     public function api_html()\n     {\n         if (!defined('MW_API_HTML_OUTPUT')) {\n@@ -609,12 +606,14 @@ public function module()\n \n         $request_data = array_merge($_GET, $_POST);\n \n-\n         \/\/ sanitize attributes\n         if($request_data){\n             $request_data_new = [];\n             $antixss = new AntiXSS();\n             foreach ($request_data as $k=>$v){\n+\n+                $v = $antixss->xss_clean($v);\n+\n                 if(is_string($k)){\n                     $k = $antixss->xss_clean($k);\n                     if($k){\n@@ -623,6 +622,7 @@ public function module()\n                 } else {\n                     $request_data_new[$k] = $v;\n                 }\n+                \n             }\n             $request_data = $request_data_new;\n         }"
        },
        {
            "index":3,
            "vuln_id":"GHSA-97gv-3p2c-xw7j",
            "cwe_id":"{'CWE-74', 'CWE-400'}",
            "score":8.2,
            "chain":"{'https:\/\/github.com\/oliversalzburg\/i18n-node-angular\/commit\/877720d2d9bb90dc8233706e81ffa03f99fc9dc8'}",
            "dataset":"osv",
            "summary":"Denial of Service and Content Injection in i18n-node-angular Versions of `i18n-node-angular` prior to 1.4.0 are affected by denial of service and cross-site scripting vulnerabilities. The vulnerabilities exist in a REST endpoint that was created for development purposes, but was not disabled in production in affected versions.\n\n\n## Recommendation\n\nUpdate to version 1.4.0 or later.",
            "published_date":"2019-02-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/oliversalzburg\/i18n-node-angular",
            "commit_href":"https:\/\/github.com\/oliversalzburg\/i18n-node-angular\/commit\/877720d2d9bb90dc8233706e81ffa03f99fc9dc8",
            "commit_sha":"877720d2d9bb90dc8233706e81ffa03f99fc9dc8",
            "patch":"SINGLE",
            "chain_ord":"['877720d2d9bb90dc8233706e81ffa03f99fc9dc8']",
            "before_first_fix_commit":"{'85ba51ac9dc47a3e232a19926791219ef9de20ee'}",
            "last_fix_commit":"877720d2d9bb90dc8233706e81ffa03f99fc9dc8",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/07\/2016, 08:40:02",
            "message":"[FIX] Only register translate route during development",
            "author":"Oliver Salzburg",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 1, 'total': 5}",
            "files":"{'i18n-node-routes.js': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/oliversalzburg\/i18n-node-angular\/raw\/877720d2d9bb90dc8233706e81ffa03f99fc9dc8\/i18n-node-routes.js', 'patch': '@@ -49,7 +49,10 @@ var configure = function( app, configObject ) {\\n \\n \\t\/\/ Register routes\\n \\tapp.get( \"\/i18n\/:locale\", i18nRoutes.i18n );\\n-\\tapp.get( \"\/i18n\/:locale\/:phrase\", i18nRoutes.translate );\\n+\\n+\\tif( process.env.NODE_ENV === \"development\" ) {\\n+\\t\\tapp.get( \"\/i18n\/:locale\/:phrase\", i18nRoutes.translate );\\n+\\t}\\n };\\n \\n \/**'}}",
            "message_norm":"[fix] only register translate route during development",
            "language":"en",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['i18n-node-routes.js'])",
            "num_files":1.0,
            "patch_content":"From 877720d2d9bb90dc8233706e81ffa03f99fc9dc8 Mon Sep 17 00:00:00 2001\nFrom: Oliver Salzburg <oliver.salzburg@gmail.com>\nDate: Thu, 7 Jan 2016 09:40:02 +0100\nSubject: [PATCH] [FIX] Only register translate route during development\n\n---\n i18n-node-routes.js | 5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ndiff --git a\/i18n-node-routes.js b\/i18n-node-routes.js\nindex 0083412..cfe0b1a 100644\n--- a\/i18n-node-routes.js\n+++ b\/i18n-node-routes.js\n@@ -49,7 +49,10 @@ var configure = function( app, configObject ) {\n \n \t\/\/ Register routes\n \tapp.get( \"\/i18n\/:locale\", i18nRoutes.i18n );\n-\tapp.get( \"\/i18n\/:locale\/:phrase\", i18nRoutes.translate );\n+\n+\tif( process.env.NODE_ENV === \"development\" ) {\n+\t\tapp.get( \"\/i18n\/:locale\/:phrase\", i18nRoutes.translate );\n+\t}\n };\n \n \/**"
        },
        {
            "index":35,
            "vuln_id":"GHSA-xrp2-fhq4-4q3w",
            "cwe_id":"{'CWE-20'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e57fd691c7b0fd00ea3bfe43444f30c1969748b5'}",
            "dataset":"osv",
            "summary":"Segfault if `tf.histogram_fixed_width` is called with NaN values in TensorFlow ### Impact\nThe implementation of [`tf.histogram_fixed_width`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/histogram_op.cc) is vulnerable to a crash when the values array contain `NaN` elements:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.histogram_fixed_width(values=np.nan, value_range=[1,2])\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/histogram_op.cc#L35-L74) assumes that all floating point operations are defined and then converts a floating point result to an integer index:\n\n```cc\nindex_to_bin.device(d) =\n    ((values.cwiseMax(value_range(0)) - values.constant(value_range(0)))\n         .template cast<double>() \/\n     step)\n        .cwiseMin(nbins_minus_1)\n        .template cast<int32>();\n```\n\nIf `values` contains `NaN` then the result of the division is still `NaN` and the cast to `int32` would result in a crash.\n\nThis only occurs on the CPU implementation.\n\n### Patches\nWe have patched the issue in GitHub commit [e57fd691c7b0fd00ea3bfe43444f30c1969748b5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e57fd691c7b0fd00ea3bfe43444f30c1969748b5).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported externally via a [GitHub issue](https:\/\/github.com\/tensorflow\/tensorflow\/issues\/45770).",
            "published_date":"2022-05-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e57fd691c7b0fd00ea3bfe43444f30c1969748b5",
            "commit_sha":"e57fd691c7b0fd00ea3bfe43444f30c1969748b5",
            "patch":"SINGLE",
            "chain_ord":"['e57fd691c7b0fd00ea3bfe43444f30c1969748b5']",
            "before_first_fix_commit":"{'484b5e8836454dbc93380176ae5eeeab02cc63c0'}",
            "last_fix_commit":"e57fd691c7b0fd00ea3bfe43444f30c1969748b5",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/20\/2022, 18:35:47",
            "message":"Prevent crash when histogram is called with NaN values.\n\nFixes #45770\n\nPiperOrigin-RevId: 443149951",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 2, 'total': 13}",
            "files":"{'tensorflow\/core\/kernels\/histogram_op.cc': {'additions': 11, 'deletions': 2, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e57fd691c7b0fd00ea3bfe43444f30c1969748b5\/tensorflow%2Fcore%2Fkernels%2Fhistogram_op.cc', 'patch': '@@ -50,6 +50,15 @@ struct HistogramFixedWidthFunctor<CPUDevice, T, Tout> {\\n                         static_cast<double>(nbins);\\n     const double nbins_minus_1 = static_cast<double>(nbins - 1);\\n \\n+    \/\/ We cannot handle NANs in the algorithm below (due to the case to int32)\\n+    const Eigen::Tensor<int32, 1, 1> nans_tensor =\\n+        values.isnan().template cast<int32>();\\n+    const Eigen::Tensor<int32, 0, 1> reduced_tensor = nans_tensor.sum();\\n+    const int num_nans = reduced_tensor(0);\\n+    if (num_nans > 0) {\\n+      return errors::InvalidArgument(\"Histogram values must not contain NaN\");\\n+    }\\n+\\n     \/\/ The calculation is done by finding the slot of each value in `values`.\\n     \/\/ With [a, b]:\\n     \/\/   step = (b - a) \/ nbins\\n@@ -98,12 +107,12 @@ class HistogramFixedWidthOp : public OpKernel {\\n     const auto nbins = nbins_tensor.scalar<int32>()();\\n \\n     OP_REQUIRES(\\n-        ctx, (value_range(0) < value_range(1)),\\n+        ctx, value_range(0) < value_range(1),\\n         errors::InvalidArgument(\"value_range should satisfy value_range[0] < \"\\n                                 \"value_range[1], but got \\'[\",\\n                                 value_range(0), \", \", value_range(1), \"]\\'\"));\\n     OP_REQUIRES(\\n-        ctx, (nbins > 0),\\n+        ctx, nbins > 0,\\n         errors::InvalidArgument(\"nbins should be a positive number, but got \\'\",\\n                                 nbins, \"\\'\"));'}}",
            "message_norm":"prevent crash when histogram is called with nan values.\n\nfixes #45770\n\npiperorigin-revid: 443149951",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('fixes', 'ACTION', ''), ('#45770', 'ISSUE', ''), ('443149951', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/histogram_op.cc'])",
            "num_files":1.0,
            "patch_content":"From e57fd691c7b0fd00ea3bfe43444f30c1969748b5 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Wed, 20 Apr 2022 11:35:47 -0700\nSubject: [PATCH] Prevent crash when histogram is called with NaN values.\n\nFixes #45770\n\nPiperOrigin-RevId: 443149951\n---\n tensorflow\/core\/kernels\/histogram_op.cc | 13 +++++++++++--\n 1 file changed, 11 insertions(+), 2 deletions(-)\n\ndiff --git a\/tensorflow\/core\/kernels\/histogram_op.cc b\/tensorflow\/core\/kernels\/histogram_op.cc\nindex 8e1b53de6ee409..8ba9bccc9fbecd 100644\n--- a\/tensorflow\/core\/kernels\/histogram_op.cc\n+++ b\/tensorflow\/core\/kernels\/histogram_op.cc\n@@ -50,6 +50,15 @@ struct HistogramFixedWidthFunctor<CPUDevice, T, Tout> {\n                         static_cast<double>(nbins);\n     const double nbins_minus_1 = static_cast<double>(nbins - 1);\n \n+    \/\/ We cannot handle NANs in the algorithm below (due to the case to int32)\n+    const Eigen::Tensor<int32, 1, 1> nans_tensor =\n+        values.isnan().template cast<int32>();\n+    const Eigen::Tensor<int32, 0, 1> reduced_tensor = nans_tensor.sum();\n+    const int num_nans = reduced_tensor(0);\n+    if (num_nans > 0) {\n+      return errors::InvalidArgument(\"Histogram values must not contain NaN\");\n+    }\n+\n     \/\/ The calculation is done by finding the slot of each value in `values`.\n     \/\/ With [a, b]:\n     \/\/   step = (b - a) \/ nbins\n@@ -98,12 +107,12 @@ class HistogramFixedWidthOp : public OpKernel {\n     const auto nbins = nbins_tensor.scalar<int32>()();\n \n     OP_REQUIRES(\n-        ctx, (value_range(0) < value_range(1)),\n+        ctx, value_range(0) < value_range(1),\n         errors::InvalidArgument(\"value_range should satisfy value_range[0] < \"\n                                 \"value_range[1], but got '[\",\n                                 value_range(0), \", \", value_range(1), \"]'\"));\n     OP_REQUIRES(\n-        ctx, (nbins > 0),\n+        ctx, nbins > 0,\n         errors::InvalidArgument(\"nbins should be a positive number, but got '\",\n                                 nbins, \"'\"));"
        },
        {
            "index":755,
            "vuln_id":"GHSA-4vhw-4rw7-jfpv",
            "cwe_id":"{'CWE-22'}",
            "score":9.1,
            "chain":"{'https:\/\/github.com\/NilsIrl\/MozWire\/pull\/17\/commits\/dd0639bf2876773b66382f47285f7db701f628d9'}",
            "dataset":"osv",
            "summary":"Path traversal in mozwire An issue was discovered in the mozwire crate through 2020-08-18 for Rust. A ..\/ directory-traversal situation allows overwriting local files that have .conf at the end of the filename.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/NilsIrl\/MozWire",
            "commit_href":"https:\/\/github.com\/NilsIrl\/MozWire\/pull\/17\/commits\/dd0639bf2876773b66382f47285f7db701f628d9",
            "commit_sha":"dd0639bf2876773b66382f47285f7db701f628d9",
            "patch":"SINGLE",
            "chain_ord":"['dd0639bf2876773b66382f47285f7db701f628d9']",
            "before_first_fix_commit":"{'1e58d8ba41268b36232e6830808565850ec65587'}",
            "last_fix_commit":"dd0639bf2876773b66382f47285f7db701f628d9",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/18\/2020, 19:05:11",
            "message":"Validate server hostnames to prevent path traversal\n\nIf Mozilla servers were compromised, hostnames could be used for path\ntraversal attacks. The impact would be very low as it would only be\npossible to write wireguard configs.\n\nFix #14",
            "author":"Nils",
            "comments":null,
            "stats":"{'additions': 23, 'deletions': 2, 'total': 25}",
            "files":"{'src\/main.rs': {'additions': 23, 'deletions': 2, 'changes': 25, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/NilsIrl\/MozWire\/raw\/dd0639bf2876773b66382f47285f7db701f628d9\/src%2Fmain.rs', 'patch': '@@ -106,6 +106,14 @@ struct Server {\\n     port_ranges: Vec<(u16, u16)>,\\n }\\n \\n+impl Server {\\n+    fn validate_hostname(&self) -> bool {\\n+        self.hostname\\n+            .chars()\\n+            .all(|c| c.is_ascii_alphanumeric() || c == \\'-\\')\\n+    }\\n+}\\n+\\n \/\/ latitude and longitude omitted\\n #[derive(serde::Deserialize)]\\n struct City {\\n@@ -130,13 +138,26 @@ struct ServerList {\\n \\n impl ServerList {\\n     fn new(client: reqwest::blocking::Client, token: &str) -> Self {\\n-        client\\n+        let server_list = client\\n             .get(&format!(\"{}\/vpn\/servers\", BASE_URL))\\n             .bearer_auth(token)\\n             .send()\\n             .unwrap()\\n             .json::<ServerList>()\\n-            .unwrap()\\n+            .unwrap();\\n+        if let Some(server) = server_list\\n+            .countries\\n+            .iter()\\n+            .flat_map(|country| country.cities.iter().flat_map(|city| city.servers.iter()))\\n+            .find(|server| !server.validate_hostname())\\n+        {\\n+            eprintln!(\\n+                \"A server contains invalid characters in its hostname: {}\",\\n+                server.hostname\\n+            );\\n+            std::process::exit(3);\\n+        }\\n+        server_list\\n     }\\n }'}}",
            "message_norm":"validate server hostnames to prevent path traversal\n\nif mozilla servers were compromised, hostnames could be used for path\ntraversal attacks. the impact would be very low as it would only be\npossible to write wireguard configs.\n\nfix #14",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('server', 'SECWORD', ''), ('prevent', 'ACTION', ''), ('path traversal', 'SECWORD', ''), ('servers', 'SECWORD', ''), ('attacks', 'SECWORD', ''), ('low', 'SEVERITY', ''), ('fix', 'ACTION', ''), ('#14', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main.rs'])",
            "num_files":1.0,
            "patch_content":"From dd0639bf2876773b66382f47285f7db701f628d9 Mon Sep 17 00:00:00 2001\nFrom: Nils <nils@nilsand.re>\nDate: Tue, 18 Aug 2020 20:05:11 +0100\nSubject: [PATCH] Validate server hostnames to prevent path traversal\n\nIf Mozilla servers were compromised, hostnames could be used for path\ntraversal attacks. The impact would be very low as it would only be\npossible to write wireguard configs.\n\nFix #14\n---\n src\/main.rs | 25 +++++++++++++++++++++++--\n 1 file changed, 23 insertions(+), 2 deletions(-)\n\ndiff --git a\/src\/main.rs b\/src\/main.rs\nindex 5c59ac6..4375436 100644\n--- a\/src\/main.rs\n+++ b\/src\/main.rs\n@@ -106,6 +106,14 @@ struct Server {\n     port_ranges: Vec<(u16, u16)>,\n }\n \n+impl Server {\n+    fn validate_hostname(&self) -> bool {\n+        self.hostname\n+            .chars()\n+            .all(|c| c.is_ascii_alphanumeric() || c == '-')\n+    }\n+}\n+\n \/\/ latitude and longitude omitted\n #[derive(serde::Deserialize)]\n struct City {\n@@ -130,13 +138,26 @@ struct ServerList {\n \n impl ServerList {\n     fn new(client: reqwest::blocking::Client, token: &str) -> Self {\n-        client\n+        let server_list = client\n             .get(&format!(\"{}\/vpn\/servers\", BASE_URL))\n             .bearer_auth(token)\n             .send()\n             .unwrap()\n             .json::<ServerList>()\n-            .unwrap()\n+            .unwrap();\n+        if let Some(server) = server_list\n+            .countries\n+            .iter()\n+            .flat_map(|country| country.cities.iter().flat_map(|city| city.servers.iter()))\n+            .find(|server| !server.validate_hostname())\n+        {\n+            eprintln!(\n+                \"A server contains invalid characters in its hostname: {}\",\n+                server.hostname\n+            );\n+            std::process::exit(3);\n+        }\n+        server_list\n     }\n }"
        },
        {
            "index":376,
            "vuln_id":"GHSA-2h63-qp69-fwvw",
            "cwe_id":"{'CWE-918', 'CWE-20'}",
            "score":8.2,
            "chain":"{'https:\/\/github.com\/apache\/xmlgraphics-batik\/commit\/0ef5b661a1f77772d1110877ea9e0287987098f6'}",
            "dataset":"osv",
            "summary":"Server-side request forgery (SSRF) in Apache Batik Apache Batik 1.13 is vulnerable to server-side request forgery, caused by improper input validation by the NodePickerPanel. By using a specially-crafted argument, an attacker could exploit this vulnerability to cause the underlying server to make arbitrary GET requests.",
            "published_date":"2022-01-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/apache\/xmlgraphics-batik",
            "commit_href":"https:\/\/github.com\/apache\/xmlgraphics-batik\/commit\/0ef5b661a1f77772d1110877ea9e0287987098f6",
            "commit_sha":"0ef5b661a1f77772d1110877ea9e0287987098f6",
            "patch":"SINGLE",
            "chain_ord":"['0ef5b661a1f77772d1110877ea9e0287987098f6']",
            "before_first_fix_commit":"{'f16e092d0c2ccee07360446e0d4adaa4be5daa1b'}",
            "last_fix_commit":"0ef5b661a1f77772d1110877ea9e0287987098f6",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/02\/2020, 13:59:37",
            "message":"BATIK-1284: Dont load DTDs in NodePickerPanel\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/xmlgraphics\/batik\/trunk@1878396 13f79535-47bb-0310-9956-ffa450edef68",
            "author":"Simon Steiner",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 2, 'total': 6}",
            "files":"{'batik-svgbrowser\/src\/main\/java\/org\/apache\/batik\/apps\/svgbrowser\/NodePickerPanel.java': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/xmlgraphics-batik\/raw\/0ef5b661a1f77772d1110877ea9e0287987098f6\/batik-svgbrowser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbatik%2Fapps%2Fsvgbrowser%2FNodePickerPanel.java', 'patch': '@@ -847,8 +847,10 @@ private Element parseXml(String xmlString) {\\n         Document doc = null;\\n         DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\\n         try {\\n-            javax.xml.parsers.DocumentBuilder parser = factory\\n-                    .newDocumentBuilder();\\n+            factory.setFeature(\"http:\/\/xml.org\/sax\/features\/external-general-entities\", false);\\n+            factory.setFeature(\"http:\/\/xml.org\/sax\/features\/external-parameter-entities\", false);\\n+            factory.setFeature(\"http:\/\/apache.org\/xml\/features\/nonvalidating\/load-external-dtd\", false);\\n+            javax.xml.parsers.DocumentBuilder parser = factory.newDocumentBuilder();\\n             parser.setErrorHandler(new ErrorHandler() {\\n                 public void error(SAXParseException exception)\\n                         throws SAXException {'}}",
            "message_norm":"batik-1284: dont load dtds in nodepickerpanel\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/xmlgraphics\/batik\/trunk@1878396 13f79535-47bb-0310-9956-ffa450edef68",
            "language":"da",
            "entities":"[('https:\/\/svn.apache.org\/repos\/asf\/xmlgraphics\/batik\/trunk@1878396', 'URL', ''), ('13f79535', 'SHA', 'generic_sha'), ('ffa450edef68', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['batik-svgbrowser\/src\/main\/java\/org\/apache\/batik\/apps\/svgbrowser\/NodePickerPanel.java'])",
            "num_files":1.0,
            "patch_content":"From 0ef5b661a1f77772d1110877ea9e0287987098f6 Mon Sep 17 00:00:00 2001\nFrom: Simon Steiner <ssteiner@apache.org>\nDate: Tue, 2 Jun 2020 13:59:37 +0000\nSubject: [PATCH] BATIK-1284: Dont load DTDs in NodePickerPanel\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/xmlgraphics\/batik\/trunk@1878396 13f79535-47bb-0310-9956-ffa450edef68\n---\n ...\/org\/apache\/batik\/apps\/svgbrowser\/NodePickerPanel.java   | 6 ++++--\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\ndiff --git a\/batik-svgbrowser\/src\/main\/java\/org\/apache\/batik\/apps\/svgbrowser\/NodePickerPanel.java b\/batik-svgbrowser\/src\/main\/java\/org\/apache\/batik\/apps\/svgbrowser\/NodePickerPanel.java\nindex 2a93e95a43..a5ad8e8b11 100644\n--- a\/batik-svgbrowser\/src\/main\/java\/org\/apache\/batik\/apps\/svgbrowser\/NodePickerPanel.java\n+++ b\/batik-svgbrowser\/src\/main\/java\/org\/apache\/batik\/apps\/svgbrowser\/NodePickerPanel.java\n@@ -847,8 +847,10 @@ private Element parseXml(String xmlString) {\n         Document doc = null;\n         DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\n         try {\n-            javax.xml.parsers.DocumentBuilder parser = factory\n-                    .newDocumentBuilder();\n+            factory.setFeature(\"http:\/\/xml.org\/sax\/features\/external-general-entities\", false);\n+            factory.setFeature(\"http:\/\/xml.org\/sax\/features\/external-parameter-entities\", false);\n+            factory.setFeature(\"http:\/\/apache.org\/xml\/features\/nonvalidating\/load-external-dtd\", false);\n+            javax.xml.parsers.DocumentBuilder parser = factory.newDocumentBuilder();\n             parser.setErrorHandler(new ErrorHandler() {\n                 public void error(SAXParseException exception)\n                         throws SAXException {"
        },
        {
            "index":567,
            "vuln_id":"GHSA-m87f-9fvv-2mgg",
            "cwe_id":"{'CWE-502'}",
            "score":8.4,
            "chain":"{'https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/4374fa2aba383db6526ab36e939eb1cf8ef99879', 'https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/507d066ef432ea27d3e201da08009872a2f37725'}",
            "dataset":"osv",
            "summary":"Deserialization of Untrusted Data in parlai ### Impact\nDue to use of unsafe YAML deserialization logic, an attacker with the ability to modify local YAML configuration files could provide malicious input, resulting in remote code execution or similar risks.\n\n### Patches\nThe issue can be patched by upgrading to v1.1.0 or later. It can also be patched by replacing YAML deserialization with equivalent safe_load calls.\n\n### References\n\n- https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/507d066ef432ea27d3e201da08009872a2f37725\n- https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/4374fa2aba383db6526ab36e939eb1cf8ef99879\n- https:\/\/anon-artist.github.io\/blogs\/blog3.html",
            "published_date":"2021-09-13",
            "chain_len":2,
            "project":"https:\/\/github.com\/facebookresearch\/ParlAI",
            "commit_href":"https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/507d066ef432ea27d3e201da08009872a2f37725",
            "commit_sha":"507d066ef432ea27d3e201da08009872a2f37725",
            "patch":"MULTI",
            "chain_ord":"['507d066ef432ea27d3e201da08009872a2f37725', '4374fa2aba383db6526ab36e939eb1cf8ef99879']",
            "before_first_fix_commit":"{'15fbf55f32e64722c452c907425e10fdb977f62e'}",
            "last_fix_commit":"4374fa2aba383db6526ab36e939eb1cf8ef99879",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/26\/2021, 21:06:01",
            "message":"RCE Fixed (#3402)\n\nCo-authored-by: Anon-Artist <61599526+Anon-Artist@users.noreply.github.com>\r\nCo-authored-by: Jamie Slome <jamie@418sec.com>",
            "author":"huntr.dev | the place to protect open source",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'parlai\/chat_service\/utils\/config.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/facebookresearch\/ParlAI\/raw\/507d066ef432ea27d3e201da08009872a2f37725\/parlai%2Fchat_service%2Futils%2Fconfig.py', 'patch': '@@ -36,7 +36,7 @@ def parse_configuration_file(config_path):\\n     result = {}\\n     result[\"configs\"] = {}\\n     with open(config_path) as f:\\n-        cfg = yaml.load(f.read(), Loader=yaml.FullLoader)\\n+        cfg = yaml.load(f.read(), Loader=yaml.SafeLoader)\\n         # get world path\\n         result[\"world_path\"] = cfg.get(\"world_module\")\\n         if not result[\"world_path\"]:'}}",
            "message_norm":"rce fixed (#3402)\n\nco-authored-by: anon-artist <61599526+anon-artist@users.noreply.github.com>\r\nco-authored-by: jamie slome <jamie@418sec.com>",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('#3402', 'ISSUE', ''), ('jamie@418sec.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['parlai\/chat_service\/utils\/config.py'])",
            "num_files":1.0,
            "patch_content":"From 507d066ef432ea27d3e201da08009872a2f37725 Mon Sep 17 00:00:00 2001\nFrom: \"huntr.dev | the place to protect open source\" <admin@418sec.com>\nDate: Tue, 26 Jan 2021 21:06:01 +0000\nSubject: [PATCH] RCE Fixed (#3402)\n\nCo-authored-by: Anon-Artist <61599526+Anon-Artist@users.noreply.github.com>\nCo-authored-by: Jamie Slome <jamie@418sec.com>\n---\n parlai\/chat_service\/utils\/config.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/parlai\/chat_service\/utils\/config.py b\/parlai\/chat_service\/utils\/config.py\nindex 3c646a364cd..b98d22f0678 100644\n--- a\/parlai\/chat_service\/utils\/config.py\n+++ b\/parlai\/chat_service\/utils\/config.py\n@@ -36,7 +36,7 @@ def parse_configuration_file(config_path):\n     result = {}\n     result[\"configs\"] = {}\n     with open(config_path) as f:\n-        cfg = yaml.load(f.read(), Loader=yaml.FullLoader)\n+        cfg = yaml.load(f.read(), Loader=yaml.SafeLoader)\n         # get world path\n         result[\"world_path\"] = cfg.get(\"world_module\")\n         if not result[\"world_path\"]:"
        },
        {
            "index":497,
            "vuln_id":"GHSA-976r-qfjj-c24w",
            "cwe_id":"{'CWE-78'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/apache\/airflow\/commit\/afa4b11fddfdbadb048f742cf66d5c21c675a5c8'}",
            "dataset":"osv",
            "summary":"Command injection via Celery broker in Apache Airflow An issue was found in Apache Airflow versions 1.10.10 and below. When using CeleryExecutor, if an attacker can connect to the broker (Redis, RabbitMQ) directly, it is possible to inject commands, resulting in the celery worker running arbitrary commands.",
            "published_date":"2020-07-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/apache\/airflow",
            "commit_href":"https:\/\/github.com\/apache\/airflow\/commit\/afa4b11fddfdbadb048f742cf66d5c21c675a5c8",
            "commit_sha":"afa4b11fddfdbadb048f742cf66d5c21c675a5c8",
            "patch":"SINGLE",
            "chain_ord":"['afa4b11fddfdbadb048f742cf66d5c21c675a5c8']",
            "before_first_fix_commit":"{'63260c9955d12a60d8c143a932432013dd05eebb'}",
            "last_fix_commit":"afa4b11fddfdbadb048f742cf66d5c21c675a5c8",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/27\/2019, 08:24:41",
            "message":"[AIRFLOW-6351] security - ui - Add Cross Site Scripting defence (#6913)",
            "author":"tooptoop4",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'airflow\/www_rbac\/views.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/airflow\/raw\/afa4b11fddfdbadb048f742cf66d5c21c675a5c8\/airflow%2Fwww_rbac%2Fviews.py', 'patch': '@@ -321,7 +321,7 @@ def get_int_arg(value, default=0):\\n             num_dag_to=min(end, num_of_all_dags),\\n             num_of_all_dags=num_of_all_dags,\\n             paging=wwwutils.generate_pages(current_page, num_of_pages,\\n-                                           search=arg_search_query,\\n+                                           search=escape(arg_search_query) if arg_search_query else None,\\n                                            showPaused=not hide_paused),\\n             num_runs=num_runs,\\n             tags=tags)'}}",
            "message_norm":"[airflow-6351] security - ui - add cross site scripting defence (#6913)",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('add', 'ACTION', ''), ('cross site scripting', 'SECWORD', ''), ('defence', 'SECWORD', ''), ('#6913', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['airflow\/www_rbac\/views.py'])",
            "num_files":1.0,
            "patch_content":"From afa4b11fddfdbadb048f742cf66d5c21c675a5c8 Mon Sep 17 00:00:00 2001\nFrom: tooptoop4 <33283496+tooptoop4@users.noreply.github.com>\nDate: Fri, 27 Dec 2019 08:24:41 +0000\nSubject: [PATCH] [AIRFLOW-6351] security - ui - Add Cross Site Scripting\n defence (#6913)\n\n---\n airflow\/www_rbac\/views.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/airflow\/www_rbac\/views.py b\/airflow\/www_rbac\/views.py\nindex 745c563a710da..4ea74f706b4b3 100644\n--- a\/airflow\/www_rbac\/views.py\n+++ b\/airflow\/www_rbac\/views.py\n@@ -321,7 +321,7 @@ def get_int_arg(value, default=0):\n             num_dag_to=min(end, num_of_all_dags),\n             num_of_all_dags=num_of_all_dags,\n             paging=wwwutils.generate_pages(current_page, num_of_pages,\n-                                           search=arg_search_query,\n+                                           search=escape(arg_search_query) if arg_search_query else None,\n                                            showPaused=not hide_paused),\n             num_runs=num_runs,\n             tags=tags)"
        },
        {
            "index":670,
            "vuln_id":"GHSA-xhp9-4947-rq78",
            "cwe_id":"{'CWE-755'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/bottlepy\/bottle\/commit\/a2b0ee6bb4ce88895429ec4aca856616244c4c4c', 'https:\/\/github.com\/bottlepy\/bottle\/commit\/e140e1b54da721a660f2eb9d58a106b7b3ff2f00'}",
            "dataset":"osv",
            "summary":"Denial of service in bottle Bottle before 0.12.20 mishandles errors during early request binding.",
            "published_date":"2022-06-03",
            "chain_len":2,
            "project":"https:\/\/github.com\/bottlepy\/bottle",
            "commit_href":"https:\/\/github.com\/bottlepy\/bottle\/commit\/a2b0ee6bb4ce88895429ec4aca856616244c4c4c",
            "commit_sha":"a2b0ee6bb4ce88895429ec4aca856616244c4c4c",
            "patch":"MULTI",
            "chain_ord":"['e140e1b54da721a660f2eb9d58a106b7b3ff2f00', 'a2b0ee6bb4ce88895429ec4aca856616244c4c4c']",
            "before_first_fix_commit":"{'04b27f185412250f9389a6a14d1e1c516c87e13c'}",
            "last_fix_commit":"a2b0ee6bb4ce88895429ec4aca856616244c4c4c",
            "chain_ord_pos":2.0,
            "commit_datetime":"05\/26\/2022, 13:36:31",
            "message":"Release of 0.12.20\n\nThis release contains a security fix.\nThanks Elton Nokaj for responsibly reporting this issue.",
            "author":"Marcel Hellkamp",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'bottle.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bottlepy\/bottle\/raw\/a2b0ee6bb4ce88895429ec4aca856616244c4c4c\/bottle.py', 'patch': \"@@ -16,7 +16,7 @@\\n from __future__ import with_statement\\n \\n __author__ = 'Marcel Hellkamp'\\n-__version__ = '0.12.19'\\n+__version__ = '0.12.20'\\n __license__ = 'MIT'\\n \\n # The gevent server adapter needs to patch some modules before they are imported\"}}",
            "message_norm":"release of 0.12.20\n\nthis release contains a security fix.\nthanks elton nokaj for responsibly reporting this issue.",
            "language":"en",
            "entities":"[('0.12.20', 'VERSION', ''), ('security', 'SECWORD', ''), ('issue', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bottle.py'])",
            "num_files":1.0,
            "patch_content":"From a2b0ee6bb4ce88895429ec4aca856616244c4c4c Mon Sep 17 00:00:00 2001\nFrom: Marcel Hellkamp <marc@gsites.de>\nDate: Thu, 26 May 2022 15:36:31 +0200\nSubject: [PATCH] Release of 0.12.20\n\nThis release contains a security fix.\nThanks Elton Nokaj for responsibly reporting this issue.\n---\n bottle.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/bottle.py b\/bottle.py\nindex 4dc8921a..26e8b360 100644\n--- a\/bottle.py\n+++ b\/bottle.py\n@@ -16,7 +16,7 @@\n from __future__ import with_statement\n \n __author__ = 'Marcel Hellkamp'\n-__version__ = '0.12.19'\n+__version__ = '0.12.20'\n __license__ = 'MIT'\n \n # The gevent server adapter needs to patch some modules before they are imported"
        },
        {
            "index":18,
            "vuln_id":"GHSA-7c82-mp33-r854",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/snapappointments\/bootstrap-select\/commit\/ab6e068748040cf3cda5859f6349b382402b8767'}",
            "dataset":"osv",
            "summary":"Cross-site scripting in bootstrap-select bootstrap-select before 1.13.6 allows Cross-Site Scripting (XSS). It does not escape title values in OPTION elements. This may allow attackers to execute arbitrary JavaScript in a victim's browser.",
            "published_date":"2021-05-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/snapappointments\/bootstrap-select",
            "commit_href":"https:\/\/github.com\/snapappointments\/bootstrap-select\/commit\/ab6e068748040cf3cda5859f6349b382402b8767",
            "commit_sha":"ab6e068748040cf3cda5859f6349b382402b8767",
            "patch":"SINGLE",
            "chain_ord":"['ab6e068748040cf3cda5859f6349b382402b8767']",
            "before_first_fix_commit":"{'bbd306de22fbcede9016cf7e335fd8ce34d6629d'}",
            "last_fix_commit":"ab6e068748040cf3cda5859f6349b382402b8767",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/07\/2019, 23:05:50",
            "message":"add sanitize option for data-content (#2199)",
            "author":"Casey Holzer",
            "comments":null,
            "stats":"{'additions': 167, 'deletions': 6, 'total': 173}",
            "files":"{'js\/bootstrap-select.js': {'additions': 167, 'deletions': 6, 'changes': 173, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snapappointments\/bootstrap-select\/raw\/ab6e068748040cf3cda5859f6349b382402b8767\/js%2Fbootstrap-select.js', 'patch': \"@@ -1,6 +1,128 @@\\n (function ($) {\\n   'use strict';\\n \\n+  var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];\\n+\\n+  var uriAttrs = [\\n+    'background',\\n+    'cite',\\n+    'href',\\n+    'itemtype',\\n+    'longdesc',\\n+    'poster',\\n+    'src',\\n+    'xlink:href'\\n+  ];\\n+\\n+  var ARIA_ATTRIBUTE_PATTERN = \/^aria-[\\\\w-]*$\/i;\\n+\\n+  var DefaultWhitelist = {\\n+    \/\/ Global attributes allowed on any supplied element below.\\n+    '*': ['class', 'dir', 'id', 'lang', 'role', 'tabindex', 'style', ARIA_ATTRIBUTE_PATTERN],\\n+    a: ['target', 'href', 'title', 'rel'],\\n+    area: [],\\n+    b: [],\\n+    br: [],\\n+    col: [],\\n+    code: [],\\n+    div: [],\\n+    em: [],\\n+    hr: [],\\n+    h1: [],\\n+    h2: [],\\n+    h3: [],\\n+    h4: [],\\n+    h5: [],\\n+    h6: [],\\n+    i: [],\\n+    img: ['src', 'alt', 'title', 'width', 'height'],\\n+    li: [],\\n+    ol: [],\\n+    p: [],\\n+    pre: [],\\n+    s: [],\\n+    small: [],\\n+    span: [],\\n+    sub: [],\\n+    sup: [],\\n+    strong: [],\\n+    u: [],\\n+    ul: []\\n+  }\\n+\\n+  \/**\\n+   * A pattern that recognizes a commonly useful subset of URLs that are safe.\\n+   *\\n+   * Shoutout to Angular 7 https:\/\/github.com\/angular\/angular\/blob\/7.2.4\/packages\/core\/src\/sanitization\/url_sanitizer.ts\\n+   *\/\\n+  var SAFE_URL_PATTERN = \/^(?:(?:https?|mailto|ftp|tel|file):|[^&:\/?#]*(?:[\/?#]|$))\/gi;\\n+\\n+  \/**\\n+   * A pattern that matches safe data URLs. Only matches image, video and audio types.\\n+   *\\n+   * Shoutout to Angular 7 https:\/\/github.com\/angular\/angular\/blob\/7.2.4\/packages\/core\/src\/sanitization\/url_sanitizer.ts\\n+   *\/\\n+  var DATA_URL_PATTERN = \/^data:(?:image\\\\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\\\\/(?:mpeg|mp4|ogg|webm)|audio\\\\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$\/i;\\n+\\n+  function allowedAttribute (attr, allowedAttributeList) {\\n+    var attrName = attr.nodeName.toLowerCase()\\n+\\n+    if ($.inArray(attrName, allowedAttributeList) !== -1) {\\n+      if ($.inArray(attrName, uriAttrs) !== -1) {\\n+        return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN))\\n+      }\\n+\\n+      return true\\n+    }\\n+\\n+    var regExp = $(allowedAttributeList).filter(function (index, value) {\\n+      return value instanceof RegExp\\n+    })\\n+\\n+    \/\/ Check if a regular expression validates the attribute.\\n+    for (var i = 0, l = regExp.length; i < l; i++) {\\n+      if (attrName.match(regExp[i])) {\\n+        return true\\n+      }\\n+    }\\n+\\n+    return false\\n+  }\\n+\\n+  function sanitizeHtml (unsafeElements, whiteList, sanitizeFn) {\\n+    if (sanitizeFn && typeof sanitizeFn === 'function') {\\n+      return sanitizeFn(unsafeElements);\\n+    }\\n+\\n+    var whitelistKeys = Object.keys(whiteList);\\n+\\n+    for (var i = 0, len = unsafeElements.length; i < len; i++) {\\n+      var elements = unsafeElements[i].querySelectorAll('*');\\n+\\n+      for (var j = 0, len2 = elements.length; j < len2; j++) {\\n+        var el = elements[j];\\n+        var elName = el.nodeName.toLowerCase();\\n+\\n+        if (whitelistKeys.indexOf(elName) === -1) {\\n+          el.parentNode.removeChild(el);\\n+\\n+          continue;\\n+        }\\n+\\n+        var attributeList = [].slice.call(el.attributes);\\n+        var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);\\n+\\n+        for (var k = 0, len3 = attributeList.length; k < len3; k++) {\\n+          var attr = attributeList[k];\\n+\\n+          if (!allowedAttribute(attr, whitelistedAttributes)) {\\n+            el.removeAttribute(attr.nodeName);\\n+          }\\n+        }\\n+      }\\n+    }\\n+  }\\n+\\n   \/\/ Polyfill for browsers with no classList support\\n   \/\/ Remove in v2\\n   if (!('classList' in document.createElement('_'))) {\\n@@ -745,7 +867,10 @@\\n     dropdownAlignRight: false,\\n     windowPadding: 0,\\n     virtualScroll: 600,\\n-    display: false\\n+    display: false,\\n+    sanitize: true,\\n+    sanitizeFn: null,\\n+    whiteList: DefaultWhitelist\\n   };\\n \\n   if (version.major === '4') {\\n@@ -1100,13 +1225,35 @@\\n                 emptyMenu = menuInner.firstChild.cloneNode(false),\\n                 marginTop,\\n                 marginBottom,\\n-                elements = isVirtual === true ? that.selectpicker.view.visibleElements : that.selectpicker.current.elements;\\n+                elements = isVirtual === true ? that.selectpicker.view.visibleElements : that.selectpicker.current.elements,\\n+                toSanitize = [];\\n \\n             \/\/ replace the existing UL with an empty one - this is faster than $.empty()\\n             menuInner.replaceChild(emptyMenu, menuInner.firstChild);\\n \\n             for (var i = 0, visibleElementsLen = elements.length; i < visibleElementsLen; i++) {\\n-              menuFragment.appendChild(elements[i]);\\n+              var element = elements[i],\\n+                  elText,\\n+                  elementData;\\n+\\n+              if (that.options.sanitize) {\\n+                elText = element.lastChild;\\n+\\n+                if (elText) {\\n+                  elementData = that.selectpicker.current.data[i + that.selectpicker.view.position0].data;\\n+\\n+                  if (elementData && elementData.content && !elementData.sanitized) {\\n+                    toSanitize.push(elText);\\n+                    elementData.sanitized = true;\\n+                  }\\n+                }\\n+              }\\n+\\n+              menuFragment.appendChild(element);\\n+            }\\n+\\n+            if (that.options.sanitize && toSanitize.length) {\\n+              sanitizeHtml(toSanitize, that.options.whiteList, that.options.sanitizeFn);\\n             }\\n \\n             if (isVirtual === true) {\\n@@ -1469,7 +1616,8 @@\\n           multipleSeparator = document.createTextNode(this.options.multipleSeparator),\\n           titleFragment = elementTemplates.fragment.cloneNode(false),\\n           showCount,\\n-          countMax;\\n+          countMax,\\n+          hasContent = false;\\n \\n       this.togglePlaceholder();\\n \\n@@ -1506,6 +1654,7 @@\\n                 titleOptions.text = option.title;\\n               } else if (thisData.content && that.options.showContent) {\\n                 titleOptions.optionContent = thisData.content.toString();\\n+                hasContent = true;\\n               } else {\\n                 if (that.options.showIcon) {\\n                   titleOptions.optionIcon = thisData.icon;\\n@@ -1554,6 +1703,10 @@\\n       \/\/ strip all HTML tags and trim the result, then unescape any escaped tags\\n       this.$button[0].title = titleFragment.textContent.replace(\/<[^>]*>?\/g, '').trim();\\n \\n+      if (this.options.sanitize && hasContent) {\\n+        sanitizeHtml([titleFragment], that.options.whiteList, that.options.sanitizeFn);\\n+      }\\n+\\n       buttonInner.innerHTML = '';\\n       buttonInner.appendChild(titleFragment);\\n \\n@@ -2833,8 +2986,16 @@\\n             options = typeof _option == 'object' && _option;\\n \\n         if (!data) {\\n-          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, $this.data(), options);\\n-          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), $this.data().template, options.template);\\n+          var dataAttributes = $this.data();\\n+\\n+          for (var dataAttr in dataAttributes) {\\n+            if (dataAttributes.hasOwnProperty(dataAttr) && $.inArray(dataAttr, DISALLOWED_ATTRIBUTES) !== -1) {\\n+              delete dataAttributes[dataAttr];\\n+            }\\n+          }\\n+\\n+          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, dataAttributes, options);\\n+          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), dataAttributes.template, options.template);\\n           $this.data('selectpicker', (data = new Selectpicker(this, config)));\\n         } else if (options) {\\n           for (var i in options) {\"}}",
            "message_norm":"add sanitize option for data-content (#2199)",
            "language":"it",
            "entities":"[('add', 'ACTION', ''), ('sanitize', 'SECWORD', ''), ('#2199', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['js\/bootstrap-select.js'])",
            "num_files":1.0,
            "patch_content":"From ab6e068748040cf3cda5859f6349b382402b8767 Mon Sep 17 00:00:00 2001\nFrom: Casey Holzer <caseyh@snapappointments.com>\nDate: Thu, 7 Mar 2019 16:05:50 -0700\nSubject: [PATCH] add sanitize option for data-content (#2199)\n\n---\n js\/bootstrap-select.js | 173 +++++++++++++++++++++++++++++++++++++++--\n 1 file changed, 167 insertions(+), 6 deletions(-)\n\ndiff --git a\/js\/bootstrap-select.js b\/js\/bootstrap-select.js\nindex 78d09f4ab..aca9fc454 100644\n--- a\/js\/bootstrap-select.js\n+++ b\/js\/bootstrap-select.js\n@@ -1,6 +1,128 @@\n (function ($) {\n   'use strict';\n \n+  var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];\n+\n+  var uriAttrs = [\n+    'background',\n+    'cite',\n+    'href',\n+    'itemtype',\n+    'longdesc',\n+    'poster',\n+    'src',\n+    'xlink:href'\n+  ];\n+\n+  var ARIA_ATTRIBUTE_PATTERN = \/^aria-[\\w-]*$\/i;\n+\n+  var DefaultWhitelist = {\n+    \/\/ Global attributes allowed on any supplied element below.\n+    '*': ['class', 'dir', 'id', 'lang', 'role', 'tabindex', 'style', ARIA_ATTRIBUTE_PATTERN],\n+    a: ['target', 'href', 'title', 'rel'],\n+    area: [],\n+    b: [],\n+    br: [],\n+    col: [],\n+    code: [],\n+    div: [],\n+    em: [],\n+    hr: [],\n+    h1: [],\n+    h2: [],\n+    h3: [],\n+    h4: [],\n+    h5: [],\n+    h6: [],\n+    i: [],\n+    img: ['src', 'alt', 'title', 'width', 'height'],\n+    li: [],\n+    ol: [],\n+    p: [],\n+    pre: [],\n+    s: [],\n+    small: [],\n+    span: [],\n+    sub: [],\n+    sup: [],\n+    strong: [],\n+    u: [],\n+    ul: []\n+  }\n+\n+  \/**\n+   * A pattern that recognizes a commonly useful subset of URLs that are safe.\n+   *\n+   * Shoutout to Angular 7 https:\/\/github.com\/angular\/angular\/blob\/7.2.4\/packages\/core\/src\/sanitization\/url_sanitizer.ts\n+   *\/\n+  var SAFE_URL_PATTERN = \/^(?:(?:https?|mailto|ftp|tel|file):|[^&:\/?#]*(?:[\/?#]|$))\/gi;\n+\n+  \/**\n+   * A pattern that matches safe data URLs. Only matches image, video and audio types.\n+   *\n+   * Shoutout to Angular 7 https:\/\/github.com\/angular\/angular\/blob\/7.2.4\/packages\/core\/src\/sanitization\/url_sanitizer.ts\n+   *\/\n+  var DATA_URL_PATTERN = \/^data:(?:image\\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\\/(?:mpeg|mp4|ogg|webm)|audio\\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$\/i;\n+\n+  function allowedAttribute (attr, allowedAttributeList) {\n+    var attrName = attr.nodeName.toLowerCase()\n+\n+    if ($.inArray(attrName, allowedAttributeList) !== -1) {\n+      if ($.inArray(attrName, uriAttrs) !== -1) {\n+        return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN))\n+      }\n+\n+      return true\n+    }\n+\n+    var regExp = $(allowedAttributeList).filter(function (index, value) {\n+      return value instanceof RegExp\n+    })\n+\n+    \/\/ Check if a regular expression validates the attribute.\n+    for (var i = 0, l = regExp.length; i < l; i++) {\n+      if (attrName.match(regExp[i])) {\n+        return true\n+      }\n+    }\n+\n+    return false\n+  }\n+\n+  function sanitizeHtml (unsafeElements, whiteList, sanitizeFn) {\n+    if (sanitizeFn && typeof sanitizeFn === 'function') {\n+      return sanitizeFn(unsafeElements);\n+    }\n+\n+    var whitelistKeys = Object.keys(whiteList);\n+\n+    for (var i = 0, len = unsafeElements.length; i < len; i++) {\n+      var elements = unsafeElements[i].querySelectorAll('*');\n+\n+      for (var j = 0, len2 = elements.length; j < len2; j++) {\n+        var el = elements[j];\n+        var elName = el.nodeName.toLowerCase();\n+\n+        if (whitelistKeys.indexOf(elName) === -1) {\n+          el.parentNode.removeChild(el);\n+\n+          continue;\n+        }\n+\n+        var attributeList = [].slice.call(el.attributes);\n+        var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);\n+\n+        for (var k = 0, len3 = attributeList.length; k < len3; k++) {\n+          var attr = attributeList[k];\n+\n+          if (!allowedAttribute(attr, whitelistedAttributes)) {\n+            el.removeAttribute(attr.nodeName);\n+          }\n+        }\n+      }\n+    }\n+  }\n+\n   \/\/ Polyfill for browsers with no classList support\n   \/\/ Remove in v2\n   if (!('classList' in document.createElement('_'))) {\n@@ -745,7 +867,10 @@\n     dropdownAlignRight: false,\n     windowPadding: 0,\n     virtualScroll: 600,\n-    display: false\n+    display: false,\n+    sanitize: true,\n+    sanitizeFn: null,\n+    whiteList: DefaultWhitelist\n   };\n \n   if (version.major === '4') {\n@@ -1100,13 +1225,35 @@\n                 emptyMenu = menuInner.firstChild.cloneNode(false),\n                 marginTop,\n                 marginBottom,\n-                elements = isVirtual === true ? that.selectpicker.view.visibleElements : that.selectpicker.current.elements;\n+                elements = isVirtual === true ? that.selectpicker.view.visibleElements : that.selectpicker.current.elements,\n+                toSanitize = [];\n \n             \/\/ replace the existing UL with an empty one - this is faster than $.empty()\n             menuInner.replaceChild(emptyMenu, menuInner.firstChild);\n \n             for (var i = 0, visibleElementsLen = elements.length; i < visibleElementsLen; i++) {\n-              menuFragment.appendChild(elements[i]);\n+              var element = elements[i],\n+                  elText,\n+                  elementData;\n+\n+              if (that.options.sanitize) {\n+                elText = element.lastChild;\n+\n+                if (elText) {\n+                  elementData = that.selectpicker.current.data[i + that.selectpicker.view.position0].data;\n+\n+                  if (elementData && elementData.content && !elementData.sanitized) {\n+                    toSanitize.push(elText);\n+                    elementData.sanitized = true;\n+                  }\n+                }\n+              }\n+\n+              menuFragment.appendChild(element);\n+            }\n+\n+            if (that.options.sanitize && toSanitize.length) {\n+              sanitizeHtml(toSanitize, that.options.whiteList, that.options.sanitizeFn);\n             }\n \n             if (isVirtual === true) {\n@@ -1469,7 +1616,8 @@\n           multipleSeparator = document.createTextNode(this.options.multipleSeparator),\n           titleFragment = elementTemplates.fragment.cloneNode(false),\n           showCount,\n-          countMax;\n+          countMax,\n+          hasContent = false;\n \n       this.togglePlaceholder();\n \n@@ -1506,6 +1654,7 @@\n                 titleOptions.text = option.title;\n               } else if (thisData.content && that.options.showContent) {\n                 titleOptions.optionContent = thisData.content.toString();\n+                hasContent = true;\n               } else {\n                 if (that.options.showIcon) {\n                   titleOptions.optionIcon = thisData.icon;\n@@ -1554,6 +1703,10 @@\n       \/\/ strip all HTML tags and trim the result, then unescape any escaped tags\n       this.$button[0].title = titleFragment.textContent.replace(\/<[^>]*>?\/g, '').trim();\n \n+      if (this.options.sanitize && hasContent) {\n+        sanitizeHtml([titleFragment], that.options.whiteList, that.options.sanitizeFn);\n+      }\n+\n       buttonInner.innerHTML = '';\n       buttonInner.appendChild(titleFragment);\n \n@@ -2833,8 +2986,16 @@\n             options = typeof _option == 'object' && _option;\n \n         if (!data) {\n-          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, $this.data(), options);\n-          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), $this.data().template, options.template);\n+          var dataAttributes = $this.data();\n+\n+          for (var dataAttr in dataAttributes) {\n+            if (dataAttributes.hasOwnProperty(dataAttr) && $.inArray(dataAttr, DISALLOWED_ATTRIBUTES) !== -1) {\n+              delete dataAttributes[dataAttr];\n+            }\n+          }\n+\n+          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, dataAttributes, options);\n+          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), dataAttributes.template, options.template);\n           $this.data('selectpicker', (data = new Selectpicker(this, config)));\n         } else if (options) {\n           for (var i in options) {"
        },
        {
            "index":187,
            "vuln_id":"GHSA-9cx9-x2gp-9qvh",
            "cwe_id":"{'CWE-74', 'CWE-93'}",
            "score":4.2,
            "chain":"{'https:\/\/github.com\/gofiber\/fiber\/pull\/579\/commits\/f698b5d5066cfe594102ae252cd58a1fe57cf56f'}",
            "dataset":"osv",
            "summary":"CRLF vulnerability in Fiber ### Impact\nThe filename that is given in [c.Attachment()](https:\/\/docs.gofiber.io\/ctx#attachment) is not escaped, and therefore vulnerable for a CRLF injection attack. I.e. an attacker could upload a custom filename and then give the link to the victim. With this filename, the attacker can change the name of the downloaded file, redirect to another site, change the authorization header, etc.\n\n### Steps to reproduce\n```go\npackage main\n\nimport \"github.com\/gofiber\/fiber\"\n\nconst badFileName = \"another secret document.pdf\\\"\\r\\nLocation: google.com\\r\\nAuthorization: \\\"example_of_session_fixation\"\n\nfunc splitTheResponse(c *fiber.Ctx) {\n\tc.Attachment(badFileName)\n}\n\nfunc main() {\n\tapp := fiber.New()\n\tapp.Get(\"\/attack\", splitTheResponse)\n\tapp.Listen(\"127.0.0.1:8080\")\n}\n```\n```\nHTTP\/1.1 200 OK\nDate: Fri, 10 Jul 2020 19:47:04 GMT\nContent-Type: application\/octet-stream\nContent-Length: 0\nContent-Disposition: attachment; filename=\"another secret document.pdf\"\nLocation: google.com\nAuthorization: \"example_of_session_fixation\"\n```\n\n### Patches\nThis issue has been patched in `v1.12.6` with commit [579](https:\/\/github.com\/gofiber\/fiber\/pull\/579\/commits\/f698b5d5066cfe594102ae252cd58a1fe57cf56f) escaping the filename by default.\n\n### Workarounds\nYou could of course serialize the input yourself before passing it to `ctx.Attachment()`, this is actually a good practice by default. But in case you forget, we got you covered \ud83d\udc4d \n\n### References\nA CRLF injection attack is one of several types of injection attacks. It can be used to escalate to more malicious attacks such as Cross-site Scripting (XSS), page injection, web cache poisoning, cache-based defacement, and more. A CRLF injection vulnerability exists if an attacker can inject the CRLF characters into a web application, for example using a user input form or an HTTP request, [see acunetix](https:\/\/www.acunetix.com\/websitesecurity\/crlf-injection\/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [gofiber\/fiber](https:\/\/github.com\/gofiber\/fiber)\n* Join us on [Discord](https:\/\/gofiber.io\/discord)",
            "published_date":"2021-06-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/gofiber\/fiber",
            "commit_href":"https:\/\/github.com\/gofiber\/fiber\/pull\/579\/commits\/f698b5d5066cfe594102ae252cd58a1fe57cf56f",
            "commit_sha":"f698b5d5066cfe594102ae252cd58a1fe57cf56f",
            "patch":"SINGLE",
            "chain_ord":"['f698b5d5066cfe594102ae252cd58a1fe57cf56f']",
            "before_first_fix_commit":"{'fc5d2d7e6690ba74ad01ba0cd80e853ad451d153'}",
            "last_fix_commit":"f698b5d5066cfe594102ae252cd58a1fe57cf56f",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/10\/2020, 20:25:10",
            "message":"\ud83d\udc1b Escape fname",
            "author":"Fenny",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'ctx.go': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gofiber\/fiber\/raw\/f698b5d5066cfe594102ae252cd58a1fe57cf56f\/ctx.go', 'patch': '@@ -196,7 +196,7 @@ func (ctx *Ctx) Attachment(filename ...string) {\\n \\tif len(filename) > 0 {\\n \\t\\tfname := filepath.Base(filename[0])\\n \\t\\tctx.Type(filepath.Ext(fname))\\n-\\t\\tctx.Set(HeaderContentDisposition, `attachment; filename=\"`+fname+`\"`)\\n+\\t\\tctx.Set(HeaderContentDisposition, `attachment; filename=\"`+url.QueryEscape(fname)+`\"`)\\n \\t\\treturn\\n \\t}\\n \\tctx.Set(HeaderContentDisposition, \"attachment\")'}}",
            "message_norm":"\ud83d\udc1b escape fname",
            "language":"es",
            "entities":"[('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['ctx.go'])",
            "num_files":1.0,
            "patch_content":"From f698b5d5066cfe594102ae252cd58a1fe57cf56f Mon Sep 17 00:00:00 2001\nFrom: Fenny <25108519+Fenny@users.noreply.github.com>\nDate: Fri, 10 Jul 2020 22:25:10 +0200\nSubject: [PATCH] =?UTF-8?q?=F0=9F=90=9B=20Escape=20fname?=\nMIME-Version: 1.0\nContent-Type: text\/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n\n---\n ctx.go | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/ctx.go b\/ctx.go\nindex abac99f17db..603a7ba0c53 100644\n--- a\/ctx.go\n+++ b\/ctx.go\n@@ -196,7 +196,7 @@ func (ctx *Ctx) Attachment(filename ...string) {\n \tif len(filename) > 0 {\n \t\tfname := filepath.Base(filename[0])\n \t\tctx.Type(filepath.Ext(fname))\n-\t\tctx.Set(HeaderContentDisposition, `attachment; filename=\"`+fname+`\"`)\n+\t\tctx.Set(HeaderContentDisposition, `attachment; filename=\"`+url.QueryEscape(fname)+`\"`)\n \t\treturn\n \t}\n \tctx.Set(HeaderContentDisposition, \"attachment\")"
        },
        {
            "index":673,
            "vuln_id":"GHSA-6jv7-28mv-qp9c",
            "cwe_id":"{'CWE-862'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/jenkinsci\/autonomiq-plugin\/commit\/e06b1ff67664a90819c9561bbc12f4c6e593d1dc'}",
            "dataset":"osv",
            "summary":"Missing permission check in Jenkins autonomiq Plugin A missing permission check in Jenkins autonomiq Plugin 1.15 and earlier allows attackers with Overall\/Read permission to connect to an attacker-specified URL using attacker-specified credentials.",
            "published_date":"2022-02-16",
            "chain_len":1,
            "project":"https:\/\/github.com\/jenkinsci\/autonomiq-plugin",
            "commit_href":"https:\/\/github.com\/jenkinsci\/autonomiq-plugin\/commit\/e06b1ff67664a90819c9561bbc12f4c6e593d1dc",
            "commit_sha":"e06b1ff67664a90819c9561bbc12f4c6e593d1dc",
            "patch":"SINGLE",
            "chain_ord":"['e06b1ff67664a90819c9561bbc12f4c6e593d1dc']",
            "before_first_fix_commit":"{'abfbe8a84d54ec7708c8ef073d56b128baffb1f5'}",
            "last_fix_commit":"e06b1ff67664a90819c9561bbc12f4c6e593d1dc",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/09\/2022, 07:16:27",
            "message":"added permission and csrf protection",
            "author":"jameeluddin",
            "comments":null,
            "stats":"{'additions': 17, 'deletions': 0, 'total': 17}",
            "files":"{'src\/main\/java\/io\/jenkins\/plugins\/autonomiq\/AutonomiqBuilder.java': {'additions': 17, 'deletions': 0, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/autonomiq-plugin\/raw\/e06b1ff67664a90819c9561bbc12f4c6e593d1dc\/src%2Fmain%2Fjava%2Fio%2Fjenkins%2Fplugins%2Fautonomiq%2FAutonomiqBuilder.java', 'patch': '@@ -653,6 +653,7 @@ public String getDisplayName() {\\n         }\\n \\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\\n                                                @QueryParameter String login,\\n                                                @QueryParameter Secret password,\\n@@ -661,6 +662,8 @@ public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\\n                                                @QueryParameter String proxyUser,\\n                                                @QueryParameter Secret proxyPassword,\\n                                                @QueryParameter Boolean httpProxy) {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             \/\/ make sure other fields have been filled in\\n             if (aiqUrl.length() > 0 && login.length() > 0 && Secret.toString(password).length() > 0) {\\n@@ -681,7 +684,10 @@ public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\\n         }\\n \\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillPlatformTestCasesItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             String[] values = {\"Linux\"};  \/\/, \"Windows\"};\\n \\n@@ -690,7 +696,10 @@ public ListBoxModel doFillPlatformTestCasesItems() {\\n             return new ListBoxModel(options);\\n         }\\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillPlatformTestSuitesItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             String[] values = {\"Linux\"};  \/\/, \"Windows\"};\\n \\n@@ -701,7 +710,10 @@ public ListBoxModel doFillPlatformTestSuitesItems() {\\n \\n \\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillBrowserTestCasesItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             String[] values = {\"Chrome\", \"Firefox\"};\\n \\n@@ -710,7 +722,9 @@ public ListBoxModel doFillBrowserTestCasesItems() {\\n             return new ListBoxModel(options);\\n         }\\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillBrowserTestSuitesItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n \\n             String[] values = {\"Chrome\", \"Firefox\"};\\n \\n@@ -720,7 +734,10 @@ public ListBoxModel doFillBrowserTestSuitesItems() {\\n         }\\n \\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillExecutionModeItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             String[] values = {\"serial\", \"parallel\"};'}}",
            "message_norm":"added permission and csrf protection",
            "language":"en",
            "entities":"[('added', 'ACTION', ''), ('permission', 'SECWORD', ''), ('csrf', 'SECWORD', ''), ('protection', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/io\/jenkins\/plugins\/autonomiq\/AutonomiqBuilder.java'])",
            "num_files":1.0,
            "patch_content":"From e06b1ff67664a90819c9561bbc12f4c6e593d1dc Mon Sep 17 00:00:00 2001\nFrom: jameeluddin <jameeluddin30@gmail.com>\nDate: Wed, 9 Feb 2022 12:46:27 +0530\nSubject: [PATCH] added permission and csrf protection\n\n---\n ...\/plugins\/autonomiq\/AutonomiqBuilder.java     | 17 +++++++++++++++++\n 1 file changed, 17 insertions(+)\n\ndiff --git a\/src\/main\/java\/io\/jenkins\/plugins\/autonomiq\/AutonomiqBuilder.java b\/src\/main\/java\/io\/jenkins\/plugins\/autonomiq\/AutonomiqBuilder.java\nindex 5ff9b91..2fa4ade 100644\n--- a\/src\/main\/java\/io\/jenkins\/plugins\/autonomiq\/AutonomiqBuilder.java\n+++ b\/src\/main\/java\/io\/jenkins\/plugins\/autonomiq\/AutonomiqBuilder.java\n@@ -653,6 +653,7 @@ public String getDisplayName() {\n         }\n \n         @SuppressWarnings(\"unused\")\n+        @POST\n         public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\n                                                @QueryParameter String login,\n                                                @QueryParameter Secret password,\n@@ -661,6 +662,8 @@ public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\n                                                @QueryParameter String proxyUser,\n                                                @QueryParameter Secret proxyPassword,\n                                                @QueryParameter Boolean httpProxy) {\n+        \tJenkins.get().checkPermission(Jenkins.ADMINISTER);\n+\n \n             \/\/ make sure other fields have been filled in\n             if (aiqUrl.length() > 0 && login.length() > 0 && Secret.toString(password).length() > 0) {\n@@ -681,7 +684,10 @@ public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\n         }\n \n         @SuppressWarnings(\"unused\")\n+        @POST\n         public ListBoxModel doFillPlatformTestCasesItems() {\n+        \tJenkins.get().checkPermission(Jenkins.ADMINISTER);\n+\n \n             String[] values = {\"Linux\"};  \/\/, \"Windows\"};\n \n@@ -690,7 +696,10 @@ public ListBoxModel doFillPlatformTestCasesItems() {\n             return new ListBoxModel(options);\n         }\n         @SuppressWarnings(\"unused\")\n+        @POST\n         public ListBoxModel doFillPlatformTestSuitesItems() {\n+        \tJenkins.get().checkPermission(Jenkins.ADMINISTER);\n+\n \n             String[] values = {\"Linux\"};  \/\/, \"Windows\"};\n \n@@ -701,7 +710,10 @@ public ListBoxModel doFillPlatformTestSuitesItems() {\n \n \n         @SuppressWarnings(\"unused\")\n+        @POST\n         public ListBoxModel doFillBrowserTestCasesItems() {\n+        \tJenkins.get().checkPermission(Jenkins.ADMINISTER);\n+\n \n             String[] values = {\"Chrome\", \"Firefox\"};\n \n@@ -710,7 +722,9 @@ public ListBoxModel doFillBrowserTestCasesItems() {\n             return new ListBoxModel(options);\n         }\n         @SuppressWarnings(\"unused\")\n+        @POST\n         public ListBoxModel doFillBrowserTestSuitesItems() {\n+        \tJenkins.get().checkPermission(Jenkins.ADMINISTER);\n \n             String[] values = {\"Chrome\", \"Firefox\"};\n \n@@ -720,7 +734,10 @@ public ListBoxModel doFillBrowserTestSuitesItems() {\n         }\n \n         @SuppressWarnings(\"unused\")\n+        @POST\n         public ListBoxModel doFillExecutionModeItems() {\n+        \tJenkins.get().checkPermission(Jenkins.ADMINISTER);\n+\n \n             String[] values = {\"serial\", \"parallel\"};"
        },
        {
            "index":644,
            "vuln_id":"GHSA-8hfj-j24r-96c4",
            "cwe_id":"{'CWE-27', 'CWE-22'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/moment\/moment\/commit\/4211bfc8f15746be4019bba557e29a7ba83d54c5'}",
            "dataset":"osv",
            "summary":"Path Traversal: 'dir\/..\/..\/filename' in moment.locale ### Impact\nThis vulnerability impacts npm (server) users of moment.js, especially if user provided locale string, eg `fr` is directly used to switch moment locale.\n\n### Patches\nThis problem is patched in 2.29.2, and the patch can be applied to all affected versions (from 1.0.1 up until 2.29.1, inclusive).\n\n### Workarounds\nSanitize user-provided locale name before passing it to moment.js.\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [moment repo](https:\/\/github.com\/moment\/moment)",
            "published_date":"2022-04-04",
            "chain_len":1,
            "project":"https:\/\/github.com\/moment\/moment",
            "commit_href":"https:\/\/github.com\/moment\/moment\/commit\/4211bfc8f15746be4019bba557e29a7ba83d54c5",
            "commit_sha":"4211bfc8f15746be4019bba557e29a7ba83d54c5",
            "patch":"SINGLE",
            "chain_ord":"['4211bfc8f15746be4019bba557e29a7ba83d54c5']",
            "before_first_fix_commit":"{'f2a813afcfd0dd6e63812ea74c46ecc627f6a6a6'}",
            "last_fix_commit":"4211bfc8f15746be4019bba557e29a7ba83d54c5",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/27\/2022, 11:46:47",
            "message":"[bugfix] Avoid loading path-looking locales from fs",
            "author":"Iskren Chernev",
            "comments":"{'com_1': {'author': 'kuraga', 'datetime': '05\/11\/2022, 17:44:47', 'body': '@ichernev , why two `\\\\\\\\`?'}, 'com_2': {'author': 'omoustaouda', 'datetime': '06\/19\/2022, 12:17:54', 'body': \"@ichernev, thank you for the patch!\\r\\n\\r\\na consideration that come at a first glance: I'd consider allowing only the expected valid characters, \\r\\nlike `it-IT`, `es-ES`, ...\\r\\n\\r\\ninstead of preventing the ones that look not sane,\\r\\nthe reason is that there are uncountable ways to escape chars like `\/` and `\\\\` to look different and possibly not being caught by this regexp.\"}}",
            "stats":"{'additions': 7, 'deletions': 1, 'total': 8}",
            "files":"{'src\/lib\/locale\/locales.js': {'additions': 7, 'deletions': 1, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moment\/moment\/raw\/4211bfc8f15746be4019bba557e29a7ba83d54c5\/src%2Flib%2Flocale%2Flocales.js', 'patch': \"@@ -62,6 +62,11 @@ function chooseLocale(names) {\\n     return globalLocale;\\n }\\n \\n+function isLocaleNameSane(name) {\\n+    \/\/ Prevent names that look like filesystem paths, i.e contain '\/' or '\\\\'\\n+    return name.match('^[^\/\\\\\\\\\\\\\\\\]*$') != null;\\n+}\\n+\\n function loadLocale(name) {\\n     var oldLocale = null,\\n         aliasedRequire;\\n@@ -70,7 +75,8 @@ function loadLocale(name) {\\n         locales[name] === undefined &&\\n         typeof module !== 'undefined' &&\\n         module &&\\n-        module.exports\\n+        module.exports &&\\n+        isLocaleNameSane(name)\\n     ) {\\n         try {\\n             oldLocale = globalLocale._abbr;\"}}",
            "message_norm":"[bugfix] avoid loading path-looking locales from fs",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lib\/locale\/locales.js'])",
            "num_files":1.0,
            "patch_content":"From 4211bfc8f15746be4019bba557e29a7ba83d54c5 Mon Sep 17 00:00:00 2001\nFrom: Iskren Chernev <me@iskren.info>\nDate: Sun, 27 Mar 2022 14:46:47 +0300\nSubject: [PATCH] [bugfix] Avoid loading path-looking locales from fs\n\n---\n src\/lib\/locale\/locales.js | 8 +++++++-\n 1 file changed, 7 insertions(+), 1 deletion(-)\n\ndiff --git a\/src\/lib\/locale\/locales.js b\/src\/lib\/locale\/locales.js\nindex 0d08232754..b329b83b3a 100644\n--- a\/src\/lib\/locale\/locales.js\n+++ b\/src\/lib\/locale\/locales.js\n@@ -62,6 +62,11 @@ function chooseLocale(names) {\n     return globalLocale;\n }\n \n+function isLocaleNameSane(name) {\n+    \/\/ Prevent names that look like filesystem paths, i.e contain '\/' or '\\'\n+    return name.match('^[^\/\\\\\\\\]*$') != null;\n+}\n+\n function loadLocale(name) {\n     var oldLocale = null,\n         aliasedRequire;\n@@ -70,7 +75,8 @@ function loadLocale(name) {\n         locales[name] === undefined &&\n         typeof module !== 'undefined' &&\n         module &&\n-        module.exports\n+        module.exports &&\n+        isLocaleNameSane(name)\n     ) {\n         try {\n             oldLocale = globalLocale._abbr;"
        },
        {
            "index":684,
            "vuln_id":"GHSA-x7r7-wmj8-vv5g",
            "cwe_id":"{'CWE-79'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/octoprint\/octoprint\/commit\/8087528e4a7ddd15c7d95ff662deb5ef7de90045'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in OctoPrint Cross-site Scripting (XSS) - DOM in GitHub repository octoprint\/octoprint prior to 1.8.0. The login endpoint allows for javascript injection which may lead to account takeover in a phishing scenario.",
            "published_date":"2022-05-19",
            "chain_len":1,
            "project":"https:\/\/github.com\/octoprint\/octoprint",
            "commit_href":"https:\/\/github.com\/octoprint\/octoprint\/commit\/8087528e4a7ddd15c7d95ff662deb5ef7de90045",
            "commit_sha":"8087528e4a7ddd15c7d95ff662deb5ef7de90045",
            "patch":"SINGLE",
            "chain_ord":"['8087528e4a7ddd15c7d95ff662deb5ef7de90045']",
            "before_first_fix_commit":"{'700034d028ff3518b563a7b4ba4dacc920142d07'}",
            "last_fix_commit":"8087528e4a7ddd15c7d95ff662deb5ef7de90045",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/11\/2022, 11:02:52",
            "message":"\ud83d\udd12\ufe0f Sanitize and validate login redirect\n\nFixes an XSS and an open redirect issue.",
            "author":"Gina H\u00e4u\u00dfge",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 1, 'total': 12}",
            "files":"{'src\/octoprint\/server\/views.py': {'additions': 11, 'deletions': 1, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/OctoPrint\/OctoPrint\/raw\/8087528e4a7ddd15c7d95ff662deb5ef7de90045\/src%2Foctoprint%2Fserver%2Fviews.py', 'patch': '@@ -8,6 +8,7 @@\\n import os\\n import re\\n from collections import defaultdict\\n+from urllib.parse import urlparse\\n \\n from flask import (\\n     Response,\\n@@ -170,7 +171,16 @@ def _add_additional_assets(hook):\\n def login():\\n     from flask_login import current_user\\n \\n-    redirect_url = request.args.get(\"redirect\", request.script_root + url_for(\"index\"))\\n+    default_redirect_url = request.script_root + url_for(\"index\")\\n+    redirect_url = request.args.get(\"redirect\", default_redirect_url)\\n+\\n+    parsed = urlparse(redirect_url)  # check if redirect url is valid\\n+    if parsed.scheme != \"\" or parsed.netloc != \"\":\\n+        _logger.warning(\\n+            f\"Got an invalid redirect URL with the login attempt, misconfiguration or attack attempt: {redirect_url}\"\\n+        )\\n+        redirect_url = default_redirect_url\\n+\\n     permissions = sorted(\\n         filter(\\n             lambda x: x is not None and isinstance(x, OctoPrintPermission),'}}",
            "message_norm":"\ud83d\udd12\ufe0f sanitize and validate login redirect\n\nfixes an xss and an open redirect issue.",
            "language":"en",
            "entities":"[('sanitize', 'SECWORD', ''), ('validate', 'ACTION', ''), ('login', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('xss', 'SECWORD', ''), ('open redirect', 'SECWORD', ''), ('issue', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/octoprint\/server\/views.py'])",
            "num_files":1.0,
            "patch_content":"From 8087528e4a7ddd15c7d95ff662deb5ef7de90045 Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Gina=20H=C3=A4u=C3=9Fge?= <gina@octoprint.org>\nDate: Wed, 11 May 2022 13:02:52 +0200\nSubject: [PATCH] =?UTF-8?q?=F0=9F=94=92=EF=B8=8F=20Sanitize=20and=20valida?=\n =?UTF-8?q?te=20login=20redirect?=\nMIME-Version: 1.0\nContent-Type: text\/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n\nFixes an XSS and an open redirect issue.\n---\n src\/octoprint\/server\/views.py | 12 +++++++++++-\n 1 file changed, 11 insertions(+), 1 deletion(-)\n\ndiff --git a\/src\/octoprint\/server\/views.py b\/src\/octoprint\/server\/views.py\nindex 235e15f011..d1db66b267 100644\n--- a\/src\/octoprint\/server\/views.py\n+++ b\/src\/octoprint\/server\/views.py\n@@ -8,6 +8,7 @@\n import os\n import re\n from collections import defaultdict\n+from urllib.parse import urlparse\n \n from flask import (\n     Response,\n@@ -170,7 +171,16 @@ def _add_additional_assets(hook):\n def login():\n     from flask_login import current_user\n \n-    redirect_url = request.args.get(\"redirect\", request.script_root + url_for(\"index\"))\n+    default_redirect_url = request.script_root + url_for(\"index\")\n+    redirect_url = request.args.get(\"redirect\", default_redirect_url)\n+\n+    parsed = urlparse(redirect_url)  # check if redirect url is valid\n+    if parsed.scheme != \"\" or parsed.netloc != \"\":\n+        _logger.warning(\n+            f\"Got an invalid redirect URL with the login attempt, misconfiguration or attack attempt: {redirect_url}\"\n+        )\n+        redirect_url = default_redirect_url\n+\n     permissions = sorted(\n         filter(\n             lambda x: x is not None and isinstance(x, OctoPrintPermission),"
        },
        {
            "index":824,
            "vuln_id":"GHSA-5xwc-mrhx-5g3m",
            "cwe_id":"{'CWE-824'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f2a673bd34f0d64b8e40a551ac78989d16daad09'}",
            "dataset":"osv",
            "summary":"Reference binding to nullptr in `MatrixDiagV*` ops ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in all operations of type `tf.raw_ops.MatrixDiagV*`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.MatrixDiagV3(\n  diagonal=[1,0],\n  k=[],\n  num_rows=[1,2,3],\n  num_cols=[4,5],\n  padding_value=[],\n  align='RIGHT_RIGHT')\n``` \n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/84d053187cb80d975ef2b9684d4b61981bca0c41\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc) has incomplete validation that the value of `k` is a valid tensor. We have check that this value is either a scalar or a vector, but there is no check for the number of elements. If this is an empty tensor, then code that accesses the first element of the tensor is wrong:\n\n```cc\n  auto& diag_index = context->input(1);\n  ...\n  lower_diag_index = diag_index.flat<int32>()(0);\n```\n\n### Patches\nWe have patched the issue in GitHub commit [f2a673bd34f0d64b8e40a551ac78989d16daad09](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f2a673bd34f0d64b8e40a551ac78989d16daad09).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f2a673bd34f0d64b8e40a551ac78989d16daad09",
            "commit_sha":"f2a673bd34f0d64b8e40a551ac78989d16daad09",
            "patch":"SINGLE",
            "chain_ord":"['f2a673bd34f0d64b8e40a551ac78989d16daad09']",
            "before_first_fix_commit":"{'ff8894044dfae5568ecbf2ed514c1a37dc394f1b'}",
            "last_fix_commit":"f2a673bd34f0d64b8e40a551ac78989d16daad09",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/31\/2021, 02:00:00",
            "message":"Add missing validation to `matrix_diag_op.cc`\n\nPiperOrigin-RevId: 387923533\nChange-Id: Idfffeb328d5f9c6748d992d28a56d6e9e45103a0",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f2a673bd34f0d64b8e40a551ac78989d16daad09\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Fmatrix_diag_op.cc', 'patch': '@@ -73,6 +73,9 @@ class MatrixDiagPartOp : public OpKernel {\\n                   errors::InvalidArgument(\\n                       \"diag_index must be a scalar or vector, received shape: \",\\n                       diag_index.shape().DebugString()));\\n+      OP_REQUIRES(context, diag_index.NumElements() > 0,\\n+                  errors::InvalidArgument(\\n+                      \"Expected diag_index to have at least 1 element\"));\\n       lower_diag_index = diag_index.flat<int32>()(0);\\n       upper_diag_index = lower_diag_index;\\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {\\n@@ -179,6 +182,9 @@ class MatrixDiagOp : public OpKernel {\\n                   errors::InvalidArgument(\\n                       \"diag_index must be a scalar or vector, received shape: \",\\n                       diag_index.shape().DebugString()));\\n+      OP_REQUIRES(context, diag_index.NumElements() > 0,\\n+                  errors::InvalidArgument(\\n+                      \"Expected diag_index to have at least 1 element\"));\\n       lower_diag_index = diag_index.flat<int32>()(0);\\n       upper_diag_index = lower_diag_index;\\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {'}}",
            "message_norm":"add missing validation to `matrix_diag_op.cc`\n\npiperorigin-revid: 387923533\nchange-id: idfffeb328d5f9c6748d992d28a56d6e9e45103a0",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('387923533', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc'])",
            "num_files":1.0,
            "patch_content":"From f2a673bd34f0d64b8e40a551ac78989d16daad09 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Fri, 30 Jul 2021 19:00:00 -0700\nSubject: [PATCH] Add missing validation to `matrix_diag_op.cc`\n\nPiperOrigin-RevId: 387923533\nChange-Id: Idfffeb328d5f9c6748d992d28a56d6e9e45103a0\n---\n tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc | 6 ++++++\n 1 file changed, 6 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc b\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc\nindex 2fd361e715b9b1..b61dbe96a5d6a5 100644\n--- a\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc\n+++ b\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc\n@@ -73,6 +73,9 @@ class MatrixDiagPartOp : public OpKernel {\n                   errors::InvalidArgument(\n                       \"diag_index must be a scalar or vector, received shape: \",\n                       diag_index.shape().DebugString()));\n+      OP_REQUIRES(context, diag_index.NumElements() > 0,\n+                  errors::InvalidArgument(\n+                      \"Expected diag_index to have at least 1 element\"));\n       lower_diag_index = diag_index.flat<int32>()(0);\n       upper_diag_index = lower_diag_index;\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {\n@@ -179,6 +182,9 @@ class MatrixDiagOp : public OpKernel {\n                   errors::InvalidArgument(\n                       \"diag_index must be a scalar or vector, received shape: \",\n                       diag_index.shape().DebugString()));\n+      OP_REQUIRES(context, diag_index.NumElements() > 0,\n+                  errors::InvalidArgument(\n+                      \"Expected diag_index to have at least 1 element\"));\n       lower_diag_index = diag_index.flat<int32>()(0);\n       upper_diag_index = lower_diag_index;\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {"
        },
        {
            "index":60,
            "vuln_id":"GHSA-q9qc-pp5x-mc8c",
            "cwe_id":"{'CWE-94', 'CWE-1336'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/e0224462b3dd6b1f7c6ec1197413afc6019bc3b5'}",
            "dataset":"osv",
            "summary":"Improper Neutralization of Special Elements Used in a Template Engine in microweber Improper Neutralization of Special Elements Used in a Template Engine in GitHub repository microweber\/microweber prior to 1.3.",
            "published_date":"2022-03-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/e0224462b3dd6b1f7c6ec1197413afc6019bc3b5",
            "commit_sha":"e0224462b3dd6b1f7c6ec1197413afc6019bc3b5",
            "patch":"SINGLE",
            "chain_ord":"['e0224462b3dd6b1f7c6ec1197413afc6019bc3b5']",
            "before_first_fix_commit":"{'b2baab6e582b2efe63788d367a2bb61a2fa26470'}",
            "last_fix_commit":"e0224462b3dd6b1f7c6ec1197413afc6019bc3b5",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/09\/2022, 11:17:21",
            "message":"Update AdminCommentController.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 10, 'total': 13}",
            "files":"{'src\/MicroweberPackages\/Comment\/Http\/Controllers\/Admin\/AdminCommentController.php': {'additions': 3, 'deletions': 10, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/e0224462b3dd6b1f7c6ec1197413afc6019bc3b5\/src%2FMicroweberPackages%2FComment%2FHttp%2FControllers%2FAdmin%2FAdminCommentController.php', 'patch': \"@@ -18,18 +18,16 @@\\n use MicroweberPackages\\\\Comment\\\\Models\\\\Comment;\\n use MicroweberPackages\\\\Comment\\\\Events\\\\NewComment;\\n use MicroweberPackages\\\\Comment\\\\Notifications\\\\NewCommentNotification;\\n+use MicroweberPackages\\\\Helper\\\\HTMLClean;\\n use MicroweberPackages\\\\User\\\\Models\\\\User;\\n use MicroweberPackages\\\\Utils\\\\Mail\\\\MailSender;\\n \\n-\\n class AdminCommentController extends AdminController\\n {\\n     public function index(Request $request)\\n     {\\n-\\n         $contents = $this->getComments($request);\\n \\n-\\n         return $this->view('comment::admin.comments.index', ['contents' => $contents]);\\n     }\\n \\n@@ -42,7 +40,6 @@ public function getComments(Request $request)\\n             $contents = $contents->filter($filter);\\n         }\\n \\n-\\n         $contents = $contents->paginate($request->get('limit', 30))\\n             ->appends($request->except('page'));\\n \\n@@ -148,12 +145,8 @@ public function saveCommentEdit(Request $request)\\n \\n         $comment_body = $data['comment_body'];\\n \\n-        \/\/ Claer HTML\\n-        $comment_body = $this->app->format->clean_html($comment_body);\\n-\\n-        \/\/ Clear XSS\\n-        $evil = ['(?<!\\\\w)on\\\\w*', 'xmlns', 'formaction', 'xlink:href', 'FSCommand', 'seekSegmentTime'];\\n-        $comment_body = $this->app->format->clean_xss($comment_body, true, $evil, 'removeEvilAttributes');\\n+        $cleanHtml = new HTMLClean();\\n+        $comment_body = $cleanHtml->onlyTags($comment_body);\\n \\n         if (!empty($comment_body) and !empty($data['format']) and $data['format'] == 'markdown') {\\n             $comment_body = Markdown::convertToHtml($comment_body);\"}}",
            "message_norm":"update admincommentcontroller.php",
            "language":"fr",
            "entities":"[('update', 'ACTION', ''), ('admincommentcontroller.php', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/Comment\/Http\/Controllers\/Admin\/AdminCommentController.php'])",
            "num_files":1.0,
            "patch_content":"From e0224462b3dd6b1f7c6ec1197413afc6019bc3b5 Mon Sep 17 00:00:00 2001\nFrom: Bozhidar Slaveykov <bobi@microweber.com>\nDate: Wed, 9 Mar 2022 13:17:21 +0200\nSubject: [PATCH] Update AdminCommentController.php\n\n---\n ...\/Controllers\/Admin\/AdminCommentController.php    | 13 +++----------\n 1 file changed, 3 insertions(+), 10 deletions(-)\n\ndiff --git a\/src\/MicroweberPackages\/Comment\/Http\/Controllers\/Admin\/AdminCommentController.php b\/src\/MicroweberPackages\/Comment\/Http\/Controllers\/Admin\/AdminCommentController.php\nindex f58adbd444d..4bf237d5807 100644\n--- a\/src\/MicroweberPackages\/Comment\/Http\/Controllers\/Admin\/AdminCommentController.php\n+++ b\/src\/MicroweberPackages\/Comment\/Http\/Controllers\/Admin\/AdminCommentController.php\n@@ -18,18 +18,16 @@\n use MicroweberPackages\\Comment\\Models\\Comment;\n use MicroweberPackages\\Comment\\Events\\NewComment;\n use MicroweberPackages\\Comment\\Notifications\\NewCommentNotification;\n+use MicroweberPackages\\Helper\\HTMLClean;\n use MicroweberPackages\\User\\Models\\User;\n use MicroweberPackages\\Utils\\Mail\\MailSender;\n \n-\n class AdminCommentController extends AdminController\n {\n     public function index(Request $request)\n     {\n-\n         $contents = $this->getComments($request);\n \n-\n         return $this->view('comment::admin.comments.index', ['contents' => $contents]);\n     }\n \n@@ -42,7 +40,6 @@ public function getComments(Request $request)\n             $contents = $contents->filter($filter);\n         }\n \n-\n         $contents = $contents->paginate($request->get('limit', 30))\n             ->appends($request->except('page'));\n \n@@ -148,12 +145,8 @@ public function saveCommentEdit(Request $request)\n \n         $comment_body = $data['comment_body'];\n \n-        \/\/ Claer HTML\n-        $comment_body = $this->app->format->clean_html($comment_body);\n-\n-        \/\/ Clear XSS\n-        $evil = ['(?<!\\w)on\\w*', 'xmlns', 'formaction', 'xlink:href', 'FSCommand', 'seekSegmentTime'];\n-        $comment_body = $this->app->format->clean_xss($comment_body, true, $evil, 'removeEvilAttributes');\n+        $cleanHtml = new HTMLClean();\n+        $comment_body = $cleanHtml->onlyTags($comment_body);\n \n         if (!empty($comment_body) and !empty($data['format']) and $data['format'] == 'markdown') {\n             $comment_body = Markdown::convertToHtml($comment_body);"
        },
        {
            "index":585,
            "vuln_id":"GHSA-x67x-vg9m-65c3",
            "cwe_id":"{'CWE-119'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/alicemaz\/rust-base64\/commit\/24ead980daf11ba563e4fb2516187a56a71ad319'}",
            "dataset":"osv",
            "summary":"Integer overflow in base64 Affected versions of this crate suffered from an integer overflow bug when\ncalculating the size of a buffer to use when encoding base64 using the\n`encode_config_buf` and `encode_config` functions.  If the input string\nwas large, this would cause a buffer to be allocated that was too small.\nSince this function writes to the buffer using unsafe code, it would\nallow an attacker to write beyond the buffer, causing memory corruption\nand possibly the execution of arbitrary code.\n\nThis flaw was corrected by using checked arithmetic to calculate\nthe size of the buffer.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/alicemaz\/rust-base64",
            "commit_href":"https:\/\/github.com\/alicemaz\/rust-base64\/commit\/24ead980daf11ba563e4fb2516187a56a71ad319",
            "commit_sha":"24ead980daf11ba563e4fb2516187a56a71ad319",
            "patch":"SINGLE",
            "chain_ord":"['24ead980daf11ba563e4fb2516187a56a71ad319']",
            "before_first_fix_commit":"{'21a9389cf340f1e36e48856859d5713b97744383'}",
            "last_fix_commit":"24ead980daf11ba563e4fb2516187a56a71ad319",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/03\/2017, 05:26:40",
            "message":"Use checked arithmetic in encoded_size\n\npreviously encoded_size could silently overflow usize, resulting in\nwrite past the bounds of the buffer allocated by reserve. this changes\nencoded_size to return an option, with none if overflow occurs.\npresently callers simply panic on this case, but it could conceivably be\nrendered as an error in the future\n\ncredit to Andrew Ayer for reporting this vulnerability",
            "author":"Alice Maz",
            "comments":null,
            "stats":"{'additions': 75, 'deletions': 61, 'total': 136}",
            "files":"{'src\/lib.rs': {'additions': 75, 'deletions': 61, 'changes': 136, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/marshallpierce\/rust-base64\/raw\/24ead980daf11ba563e4fb2516187a56a71ad319\/src%2Flib.rs', 'patch': '@@ -171,31 +171,36 @@ pub fn decode<T: ?Sized + AsRef<[u8]>>(input: &T) -> Result<Vec<u8>, DecodeError\\n \/\/\/}\\n \/\/\/```\\n pub fn encode_config<T: ?Sized + AsRef<[u8]>>(input: &T, config: Config) -> String {\\n-    let mut buf = String::with_capacity(encoded_size(input.as_ref().len(), config));\\n+    let mut buf = match encoded_size(input.as_ref().len(), config) {\\n+        Some(n) => String::with_capacity(n),\\n+        None => panic!(\"integer overflow when calculating buffer size\")\\n+    };\\n \\n     encode_config_buf(input, config, &mut buf);\\n \\n     buf\\n }\\n \\n \/\/\/ calculate the base64 encoded string size, including padding\\n-fn encoded_size(bytes_len: usize, config: Config) -> usize {\\n-    let rem = bytes_len % 3;\\n-\\n-    let complete_input_chunks = bytes_len \/ 3;\\n-    let complete_output_chars = complete_input_chunks * 4;\\n-    let printing_output_chars = if rem == 0 {\\n-        complete_output_chars\\n-    } else {\\n-        complete_output_chars + 4\\n-    };\\n+fn encoded_size(bytes_len: usize, config: Config) -> Option<usize> {\\n+    let printing_output_chars = bytes_len\\n+        .checked_add(2)\\n+        .map(|x| x \/ 3)\\n+        .and_then(|x| x.checked_mul(4));\\n+\\n+    \/\/TODO this is subtly wrong but in a not dangerous way\\n+    \/\/pushing patch with identical to previous behavior, then fixing\\n     let line_ending_output_chars = match config.line_wrap {\\n-        LineWrap::NoWrap => 0,\\n-        LineWrap::Wrap(n, LineEnding::CRLF) => printing_output_chars \/ n * 2,\\n-        LineWrap::Wrap(n, LineEnding::LF) => printing_output_chars \/ n,\\n+        LineWrap::NoWrap => Some(0),\\n+        LineWrap::Wrap(n, LineEnding::CRLF) =>\\n+            printing_output_chars.map(|y| y \/ n).and_then(|y| y.checked_mul(2)),\\n+        LineWrap::Wrap(n, LineEnding::LF) =>\\n+            printing_output_chars.map(|y| y \/ n),\\n     };\\n \\n-    return printing_output_chars + line_ending_output_chars;\\n+    printing_output_chars.and_then(|x|\\n+        line_ending_output_chars.and_then(|y| x.checked_add(y))\\n+    )\\n }\\n \\n \/\/\/Encode arbitrary octets as base64.\\n@@ -224,7 +229,11 @@ pub fn encode_config_buf<T: ?Sized + AsRef<[u8]>>(input: &T, config: Config, buf\\n     };\\n \\n     \/\/ reserve to make sure the memory we\\'ll be writing to with unsafe is allocated\\n-    buf.reserve(encoded_size(input_bytes.len(), config));\\n+    let resv_size = match encoded_size(input_bytes.len(), config) {\\n+        Some(n) => n,\\n+        None => panic!(\"integer overflow when calculating buffer size\"),\\n+    };\\n+    buf.reserve(resv_size);\\n \\n     let orig_buf_len = buf.len();\\n     let mut fast_loop_output_buf_len = orig_buf_len;\\n@@ -579,52 +588,52 @@ mod tests {\\n \\n     #[test]\\n     fn encoded_size_correct() {\\n-        assert_eq!(0, encoded_size(0, STANDARD));\\n+        assert_eq!(Some(0), encoded_size(0, STANDARD));\\n \\n-        assert_eq!(4, encoded_size(1, STANDARD));\\n-        assert_eq!(4, encoded_size(2, STANDARD));\\n-        assert_eq!(4, encoded_size(3, STANDARD));\\n+        assert_eq!(Some(4), encoded_size(1, STANDARD));\\n+        assert_eq!(Some(4), encoded_size(2, STANDARD));\\n+        assert_eq!(Some(4), encoded_size(3, STANDARD));\\n \\n-        assert_eq!(8, encoded_size(4, STANDARD));\\n-        assert_eq!(8, encoded_size(5, STANDARD));\\n-        assert_eq!(8, encoded_size(6, STANDARD));\\n+        assert_eq!(Some(8), encoded_size(4, STANDARD));\\n+        assert_eq!(Some(8), encoded_size(5, STANDARD));\\n+        assert_eq!(Some(8), encoded_size(6, STANDARD));\\n \\n-        assert_eq!(12, encoded_size(7, STANDARD));\\n-        assert_eq!(12, encoded_size(8, STANDARD));\\n-        assert_eq!(12, encoded_size(9, STANDARD));\\n+        assert_eq!(Some(12), encoded_size(7, STANDARD));\\n+        assert_eq!(Some(12), encoded_size(8, STANDARD));\\n+        assert_eq!(Some(12), encoded_size(9, STANDARD));\\n \\n-        assert_eq!(72, encoded_size(54, STANDARD));\\n+        assert_eq!(Some(72), encoded_size(54, STANDARD));\\n \\n-        assert_eq!(76, encoded_size(55, STANDARD));\\n-        assert_eq!(76, encoded_size(56, STANDARD));\\n-        assert_eq!(76, encoded_size(57, STANDARD));\\n+        assert_eq!(Some(76), encoded_size(55, STANDARD));\\n+        assert_eq!(Some(76), encoded_size(56, STANDARD));\\n+        assert_eq!(Some(76), encoded_size(57, STANDARD));\\n \\n-        assert_eq!(80, encoded_size(58, STANDARD));\\n+        assert_eq!(Some(80), encoded_size(58, STANDARD));\\n     }\\n \\n     #[test]\\n     fn encoded_size_correct_mime() {\\n-        assert_eq!(0, encoded_size(0, MIME));\\n+        assert_eq!(Some(0), encoded_size(0, MIME));\\n \\n-        assert_eq!(4, encoded_size(1, MIME));\\n-        assert_eq!(4, encoded_size(2, MIME));\\n-        assert_eq!(4, encoded_size(3, MIME));\\n+        assert_eq!(Some(4), encoded_size(1, MIME));\\n+        assert_eq!(Some(4), encoded_size(2, MIME));\\n+        assert_eq!(Some(4), encoded_size(3, MIME));\\n \\n-        assert_eq!(8, encoded_size(4, MIME));\\n-        assert_eq!(8, encoded_size(5, MIME));\\n-        assert_eq!(8, encoded_size(6, MIME));\\n+        assert_eq!(Some(8), encoded_size(4, MIME));\\n+        assert_eq!(Some(8), encoded_size(5, MIME));\\n+        assert_eq!(Some(8), encoded_size(6, MIME));\\n \\n-        assert_eq!(12, encoded_size(7, MIME));\\n-        assert_eq!(12, encoded_size(8, MIME));\\n-        assert_eq!(12, encoded_size(9, MIME));\\n+        assert_eq!(Some(12), encoded_size(7, MIME));\\n+        assert_eq!(Some(12), encoded_size(8, MIME));\\n+        assert_eq!(Some(12), encoded_size(9, MIME));\\n \\n-        assert_eq!(72, encoded_size(54, MIME));\\n+        assert_eq!(Some(72), encoded_size(54, MIME));\\n \\n-        assert_eq!(78, encoded_size(55, MIME));\\n-        assert_eq!(78, encoded_size(56, MIME));\\n-        assert_eq!(78, encoded_size(57, MIME));\\n+        assert_eq!(Some(78), encoded_size(55, MIME));\\n+        assert_eq!(Some(78), encoded_size(56, MIME));\\n+        assert_eq!(Some(78), encoded_size(57, MIME));\\n \\n-        assert_eq!(82, encoded_size(58, MIME));\\n+        assert_eq!(Some(82), encoded_size(58, MIME));\\n     }\\n \\n     #[test]\\n@@ -636,26 +645,31 @@ mod tests {\\n             LineWrap::Wrap(76, LineEnding::LF)\\n         );\\n \\n-        assert_eq!(0, encoded_size(0, config));\\n+        assert_eq!(Some(0), encoded_size(0, config));\\n+\\n+        assert_eq!(Some(4), encoded_size(1, config));\\n+        assert_eq!(Some(4), encoded_size(2, config));\\n+        assert_eq!(Some(4), encoded_size(3, config));\\n \\n-        assert_eq!(4, encoded_size(1, config));\\n-        assert_eq!(4, encoded_size(2, config));\\n-        assert_eq!(4, encoded_size(3, config));\\n+        assert_eq!(Some(8), encoded_size(4, config));\\n+        assert_eq!(Some(8), encoded_size(5, config));\\n+        assert_eq!(Some(8), encoded_size(6, config));\\n \\n-        assert_eq!(8, encoded_size(4, config));\\n-        assert_eq!(8, encoded_size(5, config));\\n-        assert_eq!(8, encoded_size(6, config));\\n+        assert_eq!(Some(12), encoded_size(7, config));\\n+        assert_eq!(Some(12), encoded_size(8, config));\\n+        assert_eq!(Some(12), encoded_size(9, config));\\n \\n-        assert_eq!(12, encoded_size(7, config));\\n-        assert_eq!(12, encoded_size(8, config));\\n-        assert_eq!(12, encoded_size(9, config));\\n+        assert_eq!(Some(72), encoded_size(54, config));\\n \\n-        assert_eq!(72, encoded_size(54, config));\\n+        assert_eq!(Some(77), encoded_size(55, config));\\n+        assert_eq!(Some(77), encoded_size(56, config));\\n+        assert_eq!(Some(77), encoded_size(57, config));\\n \\n-        assert_eq!(77, encoded_size(55, config));\\n-        assert_eq!(77, encoded_size(56, config));\\n-        assert_eq!(77, encoded_size(57, config));\\n+        assert_eq!(Some(81), encoded_size(58, config));\\n+    }\\n \\n-        assert_eq!(81, encoded_size(58, config));\\n+    #[test]\\n+    fn encoded_size_overflow() {\\n+        assert_eq!(None, encoded_size(std::usize::MAX, STANDARD));\\n     }\\n }'}}",
            "message_norm":"use checked arithmetic in encoded_size\n\npreviously encoded_size could silently overflow usize, resulting in\nwrite past the bounds of the buffer allocated by reserve. this changes\nencoded_size to return an option, with none if overflow occurs.\npresently callers simply panic on this case, but it could conceivably be\nrendered as an error in the future\n\ncredit to andrew ayer for reporting this vulnerability",
            "language":"en",
            "entities":"[('encoded_size', 'SECWORD', ''), ('encoded_size', 'SECWORD', ''), ('overflow', 'SECWORD', ''), ('encoded_size', 'SECWORD', ''), ('overflow', 'SECWORD', ''), ('error', 'FLAW', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lib.rs'])",
            "num_files":1.0,
            "patch_content":"From 24ead980daf11ba563e4fb2516187a56a71ad319 Mon Sep 17 00:00:00 2001\nFrom: Alice Maz <alice@alicemaz.com>\nDate: Wed, 3 May 2017 05:26:40 +0000\nSubject: [PATCH] Use checked arithmetic in encoded_size\n\npreviously encoded_size could silently overflow usize, resulting in\nwrite past the bounds of the buffer allocated by reserve. this changes\nencoded_size to return an option, with none if overflow occurs.\npresently callers simply panic on this case, but it could conceivably be\nrendered as an error in the future\n\ncredit to Andrew Ayer for reporting this vulnerability\n---\n src\/lib.rs | 136 +++++++++++++++++++++++++++++------------------------\n 1 file changed, 75 insertions(+), 61 deletions(-)\n\ndiff --git a\/src\/lib.rs b\/src\/lib.rs\nindex df424f11..3a1ade63 100644\n--- a\/src\/lib.rs\n+++ b\/src\/lib.rs\n@@ -171,7 +171,10 @@ pub fn decode<T: ?Sized + AsRef<[u8]>>(input: &T) -> Result<Vec<u8>, DecodeError\n \/\/\/}\n \/\/\/```\n pub fn encode_config<T: ?Sized + AsRef<[u8]>>(input: &T, config: Config) -> String {\n-    let mut buf = String::with_capacity(encoded_size(input.as_ref().len(), config));\n+    let mut buf = match encoded_size(input.as_ref().len(), config) {\n+        Some(n) => String::with_capacity(n),\n+        None => panic!(\"integer overflow when calculating buffer size\")\n+    };\n \n     encode_config_buf(input, config, &mut buf);\n \n@@ -179,23 +182,25 @@ pub fn encode_config<T: ?Sized + AsRef<[u8]>>(input: &T, config: Config) -> Stri\n }\n \n \/\/\/ calculate the base64 encoded string size, including padding\n-fn encoded_size(bytes_len: usize, config: Config) -> usize {\n-    let rem = bytes_len % 3;\n-\n-    let complete_input_chunks = bytes_len \/ 3;\n-    let complete_output_chars = complete_input_chunks * 4;\n-    let printing_output_chars = if rem == 0 {\n-        complete_output_chars\n-    } else {\n-        complete_output_chars + 4\n-    };\n+fn encoded_size(bytes_len: usize, config: Config) -> Option<usize> {\n+    let printing_output_chars = bytes_len\n+        .checked_add(2)\n+        .map(|x| x \/ 3)\n+        .and_then(|x| x.checked_mul(4));\n+\n+    \/\/TODO this is subtly wrong but in a not dangerous way\n+    \/\/pushing patch with identical to previous behavior, then fixing\n     let line_ending_output_chars = match config.line_wrap {\n-        LineWrap::NoWrap => 0,\n-        LineWrap::Wrap(n, LineEnding::CRLF) => printing_output_chars \/ n * 2,\n-        LineWrap::Wrap(n, LineEnding::LF) => printing_output_chars \/ n,\n+        LineWrap::NoWrap => Some(0),\n+        LineWrap::Wrap(n, LineEnding::CRLF) =>\n+            printing_output_chars.map(|y| y \/ n).and_then(|y| y.checked_mul(2)),\n+        LineWrap::Wrap(n, LineEnding::LF) =>\n+            printing_output_chars.map(|y| y \/ n),\n     };\n \n-    return printing_output_chars + line_ending_output_chars;\n+    printing_output_chars.and_then(|x|\n+        line_ending_output_chars.and_then(|y| x.checked_add(y))\n+    )\n }\n \n \/\/\/Encode arbitrary octets as base64.\n@@ -224,7 +229,11 @@ pub fn encode_config_buf<T: ?Sized + AsRef<[u8]>>(input: &T, config: Config, buf\n     };\n \n     \/\/ reserve to make sure the memory we'll be writing to with unsafe is allocated\n-    buf.reserve(encoded_size(input_bytes.len(), config));\n+    let resv_size = match encoded_size(input_bytes.len(), config) {\n+        Some(n) => n,\n+        None => panic!(\"integer overflow when calculating buffer size\"),\n+    };\n+    buf.reserve(resv_size);\n \n     let orig_buf_len = buf.len();\n     let mut fast_loop_output_buf_len = orig_buf_len;\n@@ -579,52 +588,52 @@ mod tests {\n \n     #[test]\n     fn encoded_size_correct() {\n-        assert_eq!(0, encoded_size(0, STANDARD));\n+        assert_eq!(Some(0), encoded_size(0, STANDARD));\n \n-        assert_eq!(4, encoded_size(1, STANDARD));\n-        assert_eq!(4, encoded_size(2, STANDARD));\n-        assert_eq!(4, encoded_size(3, STANDARD));\n+        assert_eq!(Some(4), encoded_size(1, STANDARD));\n+        assert_eq!(Some(4), encoded_size(2, STANDARD));\n+        assert_eq!(Some(4), encoded_size(3, STANDARD));\n \n-        assert_eq!(8, encoded_size(4, STANDARD));\n-        assert_eq!(8, encoded_size(5, STANDARD));\n-        assert_eq!(8, encoded_size(6, STANDARD));\n+        assert_eq!(Some(8), encoded_size(4, STANDARD));\n+        assert_eq!(Some(8), encoded_size(5, STANDARD));\n+        assert_eq!(Some(8), encoded_size(6, STANDARD));\n \n-        assert_eq!(12, encoded_size(7, STANDARD));\n-        assert_eq!(12, encoded_size(8, STANDARD));\n-        assert_eq!(12, encoded_size(9, STANDARD));\n+        assert_eq!(Some(12), encoded_size(7, STANDARD));\n+        assert_eq!(Some(12), encoded_size(8, STANDARD));\n+        assert_eq!(Some(12), encoded_size(9, STANDARD));\n \n-        assert_eq!(72, encoded_size(54, STANDARD));\n+        assert_eq!(Some(72), encoded_size(54, STANDARD));\n \n-        assert_eq!(76, encoded_size(55, STANDARD));\n-        assert_eq!(76, encoded_size(56, STANDARD));\n-        assert_eq!(76, encoded_size(57, STANDARD));\n+        assert_eq!(Some(76), encoded_size(55, STANDARD));\n+        assert_eq!(Some(76), encoded_size(56, STANDARD));\n+        assert_eq!(Some(76), encoded_size(57, STANDARD));\n \n-        assert_eq!(80, encoded_size(58, STANDARD));\n+        assert_eq!(Some(80), encoded_size(58, STANDARD));\n     }\n \n     #[test]\n     fn encoded_size_correct_mime() {\n-        assert_eq!(0, encoded_size(0, MIME));\n+        assert_eq!(Some(0), encoded_size(0, MIME));\n \n-        assert_eq!(4, encoded_size(1, MIME));\n-        assert_eq!(4, encoded_size(2, MIME));\n-        assert_eq!(4, encoded_size(3, MIME));\n+        assert_eq!(Some(4), encoded_size(1, MIME));\n+        assert_eq!(Some(4), encoded_size(2, MIME));\n+        assert_eq!(Some(4), encoded_size(3, MIME));\n \n-        assert_eq!(8, encoded_size(4, MIME));\n-        assert_eq!(8, encoded_size(5, MIME));\n-        assert_eq!(8, encoded_size(6, MIME));\n+        assert_eq!(Some(8), encoded_size(4, MIME));\n+        assert_eq!(Some(8), encoded_size(5, MIME));\n+        assert_eq!(Some(8), encoded_size(6, MIME));\n \n-        assert_eq!(12, encoded_size(7, MIME));\n-        assert_eq!(12, encoded_size(8, MIME));\n-        assert_eq!(12, encoded_size(9, MIME));\n+        assert_eq!(Some(12), encoded_size(7, MIME));\n+        assert_eq!(Some(12), encoded_size(8, MIME));\n+        assert_eq!(Some(12), encoded_size(9, MIME));\n \n-        assert_eq!(72, encoded_size(54, MIME));\n+        assert_eq!(Some(72), encoded_size(54, MIME));\n \n-        assert_eq!(78, encoded_size(55, MIME));\n-        assert_eq!(78, encoded_size(56, MIME));\n-        assert_eq!(78, encoded_size(57, MIME));\n+        assert_eq!(Some(78), encoded_size(55, MIME));\n+        assert_eq!(Some(78), encoded_size(56, MIME));\n+        assert_eq!(Some(78), encoded_size(57, MIME));\n \n-        assert_eq!(82, encoded_size(58, MIME));\n+        assert_eq!(Some(82), encoded_size(58, MIME));\n     }\n \n     #[test]\n@@ -636,26 +645,31 @@ mod tests {\n             LineWrap::Wrap(76, LineEnding::LF)\n         );\n \n-        assert_eq!(0, encoded_size(0, config));\n+        assert_eq!(Some(0), encoded_size(0, config));\n+\n+        assert_eq!(Some(4), encoded_size(1, config));\n+        assert_eq!(Some(4), encoded_size(2, config));\n+        assert_eq!(Some(4), encoded_size(3, config));\n \n-        assert_eq!(4, encoded_size(1, config));\n-        assert_eq!(4, encoded_size(2, config));\n-        assert_eq!(4, encoded_size(3, config));\n+        assert_eq!(Some(8), encoded_size(4, config));\n+        assert_eq!(Some(8), encoded_size(5, config));\n+        assert_eq!(Some(8), encoded_size(6, config));\n \n-        assert_eq!(8, encoded_size(4, config));\n-        assert_eq!(8, encoded_size(5, config));\n-        assert_eq!(8, encoded_size(6, config));\n+        assert_eq!(Some(12), encoded_size(7, config));\n+        assert_eq!(Some(12), encoded_size(8, config));\n+        assert_eq!(Some(12), encoded_size(9, config));\n \n-        assert_eq!(12, encoded_size(7, config));\n-        assert_eq!(12, encoded_size(8, config));\n-        assert_eq!(12, encoded_size(9, config));\n+        assert_eq!(Some(72), encoded_size(54, config));\n \n-        assert_eq!(72, encoded_size(54, config));\n+        assert_eq!(Some(77), encoded_size(55, config));\n+        assert_eq!(Some(77), encoded_size(56, config));\n+        assert_eq!(Some(77), encoded_size(57, config));\n \n-        assert_eq!(77, encoded_size(55, config));\n-        assert_eq!(77, encoded_size(56, config));\n-        assert_eq!(77, encoded_size(57, config));\n+        assert_eq!(Some(81), encoded_size(58, config));\n+    }\n \n-        assert_eq!(81, encoded_size(58, config));\n+    #[test]\n+    fn encoded_size_overflow() {\n+        assert_eq!(None, encoded_size(std::usize::MAX, STANDARD));\n     }\n }"
        },
        {
            "index":921,
            "vuln_id":"GHSA-7hmh-8gwv-mfvq",
            "cwe_id":"{'CWE-89'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/apache\/kylin\/commit\/e373c64c96a54a7abfe4bccb82e8feb60db04749'}",
            "dataset":"osv",
            "summary":"SQL Injection in Kylin Kylin has some restful apis which will concatenate SQLs with the user input string, a user is likely to be able to run malicious database queries.",
            "published_date":"2020-07-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/apache\/kylin",
            "commit_href":"https:\/\/github.com\/apache\/kylin\/commit\/e373c64c96a54a7abfe4bccb82e8feb60db04749",
            "commit_sha":"e373c64c96a54a7abfe4bccb82e8feb60db04749",
            "patch":"SINGLE",
            "chain_ord":"['e373c64c96a54a7abfe4bccb82e8feb60db04749']",
            "before_first_fix_commit":"{'ebfc745dd681d7e0c129ded50bd50ff509d2a393'}",
            "last_fix_commit":"e373c64c96a54a7abfe4bccb82e8feb60db04749",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/07\/2020, 12:22:59",
            "message":"Fix sql injection issue",
            "author":"nichunen",
            "comments":null,
            "stats":"{'additions': 51, 'deletions': 30, 'total': 81}",
            "files":"{'server-base\/src\/main\/java\/org\/apache\/kylin\/rest\/service\/CubeService.java': {'additions': 51, 'deletions': 30, 'changes': 81, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/kylin\/raw\/e373c64c96a54a7abfe4bccb82e8feb60db04749\/server-base%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fkylin%2Frest%2Fservice%2FCubeService.java', 'patch': '@@ -71,6 +71,7 @@\\n import org.apache.kylin.metadata.project.RealizationEntry;\\n import org.apache.kylin.metadata.realization.RealizationStatusEnum;\\n import org.apache.kylin.metadata.realization.RealizationType;\\n+import org.apache.kylin.metrics.MetricsManager;\\n import org.apache.kylin.metrics.property.QueryCubePropertyEnum;\\n import org.apache.kylin.rest.constant.Constant;\\n import org.apache.kylin.rest.exception.BadRequestException;\\n@@ -79,6 +80,7 @@\\n import org.apache.kylin.rest.msg.Message;\\n import org.apache.kylin.rest.msg.MsgPicker;\\n import org.apache.kylin.rest.request.MetricsRequest;\\n+import org.apache.kylin.rest.request.PrepareSqlRequest;\\n import org.apache.kylin.rest.response.CubeInstanceResponse;\\n import org.apache.kylin.rest.response.CuboidTreeResponse;\\n import org.apache.kylin.rest.response.CuboidTreeResponse.NodeInfo;\\n@@ -544,7 +546,8 @@ public HBaseResponse getHTableInfo(String cubeName, String tableName) throws IOE\\n \\n         hr = new HBaseResponse();\\n         CubeInstance cube = CubeManager.getInstance(getConfig()).getCube(cubeName);\\n-        if (cube.getStorageType() == IStorageAware.ID_HBASE || cube.getStorageType() == IStorageAware.ID_SHARDED_HBASE || cube.getStorageType() == IStorageAware.ID_REALTIME_AND_HBASE) {\\n+        if (cube.getStorageType() == IStorageAware.ID_HBASE || cube.getStorageType() == IStorageAware.ID_SHARDED_HBASE\\n+                || cube.getStorageType() == IStorageAware.ID_REALTIME_AND_HBASE) {\\n             try {\\n                 logger.debug(\"Loading HTable info \" + cubeName + \", \" + tableName);\\n \\n@@ -633,7 +636,8 @@ private void cleanSegmentStorage(List<CubeSegment> toRemoveSegs) throws IOExcept\\n             List<String> toDelHDFSPaths = Lists.newArrayListWithCapacity(toRemoveSegs.size());\\n             for (CubeSegment seg : toRemoveSegs) {\\n                 toDropHTables.add(seg.getStorageLocationIdentifier());\\n-                toDelHDFSPaths.add(JobBuilderSupport.getJobWorkingDir(seg.getConfig().getHdfsWorkingDirectory(), seg.getLastBuildJobID()));\\n+                toDelHDFSPaths.add(JobBuilderSupport.getJobWorkingDir(seg.getConfig().getHdfsWorkingDirectory(),\\n+                        seg.getLastBuildJobID()));\\n             }\\n \\n             StorageCleanUtil.dropHTables(new HBaseAdmin(HBaseConnection.getCurrentHBaseConfiguration()), toDropHTables);\\n@@ -763,10 +767,12 @@ public String mergeCubeSegment(String cubeName) {\\n     }\\n \\n     \/\/Don\\'t merge the job that has been discarded manually before\\n-    private boolean isMergingJobBeenDiscarded(CubeInstance cubeInstance, String cubeName, String projectName, SegmentRange offsets) {\\n+    private boolean isMergingJobBeenDiscarded(CubeInstance cubeInstance, String cubeName, String projectName,\\n+            SegmentRange offsets) {\\n         SegmentRange.TSRange tsRange = new SegmentRange.TSRange((Long) offsets.start.v, (Long) offsets.end.v);\\n         String segmentName = CubeSegment.makeSegmentName(tsRange, null, cubeInstance.getModel());\\n-        final List<CubingJob> jobInstanceList = jobService.listJobsByRealizationName(cubeName, projectName, EnumSet.of(ExecutableState.DISCARDED));\\n+        final List<CubingJob> jobInstanceList = jobService.listJobsByRealizationName(cubeName, projectName,\\n+                EnumSet.of(ExecutableState.DISCARDED));\\n         for (CubingJob cubingJob : jobInstanceList) {\\n             if (cubingJob.getSegmentName().equals(segmentName)) {\\n                 logger.debug(\"Merge job {} has been discarded before, will not merge.\", segmentName);\\n@@ -777,7 +783,6 @@ private boolean isMergingJobBeenDiscarded(CubeInstance cubeInstance, String cube\\n         return false;\\n     }\\n \\n-\\n     public void validateCubeDesc(CubeDesc desc, boolean isDraft) {\\n         Message msg = MsgPicker.getMsg();\\n \\n@@ -931,24 +936,6 @@ public void afterPropertiesSet() throws Exception {\\n         Broadcaster.getInstance(getConfig()).registerStaticListener(new HTableInfoSyncListener(), \"cube\");\\n     }\\n \\n-    private class HTableInfoSyncListener extends Broadcaster.Listener {\\n-        @Override\\n-        public void onClearAll(Broadcaster broadcaster) throws IOException {\\n-            htableInfoCache.invalidateAll();\\n-        }\\n-\\n-        @Override\\n-        public void onEntityChange(Broadcaster broadcaster, String entity, Broadcaster.Event event, String cacheKey)\\n-                throws IOException {\\n-            String cubeName = cacheKey;\\n-            String keyPrefix = cubeName + \"\/\";\\n-            for (String k : htableInfoCache.asMap().keySet()) {\\n-                if (k.startsWith(keyPrefix))\\n-                    htableInfoCache.invalidate(k);\\n-            }\\n-        }\\n-    }\\n-\\n     public CubeInstanceResponse createCubeInstanceResponse(CubeInstance cube) {\\n         return new CubeInstanceResponse(cube, projectService.getProjectOfCube(cube.getName()));\\n     }\\n@@ -995,7 +982,7 @@ private NodeInfo generateNodeInfo(long cuboidId, int dimensionCount, long cubeQu\\n         long queryExactlyMatchCount = queryMatchMap == null || queryMatchMap.get(cuboidId) == null ? 0L\\n                 : queryMatchMap.get(cuboidId);\\n         boolean ifExist = currentCuboidSet.contains(cuboidId);\\n-        long rowCount = rowCountMap == null ? 0L : rowCountMap.get(cuboidId);\\n+        long rowCount = (rowCountMap == null || rowCountMap.size() == 0) ? 0L : rowCountMap.get(cuboidId);\\n \\n         NodeInfo node = new NodeInfo();\\n         node.setId(cuboidId);\\n@@ -1044,9 +1031,10 @@ public Map<Long, Long> getCuboidHitFrequency(String cubeName, boolean isCuboidSo\\n         String table = getMetricsManager().getSystemTableFromSubject(getConfig().getKylinMetricsSubjectQueryCube());\\n         String sql = \"select \" + cuboidColumn + \", sum(\" + hitMeasure + \")\" \/\/\\n                 + \" from \" + table\/\/\\n-                + \" where \" + QueryCubePropertyEnum.CUBE.toString() + \" = \\'\" + cubeName + \"\\'\" \/\/\\n+                + \" where \" + QueryCubePropertyEnum.CUBE.toString() + \" = ?\" \/\/\\n                 + \" group by \" + cuboidColumn;\\n-        List<List<String>> orgHitFrequency = queryService.querySystemCube(sql).getResults();\\n+\\n+        List<List<String>> orgHitFrequency = getPrepareQueryResult(cubeName, sql);\\n         return formatQueryCount(orgHitFrequency);\\n     }\\n \\n@@ -1058,9 +1046,10 @@ public Map<Long, Map<Long, Pair<Long, Long>>> getCuboidRollingUpStats(String cub\\n         String table = getMetricsManager().getSystemTableFromSubject(getConfig().getKylinMetricsSubjectQueryCube());\\n         String sql = \"select \" + cuboidSource + \", \" + cuboidTgt + \", avg(\" + aggCount + \"), avg(\" + returnCount + \")\"\/\/\\n                 + \" from \" + table \/\/\\n-                + \" where \" + QueryCubePropertyEnum.CUBE.toString() + \" = \\'\" + cubeName + \"\\' \" \/\/\\n+                + \" where \" + QueryCubePropertyEnum.CUBE.toString() + \" = ?\" \/\/\\n                 + \" group by \" + cuboidSource + \", \" + cuboidTgt;\\n-        List<List<String>> orgRollingUpCount = queryService.querySystemCube(sql).getResults();\\n+\\n+        List<List<String>> orgRollingUpCount = getPrepareQueryResult(cubeName, sql);\\n         return formatRollingUpStats(orgRollingUpCount);\\n     }\\n \\n@@ -1070,13 +1059,27 @@ public Map<Long, Long> getCuboidQueryMatchCount(String cubeName) {\\n         String table = getMetricsManager().getSystemTableFromSubject(getConfig().getKylinMetricsSubjectQueryCube());\\n         String sql = \"select \" + cuboidSource + \", sum(\" + hitMeasure + \")\" \/\/\\n                 + \" from \" + table \/\/\\n-                + \" where \" + QueryCubePropertyEnum.CUBE.toString() + \" = \\'\" + cubeName + \"\\'\" \/\/\\n+                + \" where \" + QueryCubePropertyEnum.CUBE.toString() + \" = ?\" \/\/\\n                 + \" and \" + QueryCubePropertyEnum.IF_MATCH.toString() + \" = true\" \/\/\\n                 + \" group by \" + cuboidSource;\\n-        List<List<String>> orgMatchHitFrequency = queryService.querySystemCube(sql).getResults();\\n+\\n+        List<List<String>> orgMatchHitFrequency = getPrepareQueryResult(cubeName, sql);\\n         return formatQueryCount(orgMatchHitFrequency);\\n     }\\n \\n+    private List<List<String>> getPrepareQueryResult(String cubeName, String sql) {\\n+        PrepareSqlRequest sqlRequest = new PrepareSqlRequest();\\n+        sqlRequest.setProject(MetricsManager.SYSTEM_PROJECT);\\n+        PrepareSqlRequest.StateParam[] params = new PrepareSqlRequest.StateParam[1];\\n+        params[0] = new PrepareSqlRequest.StateParam();\\n+        params[0].setClassName(\"java.lang.String\");\\n+        params[0].setValue(cubeName);\\n+        sqlRequest.setParams(params);\\n+        sqlRequest.setSql(sql);\\n+\\n+        return queryService.doQueryWithCache(sqlRequest, false).getResults();\\n+    }\\n+\\n     @PreAuthorize(Constant.ACCESS_HAS_ROLE_ADMIN\\n             + \" or hasPermission(#cube, \\'ADMINISTRATION\\') or hasPermission(#cube, \\'MANAGEMENT\\')\")\\n     public void migrateCube(CubeInstance cube, String projectName) {\\n@@ -1114,4 +1117,22 @@ public void migrateCube(CubeInstance cube, String projectName) {\\n             throw new InternalErrorException(\"Failed to perform one-click migrating\", e);\\n         }\\n     }\\n+\\n+    private class HTableInfoSyncListener extends Broadcaster.Listener {\\n+        @Override\\n+        public void onClearAll(Broadcaster broadcaster) throws IOException {\\n+            htableInfoCache.invalidateAll();\\n+        }\\n+\\n+        @Override\\n+        public void onEntityChange(Broadcaster broadcaster, String entity, Broadcaster.Event event, String cacheKey)\\n+                throws IOException {\\n+            String cubeName = cacheKey;\\n+            String keyPrefix = cubeName + \"\/\";\\n+            for (String k : htableInfoCache.asMap().keySet()) {\\n+                if (k.startsWith(keyPrefix))\\n+                    htableInfoCache.invalidate(k);\\n+            }\\n+        }\\n+    }\\n }'}}",
            "message_norm":"fix sql injection issue",
            "language":"fr",
            "entities":"[('fix', 'ACTION', ''), ('sql injection', 'SECWORD', ''), ('issue', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server-base\/src\/main\/java\/org\/apache\/kylin\/rest\/service\/CubeService.java'])",
            "num_files":1.0,
            "patch_content":"From e373c64c96a54a7abfe4bccb82e8feb60db04749 Mon Sep 17 00:00:00 2001\nFrom: nichunen <nic@apache.org>\nDate: Fri, 7 Feb 2020 20:22:59 +0800\nSubject: [PATCH] Fix sql injection issue\n\n---\n ...\/kylin\/rest\/service\/CubeService.java       | 81 ++++++++++++-------\n 1 file changed, 51 insertions(+), 30 deletions(-)\n\ndiff --git a\/server-base\/src\/main\/java\/org\/apache\/kylin\/rest\/service\/CubeService.java b\/server-base\/src\/main\/java\/org\/apache\/kylin\/rest\/service\/CubeService.java\nindex 4fb258029cc..11b06a119f4 100644\n--- a\/server-base\/src\/main\/java\/org\/apache\/kylin\/rest\/service\/CubeService.java\n+++ b\/server-base\/src\/main\/java\/org\/apache\/kylin\/rest\/service\/CubeService.java\n@@ -71,6 +71,7 @@\n import org.apache.kylin.metadata.project.RealizationEntry;\n import org.apache.kylin.metadata.realization.RealizationStatusEnum;\n import org.apache.kylin.metadata.realization.RealizationType;\n+import org.apache.kylin.metrics.MetricsManager;\n import org.apache.kylin.metrics.property.QueryCubePropertyEnum;\n import org.apache.kylin.rest.constant.Constant;\n import org.apache.kylin.rest.exception.BadRequestException;\n@@ -79,6 +80,7 @@\n import org.apache.kylin.rest.msg.Message;\n import org.apache.kylin.rest.msg.MsgPicker;\n import org.apache.kylin.rest.request.MetricsRequest;\n+import org.apache.kylin.rest.request.PrepareSqlRequest;\n import org.apache.kylin.rest.response.CubeInstanceResponse;\n import org.apache.kylin.rest.response.CuboidTreeResponse;\n import org.apache.kylin.rest.response.CuboidTreeResponse.NodeInfo;\n@@ -544,7 +546,8 @@ public HBaseResponse getHTableInfo(String cubeName, String tableName) throws IOE\n \n         hr = new HBaseResponse();\n         CubeInstance cube = CubeManager.getInstance(getConfig()).getCube(cubeName);\n-        if (cube.getStorageType() == IStorageAware.ID_HBASE || cube.getStorageType() == IStorageAware.ID_SHARDED_HBASE || cube.getStorageType() == IStorageAware.ID_REALTIME_AND_HBASE) {\n+        if (cube.getStorageType() == IStorageAware.ID_HBASE || cube.getStorageType() == IStorageAware.ID_SHARDED_HBASE\n+                || cube.getStorageType() == IStorageAware.ID_REALTIME_AND_HBASE) {\n             try {\n                 logger.debug(\"Loading HTable info \" + cubeName + \", \" + tableName);\n \n@@ -633,7 +636,8 @@ private void cleanSegmentStorage(List<CubeSegment> toRemoveSegs) throws IOExcept\n             List<String> toDelHDFSPaths = Lists.newArrayListWithCapacity(toRemoveSegs.size());\n             for (CubeSegment seg : toRemoveSegs) {\n                 toDropHTables.add(seg.getStorageLocationIdentifier());\n-                toDelHDFSPaths.add(JobBuilderSupport.getJobWorkingDir(seg.getConfig().getHdfsWorkingDirectory(), seg.getLastBuildJobID()));\n+                toDelHDFSPaths.add(JobBuilderSupport.getJobWorkingDir(seg.getConfig().getHdfsWorkingDirectory(),\n+                        seg.getLastBuildJobID()));\n             }\n \n             StorageCleanUtil.dropHTables(new HBaseAdmin(HBaseConnection.getCurrentHBaseConfiguration()), toDropHTables);\n@@ -763,10 +767,12 @@ public String mergeCubeSegment(String cubeName) {\n     }\n \n     \/\/Don't merge the job that has been discarded manually before\n-    private boolean isMergingJobBeenDiscarded(CubeInstance cubeInstance, String cubeName, String projectName, SegmentRange offsets) {\n+    private boolean isMergingJobBeenDiscarded(CubeInstance cubeInstance, String cubeName, String projectName,\n+            SegmentRange offsets) {\n         SegmentRange.TSRange tsRange = new SegmentRange.TSRange((Long) offsets.start.v, (Long) offsets.end.v);\n         String segmentName = CubeSegment.makeSegmentName(tsRange, null, cubeInstance.getModel());\n-        final List<CubingJob> jobInstanceList = jobService.listJobsByRealizationName(cubeName, projectName, EnumSet.of(ExecutableState.DISCARDED));\n+        final List<CubingJob> jobInstanceList = jobService.listJobsByRealizationName(cubeName, projectName,\n+                EnumSet.of(ExecutableState.DISCARDED));\n         for (CubingJob cubingJob : jobInstanceList) {\n             if (cubingJob.getSegmentName().equals(segmentName)) {\n                 logger.debug(\"Merge job {} has been discarded before, will not merge.\", segmentName);\n@@ -777,7 +783,6 @@ private boolean isMergingJobBeenDiscarded(CubeInstance cubeInstance, String cube\n         return false;\n     }\n \n-\n     public void validateCubeDesc(CubeDesc desc, boolean isDraft) {\n         Message msg = MsgPicker.getMsg();\n \n@@ -931,24 +936,6 @@ public void afterPropertiesSet() throws Exception {\n         Broadcaster.getInstance(getConfig()).registerStaticListener(new HTableInfoSyncListener(), \"cube\");\n     }\n \n-    private class HTableInfoSyncListener extends Broadcaster.Listener {\n-        @Override\n-        public void onClearAll(Broadcaster broadcaster) throws IOException {\n-            htableInfoCache.invalidateAll();\n-        }\n-\n-        @Override\n-        public void onEntityChange(Broadcaster broadcaster, String entity, Broadcaster.Event event, String cacheKey)\n-                throws IOException {\n-            String cubeName = cacheKey;\n-            String keyPrefix = cubeName + \"\/\";\n-            for (String k : htableInfoCache.asMap().keySet()) {\n-                if (k.startsWith(keyPrefix))\n-                    htableInfoCache.invalidate(k);\n-            }\n-        }\n-    }\n-\n     public CubeInstanceResponse createCubeInstanceResponse(CubeInstance cube) {\n         return new CubeInstanceResponse(cube, projectService.getProjectOfCube(cube.getName()));\n     }\n@@ -995,7 +982,7 @@ private NodeInfo generateNodeInfo(long cuboidId, int dimensionCount, long cubeQu\n         long queryExactlyMatchCount = queryMatchMap == null || queryMatchMap.get(cuboidId) == null ? 0L\n                 : queryMatchMap.get(cuboidId);\n         boolean ifExist = currentCuboidSet.contains(cuboidId);\n-        long rowCount = rowCountMap == null ? 0L : rowCountMap.get(cuboidId);\n+        long rowCount = (rowCountMap == null || rowCountMap.size() == 0) ? 0L : rowCountMap.get(cuboidId);\n \n         NodeInfo node = new NodeInfo();\n         node.setId(cuboidId);\n@@ -1044,9 +1031,10 @@ public Map<Long, Long> getCuboidHitFrequency(String cubeName, boolean isCuboidSo\n         String table = getMetricsManager().getSystemTableFromSubject(getConfig().getKylinMetricsSubjectQueryCube());\n         String sql = \"select \" + cuboidColumn + \", sum(\" + hitMeasure + \")\" \/\/\n                 + \" from \" + table\/\/\n-                + \" where \" + QueryCubePropertyEnum.CUBE.toString() + \" = '\" + cubeName + \"'\" \/\/\n+                + \" where \" + QueryCubePropertyEnum.CUBE.toString() + \" = ?\" \/\/\n                 + \" group by \" + cuboidColumn;\n-        List<List<String>> orgHitFrequency = queryService.querySystemCube(sql).getResults();\n+\n+        List<List<String>> orgHitFrequency = getPrepareQueryResult(cubeName, sql);\n         return formatQueryCount(orgHitFrequency);\n     }\n \n@@ -1058,9 +1046,10 @@ public Map<Long, Map<Long, Pair<Long, Long>>> getCuboidRollingUpStats(String cub\n         String table = getMetricsManager().getSystemTableFromSubject(getConfig().getKylinMetricsSubjectQueryCube());\n         String sql = \"select \" + cuboidSource + \", \" + cuboidTgt + \", avg(\" + aggCount + \"), avg(\" + returnCount + \")\"\/\/\n                 + \" from \" + table \/\/\n-                + \" where \" + QueryCubePropertyEnum.CUBE.toString() + \" = '\" + cubeName + \"' \" \/\/\n+                + \" where \" + QueryCubePropertyEnum.CUBE.toString() + \" = ?\" \/\/\n                 + \" group by \" + cuboidSource + \", \" + cuboidTgt;\n-        List<List<String>> orgRollingUpCount = queryService.querySystemCube(sql).getResults();\n+\n+        List<List<String>> orgRollingUpCount = getPrepareQueryResult(cubeName, sql);\n         return formatRollingUpStats(orgRollingUpCount);\n     }\n \n@@ -1070,13 +1059,27 @@ public Map<Long, Long> getCuboidQueryMatchCount(String cubeName) {\n         String table = getMetricsManager().getSystemTableFromSubject(getConfig().getKylinMetricsSubjectQueryCube());\n         String sql = \"select \" + cuboidSource + \", sum(\" + hitMeasure + \")\" \/\/\n                 + \" from \" + table \/\/\n-                + \" where \" + QueryCubePropertyEnum.CUBE.toString() + \" = '\" + cubeName + \"'\" \/\/\n+                + \" where \" + QueryCubePropertyEnum.CUBE.toString() + \" = ?\" \/\/\n                 + \" and \" + QueryCubePropertyEnum.IF_MATCH.toString() + \" = true\" \/\/\n                 + \" group by \" + cuboidSource;\n-        List<List<String>> orgMatchHitFrequency = queryService.querySystemCube(sql).getResults();\n+\n+        List<List<String>> orgMatchHitFrequency = getPrepareQueryResult(cubeName, sql);\n         return formatQueryCount(orgMatchHitFrequency);\n     }\n \n+    private List<List<String>> getPrepareQueryResult(String cubeName, String sql) {\n+        PrepareSqlRequest sqlRequest = new PrepareSqlRequest();\n+        sqlRequest.setProject(MetricsManager.SYSTEM_PROJECT);\n+        PrepareSqlRequest.StateParam[] params = new PrepareSqlRequest.StateParam[1];\n+        params[0] = new PrepareSqlRequest.StateParam();\n+        params[0].setClassName(\"java.lang.String\");\n+        params[0].setValue(cubeName);\n+        sqlRequest.setParams(params);\n+        sqlRequest.setSql(sql);\n+\n+        return queryService.doQueryWithCache(sqlRequest, false).getResults();\n+    }\n+\n     @PreAuthorize(Constant.ACCESS_HAS_ROLE_ADMIN\n             + \" or hasPermission(#cube, 'ADMINISTRATION') or hasPermission(#cube, 'MANAGEMENT')\")\n     public void migrateCube(CubeInstance cube, String projectName) {\n@@ -1114,4 +1117,22 @@ public void migrateCube(CubeInstance cube, String projectName) {\n             throw new InternalErrorException(\"Failed to perform one-click migrating\", e);\n         }\n     }\n+\n+    private class HTableInfoSyncListener extends Broadcaster.Listener {\n+        @Override\n+        public void onClearAll(Broadcaster broadcaster) throws IOException {\n+            htableInfoCache.invalidateAll();\n+        }\n+\n+        @Override\n+        public void onEntityChange(Broadcaster broadcaster, String entity, Broadcaster.Event event, String cacheKey)\n+                throws IOException {\n+            String cubeName = cacheKey;\n+            String keyPrefix = cubeName + \"\/\";\n+            for (String k : htableInfoCache.asMap().keySet()) {\n+                if (k.startsWith(keyPrefix))\n+                    htableInfoCache.invalidate(k);\n+            }\n+        }\n+    }\n }"
        },
        {
            "index":229,
            "vuln_id":"GHSA-qfxv-qqvg-24pg",
            "cwe_id":"{'CWE-78'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/Turistforeningen\/node-im-metadata\/commit\/ea15dddbe0f65694bfde36b78dd488e90f246639'}",
            "dataset":"osv",
            "summary":"OS Command Injection in im-metadata im-metadata through 3.0.1 allows remote attackers to execute arbitrary commands via the \"exec\" argument. It is possible to inject arbitrary commands as part of the metadata options which is given to the \"exec\" function.",
            "published_date":"2021-04-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/Turistforeningen\/node-im-metadata",
            "commit_href":"https:\/\/github.com\/Turistforeningen\/node-im-metadata\/commit\/ea15dddbe0f65694bfde36b78dd488e90f246639",
            "commit_sha":"ea15dddbe0f65694bfde36b78dd488e90f246639",
            "patch":"SINGLE",
            "chain_ord":"['ea15dddbe0f65694bfde36b78dd488e90f246639']",
            "before_first_fix_commit":"{'049ce24dbb4302811b9247444347da6561605a8a'}",
            "last_fix_commit":"ea15dddbe0f65694bfde36b78dd488e90f246639",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/03\/2020, 21:26:09",
            "message":"fix: check path argument before processing (#10)\n\nhotfix to re mediate command injection",
            "author":"Sam Sanoop",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 6, 'total': 15}",
            "files":"{'index.js': {'additions': 9, 'deletions': 6, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Turistforeningen\/node-im-metadata\/raw\/ea15dddbe0f65694bfde36b78dd488e90f246639\/index.js', 'patch': \"@@ -9,15 +9,18 @@ module.exports = function(path, opts, cb) {\\n     opts = {};\\n   }\\n \\n-  var cmd = module.exports.cmd(path, opts);\\n-  opts.timeout = opts.timeout || 5000;\\n-\\n-  exec(cmd, opts, function(e, stdout, stderr) {\\n-    if (e) { return cb(e); }\\n+  if(\/;|&|`|\\\\$|\\\\(|\\\\)|\\\\|\\\\||\\\\||!|>|<|\\\\?|\\\\${\/g.test(JSON.stringify(path))) {\\n+    console.log('Input Validation failed, Suspicious Characters found');\\n+  } else {\\n+    var cmd = module.exports.cmd(path, opts);\\n+    opts.timeout = opts.timeout || 5000;\\n+    exec(cmd, opts, function(e, stdout, stderr) {\\n+      if (e) { return cb(e); }\\n     if (stderr) { return cb(new Error(stderr)); }\\n \\n-    return cb(null, module.exports.parse(path, stdout, opts));\\n+      return cb(null, module.exports.parse(path, stdout, opts));\\n   });\\n+}\\n };\\n \\n module.exports.cmd = function(path, opts) {\"}}",
            "message_norm":"fix: check path argument before processing (#10)\n\nhotfix to re mediate command injection",
            "language":"en",
            "entities":"[('#10', 'ISSUE', ''), ('hotfix', 'ACTION', ''), ('command injection', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0,
            "patch_content":"From ea15dddbe0f65694bfde36b78dd488e90f246639 Mon Sep 17 00:00:00 2001\nFrom: Sam Sanoop <sams@snyk.io>\nDate: Mon, 3 Feb 2020 21:26:09 +0000\nSubject: [PATCH] fix: check path argument before processing (#10)\n\nhotfix to re mediate command injection\n---\n index.js | 15 +++++++++------\n 1 file changed, 9 insertions(+), 6 deletions(-)\n\ndiff --git a\/index.js b\/index.js\nindex d85f5ff..54b8ed6 100644\n--- a\/index.js\n+++ b\/index.js\n@@ -9,15 +9,18 @@ module.exports = function(path, opts, cb) {\n     opts = {};\n   }\n \n-  var cmd = module.exports.cmd(path, opts);\n-  opts.timeout = opts.timeout || 5000;\n-\n-  exec(cmd, opts, function(e, stdout, stderr) {\n-    if (e) { return cb(e); }\n+  if(\/;|&|`|\\$|\\(|\\)|\\|\\||\\||!|>|<|\\?|\\${\/g.test(JSON.stringify(path))) {\n+    console.log('Input Validation failed, Suspicious Characters found');\n+  } else {\n+    var cmd = module.exports.cmd(path, opts);\n+    opts.timeout = opts.timeout || 5000;\n+    exec(cmd, opts, function(e, stdout, stderr) {\n+      if (e) { return cb(e); }\n     if (stderr) { return cb(new Error(stderr)); }\n \n-    return cb(null, module.exports.parse(path, stdout, opts));\n+      return cb(null, module.exports.parse(path, stdout, opts));\n   });\n+}\n };\n \n module.exports.cmd = function(path, opts) {"
        },
        {
            "index":37,
            "vuln_id":"GHSA-2cqg-q7jm-j35c",
            "cwe_id":"{'CWE-79'}",
            "score":3.9,
            "chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/9ed1442bd124710f4178992cc4eca5236c7396b9'}",
            "dataset":"osv",
            "summary":"snipe-it is vulnerable to Cross-site Scripting snipe-it is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting').",
            "published_date":"2021-11-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/snipe\/snipe-it",
            "commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/9ed1442bd124710f4178992cc4eca5236c7396b9",
            "commit_sha":"9ed1442bd124710f4178992cc4eca5236c7396b9",
            "patch":"SINGLE",
            "chain_ord":"['9ed1442bd124710f4178992cc4eca5236c7396b9']",
            "before_first_fix_commit":"{'edf98cb7951a922cdef7505e1efd115f92d1afd9', '3ea209a507fbcc992e0a9152e2074709e8459b47'}",
            "last_fix_commit":"9ed1442bd124710f4178992cc4eca5236c7396b9",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/09\/2021, 04:32:02",
            "message":"Merge pull request #10286 from uberbrady\/fix_bulk_audit_xss\n\nEscape asset_tag attribute at controller level for bulk checkout",
            "author":"snipe",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'app\/Http\/Controllers\/Api\/AssetsController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/9ed1442bd124710f4178992cc4eca5236c7396b9\/app%2FHttp%2FControllers%2FApi%2FAssetsController.php', 'patch': \"@@ -910,7 +910,7 @@ public function audit(Request $request) {\\n             }\\n         }\\n \\n-        return response()->json(Helper::formatStandardApiResponse('error', ['asset_tag'=> e($request->input('asset_tag'))], 'Asset with tag '.$request->input('asset_tag').' not found'));\\n+        return response()->json(Helper::formatStandardApiResponse('error', ['asset_tag'=> e($request->input('asset_tag'))], 'Asset with tag '.e($request->input('asset_tag')).' not found'));\"}}",
            "message_norm":"merge pull request #10286 from uberbrady\/fix_bulk_audit_xss\n\nescape asset_tag attribute at controller level for bulk checkout",
            "language":"en",
            "entities":"[('#10286', 'ISSUE', ''), ('fix_bulk_audit_xss', 'SECWORD', ''), ('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/Http\/Controllers\/Api\/AssetsController.php'])",
            "num_files":1.0,
            "patch_content":"From 3ea209a507fbcc992e0a9152e2074709e8459b47 Mon Sep 17 00:00:00 2001\nFrom: Brady Wetherington <bwetherington@grokability.com>\nDate: Mon, 8 Nov 2021 20:27:43 -0800\nSubject: [PATCH] Escape asset_tag attribute at controller level for\n consumption in bulk checkout\n\n---\n app\/Http\/Controllers\/Api\/AssetsController.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/app\/Http\/Controllers\/Api\/AssetsController.php b\/app\/Http\/Controllers\/Api\/AssetsController.php\nindex db1b1404ecd0..a9362188c186 100644\n--- a\/app\/Http\/Controllers\/Api\/AssetsController.php\n+++ b\/app\/Http\/Controllers\/Api\/AssetsController.php\n@@ -910,7 +910,7 @@ public function audit(Request $request) {\n             }\n         }\n \n-        return response()->json(Helper::formatStandardApiResponse('error', ['asset_tag'=> e($request->input('asset_tag'))], 'Asset with tag '.$request->input('asset_tag').' not found'));\n+        return response()->json(Helper::formatStandardApiResponse('error', ['asset_tag'=> e($request->input('asset_tag'))], 'Asset with tag '.e($request->input('asset_tag')).' not found'));"
        },
        {
            "index":309,
            "vuln_id":"GHSA-jc83-cpf9-q7c6",
            "cwe_id":"{'CWE-697'}",
            "score":8.6,
            "chain":"{'https:\/\/github.com\/simpleledger\/slpjs\/commit\/3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754'}",
            "dataset":"osv",
            "summary":"False-negative validation results in MINT transactions with invalid baton ### Impact\nUsers could experience false-negative validation outcomes for [MINT](https:\/\/github.com\/simpleledger\/slp-specifications\/blob\/master\/slp-token-type-1.md#mint---extended-minting-transaction) transaction operations.  A poorly implemented SLP wallet could allow spending of the affected tokens which would result in the destruction of a user's minting baton.\n\n### Patches\nnpm package [slpjs](https:\/\/www.npmjs.com\/package\/slpjs) has been patched and published as version 0.27.2.\n\n\n### Workarounds\nUpgrade to slpjs 0.27.2.\n\n### References\n* slpjs [commit](https:\/\/github.com\/simpleledger\/slpjs\/commit\/3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [slp-validate](https:\/\/github.com\/simpleledger\/slp-validate\/issues) or [slpjs](https:\/\/github.com\/simpleledger\/slpjs\/issues)",
            "published_date":"2020-05-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/simpleledger\/slpjs",
            "commit_href":"https:\/\/github.com\/simpleledger\/slpjs\/commit\/3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754",
            "commit_sha":"3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754",
            "patch":"SINGLE",
            "chain_ord":"['3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754']",
            "before_first_fix_commit":"{'2653647c7b9ceb7a9c863f9f8b70a5d638634bf5'}",
            "last_fix_commit":"3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/29\/2020, 16:48:21",
            "message":"fix false negative case for MINT transactions\n\nSee the newly added unit test case for this issue.\nCurrently there are 151 unit tests.",
            "author":"James Cramer",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 6, 'total': 16}",
            "files":"{'lib\/localvalidator.ts': {'additions': 10, 'deletions': 6, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/simpleledger\/slpjs\/raw\/3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754\/lib%2Flocalvalidator.ts', 'patch': '@@ -282,10 +282,10 @@ export class LocalValidator implements SlpValidator {\\n                     }\\n                 } catch (_) {}\\n             }\\n-            if (this.cachedValidations[txid].parents.length !== 1) {\\n+            if (this.cachedValidations[txid].parents.length < 1) {\\n                 this.cachedValidations[txid].validity = false;\\n                 this.cachedValidations[txid].waiting = false;\\n-                this.cachedValidations[txid].invalidReason = \"MINT transaction must have 1 valid baton parent.\";\\n+                this.cachedValidations[txid].invalidReason = \"MINT transaction must have at least 1 candidate baton parent input.\";\\n                 return this.cachedValidations[txid].validity!;\\n             }\\n         }\\n@@ -342,10 +342,14 @@ export class LocalValidator implements SlpValidator {\\n         \/\/ Set validity validation-cache for parents, and handle MINT condition with no valid input\\n         \/\/ we don\\'t need to check proper token id since we only added parents with same ID in above steps.\\n         const parentTxids = [...new Set(this.cachedValidations[txid].parents.map(p => p.txid))];\\n-        for (let i = 0; i < parentTxids.length; i++) {\\n-            const valid = await this.isValidSlpTxid(parentTxids[i]);\\n-            this.cachedValidations[txid].parents.filter(p => p.txid === parentTxids[i]).map(p => p.valid = valid);\\n-            if (this.cachedValidations[txid].details!.transactionType === SlpTransactionType.MINT && !valid) {\\n+        for (const id of parentTxids) {\\n+            const valid = await this.isValidSlpTxid(id);\\n+            this.cachedValidations[txid].parents.filter(p => p.txid === id).map(p => p.valid = valid);\\n+        }\\n+\\n+        \/\/ Check MINT for exactly 1 valid MINT baton\\n+        if (this.cachedValidations[txid].details!.transactionType === SlpTransactionType.MINT) {\\n+            if (this.cachedValidations[txid].parents.filter(p => p.valid && p.inputQty === null).length !== 1) {\\n                 this.cachedValidations[txid].validity = false;\\n                 this.cachedValidations[txid].waiting = false;\\n                 this.cachedValidations[txid].invalidReason = \"MINT transaction with invalid baton parent.\";'}}",
            "message_norm":"fix false negative case for mint transactions\n\nsee the newly added unit test case for this issue.\ncurrently there are 151 unit tests.",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('added', 'ACTION', ''), ('issue', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/localvalidator.ts'])",
            "num_files":1.0,
            "patch_content":"From 3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754 Mon Sep 17 00:00:00 2001\nFrom: James Cramer <jcramer@simpleledger.io>\nDate: Wed, 29 Apr 2020 12:48:21 -0400\nSubject: [PATCH] fix false negative case for MINT transactions\n\nSee the newly added unit test case for this issue.\nCurrently there are 151 unit tests.\n---\n lib\/localvalidator.ts | 16 ++++++++++------\n 1 file changed, 10 insertions(+), 6 deletions(-)\n\ndiff --git a\/lib\/localvalidator.ts b\/lib\/localvalidator.ts\nindex 39514c83..aa9d135a 100644\n--- a\/lib\/localvalidator.ts\n+++ b\/lib\/localvalidator.ts\n@@ -282,10 +282,10 @@ export class LocalValidator implements SlpValidator {\n                     }\n                 } catch (_) {}\n             }\n-            if (this.cachedValidations[txid].parents.length !== 1) {\n+            if (this.cachedValidations[txid].parents.length < 1) {\n                 this.cachedValidations[txid].validity = false;\n                 this.cachedValidations[txid].waiting = false;\n-                this.cachedValidations[txid].invalidReason = \"MINT transaction must have 1 valid baton parent.\";\n+                this.cachedValidations[txid].invalidReason = \"MINT transaction must have at least 1 candidate baton parent input.\";\n                 return this.cachedValidations[txid].validity!;\n             }\n         }\n@@ -342,10 +342,14 @@ export class LocalValidator implements SlpValidator {\n         \/\/ Set validity validation-cache for parents, and handle MINT condition with no valid input\n         \/\/ we don't need to check proper token id since we only added parents with same ID in above steps.\n         const parentTxids = [...new Set(this.cachedValidations[txid].parents.map(p => p.txid))];\n-        for (let i = 0; i < parentTxids.length; i++) {\n-            const valid = await this.isValidSlpTxid(parentTxids[i]);\n-            this.cachedValidations[txid].parents.filter(p => p.txid === parentTxids[i]).map(p => p.valid = valid);\n-            if (this.cachedValidations[txid].details!.transactionType === SlpTransactionType.MINT && !valid) {\n+        for (const id of parentTxids) {\n+            const valid = await this.isValidSlpTxid(id);\n+            this.cachedValidations[txid].parents.filter(p => p.txid === id).map(p => p.valid = valid);\n+        }\n+\n+        \/\/ Check MINT for exactly 1 valid MINT baton\n+        if (this.cachedValidations[txid].details!.transactionType === SlpTransactionType.MINT) {\n+            if (this.cachedValidations[txid].parents.filter(p => p.valid && p.inputQty === null).length !== 1) {\n                 this.cachedValidations[txid].validity = false;\n                 this.cachedValidations[txid].waiting = false;\n                 this.cachedValidations[txid].invalidReason = \"MINT transaction with invalid baton parent.\";"
        },
        {
            "index":348,
            "vuln_id":"GHSA-h4j5-c7cj-74xg",
            "cwe_id":"{'CWE-94'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/mjwwit\/node-XMLHttpRequest\/commit\/ee1e81fc67729c7c0eba5537ed7fe1e30a6b3291', 'https:\/\/github.com\/driverdan\/node-XMLHttpRequest\/commit\/983cfc244c7567ad6a59e366e55a8037e0497fe6'}",
            "dataset":"osv",
            "summary":"Arbitrary Code Injection This affects the package xmlhttprequest before 1.7.0; all versions of package xmlhttprequest-ssl. Provided requests are sent synchronously (async=False on xhr.open), malicious user input flowing into xhr.send could result in arbitrary code being injected and run.",
            "published_date":"2021-05-04",
            "chain_len":2,
            "project":"https:\/\/github.com\/driverdan\/node-XMLHttpRequest",
            "commit_href":"https:\/\/github.com\/driverdan\/node-XMLHttpRequest\/commit\/983cfc244c7567ad6a59e366e55a8037e0497fe6",
            "commit_sha":"983cfc244c7567ad6a59e366e55a8037e0497fe6",
            "patch":"MULTI",
            "chain_ord":"['983cfc244c7567ad6a59e366e55a8037e0497fe6', 'ee1e81fc67729c7c0eba5537ed7fe1e30a6b3291']",
            "before_first_fix_commit":"{'bf53329b61ca6afc5d28f6b8d2dc2e3ca740a9b2'}",
            "last_fix_commit":"ee1e81fc67729c7c0eba5537ed7fe1e30a6b3291",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/19\/2013, 02:34:33",
            "message":"fix for backslashes in data not encoding correctly",
            "author":"Kris Nye",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lib\/XMLHttpRequest.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/driverdan\/node-XMLHttpRequest\/raw\/983cfc244c7567ad6a59e366e55a8037e0497fe6\/lib%2FXMLHttpRequest.js', 'patch': '@@ -477,7 +477,7 @@ exports.XMLHttpRequest = function() {\\n         + \"fs.writeFileSync(\\'\" + contentFile + \"\\', \\'NODE-XMLHTTPREQUEST-ERROR:\\' + JSON.stringify(error), \\'utf8\\');\"\\n         + \"fs.unlinkSync(\\'\" + syncFile + \"\\');\"\\n         + \"});\"\\n-        + (data ? \"req.write(\\'\" + data.replace(\/\\'\/g, \"\\\\\\\\\\'\") + \"\\');\":\"\")\\n+        + (data ? \"req.write(\\'\" + JSON.stringify(data).slice(1,-1).replace(\/\\'\/g, \"\\\\\\\\\\'\") + \"\\');\":\"\")\\n         + \"req.end();\";\\n       \/\/ Start the other Node Process, executing this string\\n       var syncProc = spawn(process.argv[0], [\"-e\", execString]);'}}",
            "message_norm":"fix for backslashes in data not encoding correctly",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('encoding', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/XMLHttpRequest.js'])",
            "num_files":1.0,
            "patch_content":"From 983cfc244c7567ad6a59e366e55a8037e0497fe6 Mon Sep 17 00:00:00 2001\nFrom: Kris Nye <krisnye@gmail.com>\nDate: Thu, 18 Jul 2013 19:34:33 -0700\nSubject: [PATCH] fix for backslashes in data not encoding correctly\n\n---\n lib\/XMLHttpRequest.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/lib\/XMLHttpRequest.js b\/lib\/XMLHttpRequest.js\nindex 5c99b24..ab5727e 100644\n--- a\/lib\/XMLHttpRequest.js\n+++ b\/lib\/XMLHttpRequest.js\n@@ -477,7 +477,7 @@ exports.XMLHttpRequest = function() {\n         + \"fs.writeFileSync('\" + contentFile + \"', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');\"\n         + \"fs.unlinkSync('\" + syncFile + \"');\"\n         + \"});\"\n-        + (data ? \"req.write('\" + data.replace(\/'\/g, \"\\\\'\") + \"');\":\"\")\n+        + (data ? \"req.write('\" + JSON.stringify(data).slice(1,-1).replace(\/'\/g, \"\\\\'\") + \"');\":\"\")\n         + \"req.end();\";\n       \/\/ Start the other Node Process, executing this string\n       var syncProc = spawn(process.argv[0], [\"-e\", execString]);"
        },
        {
            "index":527,
            "vuln_id":"GHSA-vvg4-vgrv-xfr7",
            "cwe_id":"{'CWE-665'}",
            "score":6.3,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4504a081af71514bb1828048363e6540f797005b', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/14607c0707040d775e06b6817325640cb4b5864c'}",
            "dataset":"osv",
            "summary":"Incomplete validation in `tf.raw_ops.CTCLoss` ### Impact \nIncomplete validation in `tf.raw_ops.CTCLoss` allows an attacker to trigger an OOB read from heap:\n\n```python\nimport tensorflow as tf\n\ninputs = tf.constant([], shape=[10, 16, 0], dtype=tf.float32)\nlabels_indices = tf.constant([], shape=[8, 0], dtype=tf.int64)\nlabels_values = tf.constant([-100] * 8, shape=[8], dtype=tf.int32)\nsequence_length = tf.constant([-100] * 16, shape=[16], dtype=tf.int32)\n  \ntf.raw_ops.CTCLoss(inputs=inputs, labels_indices=labels_indices,\n                   labels_values=labels_values, sequence_length=sequence_length,\n                   preprocess_collapse_repeated=True, ctc_merge_repeated=False,\n                   ignore_longer_outputs_than_inputs=True)\n```   \n      \nAn attacker can also trigger a heap buffer overflow:\n\n```python\nimport tensorflow as tf\n\ninputs = tf.constant([], shape=[7, 2, 0], dtype=tf.float32)\nlabels_indices = tf.constant([-100, -100], shape=[2, 1], dtype=tf.int64)\nlabels_values = tf.constant([-100, -100], shape=[2], dtype=tf.int32)\nsequence_length = tf.constant([-100, -100], shape=[2], dtype=tf.int32)\n\ntf.raw_ops.CTCLoss(inputs=inputs, labels_indices=labels_indices,\n                   labels_values=labels_values, sequence_length=sequence_length,\n                   preprocess_collapse_repeated=False, ctc_merge_repeated=False,\n                   ignore_longer_outputs_than_inputs=False)\n```\n\nFinally, an attacker can trigger a null pointer dereference:\n\n```python \nimport tensorflow as tf\n\ninputs = tf.constant([], shape=[0, 2, 11], dtype=tf.float32)\nlabels_indices = tf.constant([], shape=[0, 2], dtype=tf.int64)\nlabels_values = tf.constant([], shape=[0], dtype=tf.int32)\nsequence_length = tf.constant([-100, -100], shape=[2], dtype=tf.int32)\n\ntf.raw_ops.CTCLoss(inputs=inputs, labels_indices=labels_indices,\n                   labels_values=labels_values, sequence_length=sequence_length,\n                   preprocess_collapse_repeated=False, ctc_merge_repeated=False,\n                   ignore_longer_outputs_than_inputs=False)\n```\n\n### Patches\nWe have patched the issue in GitHub commit[14607c0707040d775e06b6817325640cb4b5864c](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/14607c0707040d775e06b6817325640cb4b5864c) followed by GitHub commit [4504a081af71514bb1828048363e6540f797005b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4504a081af71514bb1828048363e6540f797005b).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick these commits on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/14607c0707040d775e06b6817325640cb4b5864c",
            "commit_sha":"14607c0707040d775e06b6817325640cb4b5864c",
            "patch":"MULTI",
            "chain_ord":"['4504a081af71514bb1828048363e6540f797005b', '14607c0707040d775e06b6817325640cb4b5864c']",
            "before_first_fix_commit":"{'8410ce671b48e96965a1e4a97017f8a5bbd03d3a'}",
            "last_fix_commit":"14607c0707040d775e06b6817325640cb4b5864c",
            "chain_ord_pos":2.0,
            "commit_datetime":"05\/06\/2021, 04:09:21",
            "message":"Fix nullptr deref in `tf.raw_ops.CTCLoss`.\n\nPiperOrigin-RevId: 372266334\nChange-Id: Ic52c3e9f13a38f54482d670907eda1688450862b",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/core\/kernels\/ctc_loss_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/14607c0707040d775e06b6817325640cb4b5864c\/tensorflow%2Fcore%2Fkernels%2Fctc_loss_op.cc', 'patch': '@@ -109,6 +109,9 @@ class CTCLossOp : public OpKernel {\\n \\n     const TensorShape& inputs_shape = inputs->shape();\\n     const int64 max_time = inputs_shape.dim_size(0);\\n+    OP_REQUIRES(ctx, max_time != 0,\\n+                errors::InvalidArgument(\\n+                    \"Max time or first dimension of input cannot be 0.\"));\\n     const int64 batch_size = inputs_shape.dim_size(1);\\n     const int64 num_classes_raw = inputs_shape.dim_size(2);\\n     OP_REQUIRES('}}",
            "message_norm":"fix nullptr deref in `tf.raw_ops.ctcloss`.\n\npiperorigin-revid: 372266334\nchange-id: ic52c3e9f13a38f54482d670907eda1688450862b",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('nullptr', 'SECWORD', ''), ('372266334', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/ctc_loss_op.cc'])",
            "num_files":1.0,
            "patch_content":"From 14607c0707040d775e06b6817325640cb4b5864c Mon Sep 17 00:00:00 2001\nFrom: Amit Patankar <amitpatankar@google.com>\nDate: Wed, 5 May 2021 21:09:21 -0700\nSubject: [PATCH] Fix nullptr deref in `tf.raw_ops.CTCLoss`.\n\nPiperOrigin-RevId: 372266334\nChange-Id: Ic52c3e9f13a38f54482d670907eda1688450862b\n---\n tensorflow\/core\/kernels\/ctc_loss_op.cc | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/ctc_loss_op.cc b\/tensorflow\/core\/kernels\/ctc_loss_op.cc\nindex b0e298a0f329f0..ca505e1db93145 100644\n--- a\/tensorflow\/core\/kernels\/ctc_loss_op.cc\n+++ b\/tensorflow\/core\/kernels\/ctc_loss_op.cc\n@@ -109,6 +109,9 @@ class CTCLossOp : public OpKernel {\n \n     const TensorShape& inputs_shape = inputs->shape();\n     const int64 max_time = inputs_shape.dim_size(0);\n+    OP_REQUIRES(ctx, max_time != 0,\n+                errors::InvalidArgument(\n+                    \"Max time or first dimension of input cannot be 0.\"));\n     const int64 batch_size = inputs_shape.dim_size(1);\n     const int64 num_classes_raw = inputs_shape.dim_size(2);\n     OP_REQUIRES("
        },
        {
            "index":822,
            "vuln_id":"GHSA-cqp5-m4pq-gfgp",
            "cwe_id":"{'CWE-471'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/jonschlinkert\/defaults-deep\/commit\/c873f341327ad885ff4d0f23b3d3bca31b0343e5'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in defaults-deep Versions of `default-deep` before 0.2.4 are vulnerable to prototype pollution\n\n\n## Recommendation\n\nUpdate to version 0.2.4 or later.",
            "published_date":"2018-07-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/jonschlinkert\/defaults-deep",
            "commit_href":"https:\/\/github.com\/jonschlinkert\/defaults-deep\/commit\/c873f341327ad885ff4d0f23b3d3bca31b0343e5",
            "commit_sha":"c873f341327ad885ff4d0f23b3d3bca31b0343e5",
            "patch":"SINGLE",
            "chain_ord":"['c873f341327ad885ff4d0f23b3d3bca31b0343e5']",
            "before_first_fix_commit":"{'aef804bf3e56484a6e463e35f5f74599523aee69'}",
            "last_fix_commit":"c873f341327ad885ff4d0f23b3d3bca31b0343e5",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/07\/2018, 16:52:35",
            "message":"exclude __proto__",
            "author":"doowb",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'index.js': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jonschlinkert\/defaults-deep\/raw\/c873f341327ad885ff4d0f23b3d3bca31b0343e5\/index.js', 'patch': \"@@ -16,6 +16,10 @@ function defaultsDeep(target, objects) {\\n \\n   function copy(target, current) {\\n     lazy.forOwn(current, function (value, key) {\\n+      if (key === '__proto__') {\\n+        return;\\n+      }\\n+\\n       var val = target[key];\\n       \/\/ add the missing property, or allow a null property to be updated\\n       if (val == null) {\"}}",
            "message_norm":"exclude __proto__",
            "language":"pt",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0,
            "patch_content":"From c873f341327ad885ff4d0f23b3d3bca31b0343e5 Mon Sep 17 00:00:00 2001\nFrom: doowb <brian.woodward@gmail.com>\nDate: Wed, 7 Feb 2018 11:52:35 -0500\nSubject: [PATCH] exclude __proto__\n\n---\n index.js | 4 ++++\n 1 file changed, 4 insertions(+)\n\ndiff --git a\/index.js b\/index.js\nindex 14474d5..452fa17 100644\n--- a\/index.js\n+++ b\/index.js\n@@ -16,6 +16,10 @@ function defaultsDeep(target, objects) {\n \n   function copy(target, current) {\n     lazy.forOwn(current, function (value, key) {\n+      if (key === '__proto__') {\n+        return;\n+      }\n+\n       var val = target[key];\n       \/\/ add the missing property, or allow a null property to be updated\n       if (val == null) {"
        },
        {
            "index":750,
            "vuln_id":"GHSA-hwch-749c-rv63",
            "cwe_id":"{'CWE-74'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/github\/hubot-scripts\/commit\/feee5abdb038a229a98969ae443cdb8a61747782'}",
            "dataset":"osv",
            "summary":"Potential Command Injection in hubot-scripts Versions 2.4.3 and earlier of hubot-scripts are vulnerable to a command injection vulnerablity in the `hubot-scripts\/package\/src\/scripts\/email.coffee` module.\n\n\n### Mitigating Factors\nThe email script is not enabled by default, it has to be manually added to hubot's list of loaded scripts.\n\n\n## Recommendation\n\nUpdate hubot-scripts to version 2.4.4 or later.",
            "published_date":"2020-08-31",
            "chain_len":1,
            "project":"https:\/\/github.com\/github\/hubot-scripts",
            "commit_href":"https:\/\/github.com\/github\/hubot-scripts\/commit\/feee5abdb038a229a98969ae443cdb8a61747782",
            "commit_sha":"feee5abdb038a229a98969ae443cdb8a61747782",
            "patch":"SINGLE",
            "chain_ord":"['feee5abdb038a229a98969ae443cdb8a61747782']",
            "before_first_fix_commit":"{'8f3dd0ab5af14664d317e4925f72aa3f78adb6e9'}",
            "last_fix_commit":"feee5abdb038a229a98969ae443cdb8a61747782",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/26\/2013, 19:00:24",
            "message":"Fix code execution issue in email command.",
            "author":"Neal Poole",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 4, 'total': 10}",
            "files":"{'src\/scripts\/email.coffee': {'additions': 6, 'deletions': 4, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/github\/hubot-scripts\/raw\/feee5abdb038a229a98969ae443cdb8a61747782\/src%2Fscripts%2Femail.coffee', 'patch': '@@ -18,16 +18,18 @@\\n \\n util = require \\'util\\'\\n child_process = require \\'child_process\\'\\n-exec = child_process.exec\\n \\n module.exports = (robot) ->\\n   emailTime = null\\n   sendEmail = (recipients, subject, msg, from) ->\\n-    mailCommand = \"\"\"echo \\'#{msg}\\' | mail -s \\'#{subject}\\' -r \\'#{from}\\' \\'#{recipients}\\'\"\"\"\\n-    exec mailCommand, (error, stdout, stderr) ->\\n+    mailArgs = [\\'-s\\', subject, \\'-a\\', \"From: #{from}\", \\'--\\']\\n+    mailArgs = mailArgs.concat recipients\\n+    p = child_process.execFile \\'mail\\', mailArgs, {}, (error, stdout, stderr) ->\\n       util.print \\'stdout: \\' + stdout\\n       util.print \\'stderr: \\' + stderr\\n+    p.stdin.write \"#{msg}\\\\n\"\\n+    p.stdin.end()\\n \\n   robot.respond \/email (.*) -s (.*) -m (.*)\/i, (msg) ->\\n-    sendEmail msg.match[1], msg.match[2], msg.match[3], msg.message.user.id\\n+    sendEmail msg.match[1].split(\" \"), msg.match[2], msg.match[3], msg.message.user.id\\n     msg.send \"email sent\"'}}",
            "message_norm":"fix code execution issue in email command.",
            "language":"fr",
            "entities":"[('fix', 'ACTION', ''), ('code execution', 'SECWORD', ''), ('issue', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/scripts\/email.coffee'])",
            "num_files":1.0,
            "patch_content":"From feee5abdb038a229a98969ae443cdb8a61747782 Mon Sep 17 00:00:00 2001\nFrom: Neal Poole <neal@cs.brown.edu>\nDate: Fri, 26 Apr 2013 15:00:24 -0400\nSubject: [PATCH] Fix code execution issue in email command.\n\n---\n src\/scripts\/email.coffee | 10 ++++++----\n 1 file changed, 6 insertions(+), 4 deletions(-)\n\ndiff --git a\/src\/scripts\/email.coffee b\/src\/scripts\/email.coffee\nindex c65c47f88..d6498f66b 100644\n--- a\/src\/scripts\/email.coffee\n+++ b\/src\/scripts\/email.coffee\n@@ -18,16 +18,18 @@\n \n util = require 'util'\n child_process = require 'child_process'\n-exec = child_process.exec\n \n module.exports = (robot) ->\n   emailTime = null\n   sendEmail = (recipients, subject, msg, from) ->\n-    mailCommand = \"\"\"echo '#{msg}' | mail -s '#{subject}' -r '#{from}' '#{recipients}'\"\"\"\n-    exec mailCommand, (error, stdout, stderr) ->\n+    mailArgs = ['-s', subject, '-a', \"From: #{from}\", '--']\n+    mailArgs = mailArgs.concat recipients\n+    p = child_process.execFile 'mail', mailArgs, {}, (error, stdout, stderr) ->\n       util.print 'stdout: ' + stdout\n       util.print 'stderr: ' + stderr\n+    p.stdin.write \"#{msg}\\n\"\n+    p.stdin.end()\n \n   robot.respond \/email (.*) -s (.*) -m (.*)\/i, (msg) ->\n-    sendEmail msg.match[1], msg.match[2], msg.match[3], msg.message.user.id\n+    sendEmail msg.match[1].split(\" \"), msg.match[2], msg.match[3], msg.message.user.id\n     msg.send \"email sent\""
        },
        {
            "index":127,
            "vuln_id":"GHSA-cf6r-3wgc-h863",
            "cwe_id":"{'CWE-502'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/FasterXML\/jackson-databind\/commit\/41b7f9b90149e9d44a65a8261a8deedc7186f6af', 'https:\/\/github.com\/FasterXML\/jackson-databind\/commit\/819cdbcab51c6da9fb896380f2d46e9b7d4fdc3b'}",
            "dataset":"osv",
            "summary":"Polymorphic deserialization of malicious object in jackson-databind A flaw was discovered in jackson-databind in versions before 2.9.10, 2.8.11.5 and 2.6.7.3, where it would permit polymorphic deserialization of a malicious object using commons-configuration 1 and 2 JNDI classes. An attacker could use this flaw to execute arbitrary code.",
            "published_date":"2020-05-15",
            "chain_len":2,
            "project":"https:\/\/github.com\/FasterXML\/jackson-databind",
            "commit_href":"https:\/\/github.com\/FasterXML\/jackson-databind\/commit\/41b7f9b90149e9d44a65a8261a8deedc7186f6af",
            "commit_sha":"41b7f9b90149e9d44a65a8261a8deedc7186f6af",
            "patch":"MULTI",
            "chain_ord":"['41b7f9b90149e9d44a65a8261a8deedc7186f6af', '819cdbcab51c6da9fb896380f2d46e9b7d4fdc3b']",
            "before_first_fix_commit":"{'41b7f9b90149e9d44a65a8261a8deedc7186f6af', 'f4f4a4e035ada20a532a5400e5f093a5a575a0ed'}",
            "last_fix_commit":"819cdbcab51c6da9fb896380f2d46e9b7d4fdc3b",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/20\/2019, 05:57:18",
            "message":"Actual #2462 fix (prev commit only updates release notes)",
            "author":"Tatu Saloranta",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 1, 'total': 6}",
            "files":"{'src\/main\/java\/com\/fasterxml\/jackson\/databind\/jsontype\/impl\/SubTypeValidator.java': {'additions': 5, 'deletions': 1, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/FasterXML\/jackson-databind\/raw\/41b7f9b90149e9d44a65a8261a8deedc7186f6af\/src%2Fmain%2Fjava%2Fcom%2Ffasterxml%2Fjackson%2Fdatabind%2Fjsontype%2Fimpl%2FSubTypeValidator.java', 'patch': '@@ -106,7 +106,11 @@\\n \\n         \/\/ [databind#2420]: CXF\/JAX-RS provider\/XSLT\\n         s.add(\"org.apache.cxf.jaxrs.provider.XSLTJaxbProvider\");\\n-        \\n+\\n+        \/\/ [databind#2462]: commons-configuration \/ -2\\n+        s.add(\"org.apache.commons.configuration.JNDIConfiguration\");\\n+        s.add(\"org.apache.commons.configuration2.JNDIConfiguration\");\\n+\\n         DEFAULT_NO_DESER_CLASS_NAMES = Collections.unmodifiableSet(s);\\n     }'}}",
            "message_norm":"actual #2462 fix (prev commit only updates release notes)",
            "language":"en",
            "entities":"[('#2462', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/com\/fasterxml\/jackson\/databind\/jsontype\/impl\/SubTypeValidator.java'])",
            "num_files":1.0,
            "patch_content":"From 41b7f9b90149e9d44a65a8261a8deedc7186f6af Mon Sep 17 00:00:00 2001\nFrom: Tatu Saloranta <tatu.saloranta@iki.fi>\nDate: Thu, 19 Sep 2019 22:57:18 -0700\nSubject: [PATCH] Actual #2462 fix (prev commit only updates release notes)\n\n---\n ...\/jackson\/databind\/jsontype\/impl\/SubTypeValidator.java    | 6 +++++-\n 1 file changed, 5 insertions(+), 1 deletion(-)\n\ndiff --git a\/src\/main\/java\/com\/fasterxml\/jackson\/databind\/jsontype\/impl\/SubTypeValidator.java b\/src\/main\/java\/com\/fasterxml\/jackson\/databind\/jsontype\/impl\/SubTypeValidator.java\nindex 594bb2029b..8117f11adb 100644\n--- a\/src\/main\/java\/com\/fasterxml\/jackson\/databind\/jsontype\/impl\/SubTypeValidator.java\n+++ b\/src\/main\/java\/com\/fasterxml\/jackson\/databind\/jsontype\/impl\/SubTypeValidator.java\n@@ -106,7 +106,11 @@ public class SubTypeValidator\n \n         \/\/ [databind#2420]: CXF\/JAX-RS provider\/XSLT\n         s.add(\"org.apache.cxf.jaxrs.provider.XSLTJaxbProvider\");\n-        \n+\n+        \/\/ [databind#2462]: commons-configuration \/ -2\n+        s.add(\"org.apache.commons.configuration.JNDIConfiguration\");\n+        s.add(\"org.apache.commons.configuration2.JNDIConfiguration\");\n+\n         DEFAULT_NO_DESER_CLASS_NAMES = Collections.unmodifiableSet(s);\n     }"
        },
        {
            "index":128,
            "vuln_id":"GHSA-pjxv-w3qj-j8m3",
            "cwe_id":"{'CWE-22'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/mguinness\/elFinder.AspNet\/commit\/675049b39284a9e84f0915c71d688da8ebc7d720'}",
            "dataset":"osv",
            "summary":"Directory Traversal in elFinder.AspNet This affects the package elFinder.AspNet before 1.1.1.\n The user-controlled file name is not properly sanitized before it is used to create a file system path.",
            "published_date":"2021-08-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/mguinness\/elFinder.AspNet",
            "commit_href":"https:\/\/github.com\/mguinness\/elFinder.AspNet\/commit\/675049b39284a9e84f0915c71d688da8ebc7d720",
            "commit_sha":"675049b39284a9e84f0915c71d688da8ebc7d720",
            "patch":"SINGLE",
            "chain_ord":"['675049b39284a9e84f0915c71d688da8ebc7d720']",
            "before_first_fix_commit":"{'8f2690712bd6cf417d897d70f734d6e972cf0071'}",
            "last_fix_commit":"675049b39284a9e84f0915c71d688da8ebc7d720",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/10\/2021, 01:28:34",
            "message":"Directory traversal fixes",
            "author":"mguinness",
            "comments":null,
            "stats":"{'additions': 16, 'deletions': 0, 'total': 16}",
            "files":"{'elFinder.AspNet\/Drivers\/FileSystem\/FileSystemDriver.cs': {'additions': 16, 'deletions': 0, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mguinness\/elFinder.AspNet\/raw\/675049b39284a9e84f0915c71d688da8ebc7d720\/elFinder.AspNet%2FDrivers%2FFileSystem%2FFileSystemDriver.cs', 'patch': '@@ -229,6 +229,12 @@ public async Task<ConnectorResult> ExtractAsync(FullPath fullPath, bool newFolde\\n                         string file = Path.Combine(rootPath, entry.FullName)\\n                              .Replace(\"\/\", separator).Replace(\"\\\\\\\\\", separator);\\n \\n+                        string destPath = Path.GetFullPath(file);\\n+                        if (!destPath.StartsWith(rootPath, StringComparison.OrdinalIgnoreCase))\\n+                        {\\n+                            throw new NotSupportedException($\"Entry \\'{entry.FullName}\\' is outside of the destination directory.\");\\n+                        }\\n+\\n                         if (file.EndsWith(separator)) \/\/directory\\n                         {\\n                             var dir = new FileSystemDirectory(file);\\n@@ -636,12 +642,22 @@ public async Task<ConnectorResult> RenameAsync(FullPath path, string name)\\n             if (path.IsDirectory)\\n             {\\n                 var newPath = new FileSystemDirectory(Path.Combine(path.Directory.Parent.FullName, name));\\n+                string destPath = Path.GetFullPath(newPath.FullName);\\n+                if (!destPath.StartsWith(path.RootVolume.RootDirectory, StringComparison.OrdinalIgnoreCase))\\n+                {\\n+                    throw new NotSupportedException($\"Entry \\'{name}\\' is outside of the home directory.\");\\n+                }\\n                 Directory.Move(path.Directory.FullName, newPath.FullName);\\n                 response.Added.Add(await BaseModel.CreateAsync(newPath, path.RootVolume));\\n             }\\n             else\\n             {\\n                 var newPath = new FileSystemFile(Path.Combine(path.File.DirectoryName, name));\\n+                string destPath = Path.GetFullPath(newPath.FullName);\\n+                if (!destPath.StartsWith(path.RootVolume.RootDirectory, StringComparison.OrdinalIgnoreCase))\\n+                {\\n+                    throw new NotSupportedException($\"Entry \\'{name}\\' is outside of the home directory.\");\\n+                }\\n                 File.Move(path.File.FullName, newPath.FullName);\\n                 response.Added.Add(await BaseModel.CreateAsync(newPath, path.RootVolume));\\n             }'}}",
            "message_norm":"directory traversal fixes",
            "language":"ca",
            "entities":"[('directory traversal', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['elFinder.AspNet\/Drivers\/FileSystem\/FileSystemDriver.cs'])",
            "num_files":1.0,
            "patch_content":"From 675049b39284a9e84f0915c71d688da8ebc7d720 Mon Sep 17 00:00:00 2001\nFrom: mguinness <sufc@netzero.net>\nDate: Fri, 9 Jul 2021 18:28:34 -0700\nSubject: [PATCH] Directory traversal fixes\n\n---\n ...\/Drivers\/FileSystem\/FileSystemDriver.cs       | 16 ++++++++++++++++\n 1 file changed, 16 insertions(+)\n\ndiff --git a\/elFinder.AspNet\/Drivers\/FileSystem\/FileSystemDriver.cs b\/elFinder.AspNet\/Drivers\/FileSystem\/FileSystemDriver.cs\nindex 603f213..dd86183 100644\n--- a\/elFinder.AspNet\/Drivers\/FileSystem\/FileSystemDriver.cs\n+++ b\/elFinder.AspNet\/Drivers\/FileSystem\/FileSystemDriver.cs\n@@ -229,6 +229,12 @@ public async Task<ConnectorResult> ExtractAsync(FullPath fullPath, bool newFolde\n                         string file = Path.Combine(rootPath, entry.FullName)\n                              .Replace(\"\/\", separator).Replace(\"\\\\\", separator);\n \n+                        string destPath = Path.GetFullPath(file);\n+                        if (!destPath.StartsWith(rootPath, StringComparison.OrdinalIgnoreCase))\n+                        {\n+                            throw new NotSupportedException($\"Entry '{entry.FullName}' is outside of the destination directory.\");\n+                        }\n+\n                         if (file.EndsWith(separator)) \/\/directory\n                         {\n                             var dir = new FileSystemDirectory(file);\n@@ -636,12 +642,22 @@ public async Task<ConnectorResult> RenameAsync(FullPath path, string name)\n             if (path.IsDirectory)\n             {\n                 var newPath = new FileSystemDirectory(Path.Combine(path.Directory.Parent.FullName, name));\n+                string destPath = Path.GetFullPath(newPath.FullName);\n+                if (!destPath.StartsWith(path.RootVolume.RootDirectory, StringComparison.OrdinalIgnoreCase))\n+                {\n+                    throw new NotSupportedException($\"Entry '{name}' is outside of the home directory.\");\n+                }\n                 Directory.Move(path.Directory.FullName, newPath.FullName);\n                 response.Added.Add(await BaseModel.CreateAsync(newPath, path.RootVolume));\n             }\n             else\n             {\n                 var newPath = new FileSystemFile(Path.Combine(path.File.DirectoryName, name));\n+                string destPath = Path.GetFullPath(newPath.FullName);\n+                if (!destPath.StartsWith(path.RootVolume.RootDirectory, StringComparison.OrdinalIgnoreCase))\n+                {\n+                    throw new NotSupportedException($\"Entry '{name}' is outside of the home directory.\");\n+                }\n                 File.Move(path.File.FullName, newPath.FullName);\n                 response.Added.Add(await BaseModel.CreateAsync(newPath, path.RootVolume));\n             }"
        },
        {
            "index":798,
            "vuln_id":"GHSA-w8f3-pvx4-4c3h",
            "cwe_id":"{'CWE-1321'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/Quernest\/arr-flatten-unflatten\/commit\/cb4351c75f87a4fbec3b6140c40ee2993f574372'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in arr-flatten-unflatten All versions of package arr-flatten-unflatten up to and including version 1.1.4 are vulnerable to Prototype Pollution via the constructor.",
            "published_date":"2021-05-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/Quernest\/arr-flatten-unflatten",
            "commit_href":"https:\/\/github.com\/Quernest\/arr-flatten-unflatten\/commit\/cb4351c75f87a4fbec3b6140c40ee2993f574372",
            "commit_sha":"cb4351c75f87a4fbec3b6140c40ee2993f574372",
            "patch":"SINGLE",
            "chain_ord":"['cb4351c75f87a4fbec3b6140c40ee2993f574372']",
            "before_first_fix_commit":"{'f4ccf0a8d55288490e729233fe2885eec15f74d0', '28bf4357297b67730ec1db002c001a76cd349b61'}",
            "last_fix_commit":"cb4351c75f87a4fbec3b6140c40ee2993f574372",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/25\/2021, 20:45:17",
            "message":"Merge pull request #8 from 418sec\/1-npm-arr-flatten-unflatten\n\nSecurity Fix for Prototype Pollution - huntr.dev",
            "author":"Quernest",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'unflatten.js': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Quernest\/arr-flatten-unflatten\/raw\/cb4351c75f87a4fbec3b6140c40ee2993f574372\/unflatten.js', 'patch': '@@ -10,6 +10,8 @@ function unflatten(obj = {}) {\\n     let m = {};\\n \\n     while ((m = regex.exec(p))) {\\n+      if (curr[prop] === constructor.prototype)\\n+        curr[prop] = {}\\n       curr = curr[prop] || (curr[prop] = m[2] ? [] : {});\\n       prop = m[2] || m[1];\\n     }'}}",
            "message_norm":"merge pull request #8 from 418sec\/1-npm-arr-flatten-unflatten\n\nsecurity fix for prototype pollution - huntr.dev",
            "language":"en",
            "entities":"[('#8', 'ISSUE', ''), ('security', 'SECWORD', ''), ('prototype pollution', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['unflatten.js'])",
            "num_files":1.0,
            "patch_content":"From 2d392491bc99808cc3ee6e806d49c6927f07d0bf Mon Sep 17 00:00:00 2001\nFrom: arjunshibu <arjunshibu1999@gmail.com>\nDate: Sun, 10 Jan 2021 14:54:59 +0530\nSubject: [PATCH] Security fix for Prototype Pollution\n\n---\n unflatten.js | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/unflatten.js b\/unflatten.js\nindex 58107a2..b7f4db2 100644\n--- a\/unflatten.js\n+++ b\/unflatten.js\n@@ -10,6 +10,8 @@ function unflatten(obj = {}) {\n     let m = {};\n \n     while ((m = regex.exec(p))) {\n+      if (curr[prop] === constructor.prototype)\n+        curr[prop] = {}\n       curr = curr[prop] || (curr[prop] = m[2] ? [] : {});\n       prop = m[2] || m[1];\n     }"
        },
        {
            "index":403,
            "vuln_id":"GHSA-qm6v-cg9v-53j3",
            "cwe_id":"{'CWE-287'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/opencast\/opencast\/commit\/8d5ec1614eed109b812bc27b0c6d3214e456d4e7'}",
            "dataset":"osv",
            "summary":"Limited Authentication Bypass for Media Files Prior to Opencast 10.14 and 11.7, users could pass along URLs for files belonging to organizations other than the user's own, which Opencast would then import into the current organization, bypassing organizational barriers.\n\n### Impact\n\nThe vulnerability allows attackers to bypass organizational barriers. Attackers must have full access to Opencast's ingest REST interface, and also know internal links to resources in another organization of the same Opencast cluster.\n\nIf you do not run a multi-tenant cluster, you are not affected by this issue.\n\n### Patches\n\nThis issue is fixed in Opencast 10.14 and 11.7.\n\n### References\n\n- [Patch fixing the issue](https:\/\/github.com\/opencast\/opencast\/commit\/8d5ec1614eed109b812bc27b0c6d3214e456d4e7)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [our issue tracker](https:\/\/github.com\/opencast\/opencast\/issues)\n* Email us at [security@opencast.org](mailto:security@opencast.org)",
            "published_date":"2022-05-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/opencast\/opencast",
            "commit_href":"https:\/\/github.com\/opencast\/opencast\/commit\/8d5ec1614eed109b812bc27b0c6d3214e456d4e7",
            "commit_sha":"8d5ec1614eed109b812bc27b0c6d3214e456d4e7",
            "patch":"SINGLE",
            "chain_ord":"['8d5ec1614eed109b812bc27b0c6d3214e456d4e7']",
            "before_first_fix_commit":"{'eee0c26fe33afc0709373fcbd7c6870bee8e2bed'}",
            "last_fix_commit":"8d5ec1614eed109b812bc27b0c6d3214e456d4e7",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/18\/2022, 10:43:56",
            "message":"Merge pull request from GHSA-qm6v-cg9v-53j3\n\nThis patch fixes the issue that users can pass URLs from other tenants\nto the ingest service which will check only against the other\norganization but not against the one currently active. This allows users\nto easily ingest media from other tenants.",
            "author":"Lars Kiesow",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 12, 'total': 13}",
            "files":"{'modules\/ingest-service-impl\/src\/main\/java\/org\/opencastproject\/ingest\/impl\/IngestServiceImpl.java': {'additions': 1, 'deletions': 12, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencast\/opencast\/raw\/8d5ec1614eed109b812bc27b0c6d3214e456d4e7\/modules%2Fingest-service-impl%2Fsrc%2Fmain%2Fjava%2Forg%2Fopencastproject%2Fingest%2Fimpl%2FIngestServiceImpl.java', 'patch': '@@ -129,15 +129,13 @@\\n import java.util.Dictionary;\\n import java.util.HashMap;\\n import java.util.HashSet;\\n-import java.util.LinkedList;\\n import java.util.List;\\n import java.util.Map;\\n import java.util.Map.Entry;\\n import java.util.Objects;\\n import java.util.Set;\\n import java.util.UUID;\\n import java.util.concurrent.TimeUnit;\\n-import java.util.stream.Collectors;\\n \\n import javax.management.ObjectInstance;\\n \\n@@ -1568,16 +1566,7 @@ protected URI addContentToRepo(MediaPackage mp, String elementId, URI uri) throw\\n     try {\\n       if (uri.toString().startsWith(\"http\")) {\\n         HttpGet get = new HttpGet(uri);\\n-        List<String> clusterUrls = new LinkedList<>();\\n-        try {\\n-          \/\/ Note that we are not checking ports here.\\n-          clusterUrls = organizationDirectoryService.getOrganization(uri.toURL()).getServers()\\n-                          .keySet()\\n-                          .stream()\\n-                          .collect(Collectors.toUnmodifiableList());\\n-        } catch (NotFoundException e) {\\n-          logger.warn(\"Unable to determine cluster members, will not be able to authenticate any downloads from them\", e);\\n-        }\\n+        var clusterUrls = securityService.getOrganization().getServers().keySet();\\n \\n         if (uri.toString().matches(downloadSource)) {\\n           \/\/NB: We\\'re creating a new client here with *different* auth than the system auth creds'}}",
            "message_norm":"merge pull request from ghsa-qm6v-cg9v-53j3\n\nthis patch fixes the issue that users can pass urls from other tenants\nto the ingest service which will check only against the other\norganization but not against the one currently active. this allows users\nto easily ingest media from other tenants.",
            "language":"en",
            "entities":"[('ghsa-qm6v-cg9v-53j3', 'VULNID', 'GHSA'), ('fixes', 'ACTION', ''), ('issue', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/ingest-service-impl\/src\/main\/java\/org\/opencastproject\/ingest\/impl\/IngestServiceImpl.java'])",
            "num_files":1.0,
            "patch_content":"From 8d5ec1614eed109b812bc27b0c6d3214e456d4e7 Mon Sep 17 00:00:00 2001\nFrom: Lars Kiesow <lkiesow@uos.de>\nDate: Wed, 18 May 2022 12:43:56 +0200\nSubject: [PATCH] Merge pull request from GHSA-qm6v-cg9v-53j3\n\nThis patch fixes the issue that users can pass URLs from other tenants\nto the ingest service which will check only against the other\norganization but not against the one currently active. This allows users\nto easily ingest media from other tenants.\n---\n ...\/ingest\/impl\/IngestServiceImpl.java              | 13 +------------\n 1 file changed, 1 insertion(+), 12 deletions(-)\n\ndiff --git a\/modules\/ingest-service-impl\/src\/main\/java\/org\/opencastproject\/ingest\/impl\/IngestServiceImpl.java b\/modules\/ingest-service-impl\/src\/main\/java\/org\/opencastproject\/ingest\/impl\/IngestServiceImpl.java\nindex f50e7cbefec..f12f2eaeea4 100644\n--- a\/modules\/ingest-service-impl\/src\/main\/java\/org\/opencastproject\/ingest\/impl\/IngestServiceImpl.java\n+++ b\/modules\/ingest-service-impl\/src\/main\/java\/org\/opencastproject\/ingest\/impl\/IngestServiceImpl.java\n@@ -129,7 +129,6 @@\n import java.util.Dictionary;\n import java.util.HashMap;\n import java.util.HashSet;\n-import java.util.LinkedList;\n import java.util.List;\n import java.util.Map;\n import java.util.Map.Entry;\n@@ -137,7 +136,6 @@\n import java.util.Set;\n import java.util.UUID;\n import java.util.concurrent.TimeUnit;\n-import java.util.stream.Collectors;\n \n import javax.management.ObjectInstance;\n \n@@ -1568,16 +1566,7 @@ protected URI addContentToRepo(MediaPackage mp, String elementId, URI uri) throw\n     try {\n       if (uri.toString().startsWith(\"http\")) {\n         HttpGet get = new HttpGet(uri);\n-        List<String> clusterUrls = new LinkedList<>();\n-        try {\n-          \/\/ Note that we are not checking ports here.\n-          clusterUrls = organizationDirectoryService.getOrganization(uri.toURL()).getServers()\n-                          .keySet()\n-                          .stream()\n-                          .collect(Collectors.toUnmodifiableList());\n-        } catch (NotFoundException e) {\n-          logger.warn(\"Unable to determine cluster members, will not be able to authenticate any downloads from them\", e);\n-        }\n+        var clusterUrls = securityService.getOrganization().getServers().keySet();\n \n         if (uri.toString().matches(downloadSource)) {\n           \/\/NB: We're creating a new client here with *different* auth than the system auth creds"
        },
        {
            "index":64,
            "vuln_id":"GHSA-c968-pq7h-7fxv",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/311403edbc9816df80274bd1ea8b3c0c0f22c3fa'}",
            "dataset":"osv",
            "summary":"Division by 0 in `Conv3DBackprop*` ### Impact\nThe `tf.raw_ops.Conv3DBackprop*` operations fail to validate that the input tensors are not empty. In turn, this would result in a division by 0:\n\n```python\nimport tensorflow as tf\n\ninput_sizes = tf.constant([0, 0, 0, 0, 0], shape=[5], dtype=tf.int32)\nfilter_tensor = tf.constant([], shape=[0, 0, 0, 1, 0], dtype=tf.float32)\nout_backprop = tf.constant([], shape=[0, 0, 0, 0, 0], dtype=tf.float32)\n                            \ntf.raw_ops.Conv3DBackpropInputV2(input_sizes=input_sizes, filter=filter_tensor, out_backprop=out_backprop, strides=[1, 1, 1, 1, 1], padding='SAME', data_format='NDHWC', dilations=[1, 1, 1, 1, 1])\n```\n```python\nimport tensorflow as tf\n\ninput_sizes = tf.constant([1], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\nfilter_tensor = tf.constant([0, 0, 0, 1, 0], shape=[5], dtype=tf.int32)\nout_backprop = tf.constant([], shape=[1, 1, 1, 1, 0], dtype=tf.float32)\n\ntf.raw_ops.Conv3DBackpropFilterV2(input=input_sizes, filter_sizes=filter_tensor, out_backprop=out_backprop, strides=[1, 1, 1, 1, 1], padding='SAME', data_format='NDHWC', dilations=[1, 1, 1, 1, 1])\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a91bb59769f19146d5a0c20060244378e878f140\/tensorflow\/core\/kernels\/conv_grad_ops_3d.cc#L430-L450) does not check that the divisor used in computing the shard size is not zero:\n\n```cc\n  const int64 size_A = output_image_size * dims.out_depth;\n  const int64 size_B = filter_total_size * dims.out_depth;\n  const int64 size_C = output_image_size * filter_total_size;\n  const int64 work_unit_size = size_A + size_B + size_C;\n  ...\n  const size_t shard_size =\n      use_parallel_contraction\n        ? 1\n        : (target_working_set_size + work_unit_size - 1) \/ work_unit_size;\n```\n\nThus, if attacker controls the input sizes, they can trigger a denial of service via a division by zero error.\n\n### Patches\nWe have patched the issue in GitHub commit [311403edbc9816df80274bd1ea8b3c0c0f22c3fa](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/311403edbc9816df80274bd1ea8b3c0c0f22c3fa).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/311403edbc9816df80274bd1ea8b3c0c0f22c3fa",
            "commit_sha":"311403edbc9816df80274bd1ea8b3c0c0f22c3fa",
            "patch":"SINGLE",
            "chain_ord":"['311403edbc9816df80274bd1ea8b3c0c0f22c3fa']",
            "before_first_fix_commit":"{'a91bb59769f19146d5a0c20060244378e878f140'}",
            "last_fix_commit":"311403edbc9816df80274bd1ea8b3c0c0f22c3fa",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/19\/2021, 23:00:40",
            "message":"Eliminate a division by 0 in 3D convolutions.\n\nAlso prevent a CHECK failed introduced in the most recent change.\n\nPiperOrigin-RevId: 369322073\nChange-Id: I4f609c028f89565fb2b49c3fdd20b63496582bae",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 42, 'deletions': 0, 'total': 42}",
            "files":"{'tensorflow\/core\/kernels\/conv_grad_ops_3d.cc': {'additions': 42, 'deletions': 0, 'changes': 42, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/311403edbc9816df80274bd1ea8b3c0c0f22c3fa\/tensorflow%2Fcore%2Fkernels%2Fconv_grad_ops_3d.cc', 'patch': '@@ -239,6 +239,14 @@ class Conv3DBackpropInputOp : public OpKernel {\\n       input_shape = context->input(0).shape();\\n     }\\n \\n+    OP_REQUIRES(context, input_shape.dims() == 5,\\n+                errors::InvalidArgument(\"input tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, filter_shape.dims() == 5,\\n+        errors::InvalidArgument(\"filter_sizes tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dims() == 5,\\n+        errors::InvalidArgument(\"out_backprop tensor must have 5 dimensions\"));\\n     OP_REQUIRES(\\n         context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n         errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n@@ -360,6 +368,14 @@ class Conv3DCustomBackpropInputOp : public OpKernel {\\n       input_shape = context->input(0).shape();\\n     }\\n \\n+    OP_REQUIRES(context, input_shape.dims() == 5,\\n+                errors::InvalidArgument(\"input tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, filter_shape.dims() == 5,\\n+        errors::InvalidArgument(\"filter_sizes tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dims() == 5,\\n+        errors::InvalidArgument(\"out_backprop tensor must have 5 dimensions\"));\\n     OP_REQUIRES(\\n         context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n         errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n@@ -444,6 +460,11 @@ class Conv3DCustomBackpropInputOp : public OpKernel {\\n     \/\/ contraction compared to sharding and matmuls.\\n     const bool use_parallel_contraction = dims.batch_size == 1;\\n \\n+    OP_REQUIRES(\\n+        context, work_unit_size > 0,\\n+        errors::InvalidArgument(\"input, filter_sizes and out_backprop tensors \"\\n+                                \"must all have at least 1 element\"));\\n+\\n     const size_t shard_size =\\n         use_parallel_contraction\\n             ? 1\\n@@ -724,6 +745,14 @@ class Conv3DBackpropFilterOp : public OpKernel {\\n       filter_shape = context->input(1).shape();\\n     }\\n \\n+    OP_REQUIRES(context, input_shape.dims() == 5,\\n+                errors::InvalidArgument(\"input tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, filter_shape.dims() == 5,\\n+        errors::InvalidArgument(\"filter_sizes tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dims() == 5,\\n+        errors::InvalidArgument(\"out_backprop tensor must have 5 dimensions\"));\\n     OP_REQUIRES(\\n         context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n         errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n@@ -850,6 +879,14 @@ class Conv3DCustomBackpropFilterOp : public OpKernel {\\n       filter_shape = context->input(1).shape();\\n     }\\n \\n+    OP_REQUIRES(context, input_shape.dims() == 5,\\n+                errors::InvalidArgument(\"input tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, filter_shape.dims() == 5,\\n+        errors::InvalidArgument(\"filter_sizes tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dims() == 5,\\n+        errors::InvalidArgument(\"out_backprop tensor must have 5 dimensions\"));\\n     OP_REQUIRES(\\n         context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n         errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n@@ -936,6 +973,11 @@ class Conv3DCustomBackpropFilterOp : public OpKernel {\\n \\n     const int64 work_unit_size = size_A + size_B + size_C;\\n \\n+    OP_REQUIRES(\\n+        context, work_unit_size > 0,\\n+        errors::InvalidArgument(\"input, filter_sizes and out_backprop tensors \"\\n+                                \"must all have at least 1 element\"));\\n+\\n     const size_t shard_size =\\n         (target_working_set_size + work_unit_size - 1) \/ work_unit_size;'}}",
            "message_norm":"eliminate a division by 0 in 3d convolutions.\n\nalso prevent a check failed introduced in the most recent change.\n\npiperorigin-revid: 369322073\nchange-id: i4f609c028f89565fb2b49c3fdd20b63496582bae",
            "language":"en",
            "entities":"[('division by 0', 'SECWORD', ''), ('prevent', 'ACTION', ''), ('369322073', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_grad_ops_3d.cc'])",
            "num_files":1.0,
            "patch_content":"From 311403edbc9816df80274bd1ea8b3c0c0f22c3fa Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Mon, 19 Apr 2021 16:00:40 -0700\nSubject: [PATCH] Eliminate a division by 0 in 3D convolutions.\n\nAlso prevent a CHECK failed introduced in the most recent change.\n\nPiperOrigin-RevId: 369322073\nChange-Id: I4f609c028f89565fb2b49c3fdd20b63496582bae\n---\n tensorflow\/core\/kernels\/conv_grad_ops_3d.cc | 42 +++++++++++++++++++++\n 1 file changed, 42 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/conv_grad_ops_3d.cc b\/tensorflow\/core\/kernels\/conv_grad_ops_3d.cc\nindex 8c72d01578d6d1..c0b57a7ae5606b 100644\n--- a\/tensorflow\/core\/kernels\/conv_grad_ops_3d.cc\n+++ b\/tensorflow\/core\/kernels\/conv_grad_ops_3d.cc\n@@ -239,6 +239,14 @@ class Conv3DBackpropInputOp : public OpKernel {\n       input_shape = context->input(0).shape();\n     }\n \n+    OP_REQUIRES(context, input_shape.dims() == 5,\n+                errors::InvalidArgument(\"input tensor must have 5 dimensions\"));\n+    OP_REQUIRES(\n+        context, filter_shape.dims() == 5,\n+        errors::InvalidArgument(\"filter_sizes tensor must have 5 dimensions\"));\n+    OP_REQUIRES(\n+        context, out_backprop_shape.dims() == 5,\n+        errors::InvalidArgument(\"out_backprop tensor must have 5 dimensions\"));\n     OP_REQUIRES(\n         context, input_shape.dim_size(4) == filter_shape.dim_size(3),\n         errors::InvalidArgument(\"input and filter_sizes must have the same \"\n@@ -360,6 +368,14 @@ class Conv3DCustomBackpropInputOp : public OpKernel {\n       input_shape = context->input(0).shape();\n     }\n \n+    OP_REQUIRES(context, input_shape.dims() == 5,\n+                errors::InvalidArgument(\"input tensor must have 5 dimensions\"));\n+    OP_REQUIRES(\n+        context, filter_shape.dims() == 5,\n+        errors::InvalidArgument(\"filter_sizes tensor must have 5 dimensions\"));\n+    OP_REQUIRES(\n+        context, out_backprop_shape.dims() == 5,\n+        errors::InvalidArgument(\"out_backprop tensor must have 5 dimensions\"));\n     OP_REQUIRES(\n         context, input_shape.dim_size(4) == filter_shape.dim_size(3),\n         errors::InvalidArgument(\"input and filter_sizes must have the same \"\n@@ -444,6 +460,11 @@ class Conv3DCustomBackpropInputOp : public OpKernel {\n     \/\/ contraction compared to sharding and matmuls.\n     const bool use_parallel_contraction = dims.batch_size == 1;\n \n+    OP_REQUIRES(\n+        context, work_unit_size > 0,\n+        errors::InvalidArgument(\"input, filter_sizes and out_backprop tensors \"\n+                                \"must all have at least 1 element\"));\n+\n     const size_t shard_size =\n         use_parallel_contraction\n             ? 1\n@@ -724,6 +745,14 @@ class Conv3DBackpropFilterOp : public OpKernel {\n       filter_shape = context->input(1).shape();\n     }\n \n+    OP_REQUIRES(context, input_shape.dims() == 5,\n+                errors::InvalidArgument(\"input tensor must have 5 dimensions\"));\n+    OP_REQUIRES(\n+        context, filter_shape.dims() == 5,\n+        errors::InvalidArgument(\"filter_sizes tensor must have 5 dimensions\"));\n+    OP_REQUIRES(\n+        context, out_backprop_shape.dims() == 5,\n+        errors::InvalidArgument(\"out_backprop tensor must have 5 dimensions\"));\n     OP_REQUIRES(\n         context, input_shape.dim_size(4) == filter_shape.dim_size(3),\n         errors::InvalidArgument(\"input and filter_sizes must have the same \"\n@@ -850,6 +879,14 @@ class Conv3DCustomBackpropFilterOp : public OpKernel {\n       filter_shape = context->input(1).shape();\n     }\n \n+    OP_REQUIRES(context, input_shape.dims() == 5,\n+                errors::InvalidArgument(\"input tensor must have 5 dimensions\"));\n+    OP_REQUIRES(\n+        context, filter_shape.dims() == 5,\n+        errors::InvalidArgument(\"filter_sizes tensor must have 5 dimensions\"));\n+    OP_REQUIRES(\n+        context, out_backprop_shape.dims() == 5,\n+        errors::InvalidArgument(\"out_backprop tensor must have 5 dimensions\"));\n     OP_REQUIRES(\n         context, input_shape.dim_size(4) == filter_shape.dim_size(3),\n         errors::InvalidArgument(\"input and filter_sizes must have the same \"\n@@ -936,6 +973,11 @@ class Conv3DCustomBackpropFilterOp : public OpKernel {\n \n     const int64 work_unit_size = size_A + size_B + size_C;\n \n+    OP_REQUIRES(\n+        context, work_unit_size > 0,\n+        errors::InvalidArgument(\"input, filter_sizes and out_backprop tensors \"\n+                                \"must all have at least 1 element\"));\n+\n     const size_t shard_size =\n         (target_working_set_size + work_unit_size - 1) \/ work_unit_size;"
        },
        {
            "index":821,
            "vuln_id":"GHSA-p92x-r36w-9395",
            "cwe_id":"{'CWE-843'}",
            "score":5.6,
            "chain":"{'https:\/\/github.com\/aheckmann\/mpath\/commit\/89402d2880d4ea3518480a8c9847c541f2d824fc'}",
            "dataset":"osv",
            "summary":"Type confusion in mpath This affects the package mpath before 0.8.4. A type confusion vulnerability can lead to a bypass of CVE-2018-16490. In particular, the condition ignoreProperties.indexOf(parts[i]) !== -1 returns -1 if parts[i] is ['__proto__']. This is because the method that has been called if the input is an array is Array.prototype.indexOf() and not String.prototype.indexOf(). They behave differently depending on the type of the input.",
            "published_date":"2021-09-02",
            "chain_len":1,
            "project":"https:\/\/github.com\/aheckmann\/mpath",
            "commit_href":"https:\/\/github.com\/aheckmann\/mpath\/commit\/89402d2880d4ea3518480a8c9847c541f2d824fc",
            "commit_sha":"89402d2880d4ea3518480a8c9847c541f2d824fc",
            "patch":"SINGLE",
            "chain_ord":"['89402d2880d4ea3518480a8c9847c541f2d824fc']",
            "before_first_fix_commit":"{'03c4efef8b25425476c1e0d7b6a0fb5adc18c0f9'}",
            "last_fix_commit":"89402d2880d4ea3518480a8c9847c541f2d824fc",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/01\/2021, 15:12:24",
            "message":"fix: throw error if `parts` contains an element that isn't a string or number\n\nFix #13",
            "author":"Valeri Karpov",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 0, 'total': 12}",
            "files":"{'lib\/index.js': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mongoosejs\/mpath\/raw\/89402d2880d4ea3518480a8c9847c541f2d824fc\/lib%2Findex.js', 'patch': \"@@ -64,6 +64,9 @@ exports.get = function(path, o, special, map) {\\n \\n   for (var i = 0; i < parts.length; ++i) {\\n     part = parts[i];\\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\\n+      throw new TypeError('Each segment of path to `get()` must be a string or number, got ' + typeof parts[i]);\\n+    }\\n \\n     if (Array.isArray(obj) && !\/^\\\\d+$\/.test(part)) {\\n       \/\/ reading a property from the array items\\n@@ -112,6 +115,9 @@ exports.has = function(path, o) {\\n   var len = parts.length;\\n   var cur = o;\\n   for (var i = 0; i < len; ++i) {\\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\\n+      throw new TypeError('Each segment of path to `has()` must be a string or number, got ' + typeof parts[i]);\\n+    }\\n     if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\\n       return false;\\n     }\\n@@ -143,6 +149,9 @@ exports.unset = function(path, o) {\\n     if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\\n       return false;\\n     }\\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\\n+      throw new TypeError('Each segment of path to `unset()` must be a string or number, got ' + typeof parts[i]);\\n+    }\\n     \/\/ Disallow any updates to __proto__ or special properties.\\n     if (ignoreProperties.indexOf(parts[i]) !== -1) {\\n       return false;\\n@@ -193,6 +202,9 @@ exports.set = function(path, val, o, special, map, _copying) {\\n   if (null == o) return;\\n \\n   for (var i = 0; i < parts.length; ++i) {\\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\\n+      throw new TypeError('Each segment of path to `set()` must be a string or number, got ' + typeof parts[i]);\\n+    }\\n     \/\/ Silently ignore any updates to `__proto__`, these are potentially\\n     \/\/ dangerous if using mpath with unsanitized data.\\n     if (ignoreProperties.indexOf(parts[i]) !== -1) {\"}}",
            "message_norm":"fix: throw error if `parts` contains an element that isn't a string or number\n\nfix #13",
            "language":"en",
            "entities":"[('error', 'FLAW', ''), ('fix', 'ACTION', ''), ('#13', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/index.js'])",
            "num_files":1.0,
            "patch_content":"From 89402d2880d4ea3518480a8c9847c541f2d824fc Mon Sep 17 00:00:00 2001\nFrom: Valeri Karpov <val@karpov.io>\nDate: Wed, 1 Sep 2021 11:12:24 -0400\nSubject: [PATCH] fix: throw error if `parts` contains an element that isn't a\n string or number\n\nFix #13\n---\n lib\/index.js | 12 ++++++++++++\n 1 file changed, 12 insertions(+)\n\ndiff --git a\/lib\/index.js b\/lib\/index.js\nindex 338bf9b..c9e7e5f 100644\n--- a\/lib\/index.js\n+++ b\/lib\/index.js\n@@ -64,6 +64,9 @@ exports.get = function(path, o, special, map) {\n \n   for (var i = 0; i < parts.length; ++i) {\n     part = parts[i];\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n+      throw new TypeError('Each segment of path to `get()` must be a string or number, got ' + typeof parts[i]);\n+    }\n \n     if (Array.isArray(obj) && !\/^\\d+$\/.test(part)) {\n       \/\/ reading a property from the array items\n@@ -112,6 +115,9 @@ exports.has = function(path, o) {\n   var len = parts.length;\n   var cur = o;\n   for (var i = 0; i < len; ++i) {\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n+      throw new TypeError('Each segment of path to `has()` must be a string or number, got ' + typeof parts[i]);\n+    }\n     if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\n       return false;\n     }\n@@ -143,6 +149,9 @@ exports.unset = function(path, o) {\n     if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\n       return false;\n     }\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n+      throw new TypeError('Each segment of path to `unset()` must be a string or number, got ' + typeof parts[i]);\n+    }\n     \/\/ Disallow any updates to __proto__ or special properties.\n     if (ignoreProperties.indexOf(parts[i]) !== -1) {\n       return false;\n@@ -193,6 +202,9 @@ exports.set = function(path, val, o, special, map, _copying) {\n   if (null == o) return;\n \n   for (var i = 0; i < parts.length; ++i) {\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n+      throw new TypeError('Each segment of path to `set()` must be a string or number, got ' + typeof parts[i]);\n+    }\n     \/\/ Silently ignore any updates to `__proto__`, these are potentially\n     \/\/ dangerous if using mpath with unsanitized data.\n     if (ignoreProperties.indexOf(parts[i]) !== -1) {"
        },
        {
            "index":131,
            "vuln_id":"GHSA-h8pj-cxx2-jfg2",
            "cwe_id":"{'CWE-20'}",
            "score":9.1,
            "chain":"{'https:\/\/github.com\/encode\/httpx\/pull\/2185\/commits\/e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1'}",
            "dataset":"osv",
            "summary":"Improper Input Validation in httpx Encode OSS httpx <=1.0.0.beta0 is affected by improper input validation in `httpx.URL`, `httpx.Client` and some functions using `httpx.URL.copy_with`.",
            "published_date":"2022-04-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/encode\/httpx",
            "commit_href":"https:\/\/github.com\/encode\/httpx\/pull\/2185\/commits\/e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1",
            "commit_sha":"e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1",
            "patch":"SINGLE",
            "chain_ord":"['e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1']",
            "before_first_fix_commit":"{'b07fe7b0745e62be5ef9bce1bee9e7d7a8878552'}",
            "last_fix_commit":"e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/21\/2022, 06:22:38",
            "message":"Patch `copy_with`",
            "author":"lebr0nli",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 1, 'total': 6}",
            "files":"{'httpx\/_urls.py': {'additions': 5, 'deletions': 1, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/encode\/httpx\/raw\/e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1\/httpx%2F_urls.py', 'patch': '@@ -484,7 +484,11 @@ def copy_with(self, **kwargs: typing.Any) -> \"URL\":\\n         #  \\\\_\/   \\\\______________\/\\\\_________\/ \\\\_________\/ \\\\__\/\\n         #   |           |            |            |        |\\n         # scheme     authority       path        query   fragment\\n-        return URL(self._uri_reference.copy_with(**kwargs).unsplit())\\n+        new_url = URL(self)\\n+        new_url._uri_reference = self._uri_reference.copy_with(**kwargs)\\n+        if new_url.is_absolute_url:\\n+            new_url._uri_reference = new_url._uri_reference.normalize()\\n+        return URL(new_url)\\n \\n     def copy_set_param(self, key: str, value: typing.Any = None) -> \"URL\":\\n         return self.copy_with(params=self.params.set(key, value))'}}",
            "message_norm":"patch `copy_with`",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['httpx\/_urls.py'])",
            "num_files":1.0,
            "patch_content":"From e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1 Mon Sep 17 00:00:00 2001\nFrom: lebr0nli <alan.li.tw@gmail.com>\nDate: Thu, 21 Apr 2022 14:22:38 +0800\nSubject: [PATCH] Patch `copy_with`\n\n---\n httpx\/_urls.py | 6 +++++-\n 1 file changed, 5 insertions(+), 1 deletion(-)\n\ndiff --git a\/httpx\/_urls.py b\/httpx\/_urls.py\nindex 70486bc9e4..f6788e5568 100644\n--- a\/httpx\/_urls.py\n+++ b\/httpx\/_urls.py\n@@ -484,7 +484,11 @@ def copy_with(self, **kwargs: typing.Any) -> \"URL\":\n         #  \\_\/   \\______________\/\\_________\/ \\_________\/ \\__\/\n         #   |           |            |            |        |\n         # scheme     authority       path        query   fragment\n-        return URL(self._uri_reference.copy_with(**kwargs).unsplit())\n+        new_url = URL(self)\n+        new_url._uri_reference = self._uri_reference.copy_with(**kwargs)\n+        if new_url.is_absolute_url:\n+            new_url._uri_reference = new_url._uri_reference.normalize()\n+        return URL(new_url)\n \n     def copy_set_param(self, key: str, value: typing.Any = None) -> \"URL\":\n         return self.copy_with(params=self.params.set(key, value))"
        },
        {
            "index":910,
            "vuln_id":"GHSA-vm37-j55j-8655",
            "cwe_id":"{'CWE-78'}",
            "score":7.8,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/0a7e5f1d81de884861ca677ee1aaac31f188d632'}",
            "dataset":"osv",
            "summary":"OS Command Injection in Microweber Microweber is a content management system with drag and drop. Prior to version 1.2.11, Microweber is vulnerable to OS Command Injection.",
            "published_date":"2022-02-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/0a7e5f1d81de884861ca677ee1aaac31f188d632",
            "commit_sha":"0a7e5f1d81de884861ca677ee1aaac31f188d632",
            "patch":"SINGLE",
            "chain_ord":"['0a7e5f1d81de884861ca677ee1aaac31f188d632']",
            "before_first_fix_commit":"{'b66537fbd7792d10f07fa7870ead7aae293f1120'}",
            "last_fix_commit":"0a7e5f1d81de884861ca677ee1aaac31f188d632",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/10\/2022, 08:27:09",
            "message":"Update plupload.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 2, 'total': 3}",
            "files":"{'src\/MicroweberPackages\/App\/functions\/plupload.php': {'additions': 1, 'deletions': 2, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/0a7e5f1d81de884861ca677ee1aaac31f188d632\/src%2FMicroweberPackages%2FApp%2Ffunctions%2Fplupload.php', 'patch': \"@@ -149,14 +149,13 @@\\n                             $is_ext = strtolower($is_ext);\\n \\n                             switch ($is_ext) {\\n-                                case 'php':\\n+                                case 'php': \\n                                 case 'php12':\\n                                 case 'php11':\\n                                 case 'php10':\\n                                 case 'php9':\\n                                 case 'php8':\\n                                 case 'php7':\\n-                                case 'php6':\\n                                 case 'php5':\\n                                 case 'php4':\\n                                 case 'php3':\"}}",
            "message_norm":"update plupload.php",
            "language":"ro",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/App\/functions\/plupload.php'])",
            "num_files":1.0,
            "patch_content":"From 0a7e5f1d81de884861ca677ee1aaac31f188d632 Mon Sep 17 00:00:00 2001\nFrom: Bozhidar Slaveykov <bobi@microweber.com>\nDate: Thu, 10 Feb 2022 10:27:09 +0200\nSubject: [PATCH] Update plupload.php\n\n---\n src\/MicroweberPackages\/App\/functions\/plupload.php | 3 +--\n 1 file changed, 1 insertion(+), 2 deletions(-)\n\ndiff --git a\/src\/MicroweberPackages\/App\/functions\/plupload.php b\/src\/MicroweberPackages\/App\/functions\/plupload.php\nindex 5f498a75b69..9c78ab6e710 100644\n--- a\/src\/MicroweberPackages\/App\/functions\/plupload.php\n+++ b\/src\/MicroweberPackages\/App\/functions\/plupload.php\n@@ -149,14 +149,13 @@\n                             $is_ext = strtolower($is_ext);\n \n                             switch ($is_ext) {\n-                                case 'php':\n+                                case 'php': \n                                 case 'php12':\n                                 case 'php11':\n                                 case 'php10':\n                                 case 'php9':\n                                 case 'php8':\n                                 case 'php7':\n-                                case 'php6':\n                                 case 'php5':\n                                 case 'php4':\n                                 case 'php3':"
        },
        {
            "index":603,
            "vuln_id":"GHSA-q9p4-qfc8-fvpp",
            "cwe_id":"{'CWE-89'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/catfan\/Medoo\/commit\/659864b393961bf224bba1efc03b7dcbed7de533'}",
            "dataset":"osv",
            "summary":"SQL Injection in medoo columnQuote in medoo before 1.7.5 allows remote attackers to perform a SQL Injection due to improper escaping.",
            "published_date":"2021-10-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/catfan\/Medoo",
            "commit_href":"https:\/\/github.com\/catfan\/Medoo\/commit\/659864b393961bf224bba1efc03b7dcbed7de533",
            "commit_sha":"659864b393961bf224bba1efc03b7dcbed7de533",
            "patch":"SINGLE",
            "chain_ord":"['659864b393961bf224bba1efc03b7dcbed7de533']",
            "before_first_fix_commit":"{'b3f05edf256d63ec3cfd31d6a078c564daf9863d'}",
            "last_fix_commit":"659864b393961bf224bba1efc03b7dcbed7de533",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/11\/2019, 15:50:40",
            "message":"[fix] Fix columnQuote for \bsecurity issue reported by Snyk",
            "author":"Angel Lai",
            "comments":"{'com_1': {'author': 'jfcherng', 'datetime': '10\/12\/2019, 11:57:36', 'body': \"It's perfect valid to use `_` in a column name and I believe it's used quite often. This change would make `v1.7.4` literally unusable for most of people.\\r\\n\\r\\nNot sure about other SQL standard. For MySQL, it's valid to use some of UTF-8 chars as the column name.\\r\\nhttps:\/\/dev.mysql.com\/doc\/refman\/8.0\/en\/identifiers.html\"}, 'com_2': {'author': 'catfan', 'datetime': '10\/12\/2019, 13:18:09', 'body': \"Thanks for this great spot. The `_` should be added. Although it's possible to use UTF-8 chars for column name, it may have some problem for some databases. Using `a-zA-Z0-9_` is enough for most case.\"}}",
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'src\/Medoo.php': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/catfan\/Medoo\/raw\/659864b393961bf224bba1efc03b7dcbed7de533\/src%2FMedoo.php', 'patch': '@@ -500,6 +500,11 @@ protected function typeMap($value, $type)\\n \\n \\tprotected function columnQuote($string)\\n \\t{\\n+\\t\\tif (!preg_match(\\'\/^[a-zA-Z0-9]+(\\\\.?[a-zA-Z0-9]+)?$\/i\\', $string))\\n+\\t\\t{\\n+\\t\\t\\tthrow new InvalidArgumentException(\"Incorrect column name \\\\\"$string\\\\\"\");\\n+\\t\\t}\\n+\\n \\t\\tif (strpos($string, \\'.\\') !== false)\\n \\t\\t{\\n \\t\\t\\treturn \\'\"\\' . $this->prefix . str_replace(\\'.\\', \\'\".\"\\', $string) . \\'\"\\';'}}",
            "message_norm":"[fix] fix columnquote for \bsecurity issue reported by snyk",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('fix', 'ACTION', ''), ('\\x08security', 'SECWORD', ''), ('issue', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Medoo.php'])",
            "num_files":1.0,
            "patch_content":"From 659864b393961bf224bba1efc03b7dcbed7de533 Mon Sep 17 00:00:00 2001\nFrom: Angel Lai <catfan.me@gmail.com>\nDate: Fri, 11 Oct 2019 23:50:40 +0800\nSubject: [PATCH] [fix] Fix columnQuote for \bsecurity issue reported by Snyk\n\n---\n src\/Medoo.php | 5 +++++\n 1 file changed, 5 insertions(+)\n\ndiff --git a\/src\/Medoo.php b\/src\/Medoo.php\nindex 6d68f4c2..478e0a87 100644\n--- a\/src\/Medoo.php\n+++ b\/src\/Medoo.php\n@@ -500,6 +500,11 @@ protected function typeMap($value, $type)\n \n \tprotected function columnQuote($string)\n \t{\n+\t\tif (!preg_match('\/^[a-zA-Z0-9]+(\\.?[a-zA-Z0-9]+)?$\/i', $string))\n+\t\t{\n+\t\t\tthrow new InvalidArgumentException(\"Incorrect column name \\\"$string\\\"\");\n+\t\t}\n+\n \t\tif (strpos($string, '.') !== false)\n \t\t{\n \t\t\treturn '\"' . $this->prefix . str_replace('.', '\".\"', $string) . '\"';"
        },
        {
            "index":681,
            "vuln_id":"GHSA-77gp-3h4r-6428",
            "cwe_id":"{'CWE-787', 'CWE-125'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0657c83d08845cc434175934c642299de2c0f042'}",
            "dataset":"osv",
            "summary":"Out of bounds read and write in Tensorflow ### Impact\nThere is a typo in TensorFlow's [`SpecializeType`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/framework\/full_type_util.cc#L81-L102) which results in heap OOB read\/write:\n\n```cc\nfor (int i = 0; i < op_def.output_arg_size(); i++) {\n  \/\/ ...\n  for (int j = 0; j < t->args_size(); j++) {\n    auto* arg = t->mutable_args(i);\n    \/\/ ...\n  }\n} \n```\n\nDue to a typo, `arg` is initialized to the `i`th mutable argument in a loop where the loop index is `j`. Hence it is possible to assign to `arg` from outside the vector of arguments. Since this is a mutable proto value, it allows both read and write to outside of bounds data.\n\n### Patches\nWe have patched the issue in GitHub commit [0657c83d08845cc434175934c642299de2c0f042](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0657c83d08845cc434175934c642299de2c0f042).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, and TensorFlow 2.6.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0657c83d08845cc434175934c642299de2c0f042",
            "commit_sha":"0657c83d08845cc434175934c642299de2c0f042",
            "patch":"SINGLE",
            "chain_ord":"['0657c83d08845cc434175934c642299de2c0f042']",
            "before_first_fix_commit":"{'6e65b0b4ad12fdaa223e87b4ae6d8cb762fcae2b'}",
            "last_fix_commit":"0657c83d08845cc434175934c642299de2c0f042",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/09\/2021, 12:44:43",
            "message":"Fix heap OOB read\/write due to incorrect indexing.\n\nPiperOrigin-RevId: 408578046\nChange-Id: Ifc9ffea49e5890f55fcb2c27568611052c3ddcfa",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'tensorflow\/core\/framework\/full_type_util.cc': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0657c83d08845cc434175934c642299de2c0f042\/tensorflow%2Fcore%2Fframework%2Ffull_type_util.cc', 'patch': '@@ -100,7 +100,7 @@ StatusOr<FullTypeDef> SpecializeType(const AttrSlice& attrs,\\n     \/\/ verifications are needed, they should be done by separately, and in a\\n     \/\/ way that can be reused for type inference.\\n     for (int j = 0; j < t->args_size(); j++) {\\n-      auto* arg = t->mutable_args(i);\\n+      auto* arg = t->mutable_args(j);\\n       if (arg->type_id() == TFT_VAR) {\\n         const auto* attr = attrs.Find(arg->s());\\n         if (attr == nullptr) {'}}",
            "message_norm":"fix heap oob read\/write due to incorrect indexing.\n\npiperorigin-revid: 408578046\nchange-id: ifc9ffea49e5890f55fcb2c27568611052c3ddcfa",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('408578046', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/framework\/full_type_util.cc'])",
            "num_files":1.0,
            "patch_content":"From 0657c83d08845cc434175934c642299de2c0f042 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Tue, 9 Nov 2021 04:44:43 -0800\nSubject: [PATCH] Fix heap OOB read\/write due to incorrect indexing.\n\nPiperOrigin-RevId: 408578046\nChange-Id: Ifc9ffea49e5890f55fcb2c27568611052c3ddcfa\n---\n tensorflow\/core\/framework\/full_type_util.cc | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/tensorflow\/core\/framework\/full_type_util.cc b\/tensorflow\/core\/framework\/full_type_util.cc\nindex e0d8ca0721c850..89617dc97f2496 100644\n--- a\/tensorflow\/core\/framework\/full_type_util.cc\n+++ b\/tensorflow\/core\/framework\/full_type_util.cc\n@@ -100,7 +100,7 @@ StatusOr<FullTypeDef> SpecializeType(const AttrSlice& attrs,\n     \/\/ verifications are needed, they should be done by separately, and in a\n     \/\/ way that can be reused for type inference.\n     for (int j = 0; j < t->args_size(); j++) {\n-      auto* arg = t->mutable_args(i);\n+      auto* arg = t->mutable_args(j);\n       if (arg->type_id() == TFT_VAR) {\n         const auto* attr = attrs.Find(arg->s());\n         if (attr == nullptr) {"
        },
        {
            "index":265,
            "vuln_id":"GHSA-2x7h-96h5-rq84",
            "cwe_id":"{'CWE-22'}",
            "score":4.0,
            "chain":"{'https:\/\/github.com\/icsharpcode\/SharpZipLib\/commit\/5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78'}",
            "dataset":"osv",
            "summary":"Path Traversal in SharpZipLib SharpZipLib (or #ziplib) is a Zip, GZip, Tar and BZip2 library. Starting version 1.3.0 and prior to version 1.3.3, a check was added if the destination file is under destination directory. However, it is not enforced that `destDir` ends with slash. If the `destDir` is not slash terminated like `\/home\/user\/dir` it is possible to create a file with a name thats begins with the destination directory, i.e. `\/home\/user\/dir.sh`. Because of the file name and destination directory constraints, the arbitrary file creation impact is limited and depends on the use case. Version 1.3.3 contains a patch for this vulnerability.",
            "published_date":"2022-02-01",
            "chain_len":1,
            "project":"https:\/\/github.com\/icsharpcode\/SharpZipLib",
            "commit_href":"https:\/\/github.com\/icsharpcode\/SharpZipLib\/commit\/5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78",
            "commit_sha":"5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78",
            "patch":"SINGLE",
            "chain_ord":"['5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78']",
            "before_first_fix_commit":"{'a0e96de70b5264f4c919b09253b1522bc7a221cc'}",
            "last_fix_commit":"5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/18\/2021, 09:58:11",
            "message":"fix: specialized tar extract traversal",
            "author":"nils m\u00e5s\u00e9n",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'src\/ICSharpCode.SharpZipLib\/Tar\/TarArchive.cs': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/icsharpcode\/SharpZipLib\/raw\/5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78\/src%2FICSharpCode.SharpZipLib%2FTar%2FTarArchive.cs', 'patch': '@@ -658,8 +658,9 @@ private void ExtractEntry(string destDir, TarEntry entry, bool allowParentTraver\\n \\t\\t\\tname = name.Replace(\\'\/\\', Path.DirectorySeparatorChar);\\n \\n \\t\\t\\tstring destFile = Path.Combine(destDir, name);\\n+\\t\\t\\tvar destFileDir = Path.GetDirectoryName(Path.GetFullPath(destFile)) ?? \"\";\\n \\n-\\t\\t\\tif (!allowParentTraversal && !Path.GetFullPath(destFile).StartsWith(destDir, StringComparison.InvariantCultureIgnoreCase))\\n+\\t\\t\\tif (!allowParentTraversal && !destFileDir.StartsWith(destDir, StringComparison.InvariantCultureIgnoreCase))\\n \\t\\t\\t{\\n \\t\\t\\t\\tthrow new InvalidNameException(\"Parent traversal in paths is not allowed\");\\n \\t\\t\\t}'}}",
            "message_norm":"fix: specialized tar extract traversal",
            "language":"en",
            "entities":"[('extract traversal', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/ICSharpCode.SharpZipLib\/Tar\/TarArchive.cs'])",
            "num_files":1.0,
            "patch_content":"From 5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78 Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?nils=20m=C3=A5s=C3=A9n?= <nils@piksel.se>\nDate: Sat, 18 Sep 2021 11:58:11 +0200\nSubject: [PATCH] fix: specialized tar extract traversal\n\n---\n src\/ICSharpCode.SharpZipLib\/Tar\/TarArchive.cs | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ndiff --git a\/src\/ICSharpCode.SharpZipLib\/Tar\/TarArchive.cs b\/src\/ICSharpCode.SharpZipLib\/Tar\/TarArchive.cs\nindex 4b373fb64..aa482cc06 100644\n--- a\/src\/ICSharpCode.SharpZipLib\/Tar\/TarArchive.cs\n+++ b\/src\/ICSharpCode.SharpZipLib\/Tar\/TarArchive.cs\n@@ -658,8 +658,9 @@ private void ExtractEntry(string destDir, TarEntry entry, bool allowParentTraver\n \t\t\tname = name.Replace('\/', Path.DirectorySeparatorChar);\n \n \t\t\tstring destFile = Path.Combine(destDir, name);\n+\t\t\tvar destFileDir = Path.GetDirectoryName(Path.GetFullPath(destFile)) ?? \"\";\n \n-\t\t\tif (!allowParentTraversal && !Path.GetFullPath(destFile).StartsWith(destDir, StringComparison.InvariantCultureIgnoreCase))\n+\t\t\tif (!allowParentTraversal && !destFileDir.StartsWith(destDir, StringComparison.InvariantCultureIgnoreCase))\n \t\t\t{\n \t\t\t\tthrow new InvalidNameException(\"Parent traversal in paths is not allowed\");\n \t\t\t}"
        },
        {
            "index":693,
            "vuln_id":"GHSA-37pf-w9ff-gqvm",
            "cwe_id":"{'CWE-787'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/d797e3f00e34c12c8c0ae52f56344325439dccd7', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/87ac2b5a751710ee288fdda3fd4d9818e22387a1'}",
            "dataset":"osv",
            "summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-0912, CVE-2019-0913, CVE-2019-0914, CVE-2019-0915, CVE-2019-0916, CVE-2019-0917, CVE-2019-0922, CVE-2019-0923, CVE-2019-0924, CVE-2019-0925, CVE-2019-0933, CVE-2019-0937.",
            "published_date":"2021-03-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/chakra-core\/ChakraCore",
            "commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/87ac2b5a751710ee288fdda3fd4d9818e22387a1",
            "commit_sha":"87ac2b5a751710ee288fdda3fd4d9818e22387a1",
            "patch":"MULTI",
            "chain_ord":"['87ac2b5a751710ee288fdda3fd4d9818e22387a1', 'd797e3f00e34c12c8c0ae52f56344325439dccd7']",
            "before_first_fix_commit":"{'ea0491305137183603bf43844b5584d4cc972e28', '4594e340bc9ca9f857010a68e8b562d65b46eed6'}",
            "last_fix_commit":"d797e3f00e34c12c8c0ae52f56344325439dccd7",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/17\/2019, 17:22:17",
            "message":"[CVE-2019-0927]",
            "author":"Michael Holman",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'lib\/Backend\/GlobOptFields.cpp': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/87ac2b5a751710ee288fdda3fd4d9818e22387a1\/lib%2FBackend%2FGlobOptFields.cpp', 'patch': '@@ -394,6 +394,7 @@ GlobOpt::ProcessFieldKills(IR::Instr *instr, BVSparse<JitArenaAllocator> *bv, bo\\n     case Js::OpCode::StRootFldStrict:\\n     case Js::OpCode::StSlot:\\n     case Js::OpCode::StSlotChkUndecl:\\n+    case Js::OpCode::StSuperFld:\\n         Assert(dstOpnd != nullptr);\\n         sym = dstOpnd->AsSymOpnd()->m_sym;\\n         if (inGlobOpt)'}}",
            "message_norm":"[cve-2019-0927]",
            "language":"ro",
            "entities":"[('cve-2019-0927', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/Backend\/GlobOptFields.cpp'])",
            "num_files":1.0,
            "patch_content":"From 87ac2b5a751710ee288fdda3fd4d9818e22387a1 Mon Sep 17 00:00:00 2001\nFrom: Michael Holman <michhol@microsoft.com>\nDate: Wed, 17 Apr 2019 10:22:17 -0700\nSubject: [PATCH] [CVE-2019-0927]\n\n---\n lib\/Backend\/GlobOptFields.cpp | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/lib\/Backend\/GlobOptFields.cpp b\/lib\/Backend\/GlobOptFields.cpp\nindex 2eff8b7c61f..05594e71269 100644\n--- a\/lib\/Backend\/GlobOptFields.cpp\n+++ b\/lib\/Backend\/GlobOptFields.cpp\n@@ -394,6 +394,7 @@ GlobOpt::ProcessFieldKills(IR::Instr *instr, BVSparse<JitArenaAllocator> *bv, bo\n     case Js::OpCode::StRootFldStrict:\n     case Js::OpCode::StSlot:\n     case Js::OpCode::StSlotChkUndecl:\n+    case Js::OpCode::StSuperFld:\n         Assert(dstOpnd != nullptr);\n         sym = dstOpnd->AsSymOpnd()->m_sym;\n         if (inGlobOpt)"
        },
        {
            "index":197,
            "vuln_id":"GHSA-rcjj-h6gh-jf3r",
            "cwe_id":"{'CWE-379'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/apache\/groovy\/commit\/bcbe5c4c76db83736166530647c024ac1e47ef28'}",
            "dataset":"osv",
            "summary":"Information Disclosure in Apache Groovy Apache Groovy provides extension methods to aid with creating temporary directories. Prior to this fix, Groovy's implementation of those extension methods was using a now superseded Java JDK method call that is potentially not secure on some operating systems in some contexts. Users not using the extension methods mentioned in the advisory are not affected, but may wish to read the advisory for further details. Versions Affected: 2.0 to 2.4.20, 2.5.0 to 2.5.13, 3.0.0 to 3.0.6, and 4.0.0-alpha-1. Fixed in versions 2.4.21, 2.5.14, 3.0.7, 4.0.0-alpha-2.",
            "published_date":"2020-12-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/apache\/groovy",
            "commit_href":"https:\/\/github.com\/apache\/groovy\/commit\/bcbe5c4c76db83736166530647c024ac1e47ef28",
            "commit_sha":"bcbe5c4c76db83736166530647c024ac1e47ef28",
            "patch":"SINGLE",
            "chain_ord":"['bcbe5c4c76db83736166530647c024ac1e47ef28']",
            "before_first_fix_commit":"{'e5aabb3a88974a6176a0fe76356c6a0415b5d183'}",
            "last_fix_commit":"bcbe5c4c76db83736166530647c024ac1e47ef28",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/18\/2020, 13:08:16",
            "message":"GROOVY-9824: replace some old api usage with newer available variants (closes #1425)",
            "author":"Paul King",
            "comments":null,
            "stats":"{'additions': 14, 'deletions': 33, 'total': 47}",
            "files":"{'src\/main\/java\/org\/codehaus\/groovy\/runtime\/DefaultGroovyStaticMethods.java': {'additions': 14, 'deletions': 33, 'changes': 47, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/groovy\/raw\/bcbe5c4c76db83736166530647c024ac1e47ef28\/src%2Fmain%2Fjava%2Forg%2Fcodehaus%2Fgroovy%2Fruntime%2FDefaultGroovyStaticMethods.java', 'patch': '@@ -27,6 +27,8 @@\\n import java.lang.management.ManagementFactory;\\n import java.lang.management.ThreadInfo;\\n import java.lang.management.ThreadMXBean;\\n+import java.nio.file.Files;\\n+import java.nio.file.Path;\\n import java.util.Arrays;\\n import java.util.Locale;\\n import java.util.ResourceBundle;\\n@@ -211,42 +213,21 @@ public static ResourceBundle getBundle(ResourceBundle self, String bundleName, L\\n     }\\n \\n     public static File createTempDir(File self) throws IOException {\\n-        return createTempDir(self, \"groovy-generated-\", \"-tmpdir\");\\n+        return createTempDir(self, \"groovy-generated-\", \"tmpdir-\");\\n+    }\\n+\\n+    public static File createTempDir(File self, final String prefix) throws IOException {\\n+        return createTempDirNio(prefix);\\n     }\\n \\n     public static File createTempDir(File self, final String prefix, final String suffix) throws IOException {\\n-        final int MAXTRIES = 3;\\n-        int accessDeniedCounter = 0;\\n-        File tempFile=null;\\n-        for (int i=0; i<MAXTRIES; i++) {\\n-            try {\\n-                tempFile = File.createTempFile(prefix, suffix);\\n-                tempFile.delete();\\n-                tempFile.mkdirs();\\n-                break;\\n-            } catch (IOException ioe) {\\n-                if (ioe.getMessage().startsWith(\"Access is denied\")) {\\n-                    accessDeniedCounter++;\\n-                    try {\\n-                        Thread.sleep(100);\\n-                    } catch (InterruptedException ignore) {\\n-                    }\\n-                }\\n-                if (i == MAXTRIES - 1) {\\n-                    if (accessDeniedCounter == MAXTRIES) {\\n-                        String msg = \"Access is denied.\\\\nWe tried \" + accessDeniedCounter +\\n-                                \" times to create a temporary directory and failed each time.\" +\\n-                                \" If you are on Windows, you are possibly victim to\" +\\n-                                \" http:\/\/bugs.sun.com\/bugdatabase\/view_bug.do?bug_id=6325169.\" +\\n-                                \" This is not a bug in Groovy.\";\\n-                        throw new IOException(msg);\\n-                    } else {\\n-                        throw ioe;\\n-                    }\\n-                }\\n-            }\\n-        }\\n-        return tempFile;\\n+        \/\/ more secure Files api doesn\\'t support suffix, so just append it to the prefix\\n+        return createTempDirNio(prefix + suffix);\\n+    }\\n+\\n+    private static File createTempDirNio(String prefix) throws IOException {\\n+        Path tempPath = Files.createTempDirectory(prefix);\\n+        return tempPath.toFile();\\n     }\\n \\n     \/**'}}",
            "message_norm":"groovy-9824: replace some old api usage with newer available variants (closes #1425)",
            "language":"en",
            "entities":"[('#1425', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/org\/codehaus\/groovy\/runtime\/DefaultGroovyStaticMethods.java'])",
            "num_files":1.0,
            "patch_content":"From bcbe5c4c76db83736166530647c024ac1e47ef28 Mon Sep 17 00:00:00 2001\nFrom: Paul King <paulk@asert.com.au>\nDate: Wed, 18 Nov 2020 23:08:16 +1000\nSubject: [PATCH] GROOVY-9824: replace some old api usage with newer available\n variants (closes #1425)\n\n---\n ...\/runtime\/DefaultGroovyStaticMethods.java   | 47 ++++++-------------\n 1 file changed, 14 insertions(+), 33 deletions(-)\n\ndiff --git a\/src\/main\/java\/org\/codehaus\/groovy\/runtime\/DefaultGroovyStaticMethods.java b\/src\/main\/java\/org\/codehaus\/groovy\/runtime\/DefaultGroovyStaticMethods.java\nindex f6776371fe0..e4d37971e16 100644\n--- a\/src\/main\/java\/org\/codehaus\/groovy\/runtime\/DefaultGroovyStaticMethods.java\n+++ b\/src\/main\/java\/org\/codehaus\/groovy\/runtime\/DefaultGroovyStaticMethods.java\n@@ -27,6 +27,8 @@\n import java.lang.management.ManagementFactory;\n import java.lang.management.ThreadInfo;\n import java.lang.management.ThreadMXBean;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n import java.util.Arrays;\n import java.util.Locale;\n import java.util.ResourceBundle;\n@@ -211,42 +213,21 @@ public static ResourceBundle getBundle(ResourceBundle self, String bundleName, L\n     }\n \n     public static File createTempDir(File self) throws IOException {\n-        return createTempDir(self, \"groovy-generated-\", \"-tmpdir\");\n+        return createTempDir(self, \"groovy-generated-\", \"tmpdir-\");\n+    }\n+\n+    public static File createTempDir(File self, final String prefix) throws IOException {\n+        return createTempDirNio(prefix);\n     }\n \n     public static File createTempDir(File self, final String prefix, final String suffix) throws IOException {\n-        final int MAXTRIES = 3;\n-        int accessDeniedCounter = 0;\n-        File tempFile=null;\n-        for (int i=0; i<MAXTRIES; i++) {\n-            try {\n-                tempFile = File.createTempFile(prefix, suffix);\n-                tempFile.delete();\n-                tempFile.mkdirs();\n-                break;\n-            } catch (IOException ioe) {\n-                if (ioe.getMessage().startsWith(\"Access is denied\")) {\n-                    accessDeniedCounter++;\n-                    try {\n-                        Thread.sleep(100);\n-                    } catch (InterruptedException ignore) {\n-                    }\n-                }\n-                if (i == MAXTRIES - 1) {\n-                    if (accessDeniedCounter == MAXTRIES) {\n-                        String msg = \"Access is denied.\\nWe tried \" + accessDeniedCounter +\n-                                \" times to create a temporary directory and failed each time.\" +\n-                                \" If you are on Windows, you are possibly victim to\" +\n-                                \" http:\/\/bugs.sun.com\/bugdatabase\/view_bug.do?bug_id=6325169.\" +\n-                                \" This is not a bug in Groovy.\";\n-                        throw new IOException(msg);\n-                    } else {\n-                        throw ioe;\n-                    }\n-                }\n-            }\n-        }\n-        return tempFile;\n+        \/\/ more secure Files api doesn't support suffix, so just append it to the prefix\n+        return createTempDirNio(prefix + suffix);\n+    }\n+\n+    private static File createTempDirNio(String prefix) throws IOException {\n+        Path tempPath = Files.createTempDirectory(prefix);\n+        return tempPath.toFile();\n     }\n \n     \/**"
        },
        {
            "index":94,
            "vuln_id":"GHSA-8jxq-75rw-fhj9",
            "cwe_id":"{'CWE-94'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/pyeve\/eve\/commit\/f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98'}",
            "dataset":"osv",
            "summary":"Eve allows execution of arbitrary code via Code Injection in the where parameter io\/mongo\/parser.py in Eve (aka pyeve) before 0.7.5 allows remote attackers to execute arbitrary code via Code Injection in the where parameter.",
            "published_date":"2018-07-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/pyeve\/eve",
            "commit_href":"https:\/\/github.com\/pyeve\/eve\/commit\/f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98",
            "commit_sha":"f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98",
            "patch":"SINGLE",
            "chain_ord":"['f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98']",
            "before_first_fix_commit":"{'6d1526bf8ad93a3d259b1fd357f0c40e4ed9dbf5'}",
            "last_fix_commit":"f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/14\/2018, 16:51:26",
            "message":"fix mongo visitor parser",
            "author":"Nicola Iarocci",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 6, 'total': 15}",
            "files":"{'eve\/io\/mongo\/parser.py': {'additions': 9, 'deletions': 6, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pyeve\/eve\/raw\/f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98\/eve%2Fio%2Fmongo%2Fparser.py', 'patch': '@@ -122,16 +122,19 @@ def visit_Call(self, node):\\n         datetime().\\n         \"\"\"\\n         if isinstance(node.func, ast.Name):\\n-            expr = None\\n             if node.func.id == \\'ObjectId\\':\\n-                expr = \"(\\'\" + node.args[0].s + \"\\')\"\\n+                try:\\n+                    self.current_value = ObjectId(node.args[0].s)\\n+                except:\\n+                    pass\\n             elif node.func.id == \\'datetime\\':\\n                 values = []\\n                 for arg in node.args:\\n-                    values.append(str(arg.n))\\n-                expr = \"(\" + \", \".join(values) + \")\"\\n-            if expr:\\n-                self.current_value = eval(node.func.id + expr)\\n+                    values.append(arg.n)\\n+                try:\\n+                    self.current_value = datetime(*values)\\n+                except:\\n+                    pass\\n \\n     def visit_Attribute(self, node):\\n         \"\"\" Attribute handler (\\'Contact.Id\\').'}}",
            "message_norm":"fix mongo visitor parser",
            "language":"it",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['eve\/io\/mongo\/parser.py'])",
            "num_files":1.0,
            "patch_content":"From f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98 Mon Sep 17 00:00:00 2001\nFrom: Nicola Iarocci <nicola@nicolaiarocci.com>\nDate: Sun, 14 Jan 2018 17:51:26 +0100\nSubject: [PATCH] fix mongo visitor parser\n\n---\n eve\/io\/mongo\/parser.py | 15 +++++++++------\n 1 file changed, 9 insertions(+), 6 deletions(-)\n\ndiff --git a\/eve\/io\/mongo\/parser.py b\/eve\/io\/mongo\/parser.py\nindex 6b751203b..ac633c098 100644\n--- a\/eve\/io\/mongo\/parser.py\n+++ b\/eve\/io\/mongo\/parser.py\n@@ -122,16 +122,19 @@ def visit_Call(self, node):\n         datetime().\n         \"\"\"\n         if isinstance(node.func, ast.Name):\n-            expr = None\n             if node.func.id == 'ObjectId':\n-                expr = \"('\" + node.args[0].s + \"')\"\n+                try:\n+                    self.current_value = ObjectId(node.args[0].s)\n+                except:\n+                    pass\n             elif node.func.id == 'datetime':\n                 values = []\n                 for arg in node.args:\n-                    values.append(str(arg.n))\n-                expr = \"(\" + \", \".join(values) + \")\"\n-            if expr:\n-                self.current_value = eval(node.func.id + expr)\n+                    values.append(arg.n)\n+                try:\n+                    self.current_value = datetime(*values)\n+                except:\n+                    pass\n \n     def visit_Attribute(self, node):\n         \"\"\" Attribute handler ('Contact.Id')."
        },
        {
            "index":446,
            "vuln_id":"GHSA-mg5h-9rhq-4cqx",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/42c0d9813df3035728b36116a6ce9116e6fa8ed3'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in ShowDoc ShowDoc is vulnerable to stored cross-site scripting through file upload in versions 2.10.3 and prior. A patch is available and anticipated to be part of version 2.10.4.",
            "published_date":"2022-03-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/42c0d9813df3035728b36116a6ce9116e6fa8ed3",
            "commit_sha":"42c0d9813df3035728b36116a6ce9116e6fa8ed3",
            "patch":"SINGLE",
            "chain_ord":"['42c0d9813df3035728b36116a6ce9116e6fa8ed3']",
            "before_first_fix_commit":"{'818d7fe731f452acccacf731ce47ec27ad68049c'}",
            "last_fix_commit":"42c0d9813df3035728b36116a6ce9116e6fa8ed3",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/13\/2022, 02:27:22",
            "message":"file upload bug",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/42c0d9813df3035728b36116a6ce9116e6fa8ed3\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -300,6 +300,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t $isDangerStr($filename , \".php\")\\n \\t\\t\\t|| $isDangerStr($filename , \".svg\")\\n \\t\\t\\t|| $isDangerStr($filename , \".htm\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".shtm\")\\n \\t\\t\\t|| $isDangerStr($filename , \"%\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n \\t\\t) {'}}",
            "message_norm":"file upload bug",
            "language":"ro",
            "entities":"[('bug', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
            "num_files":1.0,
            "patch_content":"From 42c0d9813df3035728b36116a6ce9116e6fa8ed3 Mon Sep 17 00:00:00 2001\nFrom: star7th <xing7th@gmail.com>\nDate: Sun, 13 Mar 2022 10:27:22 +0800\nSubject: [PATCH] file upload bug\n\n---\n server\/Application\/Api\/Model\/AttachmentModel.class.php | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/server\/Application\/Api\/Model\/AttachmentModel.class.php b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\nindex d84898984..32fb24799 100644\n--- a\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n+++ b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n@@ -300,6 +300,7 @@ public function isDangerFilename($filename){\n \t\t\t $isDangerStr($filename , \".php\")\n \t\t\t|| $isDangerStr($filename , \".svg\")\n \t\t\t|| $isDangerStr($filename , \".htm\")\n+\t\t\t|| $isDangerStr($filename , \".shtm\")\n \t\t\t|| $isDangerStr($filename , \"%\")\n \t\t\t|| $isDangerStr($filename , \".xml\")\n \t\t) {"
        },
        {
            "index":320,
            "vuln_id":"GHSA-v923-w3x8-wh69",
            "cwe_id":"{'CWE-384'}",
            "score":4.8,
            "chain":"{'https:\/\/github.com\/jaredhanson\/passport\/commit\/7e9b9cf4d7be02428e963fc729496a45baeea608'}",
            "dataset":"osv",
            "summary":"Passport before 0.6.0 vulnerable to session regeneration when a users logs in or out This affects the package passport before 0.6.0. When a user logs in or logs out, the session is regenerated instead of being closed.",
            "published_date":"2022-07-02",
            "chain_len":1,
            "project":"https:\/\/github.com\/jaredhanson\/passport",
            "commit_href":"https:\/\/github.com\/jaredhanson\/passport\/commit\/7e9b9cf4d7be02428e963fc729496a45baeea608",
            "commit_sha":"7e9b9cf4d7be02428e963fc729496a45baeea608",
            "patch":"SINGLE",
            "chain_ord":"['7e9b9cf4d7be02428e963fc729496a45baeea608']",
            "before_first_fix_commit":"{'5e6d92f1ef2adf21b54492cc86a7c066ef3f1e98'}",
            "last_fix_commit":"7e9b9cf4d7be02428e963fc729496a45baeea608",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/17\/2022, 15:15:54",
            "message":"Regenerate session on login.",
            "author":"Jared Hanson",
            "comments":null,
            "stats":"{'additions': 20, 'deletions': 10, 'total': 30}",
            "files":"{'lib\/sessionmanager.js': {'additions': 20, 'deletions': 10, 'changes': 30, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jaredhanson\/passport\/raw\/7e9b9cf4d7be02428e963fc729496a45baeea608\/lib%2Fsessionmanager.js', 'patch': \"@@ -10,24 +10,34 @@ function SessionManager(options, serializeUser) {\\n }\\n \\n SessionManager.prototype.logIn = function(req, user, cb) {\\n+  console.log('SM: logIn');\\n+  \\n   var self = this;\\n-  this._serializeUser(user, req, function(err, obj) {\\n+  req.session.regenerate(function(err) {\\n     if (err) {\\n       return cb(err);\\n     }\\n-    \/\/ TODO: Error if session isn't available here.\\n-    if (!req.session) {\\n-      req.session = {};\\n-    }\\n-    if (!req.session[self._key]) {\\n-      req.session[self._key] = {};\\n-    }\\n-    req.session[self._key].user = obj;\\n-    cb();\\n+    \\n+    self._serializeUser(user, req, function(err, obj) {\\n+      if (err) {\\n+        return cb(err);\\n+      }\\n+      \/\/ TODO: Error if session isn't available here.\\n+      if (!req.session) {\\n+        req.session = {};\\n+      }\\n+      if (!req.session[self._key]) {\\n+        req.session[self._key] = {};\\n+      }\\n+      req.session[self._key].user = obj;\\n+      cb();\\n+    });\\n   });\\n }\\n \\n SessionManager.prototype.logOut = function(req, cb) {\\n+  console.log('SM: logOut');\\n+  \\n   if (req.session && req.session[this._key]) {\\n     delete req.session[this._key].user;\\n   }\"}}",
            "message_norm":"regenerate session on login.",
            "language":"en",
            "entities":"[('login', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/sessionmanager.js'])",
            "num_files":1.0,
            "patch_content":"From 7e9b9cf4d7be02428e963fc729496a45baeea608 Mon Sep 17 00:00:00 2001\nFrom: Jared Hanson <jaredhanson@gmail.com>\nDate: Tue, 17 May 2022 08:15:54 -0700\nSubject: [PATCH] Regenerate session on login.\n\n---\n lib\/sessionmanager.js | 30 ++++++++++++++++++++----------\n 1 file changed, 20 insertions(+), 10 deletions(-)\n\ndiff --git a\/lib\/sessionmanager.js b\/lib\/sessionmanager.js\nindex 3d5c51ca..8647b9cc 100644\n--- a\/lib\/sessionmanager.js\n+++ b\/lib\/sessionmanager.js\n@@ -10,24 +10,34 @@ function SessionManager(options, serializeUser) {\n }\n \n SessionManager.prototype.logIn = function(req, user, cb) {\n+  console.log('SM: logIn');\n+  \n   var self = this;\n-  this._serializeUser(user, req, function(err, obj) {\n+  req.session.regenerate(function(err) {\n     if (err) {\n       return cb(err);\n     }\n-    \/\/ TODO: Error if session isn't available here.\n-    if (!req.session) {\n-      req.session = {};\n-    }\n-    if (!req.session[self._key]) {\n-      req.session[self._key] = {};\n-    }\n-    req.session[self._key].user = obj;\n-    cb();\n+    \n+    self._serializeUser(user, req, function(err, obj) {\n+      if (err) {\n+        return cb(err);\n+      }\n+      \/\/ TODO: Error if session isn't available here.\n+      if (!req.session) {\n+        req.session = {};\n+      }\n+      if (!req.session[self._key]) {\n+        req.session[self._key] = {};\n+      }\n+      req.session[self._key].user = obj;\n+      cb();\n+    });\n   });\n }\n \n SessionManager.prototype.logOut = function(req, cb) {\n+  console.log('SM: logOut');\n+  \n   if (req.session && req.session[this._key]) {\n     delete req.session[this._key].user;\n   }"
        },
        {
            "index":294,
            "vuln_id":"GHSA-x92h-wmg2-6hp7",
            "cwe_id":"{'CWE-89', 'CWE-79'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/symfony\/symfony\/commit\/944e60f083c3bffbc6a0b5112db127a10a66a8ec'}",
            "dataset":"osv",
            "summary":"Invalid HTTP method overrides allow possible XSS or other attacks in Symfony In Symfony before 2.7.51, 2.8.x before 2.8.50, 3.x before 3.4.26, 4.x before 4.1.12, and 4.2.x before 4.2.7, HTTP Methods provided as verbs or using the override header may be treated as trusted input, but they are not validated, possibly causing SQL injection or XSS. This is related to symfony\/http-foundation.",
            "published_date":"2019-12-02",
            "chain_len":1,
            "project":"https:\/\/github.com\/symfony\/symfony",
            "commit_href":"https:\/\/github.com\/symfony\/symfony\/commit\/944e60f083c3bffbc6a0b5112db127a10a66a8ec",
            "commit_sha":"944e60f083c3bffbc6a0b5112db127a10a66a8ec",
            "patch":"SINGLE",
            "chain_ord":"['944e60f083c3bffbc6a0b5112db127a10a66a8ec']",
            "before_first_fix_commit":"{'b7bdf2ce435b0aeb8edb8349f0456f7ca3d21035'}",
            "last_fix_commit":"944e60f083c3bffbc6a0b5112db127a10a66a8ec",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/02\/2019, 16:28:16",
            "message":"[HttpFoundation] reject invalid method override",
            "author":"Nicolas Grekas",
            "comments":"{'com_1': {'author': 'jirayutza1', 'datetime': '12\/04\/2019, 20:11:46', 'body': '944e60f'}}",
            "stats":"{'additions': 29, 'deletions': 14, 'total': 43}",
            "files":"{'src\/Symfony\/Component\/HttpFoundation\/Request.php': {'additions': 29, 'deletions': 14, 'changes': 43, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/symfony\/symfony\/raw\/944e60f083c3bffbc6a0b5112db127a10a66a8ec\/src%2FSymfony%2FComponent%2FHttpFoundation%2FRequest.php', 'patch': '@@ -1346,22 +1346,37 @@ public function setMethod($method)\\n      *\/\\n     public function getMethod()\\n     {\\n-        if (null === $this->method) {\\n-            $this->method = strtoupper($this->server->get(\\'REQUEST_METHOD\\', \\'GET\\'));\\n-\\n-            if (\\'POST\\' === $this->method) {\\n-                if ($method = $this->headers->get(\\'X-HTTP-METHOD-OVERRIDE\\')) {\\n-                    $this->method = strtoupper($method);\\n-                } elseif (self::$httpMethodParameterOverride) {\\n-                    $method = $this->request->get(\\'_method\\', $this->query->get(\\'_method\\', \\'POST\\'));\\n-                    if (\\\\is_string($method)) {\\n-                        $this->method = strtoupper($method);\\n-                    }\\n-                }\\n-            }\\n+        if (null !== $this->method) {\\n+            return $this->method;\\n+        }\\n+\\n+        $this->method = strtoupper($this->server->get(\\'REQUEST_METHOD\\', \\'GET\\'));\\n+\\n+        if (\\'POST\\' !== $this->method) {\\n+            return $this->method;\\n+        }\\n+\\n+        $method = $this->headers->get(\\'X-HTTP-METHOD-OVERRIDE\\');\\n+\\n+        if (!$method && self::$httpMethodParameterOverride) {\\n+            $method = $this->request->get(\\'_method\\', $this->query->get(\\'_method\\', \\'POST\\'));\\n+        }\\n+\\n+        if (!\\\\is_string($method)) {\\n+            return $this->method;\\n+        }\\n+\\n+        $method = strtoupper($method);\\n+\\n+        if (\\\\in_array($method, [\\'GET\\', \\'HEAD\\', \\'POST\\', \\'PUT\\', \\'DELETE\\', \\'CONNECT\\', \\'OPTIONS\\', \\'PATCH\\', \\'PURGE\\', \\'TRACE\\'], true)) {\\n+            return $this->method = $method;\\n+        }\\n+\\n+        if (!preg_match(\\'\/^[A-Z]++$\/D\\', $method)) {\\n+            throw new SuspiciousOperationException(sprintf(\\'Invalid method override \"%s\".\\', $method));\\n         }\\n \\n-        return $this->method;\\n+        return $this->method = $method;\\n     }\\n \\n     \/**'}}",
            "message_norm":"[httpfoundation] reject invalid method override",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Symfony\/Component\/HttpFoundation\/Request.php'])",
            "num_files":1.0,
            "patch_content":"From 944e60f083c3bffbc6a0b5112db127a10a66a8ec Mon Sep 17 00:00:00 2001\nFrom: Nicolas Grekas <nicolas.grekas@gmail.com>\nDate: Tue, 2 Apr 2019 18:28:16 +0200\nSubject: [PATCH] [HttpFoundation] reject invalid method override\n\n---\n ...\/Component\/HttpFoundation\/Request.php      | 43 +++++++++++++------\n 1 file changed, 29 insertions(+), 14 deletions(-)\n\ndiff --git a\/src\/Symfony\/Component\/HttpFoundation\/Request.php b\/src\/Symfony\/Component\/HttpFoundation\/Request.php\nindex fe1a33a597a3e..ae3f51b1724fc 100644\n--- a\/src\/Symfony\/Component\/HttpFoundation\/Request.php\n+++ b\/src\/Symfony\/Component\/HttpFoundation\/Request.php\n@@ -1346,22 +1346,37 @@ public function setMethod($method)\n      *\/\n     public function getMethod()\n     {\n-        if (null === $this->method) {\n-            $this->method = strtoupper($this->server->get('REQUEST_METHOD', 'GET'));\n-\n-            if ('POST' === $this->method) {\n-                if ($method = $this->headers->get('X-HTTP-METHOD-OVERRIDE')) {\n-                    $this->method = strtoupper($method);\n-                } elseif (self::$httpMethodParameterOverride) {\n-                    $method = $this->request->get('_method', $this->query->get('_method', 'POST'));\n-                    if (\\is_string($method)) {\n-                        $this->method = strtoupper($method);\n-                    }\n-                }\n-            }\n+        if (null !== $this->method) {\n+            return $this->method;\n+        }\n+\n+        $this->method = strtoupper($this->server->get('REQUEST_METHOD', 'GET'));\n+\n+        if ('POST' !== $this->method) {\n+            return $this->method;\n+        }\n+\n+        $method = $this->headers->get('X-HTTP-METHOD-OVERRIDE');\n+\n+        if (!$method && self::$httpMethodParameterOverride) {\n+            $method = $this->request->get('_method', $this->query->get('_method', 'POST'));\n+        }\n+\n+        if (!\\is_string($method)) {\n+            return $this->method;\n+        }\n+\n+        $method = strtoupper($method);\n+\n+        if (\\in_array($method, ['GET', 'HEAD', 'POST', 'PUT', 'DELETE', 'CONNECT', 'OPTIONS', 'PATCH', 'PURGE', 'TRACE'], true)) {\n+            return $this->method = $method;\n+        }\n+\n+        if (!preg_match('\/^[A-Z]++$\/D', $method)) {\n+            throw new SuspiciousOperationException(sprintf('Invalid method override \"%s\".', $method));\n         }\n \n-        return $this->method;\n+        return $this->method = $method;\n     }\n \n     \/**"
        },
        {
            "index":195,
            "vuln_id":"GHSA-437j-5qc3-c589",
            "cwe_id":"{'CWE-601'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/187e949daf7dea6f10b80da70988f0f86444eeff'}",
            "dataset":"osv",
            "summary":"Open Redirect in microweber Open Redirect in GitHub repository microweber\/microweber prior to 1.2.19.",
            "published_date":"2022-06-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/187e949daf7dea6f10b80da70988f0f86444eeff",
            "commit_sha":"187e949daf7dea6f10b80da70988f0f86444eeff",
            "patch":"SINGLE",
            "chain_ord":"['187e949daf7dea6f10b80da70988f0f86444eeff']",
            "before_first_fix_commit":"{'e6361e9fdcaaf2b27fb664beaa2fb33d46e3542e'}",
            "last_fix_commit":"187e949daf7dea6f10b80da70988f0f86444eeff",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/29\/2022, 15:14:26",
            "message":"update",
            "author":"Peter Ivanov",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 0, 'total': 8}",
            "files":"{'src\/MicroweberPackages\/Helper\/UrlManager.php': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/187e949daf7dea6f10b80da70988f0f86444eeff\/src%2FMicroweberPackages%2FHelper%2FUrlManager.php', 'patch': \"@@ -105,7 +105,15 @@ public function redirect($url)\\n \\n         $redirectUrl = site_url();\\n         $parseUrl = parse_url($url);\\n+\\n         if (isset($parseUrl['host'])) {\\n+            if(isset($parseUrl['user']) and $parseUrl['user']){\\n+                return \\\\Redirect::to(site_url());\\n+            }\\n+\\n+            if(isset($parseUrl['pass']) and $parseUrl['pass']){\\n+                return \\\\Redirect::to(site_url());\\n+            }\\n             if ($parseUrl['host'] == site_hostname()) {\\n                 $redirectUrl = $url;\\n             }\"}}",
            "message_norm":"update",
            "language":"ro",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/Helper\/UrlManager.php'])",
            "num_files":1.0,
            "patch_content":"From 187e949daf7dea6f10b80da70988f0f86444eeff Mon Sep 17 00:00:00 2001\nFrom: Peter Ivanov <peter@microweber.com>\nDate: Wed, 29 Jun 2022 18:14:26 +0300\nSubject: [PATCH] update\n\n---\n src\/MicroweberPackages\/Helper\/UrlManager.php | 8 ++++++++\n 1 file changed, 8 insertions(+)\n\ndiff --git a\/src\/MicroweberPackages\/Helper\/UrlManager.php b\/src\/MicroweberPackages\/Helper\/UrlManager.php\nindex f848092abad..d8535116544 100644\n--- a\/src\/MicroweberPackages\/Helper\/UrlManager.php\n+++ b\/src\/MicroweberPackages\/Helper\/UrlManager.php\n@@ -105,7 +105,15 @@ public function redirect($url)\n \n         $redirectUrl = site_url();\n         $parseUrl = parse_url($url);\n+\n         if (isset($parseUrl['host'])) {\n+            if(isset($parseUrl['user']) and $parseUrl['user']){\n+                return \\Redirect::to(site_url());\n+            }\n+\n+            if(isset($parseUrl['pass']) and $parseUrl['pass']){\n+                return \\Redirect::to(site_url());\n+            }\n             if ($parseUrl['host'] == site_hostname()) {\n                 $redirectUrl = $url;\n             }"
        },
        {
            "index":393,
            "vuln_id":"GHSA-7r87-cj48-wj45",
            "cwe_id":"{'CWE-253', 'CWE-394', 'CWE-754'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/Tethik\/flask-session-captcha\/commit\/2811ae23a38d33b620fb7a07de8837c6d65c13e4'}",
            "dataset":"osv",
            "summary":"Potential Captcha Validate Bypass in flask-session-captcha ### Impact\nflask-session-captcha is a package which allows users to extend Flask by adding an image based captcha stored in a server side session.\n\nThe `captcha.validate()` function would return `None` if passed no value (e.g. by submitting a request with an empty form).\n\nIf implementing users were checking the return value to be **False**, the captcha verification check could be bypassed.\n\nSample vulnerable code:\n```python\nif captcha.validate() == False:\n    ... # abort\nelse:\n   ... # do stuff\n```\n\n### Patches\nA new version (1.2.1) is available that fixes the issue.\n\n### Workarounds\nUsers can workaround the issue by not explicitly checking that the value is False. \n\nChecking the return value less explicitly should still work. \n\n```python\nif not captcha.validate():\n    ... # abort\nelse:\n   ... # do stuff\n```\n\n```python\nif captcha.validate():\n    ... # do stuff\nelse:\n   ... # abort\n```\n\n### References\nhttps:\/\/github.com\/Tethik\/flask-session-captcha\/pull\/27\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the github repo](https:\/\/github.com\/Tethik\/flask-session-captcha)",
            "published_date":"2022-04-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/Tethik\/flask-session-captcha",
            "commit_href":"https:\/\/github.com\/Tethik\/flask-session-captcha\/commit\/2811ae23a38d33b620fb7a07de8837c6d65c13e4",
            "commit_sha":"2811ae23a38d33b620fb7a07de8837c6d65c13e4",
            "patch":"SINGLE",
            "chain_ord":"['2811ae23a38d33b620fb7a07de8837c6d65c13e4']",
            "before_first_fix_commit":"{'50b4053766b89e9322cfbd281c91cb4e8898d3f7'}",
            "last_fix_commit":"2811ae23a38d33b620fb7a07de8837c6d65c13e4",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/23\/2022, 21:40:14",
            "message":"add some extra tests to ensure False is returned",
            "author":"Joakim Uddholm",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 1, 'total': 8}",
            "files":"{'test_flask_session_captcha.py': {'additions': 7, 'deletions': 1, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Tethik\/flask-session-captcha\/raw\/2811ae23a38d33b620fb7a07de8837c6d65c13e4\/test_flask_session_captcha.py', 'patch': '@@ -98,7 +98,13 @@ def test_captcha_validate_value(self):\\n         with self.app.test_request_context(\\'\/\\'):\\n             captcha.generate()\\n             answer = captcha.get_answer()\\n-            assert not captcha.validate(value=\"wrong\")\\n+            assert captcha.validate(value=None) == False\\n+            captcha.generate()\\n+            answer = captcha.get_answer()\\n+            assert captcha.validate(value=\"\") == False\\n+            captcha.generate()\\n+            answer = captcha.get_answer()\\n+            assert captcha.validate(value=\"wrong\") == False\\n             captcha.generate()\\n             answer = captcha.get_answer()\\n             assert captcha.validate(value=answer)'}}",
            "message_norm":"add some extra tests to ensure false is returned",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('ensure', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['test_flask_session_captcha.py'])",
            "num_files":1.0,
            "patch_content":"From 2811ae23a38d33b620fb7a07de8837c6d65c13e4 Mon Sep 17 00:00:00 2001\nFrom: Joakim Uddholm <tethik@blacknode.se>\nDate: Sat, 23 Apr 2022 23:40:14 +0200\nSubject: [PATCH] add some extra tests to ensure False is returned\n\n---\n test_flask_session_captcha.py | 8 +++++++-\n 1 file changed, 7 insertions(+), 1 deletion(-)\n\ndiff --git a\/test_flask_session_captcha.py b\/test_flask_session_captcha.py\nindex edf5332..0e74412 100644\n--- a\/test_flask_session_captcha.py\n+++ b\/test_flask_session_captcha.py\n@@ -98,7 +98,13 @@ def test_captcha_validate_value(self):\n         with self.app.test_request_context('\/'):\n             captcha.generate()\n             answer = captcha.get_answer()\n-            assert not captcha.validate(value=\"wrong\")\n+            assert captcha.validate(value=None) == False\n+            captcha.generate()\n+            answer = captcha.get_answer()\n+            assert captcha.validate(value=\"\") == False\n+            captcha.generate()\n+            answer = captcha.get_answer()\n+            assert captcha.validate(value=\"wrong\") == False\n             captcha.generate()\n             answer = captcha.get_answer()\n             assert captcha.validate(value=answer)"
        },
        {
            "index":49,
            "vuln_id":"GHSA-ghww-cv4v-hmxx",
            "cwe_id":"{'CWE-352'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/756096da1260f29ff6f4532234d93d8e41dd5aa8'}",
            "dataset":"osv",
            "summary":"Cross-Site Request Forgery microweber microweber prior to version 1.2.11 is vulnerable to Cross-Site Request Forgery (CSRF).",
            "published_date":"2022-02-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/756096da1260f29ff6f4532234d93d8e41dd5aa8",
            "commit_sha":"756096da1260f29ff6f4532234d93d8e41dd5aa8",
            "patch":"SINGLE",
            "chain_ord":"['756096da1260f29ff6f4532234d93d8e41dd5aa8']",
            "before_first_fix_commit":"{'037744b21342f771f6a3de65ed0be936d47c3737'}",
            "last_fix_commit":"756096da1260f29ff6f4532234d93d8e41dd5aa8",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/16\/2022, 16:19:52",
            "message":"Update UserLogoutController.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 1, 'total': 7}",
            "files":"{'src\/MicroweberPackages\/User\/Http\/Controllers\/UserLogoutController.php': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/756096da1260f29ff6f4532234d93d8e41dd5aa8\/src%2FMicroweberPackages%2FUser%2FHttp%2FControllers%2FUserLogoutController.php', 'patch': '@@ -5,6 +5,7 @@\\n use App\\\\Http\\\\Resources\\\\User\\\\UserResource;\\n use Illuminate\\\\Http\\\\Request;\\n use Illuminate\\\\Routing\\\\Controller;\\n+use Illuminate\\\\Support\\\\Facades\\\\Auth;\\n use MicroweberPackages\\\\App\\\\Http\\\\Middleware\\\\SameSiteRefererMiddleware;\\n \\n class UserLogoutController extends Controller\\n@@ -42,7 +43,11 @@ public function index(Request $request)\\n \\n     public function submit(Request $request)\\n     {\\n-        return logout();\\n+        Auth::logout();\\n+\\n+        $url = site_url();\\n+\\n+        return app()->url_manager->redirect($url);\\n     }\\n \\n }'}}",
            "message_norm":"update userlogoutcontroller.php",
            "language":"fr",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/User\/Http\/Controllers\/UserLogoutController.php'])",
            "num_files":1.0,
            "patch_content":"From 756096da1260f29ff6f4532234d93d8e41dd5aa8 Mon Sep 17 00:00:00 2001\nFrom: Bozhidar Slaveykov <bobi@microweber.com>\nDate: Wed, 16 Feb 2022 18:19:52 +0200\nSubject: [PATCH] Update UserLogoutController.php\n\n---\n ...\/User\/Http\/Controllers\/UserLogoutController.php         | 7 ++++++-\n 1 file changed, 6 insertions(+), 1 deletion(-)\n\ndiff --git a\/src\/MicroweberPackages\/User\/Http\/Controllers\/UserLogoutController.php b\/src\/MicroweberPackages\/User\/Http\/Controllers\/UserLogoutController.php\nindex 2f9e658fcb3..4f83b197f01 100644\n--- a\/src\/MicroweberPackages\/User\/Http\/Controllers\/UserLogoutController.php\n+++ b\/src\/MicroweberPackages\/User\/Http\/Controllers\/UserLogoutController.php\n@@ -5,6 +5,7 @@\n use App\\Http\\Resources\\User\\UserResource;\n use Illuminate\\Http\\Request;\n use Illuminate\\Routing\\Controller;\n+use Illuminate\\Support\\Facades\\Auth;\n use MicroweberPackages\\App\\Http\\Middleware\\SameSiteRefererMiddleware;\n \n class UserLogoutController extends Controller\n@@ -42,7 +43,11 @@ public function index(Request $request)\n \n     public function submit(Request $request)\n     {\n-        return logout();\n+        Auth::logout();\n+\n+        $url = site_url();\n+\n+        return app()->url_manager->redirect($url);\n     }\n \n }"
        },
        {
            "index":917,
            "vuln_id":"GHSA-f7r3-p866-q9qr",
            "cwe_id":"{'CWE-400'}",
            "score":3.7,
            "chain":"{'https:\/\/github.com\/Twipped\/ircdkit\/pull\/2\/commits\/595ed02cde517fad57854d2ac2855a09a626e665', 'https:\/\/github.com\/Twipped\/ircdkit\/commit\/f0cc6dc913ec17b499fa33a676bb72c624456f2c'}",
            "dataset":"osv",
            "summary":"ircdkit vulnerable to Denial of Service due to unhandled connection end event Versions of `ircdkit` 1.0.3 and prior are vulnerable to a remote denial of service.\n\n\n## Recommendation\n\nUpgrade to version 1.0.4.",
            "published_date":"2019-06-03",
            "chain_len":2,
            "project":"https:\/\/github.com\/Twipped\/ircdkit",
            "commit_href":"https:\/\/github.com\/Twipped\/ircdkit\/pull\/2\/commits\/595ed02cde517fad57854d2ac2855a09a626e665",
            "commit_sha":"595ed02cde517fad57854d2ac2855a09a626e665",
            "patch":"MULTI",
            "chain_ord":"['f0cc6dc913ec17b499fa33a676bb72c624456f2c', '595ed02cde517fad57854d2ac2855a09a626e665']",
            "before_first_fix_commit":"{'74aa751e75a90af34ef63377fcbd41285d155380'}",
            "last_fix_commit":"595ed02cde517fad57854d2ac2855a09a626e665",
            "chain_ord_pos":2.0,
            "commit_datetime":"05\/30\/2019, 03:10:50",
            "message":"Update index.js\n\ncorrected unhandled connection 'end' event, fixes issue #1",
            "author":"Trinity Fox",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lib\/index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Twipped\/ircdkit\/raw\/595ed02cde517fad57854d2ac2855a09a626e665\/lib%2Findex.js', 'patch': \"@@ -47,7 +47,7 @@ function create (options) {\\n \\n \\t\\tclient.on('end', function () {\\n \\t\\t\\tdebug('connection ended');\\n-\\t\\t\\tremoveClient(client);\\n+\\t\\t\\tclient.close();\\n \\t\\t\\tapp.emit('connection:end', client);\\n \\t\\t});\"}}",
            "message_norm":"update index.js\n\ncorrected unhandled connection 'end' event, fixes issue #1",
            "language":"en",
            "entities":"[('update', 'ACTION', ''), ('#1', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/index.js'])",
            "num_files":1.0,
            "patch_content":"From 595ed02cde517fad57854d2ac2855a09a626e665 Mon Sep 17 00:00:00 2001\nFrom: Trinity Fox <671259+cottonflop@users.noreply.github.com>\nDate: Wed, 29 May 2019 20:10:50 -0700\nSubject: [PATCH] Update index.js\n\ncorrected unhandled connection 'end' event, fixes issue #1\n---\n lib\/index.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/lib\/index.js b\/lib\/index.js\nindex 5088eca..6349746 100644\n--- a\/lib\/index.js\n+++ b\/lib\/index.js\n@@ -47,7 +47,7 @@ function create (options) {\n \n \t\tclient.on('end', function () {\n \t\t\tdebug('connection ended');\n-\t\t\tremoveClient(client);\n+\t\t\tclient.close();\n \t\t\tapp.emit('connection:end', client);\n \t\t});"
        },
        {
            "index":877,
            "vuln_id":"GHSA-54qq-9chj-rxhv",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in LiveHelperChat LiveHelperChat prior to version 3.93 contains a cross-site scripting vulnerability.",
            "published_date":"2022-01-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/livehelperchat\/livehelperchat",
            "commit_href":"https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb",
            "commit_sha":"8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb",
            "patch":"SINGLE",
            "chain_ord":"['8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb']",
            "before_first_fix_commit":"{'d7b85466c217b3750eaccc8703ce54ba8785c4d3'}",
            "last_fix_commit":"8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/27\/2022, 20:08:18",
            "message":"Escape in user box",
            "author":"Remigijus Kiminas",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lhc_web\/design\/defaulttheme\/tpl\/pagelayouts\/parts\/user_box.tpl.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/LiveHelperChat\/livehelperchat\/raw\/8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb\/lhc_web%2Fdesign%2Fdefaulttheme%2Ftpl%2Fpagelayouts%2Fparts%2Fuser_box.tpl.php', 'patch': '@@ -12,7 +12,7 @@\\n \\n ?>\\n <li class=\"nav-item dropleft\">\\n-    <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\"><?php echo htmlspecialchars($UserData->name),\\' \\',htmlspecialchars($UserData->surname)?><\/a>\\n+    <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\" ng-non-bindable><?php echo htmlspecialchars($UserData->name),\\' \\',htmlspecialchars($UserData->surname)?><\/a>\\n     <div class=\"dropdown-menu\" style=\"min-width: 25rem;\" role=\"menu\">\\n \\n         <div class=\"row\">'}}",
            "message_norm":"escape in user box",
            "language":"en",
            "entities":"[('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lhc_web\/design\/defaulttheme\/tpl\/pagelayouts\/parts\/user_box.tpl.php'])",
            "num_files":1.0,
            "patch_content":"From 8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb Mon Sep 17 00:00:00 2001\nFrom: Remigijus Kiminas <remdex@gmail.com>\nDate: Thu, 27 Jan 2022 15:08:18 -0500\nSubject: [PATCH] Escape in user box\n\n---\n ...\/design\/defaulttheme\/tpl\/pagelayouts\/parts\/user_box.tpl.php  | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/lhc_web\/design\/defaulttheme\/tpl\/pagelayouts\/parts\/user_box.tpl.php b\/lhc_web\/design\/defaulttheme\/tpl\/pagelayouts\/parts\/user_box.tpl.php\nindex 9e5ea86a27..2c1b42a521 100644\n--- a\/lhc_web\/design\/defaulttheme\/tpl\/pagelayouts\/parts\/user_box.tpl.php\n+++ b\/lhc_web\/design\/defaulttheme\/tpl\/pagelayouts\/parts\/user_box.tpl.php\n@@ -12,7 +12,7 @@\n \n ?>\n <li class=\"nav-item dropleft\">\n-    <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\"><?php echo htmlspecialchars($UserData->name),' ',htmlspecialchars($UserData->surname)?><\/a>\n+    <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\" ng-non-bindable><?php echo htmlspecialchars($UserData->name),' ',htmlspecialchars($UserData->surname)?><\/a>\n     <div class=\"dropdown-menu\" style=\"min-width: 25rem;\" role=\"menu\">\n \n         <div class=\"row\">"
        },
        {
            "index":606,
            "vuln_id":"GHSA-j47c-j42c-mwqq",
            "cwe_id":"{'CWE-670'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/solana-labs\/solana-pay\/commit\/ac6ce0d0a81137700874a8bf5a7caac3be999fad'}",
            "dataset":"osv",
            "summary":"Solana Pay Vulnerable to Weakness in Transfer Validation Logic ### Description\nWhen a Solana Pay transaction is located using a [reference key](https:\/\/github.com\/solana-labs\/solana-pay\/blob\/master\/SPEC.md#reference), it may be checked to represent a transfer of the desired amount to the recipient, using the supplied [`validateTransfer` function](https:\/\/github.com\/solana-labs\/solana-pay\/blob\/master\/core\/src\/validateTransfer.ts). An edge case regarding this mechanism could cause the validation logic to validate multiple transfers.\n\n### Impact\nMost known Solana Pay point of sale applications are currently run on physical point of sale devices, which makes this issue unlikely to occur. However, there may be web-based point of sale applications using the protocol where it may be more likely to occur.\n\n### Patches\nThis issue has been patched as of version [`0.2.1`](https:\/\/www.npmjs.com\/package\/@solana\/pay\/v\/0.2.1). Users of the Solana Pay SDK should upgrade to it.",
            "published_date":"2022-08-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/solana-labs\/solana-pay",
            "commit_href":"https:\/\/github.com\/solana-labs\/solana-pay\/commit\/ac6ce0d0a81137700874a8bf5a7caac3be999fad",
            "commit_sha":"ac6ce0d0a81137700874a8bf5a7caac3be999fad",
            "patch":"SINGLE",
            "chain_ord":"['ac6ce0d0a81137700874a8bf5a7caac3be999fad']",
            "before_first_fix_commit":"{'f41701dc7931f7882c6eb0582c9ddd796eb9d3aa'}",
            "last_fix_commit":"ac6ce0d0a81137700874a8bf5a7caac3be999fad",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/28\/2022, 17:15:33",
            "message":"finish transfer validation implementation",
            "author":"Jordan Sexton",
            "comments":null,
            "stats":"{'additions': 60, 'deletions': 18, 'total': 78}",
            "files":"{'core\/src\/validateTransfer.ts': {'additions': 60, 'deletions': 18, 'changes': 78, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/solana-labs\/solana-pay\/raw\/ac6ce0d0a81137700874a8bf5a7caac3be999fad\/core%2Fsrc%2FvalidateTransfer.ts', 'patch': \"@@ -1,15 +1,23 @@\\n-import { getAssociatedTokenAddress } from '@solana\/spl-token';\\n+import {\\n+    decodeInstruction,\\n+    getAssociatedTokenAddress,\\n+    isTransferCheckedInstruction,\\n+    isTransferInstruction,\\n+} from '@solana\/spl-token';\\n import {\\n     ConfirmedTransactionMeta,\\n     Connection,\\n     Finality,\\n     LAMPORTS_PER_SOL,\\n     Message,\\n+    SystemInstruction,\\n+    Transaction,\\n     TransactionResponse,\\n     TransactionSignature,\\n } from '@solana\/web3.js';\\n import BigNumber from 'bignumber.js';\\n-import { Amount, Memo, Recipient, References, SPLToken } from '.\/types';\\n+import { MEMO_PROGRAM_ID } from '.\/constants';\\n+import { Amount, Memo, Recipient, Reference, References, SPLToken } from '.\/types';\\n \\n \/**\\n  * Thrown when a transaction doesn't contain a valid Solana Pay transfer.\\n@@ -58,33 +66,49 @@ export async function validateTransfer(\\n     if (!meta) throw new ValidateTransferError('missing meta');\\n     if (meta.err) throw meta.err;\\n \\n-    const [preAmount, postAmount] = splToken\\n-        ? await validateSPLTokenTransfer(message, meta, recipient, splToken)\\n-        : await validateSystemTransfer(message, meta, recipient);\\n+    if (reference && !Array.isArray(reference)) {\\n+        reference = [reference];\\n+    }\\n \\n+    const [preAmount, postAmount] = splToken\\n+        ? await validateSPLTokenTransfer(message, meta, recipient, splToken, reference)\\n+        : await validateSystemTransfer(message, meta, recipient, reference);\\n     if (postAmount.minus(preAmount).lt(amount)) throw new ValidateTransferError('amount not transferred');\\n \\n-    if (reference) {\\n-        if (!Array.isArray(reference)) {\\n-            reference = [reference];\\n-        }\\n-\\n-        for (const pubkey of reference) {\\n-            if (!message.accountKeys.some((accountKey) => accountKey.equals(pubkey)))\\n-                throw new ValidateTransferError('reference not found');\\n-        }\\n+    if (memo) {\\n+        \/\/ Check that the second instruction is a memo instruction with the expected memo.\\n+        const transaction = Transaction.populate(message);\\n+        const instruction = transaction.instructions[1];\\n+        if (!instruction) throw new ValidateTransferError('missing memo instruction');\\n+        if (!instruction.programId.equals(MEMO_PROGRAM_ID)) throw new ValidateTransferError('invalid memo program');\\n+        if (!instruction.data.equals(Buffer.from(memo, 'utf8'))) throw new ValidateTransferError('invalid memo');\\n     }\\n \\n-    \/\/ FIXME: add memo check\\n-\\n     return response;\\n }\\n \\n async function validateSystemTransfer(\\n     message: Message,\\n     meta: ConfirmedTransactionMeta,\\n-    recipient: Recipient\\n+    recipient: Recipient,\\n+    references?: Reference[]\\n ): Promise<[BigNumber, BigNumber]> {\\n+    if (references) {\\n+        \/\/ Check that the first instruction is a system transfer instruction.\\n+        const transaction = Transaction.populate(message);\\n+        const instruction = transaction.instructions[0];\\n+        SystemInstruction.decodeTransfer(instruction);\\n+\\n+        \/\/ Check that the expected reference keys exactly match the extra keys provided to the instruction.\\n+        const [_from, _to, ...extraKeys] = instruction.keys;\\n+        const length = extraKeys.length;\\n+        if (length !== references.length) throw new ValidateTransferError('invalid references');\\n+\\n+        for (let i = 0; i < length; i++) {\\n+            if (!extraKeys[i].pubkey.equals(references[i])) throw new ValidateTransferError(`invalid reference ${i}`);\\n+        }\\n+    }\\n+\\n     const accountIndex = message.accountKeys.findIndex((pubkey) => pubkey.equals(recipient));\\n     if (accountIndex === -1) throw new ValidateTransferError('recipient not found');\\n \\n@@ -98,8 +122,26 @@ async function validateSPLTokenTransfer(\\n     message: Message,\\n     meta: ConfirmedTransactionMeta,\\n     recipient: Recipient,\\n-    splToken: SPLToken\\n+    splToken: SPLToken,\\n+    references?: Reference[]\\n ): Promise<[BigNumber, BigNumber]> {\\n+    if (references) {\\n+        \/\/ Check that the first instruction is an SPL token transfer instruction.\\n+        const transaction = Transaction.populate(message);\\n+        const instruction = decodeInstruction(transaction.instructions[0]);\\n+        if (!isTransferCheckedInstruction(instruction) && !isTransferInstruction(instruction))\\n+            throw new ValidateTransferError('invalid transfer');\\n+\\n+        \/\/ Check that the expected reference keys exactly match the extra keys provided to the instruction.\\n+        const extraKeys = instruction.keys.multiSigners;\\n+        const length = extraKeys.length;\\n+        if (length !== references.length) throw new ValidateTransferError('invalid references');\\n+\\n+        for (let i = 0; i < length; i++) {\\n+            if (!extraKeys[i].pubkey.equals(references[i])) throw new ValidateTransferError(`invalid reference ${i}`);\\n+        }\\n+    }\\n+\\n     const recipientATA = await getAssociatedTokenAddress(splToken, recipient);\\n     const accountIndex = message.accountKeys.findIndex((pubkey) => pubkey.equals(recipientATA));\\n     if (accountIndex === -1) throw new ValidateTransferError('recipient not found');\"}}",
            "message_norm":"finish transfer validation implementation",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['core\/src\/validateTransfer.ts'])",
            "num_files":1.0,
            "patch_content":"From ac6ce0d0a81137700874a8bf5a7caac3be999fad Mon Sep 17 00:00:00 2001\nFrom: Jordan Sexton <jordan@jordansexton.com>\nDate: Thu, 28 Jul 2022 12:15:33 -0500\nSubject: [PATCH] finish transfer validation implementation\n\n---\n core\/src\/validateTransfer.ts | 78 +++++++++++++++++++++++++++---------\n 1 file changed, 60 insertions(+), 18 deletions(-)\n\ndiff --git a\/core\/src\/validateTransfer.ts b\/core\/src\/validateTransfer.ts\nindex 9af9d115..f448669d 100644\n--- a\/core\/src\/validateTransfer.ts\n+++ b\/core\/src\/validateTransfer.ts\n@@ -1,15 +1,23 @@\n-import { getAssociatedTokenAddress } from '@solana\/spl-token';\n+import {\n+    decodeInstruction,\n+    getAssociatedTokenAddress,\n+    isTransferCheckedInstruction,\n+    isTransferInstruction,\n+} from '@solana\/spl-token';\n import {\n     ConfirmedTransactionMeta,\n     Connection,\n     Finality,\n     LAMPORTS_PER_SOL,\n     Message,\n+    SystemInstruction,\n+    Transaction,\n     TransactionResponse,\n     TransactionSignature,\n } from '@solana\/web3.js';\n import BigNumber from 'bignumber.js';\n-import { Amount, Memo, Recipient, References, SPLToken } from '.\/types';\n+import { MEMO_PROGRAM_ID } from '.\/constants';\n+import { Amount, Memo, Recipient, Reference, References, SPLToken } from '.\/types';\n \n \/**\n  * Thrown when a transaction doesn't contain a valid Solana Pay transfer.\n@@ -58,33 +66,49 @@ export async function validateTransfer(\n     if (!meta) throw new ValidateTransferError('missing meta');\n     if (meta.err) throw meta.err;\n \n-    const [preAmount, postAmount] = splToken\n-        ? await validateSPLTokenTransfer(message, meta, recipient, splToken)\n-        : await validateSystemTransfer(message, meta, recipient);\n+    if (reference && !Array.isArray(reference)) {\n+        reference = [reference];\n+    }\n \n+    const [preAmount, postAmount] = splToken\n+        ? await validateSPLTokenTransfer(message, meta, recipient, splToken, reference)\n+        : await validateSystemTransfer(message, meta, recipient, reference);\n     if (postAmount.minus(preAmount).lt(amount)) throw new ValidateTransferError('amount not transferred');\n \n-    if (reference) {\n-        if (!Array.isArray(reference)) {\n-            reference = [reference];\n-        }\n-\n-        for (const pubkey of reference) {\n-            if (!message.accountKeys.some((accountKey) => accountKey.equals(pubkey)))\n-                throw new ValidateTransferError('reference not found');\n-        }\n+    if (memo) {\n+        \/\/ Check that the second instruction is a memo instruction with the expected memo.\n+        const transaction = Transaction.populate(message);\n+        const instruction = transaction.instructions[1];\n+        if (!instruction) throw new ValidateTransferError('missing memo instruction');\n+        if (!instruction.programId.equals(MEMO_PROGRAM_ID)) throw new ValidateTransferError('invalid memo program');\n+        if (!instruction.data.equals(Buffer.from(memo, 'utf8'))) throw new ValidateTransferError('invalid memo');\n     }\n \n-    \/\/ FIXME: add memo check\n-\n     return response;\n }\n \n async function validateSystemTransfer(\n     message: Message,\n     meta: ConfirmedTransactionMeta,\n-    recipient: Recipient\n+    recipient: Recipient,\n+    references?: Reference[]\n ): Promise<[BigNumber, BigNumber]> {\n+    if (references) {\n+        \/\/ Check that the first instruction is a system transfer instruction.\n+        const transaction = Transaction.populate(message);\n+        const instruction = transaction.instructions[0];\n+        SystemInstruction.decodeTransfer(instruction);\n+\n+        \/\/ Check that the expected reference keys exactly match the extra keys provided to the instruction.\n+        const [_from, _to, ...extraKeys] = instruction.keys;\n+        const length = extraKeys.length;\n+        if (length !== references.length) throw new ValidateTransferError('invalid references');\n+\n+        for (let i = 0; i < length; i++) {\n+            if (!extraKeys[i].pubkey.equals(references[i])) throw new ValidateTransferError(`invalid reference ${i}`);\n+        }\n+    }\n+\n     const accountIndex = message.accountKeys.findIndex((pubkey) => pubkey.equals(recipient));\n     if (accountIndex === -1) throw new ValidateTransferError('recipient not found');\n \n@@ -98,8 +122,26 @@ async function validateSPLTokenTransfer(\n     message: Message,\n     meta: ConfirmedTransactionMeta,\n     recipient: Recipient,\n-    splToken: SPLToken\n+    splToken: SPLToken,\n+    references?: Reference[]\n ): Promise<[BigNumber, BigNumber]> {\n+    if (references) {\n+        \/\/ Check that the first instruction is an SPL token transfer instruction.\n+        const transaction = Transaction.populate(message);\n+        const instruction = decodeInstruction(transaction.instructions[0]);\n+        if (!isTransferCheckedInstruction(instruction) && !isTransferInstruction(instruction))\n+            throw new ValidateTransferError('invalid transfer');\n+\n+        \/\/ Check that the expected reference keys exactly match the extra keys provided to the instruction.\n+        const extraKeys = instruction.keys.multiSigners;\n+        const length = extraKeys.length;\n+        if (length !== references.length) throw new ValidateTransferError('invalid references');\n+\n+        for (let i = 0; i < length; i++) {\n+            if (!extraKeys[i].pubkey.equals(references[i])) throw new ValidateTransferError(`invalid reference ${i}`);\n+        }\n+    }\n+\n     const recipientATA = await getAssociatedTokenAddress(splToken, recipient);\n     const accountIndex = message.accountKeys.findIndex((pubkey) => pubkey.equals(recipientATA));\n     if (accountIndex === -1) throw new ValidateTransferError('recipient not found');"
        },
        {
            "index":193,
            "vuln_id":"GHSA-qpv2-jxc7-3638",
            "cwe_id":"{'CWE-200'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/05c0819776b07425b2831cd31a8a0f4e7ac30c09'}",
            "dataset":"osv",
            "summary":"Exposure of Sensitive Information in snipe\/snipe-it Snipe-IT prior to v5.3.10 is vulnerable to Exposure of Sensitive Information to an Unauthorized Actor.",
            "published_date":"2022-02-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/snipe\/snipe-it",
            "commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/05c0819776b07425b2831cd31a8a0f4e7ac30c09",
            "commit_sha":"05c0819776b07425b2831cd31a8a0f4e7ac30c09",
            "patch":"SINGLE",
            "chain_ord":"['05c0819776b07425b2831cd31a8a0f4e7ac30c09']",
            "before_first_fix_commit":"{'16f963fa3d7c4875e9bccf6926629efe3530d00e'}",
            "last_fix_commit":"05c0819776b07425b2831cd31a8a0f4e7ac30c09",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/11\/2022, 23:55:42",
            "message":"Updated language string\n\nSigned-off-by: snipe <snipe@snipe.net>",
            "author":"snipe",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'resources\/lang\/en\/passwords.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/05c0819776b07425b2831cd31a8a0f4e7ac30c09\/resources%2Flang%2Fen%2Fpasswords.php', 'patch': \"@@ -1,6 +1,6 @@\\n <?php\\n \\n return [\\n-    'sent'\\t        => 'Your password link has been sent!',\\n+    'sent'\\t        => 'Success: If that email address exists in our system, a password recovery email has been sent.',\\n     'user'\\t\\t\\t=> 'No matching active user found with that email.',\\n ];\"}}",
            "message_norm":"updated language string\n\nsigned-off-by: snipe <snipe@snipe.net>",
            "language":"en",
            "entities":"[('updated', 'ACTION', ''), ('snipe@snipe.net', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['resources\/lang\/en\/passwords.php'])",
            "num_files":1.0,
            "patch_content":"From 05c0819776b07425b2831cd31a8a0f4e7ac30c09 Mon Sep 17 00:00:00 2001\nFrom: snipe <snipe@snipe.net>\nDate: Fri, 11 Feb 2022 15:55:42 -0800\nSubject: [PATCH] Updated language string\n\nSigned-off-by: snipe <snipe@snipe.net>\n---\n resources\/lang\/en\/passwords.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/resources\/lang\/en\/passwords.php b\/resources\/lang\/en\/passwords.php\nindex 6205ef774d92..4772940015a5 100644\n--- a\/resources\/lang\/en\/passwords.php\n+++ b\/resources\/lang\/en\/passwords.php\n@@ -1,6 +1,6 @@\n <?php\n \n return [\n-    'sent'\t        => 'Your password link has been sent!',\n+    'sent'\t        => 'Success: If that email address exists in our system, a password recovery email has been sent.',\n     'user'\t\t\t=> 'No matching active user found with that email.',\n ];"
        },
        {
            "index":444,
            "vuln_id":"GHSA-vc3x-gx6c-g99f",
            "cwe_id":"{'CWE-190'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/Bytom\/bytom\/commit\/1ac3c8ac4f2b1e1df9675228290bda6b9586ba42'}",
            "dataset":"osv",
            "summary":"Denial of Service in Bytom In the client in Bytom before 1.0.6, checkTopicRegister in p2p\/discover\/net.go does not prevent negative idx values, leading to a crash.",
            "published_date":"2022-02-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/Bytom\/bytom",
            "commit_href":"https:\/\/github.com\/Bytom\/bytom\/commit\/1ac3c8ac4f2b1e1df9675228290bda6b9586ba42",
            "commit_sha":"1ac3c8ac4f2b1e1df9675228290bda6b9586ba42",
            "patch":"SINGLE",
            "chain_ord":"['1ac3c8ac4f2b1e1df9675228290bda6b9586ba42']",
            "before_first_fix_commit":"{'69b3d4c7cf41c6628efb34ed79ad35e9e22bbf82'}",
            "last_fix_commit":"1ac3c8ac4f2b1e1df9675228290bda6b9586ba42",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/31\/2018, 05:48:40",
            "message":"p2p\/discv5: fix idx can be negative after uint convert to int(can cause crash) (#1307)",
            "author":"yahtoo",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'p2p\/discover\/net.go': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Bytom\/bytom\/raw\/1ac3c8ac4f2b1e1df9675228290bda6b9586ba42\/p2p%2Fdiscover%2Fnet.go', 'patch': '@@ -1221,7 +1221,7 @@ func (net *Network) checkTopicRegister(data *topicRegister) (*pong, error) {\\n \\tif hash != pongpkt.data.(*pong).TopicHash {\\n \\t\\treturn nil, errors.New(\"topic hash mismatch\")\\n \\t}\\n-\\tif data.Idx < 0 || int(data.Idx) >= len(data.Topics) {\\n+\\tif int(data.Idx) < 0 || int(data.Idx) >= len(data.Topics) {\\n \\t\\treturn nil, errors.New(\"topic index out of range\")\\n \\t}\\n \\treturn pongpkt.data.(*pong), nil'}}",
            "message_norm":"p2p\/discv5: fix idx can be negative after uint convert to int(can cause crash) (#1307)",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('#1307', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['p2p\/discover\/net.go'])",
            "num_files":1.0,
            "patch_content":"From 1ac3c8ac4f2b1e1df9675228290bda6b9586ba42 Mon Sep 17 00:00:00 2001\nFrom: yahtoo <yahtoo.ma@gmail.com>\nDate: Fri, 31 Aug 2018 13:48:40 +0800\nSubject: [PATCH] p2p\/discv5: fix idx can be negative after uint convert to\n int(can cause crash) (#1307)\n\n---\n p2p\/discover\/net.go | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/p2p\/discover\/net.go b\/p2p\/discover\/net.go\nindex a6319d890..3645860fa 100644\n--- a\/p2p\/discover\/net.go\n+++ b\/p2p\/discover\/net.go\n@@ -1221,7 +1221,7 @@ func (net *Network) checkTopicRegister(data *topicRegister) (*pong, error) {\n \tif hash != pongpkt.data.(*pong).TopicHash {\n \t\treturn nil, errors.New(\"topic hash mismatch\")\n \t}\n-\tif data.Idx < 0 || int(data.Idx) >= len(data.Topics) {\n+\tif int(data.Idx) < 0 || int(data.Idx) >= len(data.Topics) {\n \t\treturn nil, errors.New(\"topic index out of range\")\n \t}\n \treturn pongpkt.data.(*pong), nil"
        },
        {
            "index":121,
            "vuln_id":"GHSA-mrvj-7q4f-5p42",
            "cwe_id":"{'CWE-79'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/ezsystems\/ezpublish-kernel\/commit\/29fecd2afe86f763510f10c02f14962d028f311b'}",
            "dataset":"osv",
            "summary":"Cross-site scripting in eZ Platform Kernel ### Impact\nIn file upload it is possible by certain means to upload files like .html and .js. These may contain XSS exploits which will be run when links to them are accessed by victims.\n\n### Patches\nThe fix consists simply of adding common types of scriptable file types to the configuration of the already existing filetype blacklist feature. See \"Patched versions\". As such, this can also be done manually, without installing the patched versions. This may be relevant if you are currently running a considerably older version of the kernel package and don't want to upgrade it at this time. Please see the settting \"ezsettings.default.io.file_storage.file_type_blacklist\" at:\nhttps:\/\/github.com\/ezsystems\/ezplatform-kernel\/blob\/master\/eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml#L109\n\n### Important note\nYou should adapt this setting to your needs. Do not add file types to the blacklist that you actually need to be able to upload. For instance, if you need your editors to be able to upload SVG files, then don't blacklist that. Instead, you could e.g. use an approval workflow for such content.",
            "published_date":"2021-03-19",
            "chain_len":1,
            "project":"https:\/\/github.com\/ezsystems\/ezpublish-kernel",
            "commit_href":"https:\/\/github.com\/ezsystems\/ezpublish-kernel\/commit\/29fecd2afe86f763510f10c02f14962d028f311b",
            "commit_sha":"29fecd2afe86f763510f10c02f14962d028f311b",
            "patch":"SINGLE",
            "chain_ord":"['29fecd2afe86f763510f10c02f14962d028f311b']",
            "before_first_fix_commit":"{'4a538dbfd28fecd404f11fa0816b69a5a9e93a16'}",
            "last_fix_commit":"29fecd2afe86f763510f10c02f14962d028f311b",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/17\/2021, 15:03:30",
            "message":"Merge pull request from GHSA-mrvj-7q4f-5p42\n\nCo-authored-by: Gunnstein Lye <gunnstein.lye@ibexa.co>",
            "author":"Gunnstein Lye",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 0, 'total': 10}",
            "files":"{'eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ezsystems\/ezpublish-kernel\/raw\/29fecd2afe86f763510f10c02f14962d028f311b\/eZ%2FBundle%2FEzPublishCoreBundle%2FResources%2Fconfig%2Fdefault_settings.yml', 'patch': '@@ -89,6 +89,16 @@ parameters:\\n         - pht\\n         - phtml\\n         - pgif\\n+        - hta\\n+        - htm\\n+        - html\\n+        - xhtm\\n+        - xhtml\\n+        - jar\\n+        - js\\n+        - jse\\n+        - svg\\n+        - swf\\n \\n     # Content settings\\n     ezsettings.default.content.view_cache: true         # Whether to use content view cache or not (Etag\/Last-Modified based)'}}",
            "message_norm":"merge pull request from ghsa-mrvj-7q4f-5p42\n\nco-authored-by: gunnstein lye <gunnstein.lye@ibexa.co>",
            "language":"en",
            "entities":"[('ghsa-mrvj-7q4f-5p42', 'VULNID', 'GHSA'), ('gunnstein.lye@ibexa.co', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml'])",
            "num_files":1.0,
            "patch_content":"From 29fecd2afe86f763510f10c02f14962d028f311b Mon Sep 17 00:00:00 2001\nFrom: Gunnstein Lye <gunnstein.lye@ez.no>\nDate: Wed, 17 Mar 2021 16:03:30 +0100\nSubject: [PATCH] Merge pull request from GHSA-mrvj-7q4f-5p42\n\nCo-authored-by: Gunnstein Lye <gunnstein.lye@ibexa.co>\n---\n ...\/Resources\/config\/default_settings.yml              | 10 ++++++++++\n 1 file changed, 10 insertions(+)\n\ndiff --git a\/eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml b\/eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml\nindex 42e5c2ee251..bdd60ec7012 100644\n--- a\/eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml\n+++ b\/eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml\n@@ -89,6 +89,16 @@ parameters:\n         - pht\n         - phtml\n         - pgif\n+        - hta\n+        - htm\n+        - html\n+        - xhtm\n+        - xhtml\n+        - jar\n+        - js\n+        - jse\n+        - svg\n+        - swf\n \n     # Content settings\n     ezsettings.default.content.view_cache: true         # Whether to use content view cache or not (Etag\/Last-Modified based)"
        },
        {
            "index":908,
            "vuln_id":"GHSA-xm9f-vxmx-4m58",
            "cwe_id":"{'CWE-20'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/OpenMage\/magento-lts\/commit\/34709ac642d554aa1824892059186dd329db744b'}",
            "dataset":"osv",
            "summary":"Data Flow Sanitation Issue Fix  ### Impact\nDue to missing sanitation in data flow it was possible for admin users to upload arbitrary executable files to the server.",
            "published_date":"2021-08-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/OpenMage\/magento-lts",
            "commit_href":"https:\/\/github.com\/OpenMage\/magento-lts\/commit\/34709ac642d554aa1824892059186dd329db744b",
            "commit_sha":"34709ac642d554aa1824892059186dd329db744b",
            "patch":"SINGLE",
            "chain_ord":"['34709ac642d554aa1824892059186dd329db744b']",
            "before_first_fix_commit":"{'b99307d00b59c4a226a1e3e4083f02cf2fc8fce7'}",
            "last_fix_commit":"34709ac642d554aa1824892059186dd329db744b",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/26\/2021, 01:13:20",
            "message":"Merge pull request from GHSA-xm9f-vxmx-4m58\n\nCo-authored-by: Mark Lewis <markwlewis@Marks-MacBook-Pro.local>",
            "author":"Mark Lewis",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'app\/code\/core\/Mage\/Dataflow\/Model\/Convert\/Adapter\/Io.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/OpenMage\/magento-lts\/raw\/34709ac642d554aa1824892059186dd329db744b\/app%2Fcode%2Fcore%2FMage%2FDataflow%2FModel%2FConvert%2FAdapter%2FIo.php', 'patch': \"@@ -49,7 +49,7 @@ public function getResource($forWrite = false)\\n             $isError = false;\\n \\n             $ioConfig = $this->getVars();\\n-            switch ($this->getVar('type', 'file')) {\\n+            switch (strtolower($this->getVar('type', 'file'))) {\\n                 case 'file':\\n                     \/\/validate export\/import path\\n                     $path = rtrim($ioConfig['path'], '\\\\\\\\\/')\"}}",
            "message_norm":"merge pull request from ghsa-xm9f-vxmx-4m58\n\nco-authored-by: mark lewis <markwlewis@marks-macbook-pro.local>",
            "language":"en",
            "entities":"[('ghsa-xm9f-vxmx-4m58', 'VULNID', 'GHSA')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/code\/core\/Mage\/Dataflow\/Model\/Convert\/Adapter\/Io.php'])",
            "num_files":1.0,
            "patch_content":"From 34709ac642d554aa1824892059186dd329db744b Mon Sep 17 00:00:00 2001\nFrom: Mark Lewis <mark@netalico.com>\nDate: Wed, 25 Aug 2021 18:13:20 -0700\nSubject: [PATCH] Merge pull request from GHSA-xm9f-vxmx-4m58\n\nCo-authored-by: Mark Lewis <markwlewis@Marks-MacBook-Pro.local>\n---\n app\/code\/core\/Mage\/Dataflow\/Model\/Convert\/Adapter\/Io.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/app\/code\/core\/Mage\/Dataflow\/Model\/Convert\/Adapter\/Io.php b\/app\/code\/core\/Mage\/Dataflow\/Model\/Convert\/Adapter\/Io.php\nindex 60cdb9c98bc..32a33805053 100644\n--- a\/app\/code\/core\/Mage\/Dataflow\/Model\/Convert\/Adapter\/Io.php\n+++ b\/app\/code\/core\/Mage\/Dataflow\/Model\/Convert\/Adapter\/Io.php\n@@ -49,7 +49,7 @@ public function getResource($forWrite = false)\n             $isError = false;\n \n             $ioConfig = $this->getVars();\n-            switch ($this->getVar('type', 'file')) {\n+            switch (strtolower($this->getVar('type', 'file'))) {\n                 case 'file':\n                     \/\/validate export\/import path\n                     $path = rtrim($ioConfig['path'], '\\\\\/')"
        },
        {
            "index":77,
            "vuln_id":"GHSA-jq4v-f5q6-mjqq",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/lxml\/lxml\/pull\/316\/commits\/10ec1b4e9f93713513a3264ed6158af22492f270', 'https:\/\/github.com\/lxml\/lxml\/commit\/a5f9cb52079dc57477c460dbe6ba0f775e14a999', 'https:\/\/github.com\/lxml\/lxml\/commit\/2d01a1ba8984e0483ce6619b972832377f208a0d'}",
            "dataset":"osv",
            "summary":"lxml before 4.6.3 vulnerable to Cross-Site Scripting  An XSS vulnerability was discovered in the python `lxml` clean module versions before 4.6.3. When disabling `the safe_attrs_only` and `forms` arguments, the `Cleaner` class does not remove the `formaction` attribute allowing for JS to bypass the sanitizer. A remote attacker could exploit this flaw to run arbitrary JS code on users who interact with incorrectly sanitized HTML. This issue is patched in `lxml` 4.6.3.",
            "published_date":"2021-03-22",
            "chain_len":3,
            "project":"https:\/\/github.com\/lxml\/lxml",
            "commit_href":"https:\/\/github.com\/lxml\/lxml\/pull\/316\/commits\/10ec1b4e9f93713513a3264ed6158af22492f270",
            "commit_sha":"10ec1b4e9f93713513a3264ed6158af22492f270",
            "patch":"MULTI",
            "chain_ord":"['10ec1b4e9f93713513a3264ed6158af22492f270', '2d01a1ba8984e0483ce6619b972832377f208a0d', 'a5f9cb52079dc57477c460dbe6ba0f775e14a999']",
            "before_first_fix_commit":"{'2d01a1ba8984e0483ce6619b972832377f208a0d'}",
            "last_fix_commit":"a5f9cb52079dc57477c460dbe6ba0f775e14a999",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/20\/2021, 06:49:25",
            "message":"Add formaction attribute to defs.link_attrs",
            "author":"Kevin Chung",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'src\/lxml\/html\/defs.py': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/lxml\/lxml\/raw\/10ec1b4e9f93713513a3264ed6158af22492f270\/src%2Flxml%2Fhtml%2Fdefs.py', 'patch': \"@@ -23,6 +23,8 @@\\n     'usemap',\\n     # Not standard:\\n     'dynsrc', 'lowsrc',\\n+    # HTML5 formaction\\n+    'formaction'\\n     ])\\n \\n # Not in the HTML 4 spec:\"}}",
            "message_norm":"add formaction attribute to defs.link_attrs",
            "language":"en",
            "entities":"[('add', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lxml\/html\/defs.py'])",
            "num_files":1.0,
            "patch_content":"From 10ec1b4e9f93713513a3264ed6158af22492f270 Mon Sep 17 00:00:00 2001\nFrom: Kevin Chung <kchung@nyu.edu>\nDate: Sat, 20 Mar 2021 02:49:25 -0400\nSubject: [PATCH] Add formaction attribute to defs.link_attrs\n\n---\n src\/lxml\/html\/defs.py | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/src\/lxml\/html\/defs.py b\/src\/lxml\/html\/defs.py\nindex 1b3a75b36..2058ea330 100644\n--- a\/src\/lxml\/html\/defs.py\n+++ b\/src\/lxml\/html\/defs.py\n@@ -23,6 +23,8 @@\n     'usemap',\n     # Not standard:\n     'dynsrc', 'lowsrc',\n+    # HTML5 formaction\n+    'formaction'\n     ])\n \n # Not in the HTML 4 spec:"
        },
        {
            "index":800,
            "vuln_id":"GHSA-hv9c-qwqg-qj3v",
            "cwe_id":"{'CWE-1188'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/electron\/electron\/commit\/bab968ca776be28791e4dddfd50c86bd5fae62fa', 'https:\/\/github.com\/electron\/electron\/commit\/80221e52d93a96ea704cb6748ead669c55cff504', 'https:\/\/github.com\/electron\/electron\/commit\/519a02d8d4d28e8a467acb40fb26172a80c9454f', 'https:\/\/github.com\/electron\/electron\/commit\/ef0a6d9a1c96efc4657c6dd3a6624eba969f095b'}",
            "dataset":"osv",
            "summary":"Electron webPreferences vulnerability can be used to perform remote code execution GitHub Electron 1.7.15, 1.8.7, 2.0.7, and 3.0.0-beta.6, in certain scenarios involving IFRAME elements and \"nativeWindowOpen: true\" or \"sandbox: true\" options, is affected by a webPreferences vulnerability that can be leveraged to perform remote code execution.\n\nMore information to determine if you are impacted can be found on the [electron blog](https:\/\/electronjs.org\/blog\/web-preferences-fix).\n\n\n## Recommendation\n\nUpgrade Electron to >=3.0.0-beta.7, >=2.0.8, >=1.8.8, or >=1.7.16.",
            "published_date":"2018-08-23",
            "chain_len":4,
            "project":"https:\/\/github.com\/electron\/electron",
            "commit_href":"https:\/\/github.com\/electron\/electron\/commit\/bab968ca776be28791e4dddfd50c86bd5fae62fa",
            "commit_sha":"bab968ca776be28791e4dddfd50c86bd5fae62fa",
            "patch":"MULTI",
            "chain_ord":"['ef0a6d9a1c96efc4657c6dd3a6624eba969f095b', '80221e52d93a96ea704cb6748ead669c55cff504', '519a02d8d4d28e8a467acb40fb26172a80c9454f', 'bab968ca776be28791e4dddfd50c86bd5fae62fa']",
            "before_first_fix_commit":"{'7fa3eba9512da5bb3a8a61433bb3921c2be67459'}",
            "last_fix_commit":"bab968ca776be28791e4dddfd50c86bd5fae62fa",
            "chain_ord_pos":4.0,
            "commit_datetime":"08\/22\/2018, 17:36:02",
            "message":"fix: inheritance of webPreferences sub properties",
            "author":"Samuel Attard",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'lib\/browser\/guest-window-manager.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/electron\/electron\/raw\/bab968ca776be28791e4dddfd50c86bd5fae62fa\/lib%2Fbrowser%2Fguest-window-manager.js', 'patch': \"@@ -26,11 +26,11 @@ const mergeOptions = function (child, parent, visited) {\\n   visited.add(parent)\\n   for (const key in parent) {\\n     if (!hasProp.call(parent, key)) continue\\n-    if (key in child) continue\\n+    if (key in child && key !== 'webPreferences') continue\\n \\n     const value = parent[key]\\n     if (typeof value === 'object') {\\n-      child[key] = mergeOptions({}, value, visited)\\n+      child[key] = mergeOptions(child[key] || {}, value, visited)\\n     } else {\\n       child[key] = value\\n     }\"}}",
            "message_norm":"fix: inheritance of webpreferences sub properties",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/browser\/guest-window-manager.js'])",
            "num_files":1.0,
            "patch_content":"From bab968ca776be28791e4dddfd50c86bd5fae62fa Mon Sep 17 00:00:00 2001\nFrom: Samuel Attard <samuel.r.attard@gmail.com>\nDate: Wed, 22 Aug 2018 12:36:02 -0500\nSubject: [PATCH] fix: inheritance of webPreferences sub properties\n\n---\n lib\/browser\/guest-window-manager.js | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/lib\/browser\/guest-window-manager.js b\/lib\/browser\/guest-window-manager.js\nindex 479232ec41781..15137992b19d7 100644\n--- a\/lib\/browser\/guest-window-manager.js\n+++ b\/lib\/browser\/guest-window-manager.js\n@@ -26,11 +26,11 @@ const mergeOptions = function (child, parent, visited) {\n   visited.add(parent)\n   for (const key in parent) {\n     if (!hasProp.call(parent, key)) continue\n-    if (key in child) continue\n+    if (key in child && key !== 'webPreferences') continue\n \n     const value = parent[key]\n     if (typeof value === 'object') {\n-      child[key] = mergeOptions({}, value, visited)\n+      child[key] = mergeOptions(child[key] || {}, value, visited)\n     } else {\n       child[key] = value\n     }"
        },
        {
            "index":460,
            "vuln_id":"GHSA-r6cm-wg48-rh2r",
            "cwe_id":"{'CWE-359', 'CWE-863'}",
            "score":9.1,
            "chain":"{'https:\/\/github.com\/alextselegidis\/easyappointments\/commit\/44af526a6fc5e898bc1e0132b2af9eb3a9b2c466'}",
            "dataset":"osv",
            "summary":"Exposure of Private Personal Information to an Unauthorized Actor in alextselegidis\/easyappointments The software is a booking management system that has a public form to place bookings, and a private area for the calendar and management of services, users, settings, etc. There is a backend API that allows data manipulation, including listing the appointments for a specific time range. This happens on this endpoint: \/index.php\/backend_api\/ajax_get_calendar_events Unfortunately, there is no authentication \/ permissions-check on that endpoint, the only required parameters in a POST request are \"startDate\", \"endDate\" and \"csrfToken\". Because the csrfToken can be obtained by any unauthenticated user just visiting the public form (and is valid for the backend as well), any attacker can query the backend API and obtain all sorts of private information about the appointment, in JSON format.",
            "published_date":"2022-03-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/alextselegidis\/easyappointments",
            "commit_href":"https:\/\/github.com\/alextselegidis\/easyappointments\/commit\/44af526a6fc5e898bc1e0132b2af9eb3a9b2c466",
            "commit_sha":"44af526a6fc5e898bc1e0132b2af9eb3a9b2c466",
            "patch":"SINGLE",
            "chain_ord":"['44af526a6fc5e898bc1e0132b2af9eb3a9b2c466']",
            "before_first_fix_commit":"{'13e81c80b17dfe207b2bdddb395a1345217f2548'}",
            "last_fix_commit":"44af526a6fc5e898bc1e0132b2af9eb3a9b2c466",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/08\/2022, 17:27:15",
            "message":"Release v1.4.3",
            "author":"Alex Tselegidis",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'application\/config\/config.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/alextselegidis\/easyappointments\/raw\/44af526a6fc5e898bc1e0132b2af9eb3a9b2c466\/application%2Fconfig%2Fconfig.php', 'patch': \"@@ -8,7 +8,7 @@\\n | Declare some of the global config values of Easy!Appointments.\\n |\\n *\/\\n-$config['version'] = '1.4.3-beta.1'; \/\/ This must be changed manually.\\n+$config['version'] = '1.4.3'; \/\/ This must be changed manually.\\n $config['release_label'] = ''; \/\/ Leave empty for no title or add Alpha, Beta etc ...\\n $config['debug'] = Config::DEBUG_MODE;\\n \\n@@ -314,7 +314,7 @@\\n | new release.\\n |\\n *\/\\n-$config['cache_busting_token'] = '8UC842';\\n+$config['cache_busting_token'] = '6398SW';\\n \\n \/*\\n |--------------------------------------------------------------------------\"}}",
            "message_norm":"release v1.4.3",
            "language":"sl",
            "entities":"[('v1.4.3', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['application\/config\/config.php'])",
            "num_files":1.0,
            "patch_content":"From 44af526a6fc5e898bc1e0132b2af9eb3a9b2c466 Mon Sep 17 00:00:00 2001\nFrom: Alex Tselegidis <alextselegidis@gmail.com>\nDate: Tue, 8 Mar 2022 18:27:15 +0100\nSubject: [PATCH] Release v1.4.3\n\n---\n application\/config\/config.php | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/application\/config\/config.php b\/application\/config\/config.php\nindex 4c06eb6abb..6efb9d8016 100644\n--- a\/application\/config\/config.php\n+++ b\/application\/config\/config.php\n@@ -8,7 +8,7 @@\n | Declare some of the global config values of Easy!Appointments.\n |\n *\/\n-$config['version'] = '1.4.3-beta.1'; \/\/ This must be changed manually.\n+$config['version'] = '1.4.3'; \/\/ This must be changed manually.\n $config['release_label'] = ''; \/\/ Leave empty for no title or add Alpha, Beta etc ...\n $config['debug'] = Config::DEBUG_MODE;\n \n@@ -314,7 +314,7 @@\n | new release.\n |\n *\/\n-$config['cache_busting_token'] = '8UC842';\n+$config['cache_busting_token'] = '6398SW';\n \n \/*\n |--------------------------------------------------------------------------"
        },
        {
            "index":388,
            "vuln_id":"GHSA-8x44-pwr2-rgc6",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/832c34aeb9f21f213295a0c28377132df996352a'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in pimcore Pimcore settings module is vulnerable to stored cross site scripting",
            "published_date":"2022-01-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/pimcore\/pimcore",
            "commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/832c34aeb9f21f213295a0c28377132df996352a",
            "commit_sha":"832c34aeb9f21f213295a0c28377132df996352a",
            "patch":"SINGLE",
            "chain_ord":"['832c34aeb9f21f213295a0c28377132df996352a']",
            "before_first_fix_commit":"{'e94591dd8f5006452667a04c93e4422b05234eea'}",
            "last_fix_commit":"832c34aeb9f21f213295a0c28377132df996352a",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/26\/2022, 13:08:27",
            "message":"added escape function to the icon field",
            "author":"Jia Jia Ji",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/832c34aeb9f21f213295a0c28377132df996352a\/bundles%2FAdminBundle%2FController%2FAdmin%2FDataObject%2FClassController.php', 'patch': \"@@ -119,7 +119,7 @@ public function getTreeAction(Request $request)\\n                 'id' => $class->getId(),\\n                 'text' => $text,\\n                 'leaf' => true,\\n-                'icon' => $class->getIcon() ? $class->getIcon() : $defaultIcon,\\n+                'icon' => $class->getIcon() ? htmlspecialchars($class->getIcon()) : $defaultIcon,\\n                 'cls' => 'pimcore_class_icon',\\n                 'propertyVisibility' => $class->getPropertyVisibility(),\\n                 'enableGridLocking' => $class->isEnableGridLocking(),\"}}",
            "message_norm":"added escape function to the icon field",
            "language":"en",
            "entities":"[('added', 'ACTION', ''), ('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php'])",
            "num_files":1.0,
            "patch_content":"From 832c34aeb9f21f213295a0c28377132df996352a Mon Sep 17 00:00:00 2001\nFrom: Jia Jia Ji <kingjia90@gmail.com>\nDate: Wed, 26 Jan 2022 14:08:27 +0100\nSubject: [PATCH] added escape function to the icon field\n\n---\n ...\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php b\/bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php\nindex 84582a8c58f..93339ef2069 100644\n--- a\/bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php\n+++ b\/bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php\n@@ -119,7 +119,7 @@ public function getTreeAction(Request $request)\n                 'id' => $class->getId(),\n                 'text' => $text,\n                 'leaf' => true,\n-                'icon' => $class->getIcon() ? $class->getIcon() : $defaultIcon,\n+                'icon' => $class->getIcon() ? htmlspecialchars($class->getIcon()) : $defaultIcon,\n                 'cls' => 'pimcore_class_icon',\n                 'propertyVisibility' => $class->getPropertyVisibility(),\n                 'enableGridLocking' => $class->isEnableGridLocking(),"
        },
        {
            "index":724,
            "vuln_id":"GHSA-r89v-cgv7-3jhx",
            "cwe_id":"{'CWE-862'}",
            "score":5.2,
            "chain":"{'https:\/\/github.com\/octobercms\/october\/commit\/d34fb8ab51108495a9a651b841202d935f4e12f7'}",
            "dataset":"osv",
            "summary":"Bypass of fix for CVE-2020-15247, Twig sandbox escape ### Impact\nA bypass of CVE-2020-15247 (fixed in 1.0.469 and 1.1.0) was discovered that has the same impact as CVE-2020-15247:\n\nAn authenticated backend user with the `cms.manage_pages`, `cms.manage_layouts`, or `cms.manage_partials` permissions who would **normally** not be permitted to provide PHP code to be executed by the CMS due to `cms.enableSafeMode` being enabled is able to write specific Twig code to escape the Twig sandbox and execute arbitrary PHP.\n\nThis is not a problem for anyone that trusts their users with those permissions to normally write & manage PHP within the CMS by not having `cms.enableSafeMode` enabled, but would be a problem for anyone relying on `cms.enableSafeMode` to ensure that users with those permissions in production do not have access to write & execute arbitrary PHP.\n\n### Patches\nIssue has been patched in Build 470 (v1.0.470) and v1.1.1.\n\n### Workarounds\nApply https:\/\/github.com\/octobercms\/october\/commit\/d34fb8ab51108495a9a651b841202d935f4e12f7 to your installation manually if unable to upgrade to Build 470 or v1.1.1.\n\n### References\nReported by [ka1n4t](https:\/\/github.com\/ka1n4t)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat assessment:\n<img width=\"1108\" alt=\"Screen Shot 2020-10-10 at 1 21 13 PM\" src=\"https:\/\/user-images.githubusercontent.com\/7253840\/95663316-7de28b80-0afb-11eb-999d-a6526cf78709.png\">",
            "published_date":"2020-11-23",
            "chain_len":1,
            "project":"https:\/\/github.com\/octobercms\/october",
            "commit_href":"https:\/\/github.com\/octobercms\/october\/commit\/d34fb8ab51108495a9a651b841202d935f4e12f7",
            "commit_sha":"d34fb8ab51108495a9a651b841202d935f4e12f7",
            "patch":"SINGLE",
            "chain_ord":"['d34fb8ab51108495a9a651b841202d935f4e12f7']",
            "before_first_fix_commit":"{'16e0bd4d094264fd00d0af86180bde4e0c73b4be'}",
            "last_fix_commit":"d34fb8ab51108495a9a651b841202d935f4e12f7",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/13\/2020, 09:48:27",
            "message":"Improve Twig security policy\n\nFollow up to https:\/\/github.com\/octobercms\/october\/compare\/106daa2930de4cebb18732732d47d4056f01dd5b...7cb148c1677373ac30ccfd3069d18098e403e1ca. Thanks to @ka1n4t for the additional review.",
            "author":"Luke Towers",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'modules\/system\/twig\/SecurityPolicy.php': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/october\/raw\/d34fb8ab51108495a9a651b841202d935f4e12f7\/modules%2Fsystem%2Ftwig%2FSecurityPolicy.php', 'patch': \"@@ -20,6 +20,8 @@ final class SecurityPolicy implements SecurityPolicyInterface\\n     protected $blockedMethods = [\\n         'addDynamicMethod',\\n         'addDynamicProperty',\\n+        'bindEvent',\\n+        'bindEventOnce',\\n     ];\\n \\n     \/**\"}}",
            "message_norm":"improve twig security policy\n\nfollow up to https:\/\/github.com\/octobercms\/october\/compare\/106daa2930de4cebb18732732d47d4056f01dd5b...7cb148c1677373ac30ccfd3069d18098e403e1ca. thanks to @ka1n4t for the additional review.",
            "language":"en",
            "entities":"[('improve', 'ACTION', ''), ('security', 'SECWORD', ''), ('https:\/\/github.com\/octobercms\/october\/compare\/106daa2930de4cebb18732732d47d4056f01dd5b...7cb148c1677373ac30ccfd3069d18098e403e1ca', 'URL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/system\/twig\/SecurityPolicy.php'])",
            "num_files":1.0,
            "patch_content":"From d34fb8ab51108495a9a651b841202d935f4e12f7 Mon Sep 17 00:00:00 2001\nFrom: Luke Towers <github@luketowers.ca>\nDate: Fri, 13 Nov 2020 03:48:27 -0600\nSubject: [PATCH] Improve Twig security policy\n\nFollow up to https:\/\/github.com\/octobercms\/october\/compare\/106daa2930de4cebb18732732d47d4056f01dd5b...7cb148c1677373ac30ccfd3069d18098e403e1ca. Thanks to @ka1n4t for the additional review.\n---\n modules\/system\/twig\/SecurityPolicy.php | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/modules\/system\/twig\/SecurityPolicy.php b\/modules\/system\/twig\/SecurityPolicy.php\nindex bcbc7a1501..aacd39ba63 100644\n--- a\/modules\/system\/twig\/SecurityPolicy.php\n+++ b\/modules\/system\/twig\/SecurityPolicy.php\n@@ -20,6 +20,8 @@ final class SecurityPolicy implements SecurityPolicyInterface\n     protected $blockedMethods = [\n         'addDynamicMethod',\n         'addDynamicProperty',\n+        'bindEvent',\n+        'bindEventOnce',\n     ];\n \n     \/**"
        },
        {
            "index":645,
            "vuln_id":"GHSA-44r7-7p62-q3fr",
            "cwe_id":"{'CWE-330', 'CWE-338'}",
            "score":5.9,
            "chain":"{'https:\/\/github.com\/miekg\/dns\/commit\/8ebf2e419df7857ac8919baa05248789a8ffbf33'}",
            "dataset":"osv",
            "summary":"Insecure generation of random numbers The miekg Go DNS package before 1.1.25, as used in CoreDNS before 1.6.6 and other products, improperly generates random numbers because math\/rand is used. The TXID becomes predictable, leading to response forgeries.",
            "published_date":"2021-05-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/miekg\/dns",
            "commit_href":"https:\/\/github.com\/miekg\/dns\/commit\/8ebf2e419df7857ac8919baa05248789a8ffbf33",
            "commit_sha":"8ebf2e419df7857ac8919baa05248789a8ffbf33",
            "patch":"SINGLE",
            "chain_ord":"['8ebf2e419df7857ac8919baa05248789a8ffbf33']",
            "before_first_fix_commit":"{'6d0449f98180253901e9551a10ce679f35ff05be'}",
            "last_fix_commit":"8ebf2e419df7857ac8919baa05248789a8ffbf33",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/11\/2019, 07:31:09",
            "message":"Use crypto\/rand for random id generation. (#1044)\n\n* Use crypto\/rand for random id generation.\r\n\r\nFixes #1043 and #1037\r\n\r\n* Panic on rare crypto\/rand error.\r\n\r\n* Fixes in response to review.",
            "author":"Jacob Hoffman-Andrews",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 42, 'total': 52}",
            "files":"{'msg.go': {'additions': 10, 'deletions': 42, 'changes': 52, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/miekg\/dns\/raw\/8ebf2e419df7857ac8919baa05248789a8ffbf33\/msg.go', 'patch': '@@ -11,14 +11,12 @@ package dns\\n \/\/go:generate go run msg_generate.go\\n \\n import (\\n-\\tcrand \"crypto\/rand\"\\n+\\t\"crypto\/rand\"\\n \\t\"encoding\/binary\"\\n \\t\"fmt\"\\n \\t\"math\/big\"\\n-\\t\"math\/rand\"\\n \\t\"strconv\"\\n \\t\"strings\"\\n-\\t\"sync\"\\n )\\n \\n const (\\n@@ -73,53 +71,23 @@ var (\\n \\tErrTime          error = &Error{err: \"bad time\"}      \/\/ ErrTime indicates a timing error in TSIG authentication.\\n )\\n \\n-\/\/ Id by default, returns a 16 bits random number to be used as a\\n-\/\/ message id. The random provided should be good enough. This being a\\n-\/\/ variable the function can be reassigned to a custom function.\\n-\/\/ For instance, to make it return a static value:\\n+\/\/ Id by default returns a 16-bit random number to be used as a message id. The\\n+\/\/ number is drawn from a cryptographically secure random number generator.\\n+\/\/ This being a variable the function can be reassigned to a custom function.\\n+\/\/ For instance, to make it return a static value for testing:\\n \/\/\\n \/\/\\tdns.Id = func() uint16 { return 3 }\\n var Id = id\\n \\n-var (\\n-\\tidLock sync.Mutex\\n-\\tidRand *rand.Rand\\n-)\\n-\\n \/\/ id returns a 16 bits random number to be used as a\\n \/\/ message id. The random provided should be good enough.\\n func id() uint16 {\\n-\\tidLock.Lock()\\n-\\n-\\tif idRand == nil {\\n-\\t\\t\/\/ This (partially) works around\\n-\\t\\t\/\/ https:\/\/github.com\/golang\/go\/issues\/11833 by only\\n-\\t\\t\/\/ seeding idRand upon the first call to id.\\n-\\n-\\t\\tvar seed int64\\n-\\t\\tvar buf [8]byte\\n-\\n-\\t\\tif _, err := crand.Read(buf[:]); err == nil {\\n-\\t\\t\\tseed = int64(binary.LittleEndian.Uint64(buf[:]))\\n-\\t\\t} else {\\n-\\t\\t\\tseed = rand.Int63()\\n-\\t\\t}\\n-\\n-\\t\\tidRand = rand.New(rand.NewSource(seed))\\n+\\tvar output uint16\\n+\\terr := binary.Read(rand.Reader, binary.BigEndian, &output)\\n+\\tif err != nil {\\n+\\t\\tpanic(\"dns: reading random id failed: \" + err.Error())\\n \\t}\\n-\\n-\\t\/\/ The call to idRand.Uint32 must be within the\\n-\\t\/\/ mutex lock because *rand.Rand is not safe for\\n-\\t\/\/ concurrent use.\\n-\\t\/\/\\n-\\t\/\/ There is no added performance overhead to calling\\n-\\t\/\/ idRand.Uint32 inside a mutex lock over just\\n-\\t\/\/ calling rand.Uint32 as the global math\/rand rng\\n-\\t\/\/ is internally protected by a sync.Mutex.\\n-\\tid := uint16(idRand.Uint32())\\n-\\n-\\tidLock.Unlock()\\n-\\treturn id\\n+\\treturn output\\n }\\n \\n \/\/ MsgHdr is a a manually-unpacked version of (id, bits).'}}",
            "message_norm":"use crypto\/rand for random id generation. (#1044)\n\n* use crypto\/rand for random id generation.\r\n\r\nfixes #1043 and #1037\r\n\r\n* panic on rare crypto\/rand error.\r\n\r\n* fixes in response to review.",
            "language":"en",
            "entities":"[('crypto', 'SECWORD', ''), ('#1044', 'ISSUE', ''), ('crypto', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#1043', 'ISSUE', ''), ('#1037', 'ISSUE', ''), ('crypto', 'SECWORD', ''), ('error', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['msg.go'])",
            "num_files":1.0,
            "patch_content":"From 8ebf2e419df7857ac8919baa05248789a8ffbf33 Mon Sep 17 00:00:00 2001\nFrom: Jacob Hoffman-Andrews <github@hoffman-andrews.com>\nDate: Tue, 10 Dec 2019 23:31:09 -0800\nSubject: [PATCH] Use crypto\/rand for random id generation. (#1044)\n\n* Use crypto\/rand for random id generation.\n\nFixes #1043 and #1037\n\n* Panic on rare crypto\/rand error.\n\n* Fixes in response to review.\n---\n msg.go | 52 ++++++++++------------------------------------------\n 1 file changed, 10 insertions(+), 42 deletions(-)\n\ndiff --git a\/msg.go b\/msg.go\nindex e04fb5d77..293813005 100644\n--- a\/msg.go\n+++ b\/msg.go\n@@ -11,14 +11,12 @@ package dns\n \/\/go:generate go run msg_generate.go\n \n import (\n-\tcrand \"crypto\/rand\"\n+\t\"crypto\/rand\"\n \t\"encoding\/binary\"\n \t\"fmt\"\n \t\"math\/big\"\n-\t\"math\/rand\"\n \t\"strconv\"\n \t\"strings\"\n-\t\"sync\"\n )\n \n const (\n@@ -73,53 +71,23 @@ var (\n \tErrTime          error = &Error{err: \"bad time\"}      \/\/ ErrTime indicates a timing error in TSIG authentication.\n )\n \n-\/\/ Id by default, returns a 16 bits random number to be used as a\n-\/\/ message id. The random provided should be good enough. This being a\n-\/\/ variable the function can be reassigned to a custom function.\n-\/\/ For instance, to make it return a static value:\n+\/\/ Id by default returns a 16-bit random number to be used as a message id. The\n+\/\/ number is drawn from a cryptographically secure random number generator.\n+\/\/ This being a variable the function can be reassigned to a custom function.\n+\/\/ For instance, to make it return a static value for testing:\n \/\/\n \/\/\tdns.Id = func() uint16 { return 3 }\n var Id = id\n \n-var (\n-\tidLock sync.Mutex\n-\tidRand *rand.Rand\n-)\n-\n \/\/ id returns a 16 bits random number to be used as a\n \/\/ message id. The random provided should be good enough.\n func id() uint16 {\n-\tidLock.Lock()\n-\n-\tif idRand == nil {\n-\t\t\/\/ This (partially) works around\n-\t\t\/\/ https:\/\/github.com\/golang\/go\/issues\/11833 by only\n-\t\t\/\/ seeding idRand upon the first call to id.\n-\n-\t\tvar seed int64\n-\t\tvar buf [8]byte\n-\n-\t\tif _, err := crand.Read(buf[:]); err == nil {\n-\t\t\tseed = int64(binary.LittleEndian.Uint64(buf[:]))\n-\t\t} else {\n-\t\t\tseed = rand.Int63()\n-\t\t}\n-\n-\t\tidRand = rand.New(rand.NewSource(seed))\n+\tvar output uint16\n+\terr := binary.Read(rand.Reader, binary.BigEndian, &output)\n+\tif err != nil {\n+\t\tpanic(\"dns: reading random id failed: \" + err.Error())\n \t}\n-\n-\t\/\/ The call to idRand.Uint32 must be within the\n-\t\/\/ mutex lock because *rand.Rand is not safe for\n-\t\/\/ concurrent use.\n-\t\/\/\n-\t\/\/ There is no added performance overhead to calling\n-\t\/\/ idRand.Uint32 inside a mutex lock over just\n-\t\/\/ calling rand.Uint32 as the global math\/rand rng\n-\t\/\/ is internally protected by a sync.Mutex.\n-\tid := uint16(idRand.Uint32())\n-\n-\tidLock.Unlock()\n-\treturn id\n+\treturn output\n }\n \n \/\/ MsgHdr is a a manually-unpacked version of (id, bits)."
        },
        {
            "index":437,
            "vuln_id":"GHSA-8h4j-vm3r-vcq3",
            "cwe_id":"{'CWE-416'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/rusqlite\/rusqlite\/commit\/2ef3628dac35aeba0a97d5fb3a57746b4e1d62b3'}",
            "dataset":"osv",
            "summary":"Use after free in rusqlite An issue was discovered in the rusqlite crate before 0.23.0 for Rust. Memory safety can be violated via an Auxdata API use-after-free.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/rusqlite\/rusqlite",
            "commit_href":"https:\/\/github.com\/rusqlite\/rusqlite\/commit\/2ef3628dac35aeba0a97d5fb3a57746b4e1d62b3",
            "commit_sha":"2ef3628dac35aeba0a97d5fb3a57746b4e1d62b3",
            "patch":"SINGLE",
            "chain_ord":"['2ef3628dac35aeba0a97d5fb3a57746b4e1d62b3']",
            "before_first_fix_commit":"{'71b2f5187b0cbace3f8b6ff53432ff2ca0defcf0'}",
            "last_fix_commit":"2ef3628dac35aeba0a97d5fb3a57746b4e1d62b3",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/13\/2020, 02:41:01",
            "message":"Actually fix auxdata api...",
            "author":"Thom Chiovoloni",
            "comments":null,
            "stats":"{'additions': 54, 'deletions': 65, 'total': 119}",
            "files":"{'src\/functions.rs': {'additions': 54, 'deletions': 65, 'changes': 119, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rusqlite\/rusqlite\/raw\/2ef3628dac35aeba0a97d5fb3a57746b4e1d62b3\/src%2Ffunctions.rs', 'patch': '@@ -12,6 +12,8 @@\\n \/\/! use regex::Regex;\\n \/\/! use rusqlite::functions::FunctionFlags;\\n \/\/! use rusqlite::{Connection, Error, Result, NO_PARAMS};\\n+\/\/! use std::sync::Arc;\\n+\/\/! type BoxError = Box<dyn std::error::Error + Send + Sync + \\'static>;\\n \/\/!\\n \/\/! fn add_regexp_function(db: &Connection) -> Result<()> {\\n \/\/!     db.create_scalar_function(\\n@@ -20,34 +22,19 @@\\n \/\/!         FunctionFlags::SQLITE_UTF8 | FunctionFlags::SQLITE_DETERMINISTIC,\\n \/\/!         move |ctx| {\\n \/\/!             assert_eq!(ctx.len(), 2, \"called with unexpected number of arguments\");\\n-\/\/!\\n-\/\/!             let saved_re: Option<&Regex> = ctx.get_aux(0)?;\\n-\/\/!             let new_re = match saved_re {\\n-\/\/!                 None => {\\n-\/\/!                     let s = ctx.get::<String>(0)?;\\n-\/\/!                     match Regex::new(&s) {\\n-\/\/!                         Ok(r) => Some(r),\\n-\/\/!                         Err(err) => return Err(Error::UserFunctionError(Box::new(err))),\\n-\/\/!                     }\\n-\/\/!                 }\\n-\/\/!                 Some(_) => None,\\n-\/\/!             };\\n-\/\/!\\n+\/\/!             let regexp: Arc<Regex> = ctx\\n+\/\/!                 .get_or_create_aux(0, |vr| -> Result<_, BoxError> {\\n+\/\/!                     Ok(Regex::new(vr.as_str()?)?)\\n+\/\/!                 })?;\\n \/\/!             let is_match = {\\n-\/\/!                 let re = saved_re.unwrap_or_else(|| new_re.as_ref().unwrap());\\n-\/\/!\\n \/\/!                 let text = ctx\\n \/\/!                     .get_raw(1)\\n \/\/!                     .as_str()\\n \/\/!                     .map_err(|e| Error::UserFunctionError(e.into()))?;\\n \/\/!\\n-\/\/!                 re.is_match(text)\\n+\/\/!                 regexp.is_match(text)\\n \/\/!             };\\n \/\/!\\n-\/\/!             if let Some(re) = new_re {\\n-\/\/!                 ctx.set_aux(0, re);\\n-\/\/!             }\\n-\/\/!\\n \/\/!             Ok(is_match)\\n \/\/!         },\\n \/\/!     )\\n@@ -67,11 +54,12 @@\\n \/\/!     Ok(())\\n \/\/! }\\n \/\/! ```\\n-use std::any::TypeId;\\n+use std::any::Any;\\n use std::os::raw::{c_int, c_void};\\n use std::panic::{catch_unwind, RefUnwindSafe, UnwindSafe};\\n use std::ptr;\\n use std::slice;\\n+use std::sync::Arc;\\n \\n use crate::ffi;\\n use crate::ffi::sqlite3_context;\\n@@ -121,6 +109,7 @@ unsafe extern \"C\" fn free_boxed_value<T>(p: *mut c_void) {\\n pub struct Context<\\'a> {\\n     ctx: *mut sqlite3_context,\\n     args: &\\'a [*mut sqlite3_value],\\n+    \/\/ conn: PhantomData<&\\'conn mut Connection>,\\n }\\n \\n impl Context<\\'_> {\\n@@ -174,47 +163,60 @@ impl Context<\\'_> {\\n         unsafe { ValueRef::from_value(arg) }\\n     }\\n \\n+    pub fn get_or_create_aux<T, E, F>(&self, arg: c_int, func: F) -> Result<Arc<T>>\\n+    where\\n+        T: Send + Sync + \\'static,\\n+        E: Into<Box<dyn std::error::Error + Send + Sync + \\'static>>,\\n+        F: FnOnce(ValueRef<\\'_>) -> Result<T, E>,\\n+    {\\n+        if let Some(v) = self.get_aux(arg)? {\\n+            Ok(v)\\n+        } else {\\n+            let vr = self.get_raw(arg as usize);\\n+            self.set_aux(\\n+                arg,\\n+                func(vr).map_err(|e| Error::UserFunctionError(e.into()))?,\\n+            )\\n+        }\\n+    }\\n+\\n     \/\/\/ Sets the auxilliary data associated with a particular parameter. See\\n     \/\/\/ https:\/\/www.sqlite.org\/c3ref\/get_auxdata.html for a discussion of\\n     \/\/\/ this feature, or the unit tests of this module for an example.\\n-    pub fn set_aux<T: \\'static>(&self, arg: c_int, value: T) {\\n-        let boxed = Box::into_raw(Box::new(AuxData {\\n-            id: TypeId::of::<T>(),\\n-            value,\\n-        }));\\n+    pub fn set_aux<T: Send + Sync + \\'static>(&self, arg: c_int, value: T) -> Result<Arc<T>> {\\n+        let orig: Arc<T> = Arc::new(value);\\n+        let inner: AuxInner = orig.clone();\\n+        let outer = Box::new(inner);\\n+        let raw: *mut AuxInner = Box::into_raw(outer);\\n         unsafe {\\n             ffi::sqlite3_set_auxdata(\\n                 self.ctx,\\n                 arg,\\n-                boxed as *mut c_void,\\n-                Some(free_boxed_value::<AuxData<T>>),\\n+                raw as *mut _,\\n+                Some(free_boxed_value::<AuxInner>),\\n             )\\n         };\\n+        Ok(orig)\\n     }\\n \\n-    \/\/\/ Gets the auxilliary data that was associated with a given parameter\\n-    \/\/\/ via `set_aux`. Returns `Ok(None)` if no data has been associated,\\n-    \/\/\/ and .\\n-    pub fn get_aux<T: \\'static>(&self, arg: c_int) -> Result<Option<&T>> {\\n-        let p = unsafe { ffi::sqlite3_get_auxdata(self.ctx, arg) as *const AuxData<T> };\\n+    \/\/\/ Gets the auxilliary data that was associated with a given parameter via\\n+    \/\/\/ `set_aux`. Returns `Ok(None)` if no data has been associated, and\\n+    \/\/\/ Ok(Some(v)) if it has. Returns an error if the requested type does not\\n+    \/\/\/ match.\\n+    pub fn get_aux<T: Send + Sync + \\'static>(&self, arg: c_int) -> Result<Option<Arc<T>>> {\\n+        let p = unsafe { ffi::sqlite3_get_auxdata(self.ctx, arg) as *const AuxInner };\\n         if p.is_null() {\\n             Ok(None)\\n         } else {\\n-            let id = unsafe { (*p).id };\\n-            if TypeId::of::<T>() != id {\\n-                Err(Error::GetAuxWrongType)\\n-            } else {\\n-                Ok(Some(unsafe { &(*p).value }))\\n-            }\\n+            let v: AuxInner = AuxInner::clone(unsafe { &*p });\\n+            v.downcast::<T>()\\n+                .map(Some)\\n+                .map_err(|_| Error::GetAuxWrongType)\\n         }\\n     }\\n }\\n \\n-#[repr(C)]\\n-struct AuxData<T: \\'static> {\\n-    id: TypeId,\\n-    value: T,\\n-}\\n+type AuxInner = Arc<dyn Any + Send + Sync + \\'static>;\\n \\n \/\/\/ `feature = \"functions\"` Aggregate is the callback interface for user-defined\\n \/\/\/ aggregate function.\\n@@ -776,34 +778,21 @@ mod test {\\n     \/\/ expression multiple times within one query.\\n     fn regexp_with_auxilliary(ctx: &Context<\\'_>) -> Result<bool> {\\n         assert_eq!(ctx.len(), 2, \"called with unexpected number of arguments\");\\n-\\n-        let saved_re: Option<&Regex> = ctx.get_aux(0)?;\\n-        let new_re = match saved_re {\\n-            None => {\\n-                let s = ctx.get::<String>(0)?;\\n-                match Regex::new(&s) {\\n-                    Ok(r) => Some(r),\\n-                    Err(err) => return Err(Error::UserFunctionError(Box::new(err))),\\n-                }\\n-            }\\n-            Some(_) => None,\\n-        };\\n+        type BoxError = Box<dyn std::error::Error + Send + Sync + \\'static>;\\n+        let regexp: std::sync::Arc<Regex> = ctx\\n+            .get_or_create_aux(0, |vr| -> Result<_, BoxError> {\\n+                Ok(Regex::new(vr.as_str()?)?)\\n+            })?;\\n \\n         let is_match = {\\n-            let re = saved_re.unwrap_or_else(|| new_re.as_ref().unwrap());\\n-\\n             let text = ctx\\n                 .get_raw(1)\\n                 .as_str()\\n                 .map_err(|e| Error::UserFunctionError(e.into()))?;\\n \\n-            re.is_match(text)\\n+            regexp.is_match(text)\\n         };\\n \\n-        if let Some(re) = new_re {\\n-            ctx.set_aux(0, re);\\n-        }\\n-\\n         Ok(is_match)\\n     }\\n \\n@@ -878,10 +867,10 @@ mod test {\\n         let db = Connection::open_in_memory().unwrap();\\n         db.create_scalar_function(\"example\", 2, FunctionFlags::default(), |ctx| {\\n             if !ctx.get::<bool>(1)? {\\n-                ctx.set_aux::<i64>(0, 100);\\n+                ctx.set_aux::<i64>(0, 100)?;\\n             } else {\\n                 assert_eq!(ctx.get_aux::<String>(0), Err(Error::GetAuxWrongType));\\n-                assert_eq!(ctx.get_aux::<i64>(0), Ok(Some(&100)));\\n+                assert_eq!(*ctx.get_aux::<i64>(0).unwrap().unwrap(), 100);\\n             }\\n             Ok(true)\\n         })'}}",
            "message_norm":"actually fix auxdata api...",
            "language":"ca",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/functions.rs'])",
            "num_files":1.0,
            "patch_content":"From 2ef3628dac35aeba0a97d5fb3a57746b4e1d62b3 Mon Sep 17 00:00:00 2001\nFrom: Thom Chiovoloni <tchiovoloni@mozilla.com>\nDate: Sun, 12 Apr 2020 19:41:01 -0700\nSubject: [PATCH] Actually fix auxdata api...\n\n---\n src\/functions.rs | 119 +++++++++++++++++++++--------------------------\n 1 file changed, 54 insertions(+), 65 deletions(-)\n\ndiff --git a\/src\/functions.rs b\/src\/functions.rs\nindex df40b1822..0c76244b2 100644\n--- a\/src\/functions.rs\n+++ b\/src\/functions.rs\n@@ -12,6 +12,8 @@\n \/\/! use regex::Regex;\n \/\/! use rusqlite::functions::FunctionFlags;\n \/\/! use rusqlite::{Connection, Error, Result, NO_PARAMS};\n+\/\/! use std::sync::Arc;\n+\/\/! type BoxError = Box<dyn std::error::Error + Send + Sync + 'static>;\n \/\/!\n \/\/! fn add_regexp_function(db: &Connection) -> Result<()> {\n \/\/!     db.create_scalar_function(\n@@ -20,34 +22,19 @@\n \/\/!         FunctionFlags::SQLITE_UTF8 | FunctionFlags::SQLITE_DETERMINISTIC,\n \/\/!         move |ctx| {\n \/\/!             assert_eq!(ctx.len(), 2, \"called with unexpected number of arguments\");\n-\/\/!\n-\/\/!             let saved_re: Option<&Regex> = ctx.get_aux(0)?;\n-\/\/!             let new_re = match saved_re {\n-\/\/!                 None => {\n-\/\/!                     let s = ctx.get::<String>(0)?;\n-\/\/!                     match Regex::new(&s) {\n-\/\/!                         Ok(r) => Some(r),\n-\/\/!                         Err(err) => return Err(Error::UserFunctionError(Box::new(err))),\n-\/\/!                     }\n-\/\/!                 }\n-\/\/!                 Some(_) => None,\n-\/\/!             };\n-\/\/!\n+\/\/!             let regexp: Arc<Regex> = ctx\n+\/\/!                 .get_or_create_aux(0, |vr| -> Result<_, BoxError> {\n+\/\/!                     Ok(Regex::new(vr.as_str()?)?)\n+\/\/!                 })?;\n \/\/!             let is_match = {\n-\/\/!                 let re = saved_re.unwrap_or_else(|| new_re.as_ref().unwrap());\n-\/\/!\n \/\/!                 let text = ctx\n \/\/!                     .get_raw(1)\n \/\/!                     .as_str()\n \/\/!                     .map_err(|e| Error::UserFunctionError(e.into()))?;\n \/\/!\n-\/\/!                 re.is_match(text)\n+\/\/!                 regexp.is_match(text)\n \/\/!             };\n \/\/!\n-\/\/!             if let Some(re) = new_re {\n-\/\/!                 ctx.set_aux(0, re);\n-\/\/!             }\n-\/\/!\n \/\/!             Ok(is_match)\n \/\/!         },\n \/\/!     )\n@@ -67,11 +54,12 @@\n \/\/!     Ok(())\n \/\/! }\n \/\/! ```\n-use std::any::TypeId;\n+use std::any::Any;\n use std::os::raw::{c_int, c_void};\n use std::panic::{catch_unwind, RefUnwindSafe, UnwindSafe};\n use std::ptr;\n use std::slice;\n+use std::sync::Arc;\n \n use crate::ffi;\n use crate::ffi::sqlite3_context;\n@@ -121,6 +109,7 @@ unsafe extern \"C\" fn free_boxed_value<T>(p: *mut c_void) {\n pub struct Context<'a> {\n     ctx: *mut sqlite3_context,\n     args: &'a [*mut sqlite3_value],\n+    \/\/ conn: PhantomData<&'conn mut Connection>,\n }\n \n impl Context<'_> {\n@@ -174,47 +163,60 @@ impl Context<'_> {\n         unsafe { ValueRef::from_value(arg) }\n     }\n \n+    pub fn get_or_create_aux<T, E, F>(&self, arg: c_int, func: F) -> Result<Arc<T>>\n+    where\n+        T: Send + Sync + 'static,\n+        E: Into<Box<dyn std::error::Error + Send + Sync + 'static>>,\n+        F: FnOnce(ValueRef<'_>) -> Result<T, E>,\n+    {\n+        if let Some(v) = self.get_aux(arg)? {\n+            Ok(v)\n+        } else {\n+            let vr = self.get_raw(arg as usize);\n+            self.set_aux(\n+                arg,\n+                func(vr).map_err(|e| Error::UserFunctionError(e.into()))?,\n+            )\n+        }\n+    }\n+\n     \/\/\/ Sets the auxilliary data associated with a particular parameter. See\n     \/\/\/ https:\/\/www.sqlite.org\/c3ref\/get_auxdata.html for a discussion of\n     \/\/\/ this feature, or the unit tests of this module for an example.\n-    pub fn set_aux<T: 'static>(&self, arg: c_int, value: T) {\n-        let boxed = Box::into_raw(Box::new(AuxData {\n-            id: TypeId::of::<T>(),\n-            value,\n-        }));\n+    pub fn set_aux<T: Send + Sync + 'static>(&self, arg: c_int, value: T) -> Result<Arc<T>> {\n+        let orig: Arc<T> = Arc::new(value);\n+        let inner: AuxInner = orig.clone();\n+        let outer = Box::new(inner);\n+        let raw: *mut AuxInner = Box::into_raw(outer);\n         unsafe {\n             ffi::sqlite3_set_auxdata(\n                 self.ctx,\n                 arg,\n-                boxed as *mut c_void,\n-                Some(free_boxed_value::<AuxData<T>>),\n+                raw as *mut _,\n+                Some(free_boxed_value::<AuxInner>),\n             )\n         };\n+        Ok(orig)\n     }\n \n-    \/\/\/ Gets the auxilliary data that was associated with a given parameter\n-    \/\/\/ via `set_aux`. Returns `Ok(None)` if no data has been associated,\n-    \/\/\/ and .\n-    pub fn get_aux<T: 'static>(&self, arg: c_int) -> Result<Option<&T>> {\n-        let p = unsafe { ffi::sqlite3_get_auxdata(self.ctx, arg) as *const AuxData<T> };\n+    \/\/\/ Gets the auxilliary data that was associated with a given parameter via\n+    \/\/\/ `set_aux`. Returns `Ok(None)` if no data has been associated, and\n+    \/\/\/ Ok(Some(v)) if it has. Returns an error if the requested type does not\n+    \/\/\/ match.\n+    pub fn get_aux<T: Send + Sync + 'static>(&self, arg: c_int) -> Result<Option<Arc<T>>> {\n+        let p = unsafe { ffi::sqlite3_get_auxdata(self.ctx, arg) as *const AuxInner };\n         if p.is_null() {\n             Ok(None)\n         } else {\n-            let id = unsafe { (*p).id };\n-            if TypeId::of::<T>() != id {\n-                Err(Error::GetAuxWrongType)\n-            } else {\n-                Ok(Some(unsafe { &(*p).value }))\n-            }\n+            let v: AuxInner = AuxInner::clone(unsafe { &*p });\n+            v.downcast::<T>()\n+                .map(Some)\n+                .map_err(|_| Error::GetAuxWrongType)\n         }\n     }\n }\n \n-#[repr(C)]\n-struct AuxData<T: 'static> {\n-    id: TypeId,\n-    value: T,\n-}\n+type AuxInner = Arc<dyn Any + Send + Sync + 'static>;\n \n \/\/\/ `feature = \"functions\"` Aggregate is the callback interface for user-defined\n \/\/\/ aggregate function.\n@@ -776,34 +778,21 @@ mod test {\n     \/\/ expression multiple times within one query.\n     fn regexp_with_auxilliary(ctx: &Context<'_>) -> Result<bool> {\n         assert_eq!(ctx.len(), 2, \"called with unexpected number of arguments\");\n-\n-        let saved_re: Option<&Regex> = ctx.get_aux(0)?;\n-        let new_re = match saved_re {\n-            None => {\n-                let s = ctx.get::<String>(0)?;\n-                match Regex::new(&s) {\n-                    Ok(r) => Some(r),\n-                    Err(err) => return Err(Error::UserFunctionError(Box::new(err))),\n-                }\n-            }\n-            Some(_) => None,\n-        };\n+        type BoxError = Box<dyn std::error::Error + Send + Sync + 'static>;\n+        let regexp: std::sync::Arc<Regex> = ctx\n+            .get_or_create_aux(0, |vr| -> Result<_, BoxError> {\n+                Ok(Regex::new(vr.as_str()?)?)\n+            })?;\n \n         let is_match = {\n-            let re = saved_re.unwrap_or_else(|| new_re.as_ref().unwrap());\n-\n             let text = ctx\n                 .get_raw(1)\n                 .as_str()\n                 .map_err(|e| Error::UserFunctionError(e.into()))?;\n \n-            re.is_match(text)\n+            regexp.is_match(text)\n         };\n \n-        if let Some(re) = new_re {\n-            ctx.set_aux(0, re);\n-        }\n-\n         Ok(is_match)\n     }\n \n@@ -878,10 +867,10 @@ mod test {\n         let db = Connection::open_in_memory().unwrap();\n         db.create_scalar_function(\"example\", 2, FunctionFlags::default(), |ctx| {\n             if !ctx.get::<bool>(1)? {\n-                ctx.set_aux::<i64>(0, 100);\n+                ctx.set_aux::<i64>(0, 100)?;\n             } else {\n                 assert_eq!(ctx.get_aux::<String>(0), Err(Error::GetAuxWrongType));\n-                assert_eq!(ctx.get_aux::<i64>(0), Ok(Some(&100)));\n+                assert_eq!(*ctx.get_aux::<i64>(0).unwrap().unwrap(), 100);\n             }\n             Ok(true)\n         })"
        },
        {
            "index":14,
            "vuln_id":"GHSA-3ff2-r28g-w7h9",
            "cwe_id":"{'CWE-787', 'CWE-120'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c79ba87153ee343401dbe9d1954d7f79e521eb14'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `Transpose` ### Impact\nThe [shape inference function for `Transpose`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/ops\/array_ops.cc#L121-L185) is vulnerable to a heap buffer overflow:\n\n```python\nimport tensorflow as tf\n@tf.function\ndef test():\n  y = tf.raw_ops.Transpose(x=[1,2,3,4],perm=[-10])\n  return y\n\ntest()\n```\n\nThis occurs whenever `perm` contains negative elements. The shape inference function does not validate that the indices in `perm` are all valid:\n        \n```cc\nfor (int32_t i = 0; i < rank; ++i) {\n  int64_t in_idx = data[i];\n  if (in_idx >= rank) {\n    return errors::InvalidArgument(\"perm dim \", in_idx,\n                                   \" is out of range of input rank \", rank);\n  }\n  dims[i] = c->Dim(input, in_idx);\n}\n```\n\nwhere `Dim(tensor, index)` accepts either a positive index less than the rank of the tensor or the special value `-1` for unknown dimensions.\n\n### Patches\nWe have patched the issue in GitHub commit [c79ba87153ee343401dbe9d1954d7f79e521eb14](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c79ba87153ee343401dbe9d1954d7f79e521eb14).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-11-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c79ba87153ee343401dbe9d1954d7f79e521eb14",
            "commit_sha":"c79ba87153ee343401dbe9d1954d7f79e521eb14",
            "patch":"SINGLE",
            "chain_ord":"['c79ba87153ee343401dbe9d1954d7f79e521eb14']",
            "before_first_fix_commit":"{'042dc3be4c54a51c2608ad53dabaeb34afa3e63c'}",
            "last_fix_commit":"c79ba87153ee343401dbe9d1954d7f79e521eb14",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/15\/2021, 02:39:00",
            "message":"Make Transpose's shape inference function validate that negative `perm` values are within the tensor's rank.\n\nPiperOrigin-RevId: 403252853\nChange-Id: Ia6b31b45b237312668bb31c2c3b3c7bbce2d2610",
            "author":"Penporn Koanantakool",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'tensorflow\/core\/ops\/array_ops.cc': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c79ba87153ee343401dbe9d1954d7f79e521eb14\/tensorflow%2Fcore%2Fops%2Farray_ops.cc', 'patch': '@@ -168,7 +168,7 @@ Status TransposeShapeFn(InferenceContext* c) {\\n \\n     for (int32_t i = 0; i < rank; ++i) {\\n       int64_t in_idx = data[i];\\n-      if (in_idx >= rank) {\\n+      if (in_idx >= rank || in_idx <= -rank) {\\n         return errors::InvalidArgument(\"perm dim \", in_idx,\\n                                        \" is out of range of input rank \", rank);\\n       }'}}",
            "message_norm":"make transpose's shape inference function validate that negative `perm` values are within the tensor's rank.\n\npiperorigin-revid: 403252853\nchange-id: ia6b31b45b237312668bb31c2c3b3c7bbce2d2610",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('403252853', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/ops\/array_ops.cc'])",
            "num_files":1.0,
            "patch_content":"From c79ba87153ee343401dbe9d1954d7f79e521eb14 Mon Sep 17 00:00:00 2001\nFrom: Penporn Koanantakool <penporn@google.com>\nDate: Thu, 14 Oct 2021 19:39:00 -0700\nSubject: [PATCH] Make Transpose's shape inference function validate that\n negative `perm` values are within the tensor's rank.\n\nPiperOrigin-RevId: 403252853\nChange-Id: Ia6b31b45b237312668bb31c2c3b3c7bbce2d2610\n---\n tensorflow\/core\/ops\/array_ops.cc | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/tensorflow\/core\/ops\/array_ops.cc b\/tensorflow\/core\/ops\/array_ops.cc\nindex 64bd4f38478542..14c9efae1ddd3b 100644\n--- a\/tensorflow\/core\/ops\/array_ops.cc\n+++ b\/tensorflow\/core\/ops\/array_ops.cc\n@@ -168,7 +168,7 @@ Status TransposeShapeFn(InferenceContext* c) {\n \n     for (int32_t i = 0; i < rank; ++i) {\n       int64_t in_idx = data[i];\n-      if (in_idx >= rank) {\n+      if (in_idx >= rank || in_idx <= -rank) {\n         return errors::InvalidArgument(\"perm dim \", in_idx,\n                                        \" is out of range of input rank \", rank);\n       }"
        },
        {
            "index":553,
            "vuln_id":"GHSA-v8v8-6859-qxm4",
            "cwe_id":"{'CWE-94'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/zamotany\/logkitty\/commit\/ef2f673e25c629544dd3de6429999318447dd6bf'}",
            "dataset":"osv",
            "summary":"Arbitrary shell command execution in logkitty Lack of output sanitization allowed an attack to execute arbitrary shell commands via the logkitty npm package before version 0.7.1.",
            "published_date":"2020-06-05",
            "chain_len":1,
            "project":"https:\/\/github.com\/zamotany\/logkitty",
            "commit_href":"https:\/\/github.com\/zamotany\/logkitty\/commit\/ef2f673e25c629544dd3de6429999318447dd6bf",
            "commit_sha":"ef2f673e25c629544dd3de6429999318447dd6bf",
            "patch":"SINGLE",
            "chain_ord":"['ef2f673e25c629544dd3de6429999318447dd6bf']",
            "before_first_fix_commit":"{'e1e229687472d8c9266d17f2969ff7431a78db86'}",
            "last_fix_commit":"ef2f673e25c629544dd3de6429999318447dd6bf",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/07\/2020, 09:35:09",
            "message":"huntr - Command Injection Fix (#18)\n\nCo-authored-by: jammy <jammy@loves.shib.es>\r\nCo-authored-by: Pawe\u0142 Trys\u0142a <zamotany@users.noreply.github.com>",
            "author":"huntr-helper",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 6, 'total': 15}",
            "files":"{'src\/android\/adb.ts': {'additions': 9, 'deletions': 6, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/zamotany\/logkitty\/raw\/ef2f673e25c629544dd3de6429999318447dd6bf\/src%2Fandroid%2Fadb.ts', 'patch': \"@@ -1,4 +1,4 @@\\n-import { spawn, execSync, ChildProcess } from 'child_process';\\n+import { spawn, execFileSync, ChildProcess } from 'child_process';\\n import path from 'path';\\n import {\\n   CodeError,\\n@@ -25,7 +25,7 @@ export function getAdbPath(customPath?: string): string {\\n \\n export function spawnLogcatProcess(adbPath: string): ChildProcess {\\n   try {\\n-    execSync(`${adbPath} logcat -c`);\\n+    execFileSync(adbPath, ['logcat', '-c']);\\n   } catch (error) {\\n     throw new CodeError(\\n       ERR_ANDROID_CANNOT_CLEAN_LOGCAT_BUFFER,\\n@@ -49,11 +49,14 @@ export function getApplicationPid(\\n   applicationId: string,\\n   adbPath?: string\\n ): number {\\n-  let output: Buffer | undefined;\\n+  let output: Buffer | String | undefined;\\n   try {\\n-    output = execSync(\\n-      `'${getAdbPath(adbPath)}' shell pidof -s ${applicationId}`\\n-    );\\n+    output = execFileSync(getAdbPath(adbPath), [\\n+      'shell',\\n+      'pidof',\\n+      '-s',\\n+      applicationId,\\n+    ]);\\n   } catch (error) {\\n     throw new CodeError(\\n       ERR_ANDROID_CANNOT_GET_APP_PID,\"}}",
            "message_norm":"huntr - command injection fix (#18)\n\nco-authored-by: jammy <jammy@loves.shib.es>\r\nco-authored-by: pawe\u0142 trys\u0142a <zamotany@users.noreply.github.com>",
            "language":"en",
            "entities":"[('command injection', 'SECWORD', ''), ('#18', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/android\/adb.ts'])",
            "num_files":1.0,
            "patch_content":"From ef2f673e25c629544dd3de6429999318447dd6bf Mon Sep 17 00:00:00 2001\nFrom: huntr-helper <61279246+huntr-helper@users.noreply.github.com>\nDate: Tue, 7 Apr 2020 10:35:09 +0100\nSubject: [PATCH] huntr - Command Injection Fix (#18)\nMIME-Version: 1.0\nContent-Type: text\/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n\nCo-authored-by: jammy <jammy@loves.shib.es>\nCo-authored-by: Pawe\u0142 Trys\u0142a <zamotany@users.noreply.github.com>\n---\n src\/android\/adb.ts | 15 +++++++++------\n 1 file changed, 9 insertions(+), 6 deletions(-)\n\ndiff --git a\/src\/android\/adb.ts b\/src\/android\/adb.ts\nindex b5a0cc5..6339014 100644\n--- a\/src\/android\/adb.ts\n+++ b\/src\/android\/adb.ts\n@@ -1,4 +1,4 @@\n-import { spawn, execSync, ChildProcess } from 'child_process';\n+import { spawn, execFileSync, ChildProcess } from 'child_process';\n import path from 'path';\n import {\n   CodeError,\n@@ -25,7 +25,7 @@ export function getAdbPath(customPath?: string): string {\n \n export function spawnLogcatProcess(adbPath: string): ChildProcess {\n   try {\n-    execSync(`${adbPath} logcat -c`);\n+    execFileSync(adbPath, ['logcat', '-c']);\n   } catch (error) {\n     throw new CodeError(\n       ERR_ANDROID_CANNOT_CLEAN_LOGCAT_BUFFER,\n@@ -49,11 +49,14 @@ export function getApplicationPid(\n   applicationId: string,\n   adbPath?: string\n ): number {\n-  let output: Buffer | undefined;\n+  let output: Buffer | String | undefined;\n   try {\n-    output = execSync(\n-      `'${getAdbPath(adbPath)}' shell pidof -s ${applicationId}`\n-    );\n+    output = execFileSync(getAdbPath(adbPath), [\n+      'shell',\n+      'pidof',\n+      '-s',\n+      applicationId,\n+    ]);\n   } catch (error) {\n     throw new CodeError(\n       ERR_ANDROID_CANNOT_GET_APP_PID,"
        },
        {
            "index":399,
            "vuln_id":"GHSA-26cm-qrc6-mfgj",
            "cwe_id":"{'CWE-74', 'CWE-90'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/StevenWeathers\/thunderdome-planning-poker\/commit\/f1524d01e8a0f2d6c3db5461c742456c692dd8c1'}",
            "dataset":"osv",
            "summary":"Improper Neutralization of Special Elements used in an LDAP Query in stevenweathers\/thunderdome-planning-poker ### Impact\nLDAP injection vulnerability, only affects instances with LDAP authentication enabled.\n\n### Patches\nPatch for vulnerability released with v1.16.3.\n\n### Workarounds\nDisable LDAP feature if in use\n\n### References\n[OWASP LDAP Injection Prevention Cheat Sheet](https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/LDAP_Injection_Prevention_Cheat_Sheet.html\n)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Thunderdome Github Repository](https:\/\/github.com\/StevenWeathers\/thunderdome-planning-poker)\n* Email us at [steven@weathers.me](mailto:steven@weathers.me)",
            "published_date":"2021-11-08",
            "chain_len":1,
            "project":"https:\/\/github.com\/StevenWeathers\/thunderdome-planning-poker",
            "commit_href":"https:\/\/github.com\/StevenWeathers\/thunderdome-planning-poker\/commit\/f1524d01e8a0f2d6c3db5461c742456c692dd8c1",
            "commit_sha":"f1524d01e8a0f2d6c3db5461c742456c692dd8c1",
            "patch":"SINGLE",
            "chain_ord":"['f1524d01e8a0f2d6c3db5461c742456c692dd8c1']",
            "before_first_fix_commit":"{'2b9ae2e1e70e0fde47d459aa0c16b768c253e51d'}",
            "last_fix_commit":"f1524d01e8a0f2d6c3db5461c742456c692dd8c1",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/02\/2021, 00:48:52",
            "message":"Fix LDAP vulnerability",
            "author":"Steven Weathers",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'auth.go': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/StevenWeathers\/thunderdome-planning-poker\/raw\/f1524d01e8a0f2d6c3db5461c742456c692dd8c1\/auth.go', 'patch': '@@ -68,7 +68,7 @@ func (s *server) authAndCreateUserLdap(UserName string, UserPassword string) (*d\\n \\n \\tsearchRequest := ldap.NewSearchRequest(viper.GetString(\"auth.ldap.basedn\"),\\n \\t\\tldap.ScopeWholeSubtree, ldap.NeverDerefAliases, 0, 0, false,\\n-\\t\\tfmt.Sprintf(viper.GetString(\"auth.ldap.filter\"), UserName),\\n+\\t\\tfmt.Sprintf(viper.GetString(\"auth.ldap.filter\"), ldap.EscapeFilter(UserName)),\\n \\t\\t[]string{\"dn\", viper.GetString(\"auth.ldap.mail_attr\"), viper.GetString(\"auth.ldap.cn_attr\")},\\n \\t\\tnil,\\n \\t)'}}",
            "message_norm":"fix ldap vulnerability",
            "language":"ca",
            "entities":"[('ldap', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['auth.go'])",
            "num_files":1.0,
            "patch_content":"From f1524d01e8a0f2d6c3db5461c742456c692dd8c1 Mon Sep 17 00:00:00 2001\nFrom: Steven Weathers <steven@weathers.me>\nDate: Mon, 1 Nov 2021 20:48:52 -0400\nSubject: [PATCH] Fix LDAP vulnerability\n\n---\n auth.go | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/auth.go b\/auth.go\nindex 8f74555a..43cb1415 100644\n--- a\/auth.go\n+++ b\/auth.go\n@@ -68,7 +68,7 @@ func (s *server) authAndCreateUserLdap(UserName string, UserPassword string) (*d\n \n \tsearchRequest := ldap.NewSearchRequest(viper.GetString(\"auth.ldap.basedn\"),\n \t\tldap.ScopeWholeSubtree, ldap.NeverDerefAliases, 0, 0, false,\n-\t\tfmt.Sprintf(viper.GetString(\"auth.ldap.filter\"), UserName),\n+\t\tfmt.Sprintf(viper.GetString(\"auth.ldap.filter\"), ldap.EscapeFilter(UserName)),\n \t\t[]string{\"dn\", viper.GetString(\"auth.ldap.mail_attr\"), viper.GetString(\"auth.ldap.cn_attr\")},\n \t\tnil,\n \t)"
        },
        {
            "index":512,
            "vuln_id":"GHSA-6f89-8j54-29xf",
            "cwe_id":"{'CWE-787', 'CWE-119'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/12c727cee857fa19be717f336943d95fca4ffe4f'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `FractionalAvgPoolGrad` ### Impact\nThe implementation of `tf.raw_ops.FractionalAvgPoolGrad` is vulnerable to a heap buffer overflow:\n  \n```python\nimport tensorflow as tf\n\norig_input_tensor_shape = tf.constant([1, 3, 2, 3], shape=[4], dtype=tf.int64)\nout_backprop = tf.constant([2], shape=[1, 1, 1, 1], dtype=tf.int64)\nrow_pooling_sequence = tf.constant([1], shape=[1], dtype=tf.int64)\ncol_pooling_sequence = tf.constant([1], shape=[1], dtype=tf.int64)\n\n\ntf.raw_ops.FractionalAvgPoolGrad(\n  orig_input_tensor_shape=orig_input_tensor_shape, out_backprop=out_backprop,\n  row_pooling_sequence=row_pooling_sequence,\n  col_pooling_sequence=col_pooling_sequence, overlapping=False)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/dcba796a28364d6d7f003f6fe733d82726dda713\/tensorflow\/core\/kernels\/fractional_avg_pool_op.cc#L216) fails to validate that the pooling sequence arguments have enough elements as required by the `out_backprop` tensor shape.\n\n### Patches\nWe have patched the issue in GitHub commit [12c727cee857fa19be717f336943d95fca4ffe4f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/12c727cee857fa19be717f336943d95fca4ffe4f).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/12c727cee857fa19be717f336943d95fca4ffe4f",
            "commit_sha":"12c727cee857fa19be717f336943d95fca4ffe4f",
            "patch":"SINGLE",
            "chain_ord":"['12c727cee857fa19be717f336943d95fca4ffe4f']",
            "before_first_fix_commit":"{'dcba796a28364d6d7f003f6fe733d82726dda713'}",
            "last_fix_commit":"12c727cee857fa19be717f336943d95fca4ffe4f",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/06\/2021, 21:02:47",
            "message":"Validate inputs of `FractionalAvgPoolGrad`.\n\nPiperOrigin-RevId: 372420640\nChange-Id: Icc583928e6cdc3062e12498e4d2337a8fe3da016",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 0, 'total': 13}",
            "files":"{'tensorflow\/core\/kernels\/fractional_avg_pool_op.cc': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/12c727cee857fa19be717f336943d95fca4ffe4f\/tensorflow%2Fcore%2Fkernels%2Ffractional_avg_pool_op.cc', 'patch': '@@ -250,6 +250,19 @@ class FractionalAvgPoolGradOp : public OpKernel {\\n     const int64 out_cols = out_backprop.dim_size(2);\\n     const int64 out_depth = out_backprop.dim_size(3);\\n \\n+    OP_REQUIRES(context, row_seq_tensor.NumElements() > out_rows,\\n+                errors::InvalidArgument(\"Given out_backprop shape \",\\n+                                        out_backprop.shape().DebugString(),\\n+                                        \", row_seq_tensor must have at least \",\\n+                                        out_rows + 1, \" elements, but got \",\\n+                                        row_seq_tensor.NumElements()));\\n+    OP_REQUIRES(context, col_seq_tensor.NumElements() > out_cols,\\n+                errors::InvalidArgument(\"Given out_backprop shape \",\\n+                                        out_backprop.shape().DebugString(),\\n+                                        \", col_seq_tensor must have at least \",\\n+                                        out_cols + 1, \" elements, but got \",\\n+                                        col_seq_tensor.NumElements()));\\n+\\n     auto row_seq_tensor_flat = row_seq_tensor.flat<int64>();\\n     auto col_seq_tensor_flat = col_seq_tensor.flat<int64>();\\n     auto orig_input_tensor_shape_flat = orig_input_tensor_shape.flat<int64>();'}}",
            "message_norm":"validate inputs of `fractionalavgpoolgrad`.\n\npiperorigin-revid: 372420640\nchange-id: icc583928e6cdc3062e12498e4d2337a8fe3da016",
            "language":"it",
            "entities":"[('validate', 'ACTION', ''), ('372420640', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/fractional_avg_pool_op.cc'])",
            "num_files":1.0,
            "patch_content":"From 12c727cee857fa19be717f336943d95fca4ffe4f Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Thu, 6 May 2021 14:02:47 -0700\nSubject: [PATCH] Validate inputs of `FractionalAvgPoolGrad`.\n\nPiperOrigin-RevId: 372420640\nChange-Id: Icc583928e6cdc3062e12498e4d2337a8fe3da016\n---\n tensorflow\/core\/kernels\/fractional_avg_pool_op.cc | 13 +++++++++++++\n 1 file changed, 13 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/fractional_avg_pool_op.cc b\/tensorflow\/core\/kernels\/fractional_avg_pool_op.cc\nindex b8a5083e5340f1..0452638a066795 100644\n--- a\/tensorflow\/core\/kernels\/fractional_avg_pool_op.cc\n+++ b\/tensorflow\/core\/kernels\/fractional_avg_pool_op.cc\n@@ -250,6 +250,19 @@ class FractionalAvgPoolGradOp : public OpKernel {\n     const int64 out_cols = out_backprop.dim_size(2);\n     const int64 out_depth = out_backprop.dim_size(3);\n \n+    OP_REQUIRES(context, row_seq_tensor.NumElements() > out_rows,\n+                errors::InvalidArgument(\"Given out_backprop shape \",\n+                                        out_backprop.shape().DebugString(),\n+                                        \", row_seq_tensor must have at least \",\n+                                        out_rows + 1, \" elements, but got \",\n+                                        row_seq_tensor.NumElements()));\n+    OP_REQUIRES(context, col_seq_tensor.NumElements() > out_cols,\n+                errors::InvalidArgument(\"Given out_backprop shape \",\n+                                        out_backprop.shape().DebugString(),\n+                                        \", col_seq_tensor must have at least \",\n+                                        out_cols + 1, \" elements, but got \",\n+                                        col_seq_tensor.NumElements()));\n+\n     auto row_seq_tensor_flat = row_seq_tensor.flat<int64>();\n     auto col_seq_tensor_flat = col_seq_tensor.flat<int64>();\n     auto orig_input_tensor_shape_flat = orig_input_tensor_shape.flat<int64>();"
        },
        {
            "index":758,
            "vuln_id":"GHSA-93q8-gq69-wqmw",
            "cwe_id":"{'CWE-697', 'CWE-1333'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/chalk\/ansi-regex\/commit\/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9'}",
            "dataset":"osv",
            "summary":"Inefficient Regular Expression Complexity in chalk\/ansi-regex ansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service.",
            "published_date":"2021-09-20",
            "chain_len":1,
            "project":"https:\/\/github.com\/chalk\/ansi-regex",
            "commit_href":"https:\/\/github.com\/chalk\/ansi-regex\/commit\/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9",
            "commit_sha":"8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9",
            "patch":"SINGLE",
            "chain_ord":"['8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9']",
            "before_first_fix_commit":"{'c1b5e45f7c65a332ffb03ac8e5804ad37c579cdc'}",
            "last_fix_commit":"8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/10\/2021, 20:23:24",
            "message":"Fix potential ReDoS (#37)",
            "author":"Yeting Li",
            "comments":"{'com_1': {'author': 'BeigeBox', 'datetime': '09\/23\/2021, 21:00:58', 'body': \"Which versions of ansi-regex are impacted by this vulnerability?  Several scanners are flagging all versions of this library other than 5.0.1 and 6.0.1.  I suspect some of the older versions aren't impacted, because the pattern variable is different (just spot checked I think v2.1.1 and v3).\"}, 'com_2': {'author': 'Qix-', 'datetime': '09\/26\/2021, 15:10:07', 'body': \"Not sure because the security researchers are not doing their due diligence and are instead farming bounty money on e.g. huntr.dev, targeting the most used repositories for clout.\\r\\n\\r\\nI'm really not sure what to do about this and it's eating a lot of time away. The vulnerability itself is not major - unless you're allowing long AND unsanitized user input to hit the API directly, the vulnerability doesn't affect you.\\r\\n\\r\\nI have no idea which versions it actually affects because they didn't test it correctly.\"}, 'com_3': {'author': 'thoger', 'datetime': '09\/27\/2021, 18:07:58', 'body': \"Confirmed 4.1.0 and 3.0.0 as affected testing using the provided reproducer.  2.1.1 does not reproduce the issue.\\r\\n\\r\\n3.0.0 is the first affected, as that's the first version that includes 69bebf6b8 that the problematic part of the regex.\"}, 'com_4': {'author': 'Qix-', 'datetime': '09\/27\/2021, 18:22:35', 'body': 'Thank you @thoger. \ud83d\ude42'}, 'com_5': {'author': 'arungpro', 'datetime': '10\/12\/2021, 11:28:32', 'body': '@thoger Does 5.0.0 or above, are not affected this? Can you confirm on the same?'}, 'com_6': {'author': 'Qix-', 'datetime': '10\/12\/2021, 11:51:24', 'body': '@arungpro `5.0.0` is affected, `5.0.1` is not. Likewise, `6.0.0` is affected, `6.0.1` is not.'}, 'com_7': {'author': 'OnlineCop', 'datetime': '01\/10\/2022, 17:01:46', 'body': 'Would someone be able to help me understand the exact formatting going on here?\\r\\n\\r\\nI assume that the `\\\\` backslashes are escaped because this is within a string, meaning `\\\\u001B` must be represented as `\\\\\\\\u001B` ?\\r\\n\\r\\nI copied the \"proposed\" escaped original into [regex101](https:\/\/regex101.com\/r\/UR7Ma5\/1) and removed the escape characters to produce this:\\r\\n\\r\\n```[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\\/#&.:=?%@~_]*)*)?\\\\u0007)```\\r\\n\\r\\nI then plugged that unescaped version [back in](https:\/\/regex101.com\/r\/UR7Ma5\/2) to determine whether there were any problems with the pattern itself, and see that there is an incomplete\/unclosed `(?:` which should probably be removed:\\r\\n\\r\\n```[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:;[-a-zA-Z\\\\d\\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\\/#&.:=?%@~_]*)*)?\\\\u0007```\\r\\n\\r\\nThe next outer `(?: ... )` group appears to have no alternations or quantifiers, so can probably also be removed:\\r\\n\\r\\n```(?:(?:;[-a-zA-Z\\\\d\\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\\/#&.:=?%@~_]*)*)?\\\\u0007)```\\r\\n\\r\\nThe next `(?: ... | ... )?` group does contain an alternation, and is qualified by its `?` quantifier. Immediately after this optional group, it looks for `\\\\u0007` at the end.\\r\\n\\r\\nWithin both alternations, the character groups `[-a-zA-Z\\\\d\\\\\/#&.:=?%@~_]` can be shortened: `[a-zA-Z0-9_]` or `[a-zA-Z\\\\d_]` can be replaced with `\\\\w`, so: `[-\\\\w\\\\\/#&.:=?%@~]`.\\r\\n\\r\\nThat would look like this:\\r\\n\\r\\n```[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:;[-\\\\w\\\\\/#&.:=?%@~]+)*|[a-zA-Z\\\\d]+(?:;[-\\\\w\\\\\/#&.:=?%@~]*)*)?\\\\u0007```\\r\\n\\r\\nSo, within the first alternation, it matches a semicolon `;` followed by **one** or more of those character-group characters. Within the second alternation, it first looks for letters or numbers, followed by any number of semicolon `;` followed by **zero** or more of those character-group characters. I\\'m not sure whether that would want to be a `+` one-or-more, since that would allow \"abc;;;;;;;;;\" to match there instead of requiring characters between those semicolons.\\r\\n\\r\\nIf you look at [this example](https:\/\/regex101.com\/r\/UR7Ma5\/3), I\\'ve changed the outer non-capturing `(?: ... )?` to a capturing group just for illustrative purposes so you can see how the semicolon is matched in one case but not in the other due to this **zero** or more quantifiers. You can see this when the semicolon is added to the text in [this next example](https:\/\/regex101.com\/r\/UR7Ma5\/4).\\r\\n\\r\\nIf both `;[-\\\\w\\\\\/#&.:=?%@~]` character groups are quantified with zero-or-more `*`, then subsequent semicolons `;;` will match, while if they are quantified with one-or-more `+`, the match fails due to subsequent semicolons `;;`.'}, 'com_8': {'author': 'lorand-horvath', 'datetime': '04\/02\/2022, 07:47:22', 'body': 'ansi-regex v3 and v4 should now include the vulnerability fixes:\\r\\n`3.0.1` in https:\/\/github.com\/chalk\/ansi-regex\/commit\/419250fa510bf31b4cc672e76537a64f9332e1f1 and https:\/\/github.com\/chalk\/ansi-regex\/commit\/c57d4c2fdbe0357a0f6dd42d1160defdc9fffdf5\\r\\n`4.1.1` in https:\/\/github.com\/chalk\/ansi-regex\/commit\/75a657da7af875b2e2724fd6331bf0a4b23d3c9a'}, 'com_9': {'author': 'romans-ovo', 'datetime': '07\/13\/2022, 15:36:46', 'body': '> ansi-regex v3 and v4 should now include the vulnerability fixes: `3.0.1` in [419250f](https:\/\/github.com\/chalk\/ansi-regex\/commit\/419250fa510bf31b4cc672e76537a64f9332e1f1) and [c57d4c2](https:\/\/github.com\/chalk\/ansi-regex\/commit\/c57d4c2fdbe0357a0f6dd42d1160defdc9fffdf5) `4.1.1` in [75a657d](https:\/\/github.com\/chalk\/ansi-regex\/commit\/75a657da7af875b2e2724fd6331bf0a4b23d3c9a)\\r\\n\\r\\nNeither 3.0.1, nor 4.1.1 are listed on https:\/\/www.npmjs.com\/package\/ansi-regex (under Versions), btw.'}, 'com_10': {'author': 'Qix-', 'datetime': '07\/13\/2022, 15:42:41', 'body': '<img width=\"614\" alt=\"image\" src=\"https:\/\/user-images.githubusercontent.com\/885648\/178775021-919b8738-8879-4edc-8507-a6b2475c5631.png\">\\r\\nYou sure?'}, 'com_11': {'author': 'papb', 'datetime': '08\/01\/2022, 02:05:09', 'body': \"> Would someone be able to help me understand the exact formatting going on here?\\r\\n\\r\\n@OnlineCop can you first help me understand what exactly is your question here? Are you trying to understand what the code is doing? Are you proposing a readability improvement? Or performance improvement? Sorry, you said a lot of things but I couldn't even understand what is your goal, roughly...\\r\\n\\r\\n> I assume that the `\\\\` backslashes are escaped because this is within a string, meaning `\\\\u001B` must be represented as `\\\\\\\\u001B` ?\\r\\n\\r\\nYes, exactly.\"}, 'com_12': {'author': 'OnlineCop', 'datetime': '08\/01\/2022, 14:23:36', 'body': \"In the original, lines 2-5 were looking for:\\r\\n1. either `\\\\u001B` (ESC) or `\\\\u009B` (\u00a2 cent sign) followed by 0 or more of these characters: `[]()#;?`\\r\\n\\r\\nAfter that, it was looking for either:\\r\\n2. any number of letters, numbers, semi-colons, or special characters that came before `\\\\u0007` (BEL)\\r\\n    - There were a _lot_ of 0-or-more groups, all of which was also within its own `(?:...)?` 0-or-1 (optional) group, before that BEL.\\r\\n    - It was definitely something that could cause ReDoS.\\r\\n3. or an optional group of digits and semi-colons, followed by a single character in the range `[\\\\dA-PR-TZcf-ntqry=><~]`.\\r\\n    - This optional group also had potential for a ReDoS.\\r\\n\\r\\nIn the revised version, lines 2-5 were looking for the same characters as 1. above, but increased the variety of characters allowed before `\\\\u0007` and still has a lot of potential for ReDoS (possibly more than before).\\r\\n\\r\\nI don't understand what exactly is supposed to be matched here. Both BEFORE and AFTER versions have a high probability to cause catastrophic backtracking. Are there any tests that should match either of the BEFORE or AFTER regexes?\"}, 'com_13': {'author': 'Qix-', 'datetime': '08\/02\/2022, 22:47:38', 'body': \"Feel free to create a reproduction case that exploits exponential time complexity and file an issue. Otherwise I'm not sure what you're trying to say.\"}}",
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chalk\/ansi-regex\/raw\/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9\/index.js', 'patch': \"@@ -1,6 +1,6 @@\\n export default function ansiRegex({onlyFirst = false} = {}) {\\n \\tconst pattern = [\\n-\\t\\t'[\\\\\\\\u001B\\\\\\\\u009B][[\\\\\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\\\\\d]*(?:;[-a-zA-Z\\\\\\\\d\\\\\\\\\/#&.:=?%@~_]*)*)?\\\\\\\\u0007)',\\n+\\t    '[\\\\\\\\u001B\\\\\\\\u009B][[\\\\\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\\\\\d\\\\\\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\\\\\d]+(?:;[-a-zA-Z\\\\\\\\d\\\\\\\\\/#&.:=?%@~_]*)*)?\\\\\\\\u0007)',\\n \\t\\t'(?:(?:\\\\\\\\d{1,4}(?:;\\\\\\\\d{0,4})*)?[\\\\\\\\dA-PR-TZcf-ntqry=><~]))'\\n \\t].join('|');\"}}",
            "message_norm":"fix potential redos (#37)",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('#37', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0,
            "patch_content":"From 8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9 Mon Sep 17 00:00:00 2001\nFrom: Yeting Li <liyt@ios.ac.cn>\nDate: Sat, 11 Sep 2021 04:23:24 +0800\nSubject: [PATCH] Fix potential ReDoS (#37)\n\n---\n index.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/index.js b\/index.js\nindex 25a9ba7..130a092 100644\n--- a\/index.js\n+++ b\/index.js\n@@ -1,6 +1,6 @@\n export default function ansiRegex({onlyFirst = false} = {}) {\n \tconst pattern = [\n-\t\t'[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[-a-zA-Z\\\\d\\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n+\t    '[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n \t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n \t].join('|');"
        },
        {
            "index":577,
            "vuln_id":"GHSA-68wm-pfjf-wqp6",
            "cwe_id":"{'CWE-287'}",
            "score":10.0,
            "chain":"{'https:\/\/github.com\/authelia\/authelia\/commit\/c62dbd43d6e69ae81530e7c4f8763857f8ff1dda'}",
            "dataset":"osv",
            "summary":"Authentication bypassed with malformed request URI on nginx ### Impact\nThis affects uses who are using nginx ngx_http_auth_request_module with Authelia, it allows a malicious individual who crafts a malformed HTTP request to bypass the authentication mechanism. It additionally could theoretically affect other proxy servers, but all of the ones we officially support except nginx do not allow malformed URI paths.\n\n### Patches\nThe problem is rectified entirely in v4.29.3. As this patch is relatively straightforward we can back port this to any version upon request. Alternatively we are supplying a git patch to 4.25.1 which should be relatively straightforward to apply to any version, the git patches for specific versions can be found below.\n\n<details><summary>Patch for 4.25.1:<\/summary><p>\n\n```patch\nFrom ca22f3d2c44ca7bef043ffbeeb06d6659c1d550f Mon Sep 17 00:00:00 2001\nFrom: James Elliott <james-d-elliott@users.noreply.github.com>\nDate: Wed, 19 May 2021 12:10:13 +1000\nSubject: [PATCH] fix(handlers): verify returns 200 on malformed request\n\nThis is a git patch for commit at tag v4.25.1 to address a potential method to bypass authentication in proxies that forward malformed information to Authelia in the forward auth process. Instead of returning a 200 this ensures that Authelia returns a 401 when this occurs.\n---\n internal\/handlers\/handler_verify.go | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ndiff --git a\/internal\/handlers\/handler_verify.go b\/internal\/handlers\/handler_verify.go\nindex 65c064ce..4dd9702d 100644\n--- a\/internal\/handlers\/handler_verify.go\n+++ b\/internal\/handlers\/handler_verify.go\n@@ -396,7 +396,9 @@ func VerifyGet(cfg schema.AuthenticationBackendConfiguration) middlewares.Reques\n \t\ttargetURL, err := getOriginalURL(ctx)\n \n \t\tif err != nil {\n-\t\t\tctx.Error(fmt.Errorf(\"Unable to parse target URL: %s\", err), operationFailedMessage)\n+\t\t\tctx.Logger.Error(fmt.Errorf(\"Unable to parse target URL: %s\", err))\n+\t\t\tctx.ReplyUnauthorized()\n+\n \t\t\treturn\n \t\t}\n \n-- \n2.31.1\n```\n\n<\/p><\/details>\n\n### Workarounds\nThe most relevant workaround is upgrading. **If you need assistance with an upgrade please contact us on [Matrix](https:\/\/riot.im\/app\/#\/room\/#authelia:matrix.org) or [Discord](https:\/\/discord.authelia.com).** Please just let us know you're needing help upgrading to above 4.29.2. \n\nYou can add an block which fails requests that contains a malformed URI in the internal location block. We have crafted one that should work in most instances, it basically checks no chars that are required to be URL-encoded for either the path or the query are in the URI. Basically this regex checks that the characters between the square braces are the only characters in the $request_uri header, if they exist, it returns a HTTP 401 status code. The characters in the regex match are tested to not cause a parsing error that would result in a failure, however they are not exhaustive since query strings seem to not always conform to the RFC.\n\n<details><summary>authelia.conf:<\/summary><p>\n\n```nginx\nlocation \/authelia {\n    internal;\n    # **IMPORTANT**\n    # This block rejects requests with a 401 which contain characters that are unable to be parsed.\n    # It is necessary for security prior to v4.29.3 due to the fact we returned an invalid code in the event of a parser error.\n    # You may comment this section if you're using Authelia v4.29.3 or above. We strongly recommend upgrading.\n    # RFC3986: http:\/\/tools.ietf.org\/html\/rfc3986\n    # Commentary on RFC regarding Query Strings: https:\/\/www.456bereastreet.com\/archive\/201008\/what_characters_are_allowed_unencoded_in_query_strings\/\n    if ($request_uri ~ [^a-zA-Z0-9_+-=\\!@$%&*?~.:#'\\;\\(\\)\\[\\]]) {\n        return 401;\n    }\n\n    # Include the remainder of the block here. \n}\n````\n\n<\/p><\/details>\n\n### Discovery\n\nThis issue was discovered by:\n\nSiemens Energy\nCybersecurity Red Team\n\n- Silas Francisco\n- Ricardo Pesqueira\n\n\n### Identifying active exploitation of the vulnerability\n\nThe following regex should match log entries that are an indication of the vulnerability being exploited:\n```regex\nlevel=error msg=\"Unable to parse target URL: Unable to parse URL (extracted from X-Original-URL header)?.*?: parse.*?net\/url:.*github\\.com\/authelia\/authelia\/internal\/handlers\/handler_verify\\.go\n```\n\nExample log entry ***with*** X-Original-URL configured:\n```log\ntime=\"2021-05-21T16:31:15+10:00\" level=error msg=\"Unable to parse target URL: Unable to parse URL extracted from X-Original-URL header: parse \\\"https:\/\/example.com\/\": net\/url: invalid control character in URL\" method=GET path=\/api\/verify remote_ip=192.168.1.10 stack=\"github.com\/authelia\/authelia\/internal\/middlewares\/authelia_context.go:65 (*AutheliaCtx).Error\\ngithub.com\/authelia\/authelia\/internal\/handlers\/handler_verify.go:431     VerifyGet.func1\\ngithub.com\/authelia\/authelia\/internal\/middlewares\/authelia_context.go:50 AutheliaMiddleware.func1.1\\ngithub.com\/fasthttp\/router@v1.3.12\/router.go:414                         (*Router).Handler\\ngithub.com\/authelia\/authelia\/internal\/middlewares\/log_request.go:14      LogRequestMiddleware.func1\\ngithub.com\/valyala\/fasthttp@v1.24.0\/server.go:2219                       (*Server).serveConn\\ngithub.com\/valyala\/fasthttp@v1.24.0\/workerpool.go:223                    (*workerPool).workerFunc\\ngithub.com\/valyala\/fasthttp@v1.24.0\/workerpool.go:195                    (*workerPool).getCh.func1\\nruntime\/asm_amd64.s:1371                                                 goexit\"\n```\n\nExample log entry ***without*** X-Original-URL configured:\n```log\ntime=\"2021-05-21T16:30:17+10:00\" level=error msg=\"Unable to parse target URL: Unable to parse URL https:\/\/example.com\/: parse \\\"https:\/\/example.com\/\": net\/url: invalid control character in URL\" method=GET path=\/api\/verify remote_ip=192.168.1.10 stack=\"github.com\/authelia\/authelia\/internal\/middlewares\/authelia_context.go:65 (*AutheliaCtx).Error\\ngithub.com\/authelia\/authelia\/internal\/handlers\/handler_verify.go:431     VerifyGet.func1\\ngithub.com\/authelia\/authelia\/internal\/middlewares\/authelia_context.go:50 AutheliaMiddleware.func1.1\\ngithub.com\/fasthttp\/router@v1.3.12\/router.go:414                         (*Router).Handler\\ngithub.com\/authelia\/authelia\/internal\/middlewares\/log_request.go:14      LogRequestMiddleware.func1\\ngithub.com\/valyala\/fasthttp@v1.24.0\/server.go:2219                       (*Server).serveConn\\ngithub.com\/valyala\/fasthttp@v1.24.0\/workerpool.go:223                    (*workerPool).workerFunc\\ngithub.com\/valyala\/fasthttp@v1.24.0\/workerpool.go:195                    (*workerPool).getCh.func1\\nruntime\/asm_amd64.s:1371                                                 goexit\"\n```\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue at [authelia](https:\/\/github.com\/authelia\/authelia\/issues)\n* Email us at [security@authelia.com](mailto:security@authelia.com)",
            "published_date":"2021-12-20",
            "chain_len":1,
            "project":"https:\/\/github.com\/authelia\/authelia",
            "commit_href":"https:\/\/github.com\/authelia\/authelia\/commit\/c62dbd43d6e69ae81530e7c4f8763857f8ff1dda",
            "commit_sha":"c62dbd43d6e69ae81530e7c4f8763857f8ff1dda",
            "patch":"SINGLE",
            "chain_ord":"['c62dbd43d6e69ae81530e7c4f8763857f8ff1dda']",
            "before_first_fix_commit":"{'a56cffa129a0fedb830971855ab695a95cf96312'}",
            "last_fix_commit":"c62dbd43d6e69ae81530e7c4f8763857f8ff1dda",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/21\/2021, 12:03:44",
            "message":"fix(handlers): align response status codes for the verify endpoint (#2016)\n\nThis aligns all response status codes on the \/api\/verify endpoint when an error occurs, making it impossible to determine the actual reason for the failure.",
            "author":"James Elliott",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 1, 'total': 4}",
            "files":"{'internal\/handlers\/handler_verify.go': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/authelia\/authelia\/raw\/c62dbd43d6e69ae81530e7c4f8763857f8ff1dda\/internal%2Fhandlers%2Fhandler_verify.go', 'patch': '@@ -428,7 +428,9 @@ func VerifyGet(cfg schema.AuthenticationBackendConfiguration) middlewares.Reques\\n \\t\\ttargetURL, err := ctx.GetOriginalURL()\\n \\n \\t\\tif err != nil {\\n-\\t\\t\\tctx.Error(fmt.Errorf(\"Unable to parse target URL: %s\", err), operationFailedMessage)\\n+\\t\\t\\tctx.Logger.Error(fmt.Errorf(\"Unable to parse target URL: %s\", err))\\n+\\t\\t\\tctx.ReplyUnauthorized()\\n+\\n \\t\\t\\treturn\\n \\t\\t}'}}",
            "message_norm":"fix(handlers): align response status codes for the verify endpoint (#2016)\n\nthis aligns all response status codes on the \/api\/verify endpoint when an error occurs, making it impossible to determine the actual reason for the failure.",
            "language":"en",
            "entities":"[('fix(handlers', 'ACTION', ''), ('#2016', 'ISSUE', ''), ('verify', 'ACTION', ''), ('error', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['internal\/handlers\/handler_verify.go'])",
            "num_files":1.0,
            "patch_content":"From c62dbd43d6e69ae81530e7c4f8763857f8ff1dda Mon Sep 17 00:00:00 2001\nFrom: James Elliott <james-d-elliott@users.noreply.github.com>\nDate: Fri, 21 May 2021 22:03:44 +1000\nSubject: [PATCH] fix(handlers): align response status codes for the verify\n endpoint (#2016)\n\nThis aligns all response status codes on the \/api\/verify endpoint when an error occurs, making it impossible to determine the actual reason for the failure.\n---\n internal\/handlers\/handler_verify.go | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ndiff --git a\/internal\/handlers\/handler_verify.go b\/internal\/handlers\/handler_verify.go\nindex 0b08059a54e08..331eece1fd2ff 100644\n--- a\/internal\/handlers\/handler_verify.go\n+++ b\/internal\/handlers\/handler_verify.go\n@@ -428,7 +428,9 @@ func VerifyGet(cfg schema.AuthenticationBackendConfiguration) middlewares.Reques\n \t\ttargetURL, err := ctx.GetOriginalURL()\n \n \t\tif err != nil {\n-\t\t\tctx.Error(fmt.Errorf(\"Unable to parse target URL: %s\", err), operationFailedMessage)\n+\t\t\tctx.Logger.Error(fmt.Errorf(\"Unable to parse target URL: %s\", err))\n+\t\t\tctx.ReplyUnauthorized()\n+\n \t\t\treturn\n \t\t}"
        },
        {
            "index":563,
            "vuln_id":"GHSA-6vqp-h455-42mr",
            "cwe_id":"{'CWE-789'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/apache\/pdfbox\/commit\/8c47be1011c11dc47300faecffd8ab32fba3646f'}",
            "dataset":"osv",
            "summary":"Uncontrolled Memory Allocation in Apache PDFBox A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.",
            "published_date":"2021-05-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/apache\/pdfbox",
            "commit_href":"https:\/\/github.com\/apache\/pdfbox\/commit\/8c47be1011c11dc47300faecffd8ab32fba3646f",
            "commit_sha":"8c47be1011c11dc47300faecffd8ab32fba3646f",
            "patch":"SINGLE",
            "chain_ord":"['8c47be1011c11dc47300faecffd8ab32fba3646f']",
            "before_first_fix_commit":"{'ef53b45f111c4e391faf1c331c4e81a21e24c0b8'}",
            "last_fix_commit":"8c47be1011c11dc47300faecffd8ab32fba3646f",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/07\/2021, 13:18:31",
            "message":"PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/pdfbox\/branches\/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
            "author":"Andreas Lehmk\u00fchler",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'pdfbox\/src\/main\/java\/org\/apache\/pdfbox\/pdfparser\/PDFXrefStreamParser.java': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/pdfbox\/raw\/8c47be1011c11dc47300faecffd8ab32fba3646f\/pdfbox%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fpdfbox%2Fpdfparser%2FPDFXrefStreamParser.java', 'patch': '@@ -19,6 +19,7 @@\\n import java.io.IOException;\\n import java.util.Arrays;\\n import java.util.Iterator;\\n+import java.util.NoSuchElementException;\\n \\n import org.apache.pdfbox.cos.COSArray;\\n import org.apache.pdfbox.cos.COSBase;\\n@@ -212,6 +213,10 @@ public boolean hasNext()\\n         @Override\\n         public Long next()\\n         {\\n+            if (currentNumber >= maxValue)\\n+            {\\n+                throw new NoSuchElementException();\\n+            }\\n             if (currentNumber < currentEnd)\\n             {\\n                 return currentNumber++;'}}",
            "message_norm":"pdfbox-5112: sonarcube fix, throw nosuchelementexception if no more elements are available\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/pdfbox\/branches\/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68",
            "language":"en",
            "entities":"[('sonarcube', 'DETECTION', ''), ('https:\/\/svn.apache.org\/repos\/asf\/pdfbox\/branches\/2.0@1887295', 'URL', ''), ('13f79535', 'SHA', 'generic_sha'), ('ffa450edef68', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['pdfbox\/src\/main\/java\/org\/apache\/pdfbox\/pdfparser\/PDFXrefStreamParser.java'])",
            "num_files":1.0,
            "patch_content":"From 8c47be1011c11dc47300faecffd8ab32fba3646f Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Andreas=20Lehmk=C3=BChler?= <lehmi@apache.org>\nDate: Sun, 7 Mar 2021 13:18:31 +0000\nSubject: [PATCH] PDFBOX-5112: SonarCube fix, throw NoSuchElementException if\n no more elements are available\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/pdfbox\/branches\/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68\n---\n ...\/org\/apache\/pdfbox\/pdfparser\/PDFXrefStreamParser.java     | 5 +++++\n 1 file changed, 5 insertions(+)\n\ndiff --git a\/pdfbox\/src\/main\/java\/org\/apache\/pdfbox\/pdfparser\/PDFXrefStreamParser.java b\/pdfbox\/src\/main\/java\/org\/apache\/pdfbox\/pdfparser\/PDFXrefStreamParser.java\nindex c4ab305e01a..2aad117a2ee 100755\n--- a\/pdfbox\/src\/main\/java\/org\/apache\/pdfbox\/pdfparser\/PDFXrefStreamParser.java\n+++ b\/pdfbox\/src\/main\/java\/org\/apache\/pdfbox\/pdfparser\/PDFXrefStreamParser.java\n@@ -19,6 +19,7 @@\n import java.io.IOException;\n import java.util.Arrays;\n import java.util.Iterator;\n+import java.util.NoSuchElementException;\n \n import org.apache.pdfbox.cos.COSArray;\n import org.apache.pdfbox.cos.COSBase;\n@@ -212,6 +213,10 @@ public boolean hasNext()\n         @Override\n         public Long next()\n         {\n+            if (currentNumber >= maxValue)\n+            {\n+                throw new NoSuchElementException();\n+            }\n             if (currentNumber < currentEnd)\n             {\n                 return currentNumber++;"
        },
        {
            "index":429,
            "vuln_id":"GHSA-3j9m-hcv9-rpj8",
            "cwe_id":"{'CWE-79'}",
            "score":6.9,
            "chain":"{'https:\/\/github.com\/grafana\/grafana\/commit\/3cb5214fa45eb5a571fd70d6c6edf0d729983f82', 'https:\/\/github.com\/grafana\/grafana\/commit\/fb85ed691290d211a5baa44d9a641ab137f0de88', 'https:\/\/github.com\/grafana\/grafana\/commit\/31b78d51c693d828720a5b285107a50e6024c912'}",
            "dataset":"osv",
            "summary":"XSS vulnerability allowing arbitrary JavaScript execution Today we are releasing Grafana 8.2.3. This patch release includes an important security fix for an issue that affects all Grafana versions from 8.0.0-beta1.\n\n[Grafana Cloud](https:\/\/grafana.com\/cloud) instances have already been patched and an audit did not find any usage of this attack vector. [Grafana Enterprise](https:\/\/grafana.com\/products\/enterprise) customers were provided with updated binaries under embargo.\n\n## CVE-2021-41174 XSS vulnerability on unauthenticated pages\n\n### Summary\n\nCVSS Score: 6.9 Medium\nCVSS:[CVSS:3.0\/AV:N\/AC:H\/PR:N\/UI:R\/S:C\/C:L\/I:H\/A:N\/E:U\/RL:O\/RC:R\/CR:L\/MAV:N\/MAC:H\/MPR:N\/MUI:R\/MS:C\/MC:N\/MI:H\/MA:L](https:\/\/www.first.org\/cvss\/calculator\/3.0#CVSS:3.0\/AV:N\/AC:H\/PR:N\/UI:R\/S:C\/C:L\/I:H\/A:N\/E:U\/RL:O\/RC:R\/CR:L\/MAV:N\/MAC:H\/MPR:N\/MUI:R\/MS:C\/MC:N\/MI:H\/MA:L)\n\nWe received a security report to security@grafana.com on 2021-10-21 about a vulnerability in Grafana regarding the XSS vulnerability.\n\nIt was later identified as affecting Grafana versions from 8.0.0-beta1 to 8.2.2. [CVE-2021-41174](https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2021-41174) has been assigned to this vulnerability.\n\n### Impact\n\nIf an attacker is able to convince a victim to visit a URL referencing a vulnerable page, arbitrary JavaScript content may be executed within the context of the victim's browser.\n\nThe user visiting the malicious link must be unauthenticated and the link must be for a page that contains the login button in the menu bar.\n\nThere are two ways an unauthenticated user can open a page in Grafana that contains the login button:\n- Anonymous authentication is enabled. This means all pages in Grafana would be open for the attack.\n- The link is to an unauthenticated page. The following pages are vulnerable:\n  - `\/dashboard-solo\/snapshot\/*`\n  - `\/dashboard\/snapshot\/*`\n  - `\/invite\/:code`\n\nThe url has to be crafted to exploit AngularJS rendering and contain the interpolation binding for AngularJS expressions. AngularJS uses double curly braces for interpolation binding: {{ }} \n\nAn example of an expression would be: `{{constructor.constructor(\u2018alert(1)\u2019)()}}`. This can be included in the link URL like this: \n\nhttps:\/\/play.grafana.org\/dashboard\/snapshot\/%7B%7Bconstructor.constructor('alert(1)')()%7D%7D?orgId=1\n\nWhen the user follows the link and the page renders, the login button will contain the original link with a query parameter to force a redirect to the login page. The URL is not validated and the AngularJS rendering engine will execute the JavaScript expression contained in the URL.\n\n### Attack audit\n\nWe can not guarantee that the below will identify all attacks, so if you find something using the audit process described below, you should consider doing a full assessment.\n\n#### Through reverse proxy\/load balancer logs\n\nTo determine if your Grafana installation has been exploited for this vulnerability, search through your reverse proxy\/load balancer access logs for instances where the path contains `{{` followed by something that would invoke JavaScript code. For example, this could be code that attempts to show a fake login page or to steal browser or session data. The [OWASP cheat sheet](https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/XSS_Filter_Evasion_Cheat_Sheet.html) has several examples of XSS attacks.\n\n#### Through the Grafana Enterprise audit feature\n\nIf you enabled \u201cLog web requests\u201d in your configuration with `router_logging = true`, look for requests where `path` contains `{{` followed by something that would invoke JavaScript code.\n\n### Patched versions\n\nRelease 8.2.3:\n\n- [Download Grafana 8.2.3](https:\/\/grafana.com\/grafana\/download\/8.2.3)\n- [Release notes](https:\/\/grafana.com\/docs\/grafana\/latest\/release-notes\/release-notes-8-2-3\/)\n\n### Solutions and mitigations\n\nDownload and install the appropriate patch for your version of Grafana.\n\n[Grafana Cloud](https:\/\/grafana.com\/cloud) instances have already been patched, and [Grafana Enterprise](https:\/\/grafana.com\/products\/enterprise) customers were provided with updated binaries under embargo.\n\n### Workaround\n\nIf for some reason you cannot upgrade, you can use a reverse proxy or similar to block access to block the literal string `{{` in the path.\n\nExample of an Nginx rule to block the literal string `{{`:\n\n```\nlocation ~ \\{\\{ {\n    deny all;\n}\n```\n### Timeline and postmortem\n\nHere is a detailed timeline starting from when we originally learned of the issue. All times in UTC. \n\n* 2021-10-21 23:13: Security researcher sends the initial report about an XSS vulnerability.\n* 2021-10-21 23:13: Confirmed to be reproducible in at least versions 8.0.5 and 8.2.2.\n* 2021-10-22 02:02 MEDIUM severity declared.\n* 2021-10-22 09:22: it is discovered that Grafana instances with anonymous auth turned on are vulnerable. This includes https:\/\/play.grafana.org\/ .\n* 2021-10-22 09:50: Anonymous access disabled for all instances on Grafana Cloud as a mitigation measure.\n* 2021-10-22 11:15: Workaround deployed on Grafana Cloud that blocks malicious requests.\n* 2021-10-22 12:35: Enabled anonymous access for instances on Grafana Cloud. \n* 2021-10-22 12:51: All instances protected by the workaround. From this point forward, Grafana Cloud is no longer affected.\n* 2021-10-22 14:05 Grafana Cloud instances updated with a fix.\n* 2021-10-22 19:23 :Determination that no weekend work is needed as the issue is of MEDIUM severity and the root cause has been identified.\n* 2021-10-25 14:13: Audit of Grafana Cloud concluded, no evidence of exploitation.\n* 2021-10-27 12:00: Grafana Enterprise images released to customers under embargo.\n* 2021-11-03 12:00: Public release.\n\n## Reporting security issues\n\nIf you think you have found a security vulnerability, please send a report to [security@grafana.com](mailto:security@grafana.com). This address can be used for all of\nGrafana Labs' open source and commercial products (including but not limited to Grafana, Tempo, Loki, k6, Tanka, and  Grafana Cloud, Grafana Enterprise, and grafana.com). We only accept vulnerability reports at this address. We would prefer that you encrypt your message to us using our PGP key. The key fingerprint is:\n\nF988 7BEA 027A 049F AE8E  5CAA D125 8932 BE24 C5CA\n\nThe key is available from [ keyserver.ubuntu.com]( https:\/\/keyserver.ubuntu.com\/pks\/lookup?op=get&fingerprint=on&search=0xD1258932BE24C5CA) by searching for [security@grafana]( https:\/\/keyserver.ubuntu.com\/pks\/lookup?search=security@grafana&fingerprint=on&op=index).\n\n## Security announcements\n\nThere is a Security [category](https:\/\/grafana.com\/tags\/security\/) on the Grafana blog where we will post a summary, remediation, and mitigation details for any patch containing security fixes and you can subscribe to updates from our [Security Announcements RSS feed](https:\/\/grafana.com\/tags\/security\/index.xml).",
            "published_date":"2021-11-08",
            "chain_len":3,
            "project":"https:\/\/github.com\/grafana\/grafana",
            "commit_href":"https:\/\/github.com\/grafana\/grafana\/commit\/fb85ed691290d211a5baa44d9a641ab137f0de88",
            "commit_sha":"fb85ed691290d211a5baa44d9a641ab137f0de88",
            "patch":"MULTI",
            "chain_ord":"['31b78d51c693d828720a5b285107a50e6024c912', '3cb5214fa45eb5a571fd70d6c6edf0d729983f82', 'fb85ed691290d211a5baa44d9a641ab137f0de88']",
            "before_first_fix_commit":"{'3cb5214fa45eb5a571fd70d6c6edf0d729983f82', 'a3dc30546fce2e437d858c140f1ff307a04365d6'}",
            "last_fix_commit":"fb85ed691290d211a5baa44d9a641ab137f0de88",
            "chain_ord_pos":3.0,
            "commit_datetime":"10\/25\/2021, 07:45:05",
            "message":"Merge pull request #147 from grafana\/axelav\/sanitized-nav-links-8-2-3\n\nSanitized NavBar children links to remove angular interpolation v8.2.3",
            "author":"Oscar Kilhed",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 3, 'total': 8}",
            "files":"{'public\/app\/core\/components\/NavBar\/DropdownChild.tsx': {'additions': 5, 'deletions': 3, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/grafana\/grafana\/raw\/fb85ed691290d211a5baa44d9a641ab137f0de88\/public%2Fapp%2Fcore%2Fcomponents%2FNavBar%2FDropdownChild.tsx', 'patch': '@@ -1,6 +1,6 @@\\n import React from \\'react\\';\\n import { css } from \\'@emotion\/css\\';\\n-import { GrafanaTheme2 } from \\'@grafana\/data\\';\\n+import { GrafanaTheme2, textUtil } from \\'@grafana\/data\\';\\n import { Icon, IconName, Link, useTheme2 } from \\'@grafana\/ui\\';\\n \\n export interface Props {\\n@@ -29,13 +29,15 @@ const DropdownChild = ({ isDivider = false, icon, onClick, target, text, url }:\\n     <\/button>\\n   );\\n   if (url) {\\n+    const sanitizedUrl = textUtil.sanitizeAngularInterpolation(url);\\n+\\n     element =\\n       !target && url.startsWith(\\'\/\\') ? (\\n-        <Link className={styles.element} onClick={onClick} href={url}>\\n+        <Link className={styles.element} onClick={onClick} href={sanitizedUrl}>\\n           {linkContent}\\n         <\/Link>\\n       ) : (\\n-        <a className={styles.element} href={url} target={target} rel=\"noopener\" onClick={onClick}>\\n+        <a className={styles.element} href={sanitizedUrl} target={target} rel=\"noopener\" onClick={onClick}>\\n           {linkContent}\\n         <\/a>\\n       );'}}",
            "message_norm":"merge pull request #147 from grafana\/axelav\/sanitized-nav-links-8-2-3\n\nsanitized navbar children links to remove angular interpolation v8.2.3",
            "language":"en",
            "entities":"[('#147', 'ISSUE', ''), ('sanitized', 'SECWORD', ''), ('sanitized', 'SECWORD', ''), ('remove', 'ACTION', ''), ('v8.2.3', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['public\/app\/core\/components\/NavBar\/DropdownChild.tsx'])",
            "num_files":1.0,
            "patch_content":"From a3dc30546fce2e437d858c140f1ff307a04365d6 Mon Sep 17 00:00:00 2001\nFrom: Alexandra Vargas <alexa1866@gmail.com>\nDate: Fri, 22 Oct 2021 17:40:31 +0200\nSubject: [PATCH] NavBar: Add sanitize to children items\n\n---\n public\/app\/core\/components\/NavBar\/DropdownChild.tsx | 8 +++++---\n 1 file changed, 5 insertions(+), 3 deletions(-)\n\ndiff --git a\/public\/app\/core\/components\/NavBar\/DropdownChild.tsx b\/public\/app\/core\/components\/NavBar\/DropdownChild.tsx\nindex 6badadb67d7e..22c2516a9b1b 100644\n--- a\/public\/app\/core\/components\/NavBar\/DropdownChild.tsx\n+++ b\/public\/app\/core\/components\/NavBar\/DropdownChild.tsx\n@@ -1,6 +1,6 @@\n import React from 'react';\n import { css } from '@emotion\/css';\n-import { GrafanaTheme2 } from '@grafana\/data';\n+import { GrafanaTheme2, textUtil } from '@grafana\/data';\n import { Icon, IconName, Link, useTheme2 } from '@grafana\/ui';\n \n export interface Props {\n@@ -29,13 +29,15 @@ const DropdownChild = ({ isDivider = false, icon, onClick, target, text, url }:\n     <\/button>\n   );\n   if (url) {\n+    const sanitizedUrl = textUtil.sanitizeAngularInterpolation(url);\n+\n     element =\n       !target && url.startsWith('\/') ? (\n-        <Link className={styles.element} onClick={onClick} href={url}>\n+        <Link className={styles.element} onClick={onClick} href={sanitizedUrl}>\n           {linkContent}\n         <\/Link>\n       ) : (\n-        <a className={styles.element} href={url} target={target} rel=\"noopener\" onClick={onClick}>\n+        <a className={styles.element} href={sanitizedUrl} target={target} rel=\"noopener\" onClick={onClick}>\n           {linkContent}\n         <\/a>\n       );"
        },
        {
            "index":482,
            "vuln_id":"GHSA-9px9-73fg-3fqp",
            "cwe_id":"{'CWE-476'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/045deec1cbdebb27d817008ad5df94d96a08b1bf', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0a365c029e437be0349c31f8d4c9926b69fa3fa1'}",
            "dataset":"osv",
            "summary":"Null pointer dereference in Grappler's `IsConstant` ### Impact\nUnder certain scenarios, Grappler component of TensorFlow can trigger a null pointer dereference. There are 2 places where this can occur, for the same malicious alteration of a `SavedModel` file (fixing the first one would trigger the same dereference in the second place):\n\nFirst, during [constant folding](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/optimizers\/constant_folding.cc#L3466-L3497), the `GraphDef` might not have the required nodes for the binary operation:\n\n```cc\n  NodeDef* mul_left_child = node_map_->GetNode(node->input(0));\n  NodeDef* mul_right_child = node_map_->GetNode(node->input(1));\n  \/\/ One child must be constant, and the second must be Conv op.\n  const bool left_child_is_constant = IsReallyConstant(*mul_left_child);\n  const bool right_child_is_constant = IsReallyConstant(*mul_right_child);\n```\n\nIf a node is missing, the correposning `mul_*child` would be null, and the dereference in the subsequent line would be incorrect.\n\nWe have a similar issue during [`IsIdentityConsumingSwitch`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/mutable_graph_view.cc#L59-L74):\n\n```cc\n  NodeDef* input_node = graph.GetNode(tensor_id.node());\n  return IsSwitch(*input_node);\n```\n\n### Patches\nWe have patched the issue in GitHub commits [0a365c029e437be0349c31f8d4c9926b69fa3fa1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0a365c029e437be0349c31f8d4c9926b69fa3fa1) and [045deec1cbdebb27d817008ad5df94d96a08b1bf](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/045deec1cbdebb27d817008ad5df94d96a08b1bf).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-09",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0a365c029e437be0349c31f8d4c9926b69fa3fa1",
            "commit_sha":"0a365c029e437be0349c31f8d4c9926b69fa3fa1",
            "patch":"MULTI",
            "chain_ord":"['0a365c029e437be0349c31f8d4c9926b69fa3fa1', '045deec1cbdebb27d817008ad5df94d96a08b1bf']",
            "before_first_fix_commit":"{'0a365c029e437be0349c31f8d4c9926b69fa3fa1'}",
            "last_fix_commit":"045deec1cbdebb27d817008ad5df94d96a08b1bf",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/13\/2021, 18:05:59",
            "message":"Prevent null pointer dereference in constant folding.\n\nUnder certain conditions, an invalid protobuf saved model with invalid nodes would be loaded. During optimization phase, Grappler optimizer will then dereference a null pointer.\n\nPiperOrigin-RevId: 409683530\nChange-Id: I1f10340a7ec384bc9bc587300390f1078cf5caa0",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/core\/grappler\/optimizers\/constant_folding.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0a365c029e437be0349c31f8d4c9926b69fa3fa1\/tensorflow%2Fcore%2Fgrappler%2Foptimizers%2Fconstant_folding.cc', 'patch': '@@ -3505,6 +3505,9 @@ bool ConstantFolding::MulConvPushDown(GraphDef* optimized_graph, NodeDef* node,\\n \\n   NodeDef* mul_left_child = node_map_->GetNode(node->input(0));\\n   NodeDef* mul_right_child = node_map_->GetNode(node->input(1));\\n+  if (mul_left_child == nullptr || mul_right_child == nullptr) {\\n+    return false;\\n+  }\\n   \/\/ One child must be constant, and the second must be Conv op.\\n   const bool left_child_is_constant = IsReallyConstant(*mul_left_child);\\n   const bool right_child_is_constant = IsReallyConstant(*mul_right_child);'}}",
            "message_norm":"prevent null pointer dereference in constant folding.\n\nunder certain conditions, an invalid protobuf saved model with invalid nodes would be loaded. during optimization phase, grappler optimizer will then dereference a null pointer.\n\npiperorigin-revid: 409683530\nchange-id: i1f10340a7ec384bc9bc587300390f1078cf5caa0",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('null pointer dereference', 'SECWORD', ''), ('409683530', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/grappler\/optimizers\/constant_folding.cc'])",
            "num_files":1.0,
            "patch_content":"From 0a365c029e437be0349c31f8d4c9926b69fa3fa1 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Sat, 13 Nov 2021 10:05:59 -0800\nSubject: [PATCH] Prevent null pointer dereference in constant folding.\n\nUnder certain conditions, an invalid protobuf saved model with invalid nodes would be loaded. During optimization phase, Grappler optimizer will then dereference a null pointer.\n\nPiperOrigin-RevId: 409683530\nChange-Id: I1f10340a7ec384bc9bc587300390f1078cf5caa0\n---\n tensorflow\/core\/grappler\/optimizers\/constant_folding.cc | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/tensorflow\/core\/grappler\/optimizers\/constant_folding.cc b\/tensorflow\/core\/grappler\/optimizers\/constant_folding.cc\nindex 281806be20259f..a05823f71d09f4 100644\n--- a\/tensorflow\/core\/grappler\/optimizers\/constant_folding.cc\n+++ b\/tensorflow\/core\/grappler\/optimizers\/constant_folding.cc\n@@ -3505,6 +3505,9 @@ bool ConstantFolding::MulConvPushDown(GraphDef* optimized_graph, NodeDef* node,\n \n   NodeDef* mul_left_child = node_map_->GetNode(node->input(0));\n   NodeDef* mul_right_child = node_map_->GetNode(node->input(1));\n+  if (mul_left_child == nullptr || mul_right_child == nullptr) {\n+    return false;\n+  }\n   \/\/ One child must be constant, and the second must be Conv op.\n   const bool left_child_is_constant = IsReallyConstant(*mul_left_child);\n   const bool right_child_is_constant = IsReallyConstant(*mul_right_child);"
        },
        {
            "index":274,
            "vuln_id":"GHSA-m3f9-w3p3-p669",
            "cwe_id":"{'CWE-787', 'CWE-131'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/efea03b38fb8d3b81762237dc85e579cc5fc6e87'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `QuantizedMul` ### Impact\nAn attacker can cause a heap buffer overflow in `QuantizedMul` by passing in invalid thresholds for the quantization:\n\n```python\nimport tensorflow as tf\n\nx = tf.constant([256, 328], shape=[1, 2], dtype=tf.quint8)\ny = tf.constant([256, 328], shape=[1, 2], dtype=tf.quint8)\nmin_x = tf.constant([], dtype=tf.float32)\nmax_x = tf.constant([], dtype=tf.float32)\nmin_y = tf.constant([], dtype=tf.float32)\nmax_y = tf.constant([], dtype=tf.float32)\n\ntf.raw_ops.QuantizedMul(x=x, y=y, min_x=min_x, max_x=max_x, min_y=min_y, max_y=max_y)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/87cf4d3ea9949051e50ca3f071fc909538a51cd0\/tensorflow\/core\/kernels\/quantized_mul_op.cc#L287-L290) assumes that the 4 arguments are always valid scalars and tries to access the numeric value directly:\n\n```cc \nconst float min_x = context->input(2).flat<float>()(0);\nconst float max_x = context->input(3).flat<float>()(0);\nconst float min_y = context->input(4).flat<float>()(0);\nconst float max_y = context->input(5).flat<float>()(0);\n```\n\nHowever, if any of these tensors is empty, then `.flat<T>()` is an empty buffer and accessing the element at position 0 results in overflow.\n\n### Patches\nWe have patched the issue in GitHub commit [efea03b38fb8d3b81762237dc85e579cc5fc6e87](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/efea03b38fb8d3b81762237dc85e579cc5fc6e87).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/efea03b38fb8d3b81762237dc85e579cc5fc6e87",
            "commit_sha":"efea03b38fb8d3b81762237dc85e579cc5fc6e87",
            "patch":"SINGLE",
            "chain_ord":"['efea03b38fb8d3b81762237dc85e579cc5fc6e87']",
            "before_first_fix_commit":"{'87cf4d3ea9949051e50ca3f071fc909538a51cd0'}",
            "last_fix_commit":"efea03b38fb8d3b81762237dc85e579cc5fc6e87",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/21\/2021, 23:15:46",
            "message":"Validate inputs to `QuantizedMul`\n\nPiperOrigin-RevId: 369756982\nChange-Id: I00d960cc3b9316fd7a86bd37a44e341c96e17624",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 16, 'deletions': 4, 'total': 20}",
            "files":"{'tensorflow\/core\/kernels\/quantized_mul_op.cc': {'additions': 16, 'deletions': 4, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/efea03b38fb8d3b81762237dc85e579cc5fc6e87\/tensorflow%2Fcore%2Fkernels%2Fquantized_mul_op.cc', 'patch': '@@ -284,10 +284,22 @@ class QuantizedMulOp : public OpKernel {\\n   void Compute(OpKernelContext* context) override {\\n     const Tensor& x = context->input(0);\\n     const Tensor& y = context->input(1);\\n-    const float min_x = context->input(2).flat<float>()(0);\\n-    const float max_x = context->input(3).flat<float>()(0);\\n-    const float min_y = context->input(4).flat<float>()(0);\\n-    const float max_y = context->input(5).flat<float>()(0);\\n+    auto& min_x_tensor = context->input(2);\\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(min_x_tensor.shape()),\\n+                errors::InvalidArgument(\"min_x must be a scalar\"));\\n+    const float min_x = min_x_tensor.flat<float>()(0);\\n+    auto& max_x_tensor = context->input(3);\\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(max_x_tensor.shape()),\\n+                errors::InvalidArgument(\"max_x must be a scalar\"));\\n+    const float max_x = max_x_tensor.flat<float>()(0);\\n+    auto& min_y_tensor = context->input(4);\\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(min_y_tensor.shape()),\\n+                errors::InvalidArgument(\"min_y must be a scalar\"));\\n+    const float min_y = min_y_tensor.flat<float>()(0);\\n+    auto& max_y_tensor = context->input(5);\\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(max_y_tensor.shape()),\\n+                errors::InvalidArgument(\"max_y must be a scalar\"));\\n+    const float max_y = max_y_tensor.flat<float>()(0);\\n \\n     BCast bcast(BCast::FromShape(x.shape()), BCast::FromShape(y.shape()));\\n     if (!bcast.IsValid()) {'}}",
            "message_norm":"validate inputs to `quantizedmul`\n\npiperorigin-revid: 369756982\nchange-id: i00d960cc3b9316fd7a86bd37a44e341c96e17624",
            "language":"it",
            "entities":"[('validate', 'ACTION', ''), ('369756982', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/quantized_mul_op.cc'])",
            "num_files":1.0,
            "patch_content":"From efea03b38fb8d3b81762237dc85e579cc5fc6e87 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Wed, 21 Apr 2021 16:15:46 -0700\nSubject: [PATCH] Validate inputs to `QuantizedMul`\n\nPiperOrigin-RevId: 369756982\nChange-Id: I00d960cc3b9316fd7a86bd37a44e341c96e17624\n---\n tensorflow\/core\/kernels\/quantized_mul_op.cc | 20 ++++++++++++++++----\n 1 file changed, 16 insertions(+), 4 deletions(-)\n\ndiff --git a\/tensorflow\/core\/kernels\/quantized_mul_op.cc b\/tensorflow\/core\/kernels\/quantized_mul_op.cc\nindex fb56f68bf14dbb..22cff8939449a6 100644\n--- a\/tensorflow\/core\/kernels\/quantized_mul_op.cc\n+++ b\/tensorflow\/core\/kernels\/quantized_mul_op.cc\n@@ -284,10 +284,22 @@ class QuantizedMulOp : public OpKernel {\n   void Compute(OpKernelContext* context) override {\n     const Tensor& x = context->input(0);\n     const Tensor& y = context->input(1);\n-    const float min_x = context->input(2).flat<float>()(0);\n-    const float max_x = context->input(3).flat<float>()(0);\n-    const float min_y = context->input(4).flat<float>()(0);\n-    const float max_y = context->input(5).flat<float>()(0);\n+    auto& min_x_tensor = context->input(2);\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(min_x_tensor.shape()),\n+                errors::InvalidArgument(\"min_x must be a scalar\"));\n+    const float min_x = min_x_tensor.flat<float>()(0);\n+    auto& max_x_tensor = context->input(3);\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(max_x_tensor.shape()),\n+                errors::InvalidArgument(\"max_x must be a scalar\"));\n+    const float max_x = max_x_tensor.flat<float>()(0);\n+    auto& min_y_tensor = context->input(4);\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(min_y_tensor.shape()),\n+                errors::InvalidArgument(\"min_y must be a scalar\"));\n+    const float min_y = min_y_tensor.flat<float>()(0);\n+    auto& max_y_tensor = context->input(5);\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(max_y_tensor.shape()),\n+                errors::InvalidArgument(\"max_y must be a scalar\"));\n+    const float max_y = max_y_tensor.flat<float>()(0);\n \n     BCast bcast(BCast::FromShape(x.shape()), BCast::FromShape(y.shape()));\n     if (!bcast.IsValid()) {"
        },
        {
            "index":269,
            "vuln_id":"GHSA-hgch-jjmr-gp7w",
            "cwe_id":"{'CWE-94'}",
            "score":9.9,
            "chain":"{'https:\/\/github.com\/commenthol\/safer-eval\/commit\/1c29f6a6e304fb650c05056e217e457a0d2cc3c5'}",
            "dataset":"osv",
            "summary":"Sandbox Breakout \/ Arbitrary Code Execution in safer-eval Versions of `safer-eval` before 1.3.2 are vulnerable to Sandbox Escape leading to Remote Code Execution. A payload using constructor properties can escape the sandbox and execute arbitrary code.\n\n\n## Recommendation\n\nUpgrade to version 1.3.2.",
            "published_date":"2019-10-17",
            "chain_len":1,
            "project":"https:\/\/github.com\/commenthol\/safer-eval",
            "commit_href":"https:\/\/github.com\/commenthol\/safer-eval\/commit\/1c29f6a6e304fb650c05056e217e457a0d2cc3c5",
            "commit_sha":"1c29f6a6e304fb650c05056e217e457a0d2cc3c5",
            "patch":"SINGLE",
            "chain_ord":"['1c29f6a6e304fb650c05056e217e457a0d2cc3c5']",
            "before_first_fix_commit":"{'74e5bb845c3cf1cab4f0a5a8dea08685c20970c7'}",
            "last_fix_commit":"1c29f6a6e304fb650c05056e217e457a0d2cc3c5",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/09\/2019, 20:54:53",
            "message":"fix: disallow usage of Object.constructor",
            "author":"commenthol",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 1, 'total': 5}",
            "files":"{'src\/index.js': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/commenthol\/safer-eval\/raw\/1c29f6a6e304fb650c05056e217e457a0d2cc3c5\/src%2Findex.js', 'patch': '@@ -40,8 +40,11 @@ class SaferEval {\\n     if (typeof code !== \\'string\\') {\\n       throw new TypeError(\\'not a string\\')\\n     }\\n+    let src = \\'Object.constructor = function () {};\\\\n\\'\\n+    src += \\'return \\' + code + \\';\\\\n\\'\\n+\\n     return vm.runInContext(\\n-      \\'(function () {\"use strict\"; return \\' + code + \\'})()\\',\\n+      \\'(function () {\"use strict\"; \\' + src + \\'})()\\',\\n       this._context,\\n       this._options\\n     )'}}",
            "message_norm":"fix: disallow usage of object.constructor",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/index.js'])",
            "num_files":1.0,
            "patch_content":"From 1c29f6a6e304fb650c05056e217e457a0d2cc3c5 Mon Sep 17 00:00:00 2001\nFrom: commenthol <commenthol@gmail.com>\nDate: Sat, 9 Mar 2019 21:54:53 +0100\nSubject: [PATCH] fix: disallow usage of Object.constructor\n\n---\n src\/index.js | 5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ndiff --git a\/src\/index.js b\/src\/index.js\nindex 19e5f19..99379c8 100644\n--- a\/src\/index.js\n+++ b\/src\/index.js\n@@ -40,8 +40,11 @@ class SaferEval {\n     if (typeof code !== 'string') {\n       throw new TypeError('not a string')\n     }\n+    let src = 'Object.constructor = function () {};\\n'\n+    src += 'return ' + code + ';\\n'\n+\n     return vm.runInContext(\n-      '(function () {\"use strict\"; return ' + code + '})()',\n+      '(function () {\"use strict\"; ' + src + '})()',\n       this._context,\n       this._options\n     )"
        },
        {
            "index":89,
            "vuln_id":"GHSA-3wwj-wh2w-g4xp",
            "cwe_id":"{'CWE-93'}",
            "score":7.6,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128'}",
            "dataset":"osv",
            "summary":"CRLF Injection in microweber CRLF Injection leads to Stack Trace Exposure due to lack of filtering at https:\/\/demo.microweber.org\/ in Packagist microweber\/microweber prior to 1.2.11.",
            "published_date":"2022-02-19",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128",
            "commit_sha":"f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128",
            "patch":"SINGLE",
            "chain_ord":"['f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128']",
            "before_first_fix_commit":"{'7bdd97ec1ff4740ac8fa898b74ef9bce56bcf193'}",
            "last_fix_commit":"f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/17\/2022, 14:49:46",
            "message":"Update UrlManager.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 3, 'total': 5}",
            "files":"{'src\/MicroweberPackages\/Helper\/UrlManager.php': {'additions': 2, 'deletions': 3, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128\/src%2FMicroweberPackages%2FHelper%2FUrlManager.php', 'patch': '@@ -111,9 +111,8 @@ public function redirect($url)\\n             }\\n         }\\n \\n-        if (!filter_var($redirectUrl, FILTER_VALIDATE_URL)) {\\n-            $redirectUrl = site_url();\\n-        }\\n+        $redirectUrl = str_replace(\"\\\\r\", \"\", $redirectUrl);\\n+        $redirectUrl = str_replace(\"\\\\n\", \"\", $redirectUrl);\\n \\n         if (headers_sent()) {\\n             echo \\'<meta http-equiv=\"refresh\" content=\"0;url=\\' . $redirectUrl . \\'\">\\';'}}",
            "message_norm":"update urlmanager.php",
            "language":"sv",
            "entities":null,
            "classification_level_1":"POORLY_DOCUMENTED",
            "classification_level_2":"SUBMIT_CENTERED",
            "list_files":"dict_keys(['src\/MicroweberPackages\/Helper\/UrlManager.php'])",
            "num_files":1.0,
            "patch_content":"From f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128 Mon Sep 17 00:00:00 2001\nFrom: Bozhidar Slaveykov <bobi@microweber.com>\nDate: Thu, 17 Feb 2022 16:49:46 +0200\nSubject: [PATCH] Update UrlManager.php\n\n---\n src\/MicroweberPackages\/Helper\/UrlManager.php | 5 ++---\n 1 file changed, 2 insertions(+), 3 deletions(-)\n\ndiff --git a\/src\/MicroweberPackages\/Helper\/UrlManager.php b\/src\/MicroweberPackages\/Helper\/UrlManager.php\nindex 1e7a0b48a55..ed94787e1a5 100644\n--- a\/src\/MicroweberPackages\/Helper\/UrlManager.php\n+++ b\/src\/MicroweberPackages\/Helper\/UrlManager.php\n@@ -111,9 +111,8 @@ public function redirect($url)\n             }\n         }\n \n-        if (!filter_var($redirectUrl, FILTER_VALIDATE_URL)) {\n-            $redirectUrl = site_url();\n-        }\n+        $redirectUrl = str_replace(\"\\r\", \"\", $redirectUrl);\n+        $redirectUrl = str_replace(\"\\n\", \"\", $redirectUrl);\n \n         if (headers_sent()) {\n             echo '<meta http-equiv=\"refresh\" content=\"0;url=' . $redirectUrl . '\">';"
        },
        {
            "index":220,
            "vuln_id":"GHSA-4p55-xj37-fx7g",
            "cwe_id":"{'CWE-276'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/strapi\/strapi\/commit\/3cdd73987950d5c7976701047b38203e902007bb'}",
            "dataset":"osv",
            "summary":"Improper Authorization in Strapi In Strapi before 3.2.5, there is no admin::hasPermissions restriction for CTB (aka content-type-builder) routes.",
            "published_date":"2020-10-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/strapi\/strapi",
            "commit_href":"https:\/\/github.com\/strapi\/strapi\/commit\/3cdd73987950d5c7976701047b38203e902007bb",
            "commit_sha":"3cdd73987950d5c7976701047b38203e902007bb",
            "patch":"SINGLE",
            "chain_ord":"['3cdd73987950d5c7976701047b38203e902007bb']",
            "before_first_fix_commit":"{'15e8a76f11c7d86ee3746efff187cbf83e220424', '4d00bc09b8bd7c0938e2d54f480d503560fcb45e'}",
            "last_fix_commit":"3cdd73987950d5c7976701047b38203e902007bb",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/22\/2020, 14:30:20",
            "message":"Merge pull request #8439 from strapi\/fix\/ctb-permissions\n\nAdd permission to CTB routes",
            "author":"Alexandre BODIN",
            "comments":null,
            "stats":"{'additions': 42, 'deletions': 14, 'total': 56}",
            "files":"{'packages\/strapi-plugin-content-type-builder\/config\/routes.json': {'additions': 42, 'deletions': 14, 'changes': 56, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/strapi\/strapi\/raw\/3cdd73987950d5c7976701047b38203e902007bb\/packages%2Fstrapi-plugin-content-type-builder%2Fconfig%2Froutes.json', 'patch': '@@ -5,111 +5,139 @@\\n       \"path\": \"\/reserved-names\",\\n       \"handler\": \"Builder.getReservedNames\",\\n       \"config\": {\\n-        \"policies\": []\\n+        \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"GET\",\\n       \"path\": \"\/connections\",\\n       \"handler\": \"Connections.getConnections\",\\n       \"config\": {\\n-        \"policies\": []\\n+        \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"GET\",\\n       \"path\": \"\/content-types\",\\n       \"handler\": \"ContentTypes.getContentTypes\",\\n       \"config\": {\\n-        \"policies\": []\\n+        \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"GET\",\\n       \"path\": \"\/content-types\/:uid\",\\n       \"handler\": \"ContentTypes.getContentType\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"POST\",\\n       \"path\": \"\/content-types\",\\n       \"handler\": \"ContentTypes.createContentType\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"PUT\",\\n       \"path\": \"\/content-types\/:uid\",\\n       \"handler\": \"ContentTypes.updateContentType\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"DELETE\",\\n       \"path\": \"\/content-types\/:uid\",\\n       \"handler\": \"ContentTypes.deleteContentType\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"GET\",\\n       \"path\": \"\/components\",\\n       \"handler\": \"Components.getComponents\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"GET\",\\n       \"path\": \"\/components\/:uid\",\\n       \"handler\": \"Components.getComponent\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"POST\",\\n       \"path\": \"\/components\",\\n       \"handler\": \"Components.createComponent\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"PUT\",\\n       \"path\": \"\/components\/:uid\",\\n       \"handler\": \"Components.updateComponent\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"DELETE\",\\n       \"path\": \"\/components\/:uid\",\\n       \"handler\": \"Components.deleteComponent\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"PUT\",\\n       \"path\": \"\/component-categories\/:name\",\\n       \"handler\": \"ComponentCategories.editCategory\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"DELETE\",\\n       \"path\": \"\/component-categories\/:name\",\\n       \"handler\": \"ComponentCategories.deleteCategory\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     }\\n   ]'}}",
            "message_norm":"merge pull request #8439 from strapi\/fix\/ctb-permissions\n\nadd permission to ctb routes",
            "language":"fr",
            "entities":"[('#8439', 'ISSUE', ''), ('permissions', 'SECWORD', ''), ('add', 'ACTION', ''), ('permission', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['packages\/strapi-plugin-content-type-builder\/config\/routes.json'])",
            "num_files":1.0,
            "patch_content":"From 15e8a76f11c7d86ee3746efff187cbf83e220424 Mon Sep 17 00:00:00 2001\nFrom: Convly <jean-sebastien.herbaux@epitech.eu>\nDate: Thu, 22 Oct 2020 15:53:05 +0200\nSubject: [PATCH] Add permission to CTB routes\n\nSigned-off-by: Convly <jean-sebastien.herbaux@epitech.eu>\n---\n ...\/config\/routes.json                        | 56 ++++++++++++++-----\n 1 file changed, 42 insertions(+), 14 deletions(-)\n\ndiff --git a\/packages\/strapi-plugin-content-type-builder\/config\/routes.json b\/packages\/strapi-plugin-content-type-builder\/config\/routes.json\nindex 7a4f35313e89..03a2cf0fa63d 100644\n--- a\/packages\/strapi-plugin-content-type-builder\/config\/routes.json\n+++ b\/packages\/strapi-plugin-content-type-builder\/config\/routes.json\n@@ -5,7 +5,9 @@\n       \"path\": \"\/reserved-names\",\n       \"handler\": \"Builder.getReservedNames\",\n       \"config\": {\n-        \"policies\": []\n+        \"policies\": [\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\n+        ]\n       }\n     },\n     {\n@@ -13,7 +15,9 @@\n       \"path\": \"\/connections\",\n       \"handler\": \"Connections.getConnections\",\n       \"config\": {\n-        \"policies\": []\n+        \"policies\": [\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\n+        ]\n       }\n     },\n     {\n@@ -21,7 +25,9 @@\n       \"path\": \"\/content-types\",\n       \"handler\": \"ContentTypes.getContentTypes\",\n       \"config\": {\n-        \"policies\": []\n+        \"policies\": [\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\n+        ]\n       }\n     },\n     {\n@@ -29,7 +35,9 @@\n       \"path\": \"\/content-types\/:uid\",\n       \"handler\": \"ContentTypes.getContentType\",\n       \"config\": {\n-        \"policies\": []\n+      \"policies\": [\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\n+        ]\n       }\n     },\n     {\n@@ -37,7 +45,9 @@\n       \"path\": \"\/content-types\",\n       \"handler\": \"ContentTypes.createContentType\",\n       \"config\": {\n-        \"policies\": []\n+      \"policies\": [\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\n+        ]\n       }\n     },\n     {\n@@ -45,7 +55,9 @@\n       \"path\": \"\/content-types\/:uid\",\n       \"handler\": \"ContentTypes.updateContentType\",\n       \"config\": {\n-        \"policies\": []\n+      \"policies\": [\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\n+        ]\n       }\n     },\n     {\n@@ -53,7 +65,9 @@\n       \"path\": \"\/content-types\/:uid\",\n       \"handler\": \"ContentTypes.deleteContentType\",\n       \"config\": {\n-        \"policies\": []\n+      \"policies\": [\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\n+        ]\n       }\n     },\n     {\n@@ -61,7 +75,9 @@\n       \"path\": \"\/components\",\n       \"handler\": \"Components.getComponents\",\n       \"config\": {\n-        \"policies\": []\n+      \"policies\": [\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\n+        ]\n       }\n     },\n     {\n@@ -69,7 +85,9 @@\n       \"path\": \"\/components\/:uid\",\n       \"handler\": \"Components.getComponent\",\n       \"config\": {\n-        \"policies\": []\n+      \"policies\": [\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\n+        ]\n       }\n     },\n     {\n@@ -77,7 +95,9 @@\n       \"path\": \"\/components\",\n       \"handler\": \"Components.createComponent\",\n       \"config\": {\n-        \"policies\": []\n+      \"policies\": [\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\n+        ]\n       }\n     },\n     {\n@@ -85,7 +105,9 @@\n       \"path\": \"\/components\/:uid\",\n       \"handler\": \"Components.updateComponent\",\n       \"config\": {\n-        \"policies\": []\n+      \"policies\": [\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\n+        ]\n       }\n     },\n     {\n@@ -93,7 +115,9 @@\n       \"path\": \"\/components\/:uid\",\n       \"handler\": \"Components.deleteComponent\",\n       \"config\": {\n-        \"policies\": []\n+      \"policies\": [\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\n+        ]\n       }\n     },\n     {\n@@ -101,7 +125,9 @@\n       \"path\": \"\/component-categories\/:name\",\n       \"handler\": \"ComponentCategories.editCategory\",\n       \"config\": {\n-        \"policies\": []\n+      \"policies\": [\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\n+        ]\n       }\n     },\n     {\n@@ -109,7 +135,9 @@\n       \"path\": \"\/component-categories\/:name\",\n       \"handler\": \"ComponentCategories.deleteCategory\",\n       \"config\": {\n-        \"policies\": []\n+      \"policies\": [\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\n+        ]\n       }\n     }\n   ]"
        },
        {
            "index":547,
            "vuln_id":"GHSA-w4xf-2pqw-5mq7",
            "cwe_id":"{'CWE-824'}",
            "score":7.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/be7a4de6adfbd303ce08be4332554dff70362612'}",
            "dataset":"osv",
            "summary":"Reference binding to nullptr in `RaggedTensorToVariant` ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.RaggedTensorToVariant`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.RaggedTensorToVariant(\n  rt_nested_splits=[],\n  rt_dense_values=[1,2,3],\n  batched_input=True)\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc#L129) has an incomplete validation of the splits values, missing the case when the argument would be empty.\n\n### Patches\nWe have patched the issue in GitHub commit [be7a4de6adfbd303ce08be4332554dff70362612](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/be7a4de6adfbd303ce08be4332554dff70362612).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n  \n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/be7a4de6adfbd303ce08be4332554dff70362612",
            "commit_sha":"be7a4de6adfbd303ce08be4332554dff70362612",
            "patch":"SINGLE",
            "chain_ord":"['be7a4de6adfbd303ce08be4332554dff70362612']",
            "before_first_fix_commit":"{'ffbdacfce0c9c8f627d0ce89d9d4db8fd0a7cfd1'}",
            "last_fix_commit":"be7a4de6adfbd303ce08be4332554dff70362612",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/29\/2021, 21:05:34",
            "message":"Ensure non-empty rt_nested_splits in tf.raw_ops.RaggedTensorToVariant\n\nPiperOrigin-RevId: 387664237\nChange-Id: Ia1700c34b5610873d63561abc86e23b46ead93b3",
            "author":"Laura Pak",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/be7a4de6adfbd303ce08be4332554dff70362612\/tensorflow%2Fcore%2Fkernels%2Fragged_tensor_to_variant_op.cc', 'patch': '@@ -157,6 +157,12 @@ class RaggedTensorToVariantOp : public OpKernel {\\n       return;\\n     }\\n \\n+    \/\/ Checked here instead of at input in case batched_input_ is false\\n+    OP_REQUIRES(context, ragged_nested_splits_len > 0,\\n+                errors::InvalidArgument(\\n+                    \"rt_nested_splits must be a list of one or more, but \"\\n+                    \"received rt_nested_splits of length 0.\"));\\n+\\n     \/\/ Unbatch the Ragged Tensor and encode the components.\\n     std::vector<RaggedTensorVariant> unbatched_ragged_input;\\n     auto batched_splits_top_vec ='}}",
            "message_norm":"ensure non-empty rt_nested_splits in tf.raw_ops.raggedtensortovariant\n\npiperorigin-revid: 387664237\nchange-id: ia1700c34b5610873d63561abc86e23b46ead93b3",
            "language":"en",
            "entities":"[('ensure', 'ACTION', ''), ('387664237', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc'])",
            "num_files":1.0,
            "patch_content":"From be7a4de6adfbd303ce08be4332554dff70362612 Mon Sep 17 00:00:00 2001\nFrom: Laura Pak <lpak@google.com>\nDate: Thu, 29 Jul 2021 14:05:34 -0700\nSubject: [PATCH] Ensure non-empty rt_nested_splits in\n tf.raw_ops.RaggedTensorToVariant\n\nPiperOrigin-RevId: 387664237\nChange-Id: Ia1700c34b5610873d63561abc86e23b46ead93b3\n---\n tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc | 6 ++++++\n 1 file changed, 6 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc b\/tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc\nindex 687289cd38077a..ab86863e3a987f 100644\n--- a\/tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc\n+++ b\/tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc\n@@ -157,6 +157,12 @@ class RaggedTensorToVariantOp : public OpKernel {\n       return;\n     }\n \n+    \/\/ Checked here instead of at input in case batched_input_ is false\n+    OP_REQUIRES(context, ragged_nested_splits_len > 0,\n+                errors::InvalidArgument(\n+                    \"rt_nested_splits must be a list of one or more, but \"\n+                    \"received rt_nested_splits of length 0.\"));\n+\n     \/\/ Unbatch the Ragged Tensor and encode the components.\n     std::vector<RaggedTensorVariant> unbatched_ragged_input;\n     auto batched_splits_top_vec ="
        },
        {
            "index":936,
            "vuln_id":"GHSA-7q4h-pj78-j7vg",
            "cwe_id":"{'CWE-400', 'CWE-918'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/apache\/cxf\/commit\/aa789c5c4686597a7bdef2443909ab491fc2bc04', 'https:\/\/github.com\/apache\/cxf\/commit\/40503a53914758759894f704bbf139ae89ace286'}",
            "dataset":"osv",
            "summary":"Authorization service vulnerable to DDos attacks in Apache CFX CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a \"request\" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the \"request_uri\" parameter. CXF was not validating the \"request_uri\" parameter (apart from ensuring it uses \"https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.",
            "published_date":"2021-05-13",
            "chain_len":2,
            "project":"https:\/\/github.com\/apache\/cxf",
            "commit_href":"https:\/\/github.com\/apache\/cxf\/commit\/aa789c5c4686597a7bdef2443909ab491fc2bc04",
            "commit_sha":"aa789c5c4686597a7bdef2443909ab491fc2bc04",
            "patch":"MULTI",
            "chain_ord":"['40503a53914758759894f704bbf139ae89ace286', 'aa789c5c4686597a7bdef2443909ab491fc2bc04']",
            "before_first_fix_commit":"{'40503a53914758759894f704bbf139ae89ace286'}",
            "last_fix_commit":"aa789c5c4686597a7bdef2443909ab491fc2bc04",
            "chain_ord_pos":2.0,
            "commit_datetime":"01\/06\/2021, 10:38:21",
            "message":"Make sure both a request + request_uri can't be specified",
            "author":"Colm O hEigeartaigh",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 1, 'total': 12}",
            "files":"{'rt\/rs\/security\/oauth-parent\/oauth2\/src\/main\/java\/org\/apache\/cxf\/rs\/security\/oauth2\/grants\/code\/JwtRequestCodeFilter.java': {'additions': 11, 'deletions': 1, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/cxf\/raw\/aa789c5c4686597a7bdef2443909ab491fc2bc04\/rt%2Frs%2Fsecurity%2Foauth-parent%2Foauth2%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fcxf%2Frs%2Fsecurity%2Foauth2%2Fgrants%2Fcode%2FJwtRequestCodeFilter.java', 'patch': '@@ -21,9 +21,11 @@\\n import java.security.cert.X509Certificate;\\n import java.util.List;\\n import java.util.Map;\\n+import java.util.logging.Logger;\\n \\n import javax.ws.rs.core.MultivaluedMap;\\n \\n+import org.apache.cxf.common.logging.LogUtils;\\n import org.apache.cxf.helpers.CastUtils;\\n import org.apache.cxf.jaxrs.client.WebClient;\\n import org.apache.cxf.jaxrs.impl.MetadataMap;\\n@@ -42,23 +44,31 @@\\n import org.apache.cxf.rt.security.crypto.CryptoUtils;\\n \\n public class JwtRequestCodeFilter extends OAuthJoseJwtConsumer implements AuthorizationRequestFilter {\\n+    protected static final Logger LOG = LogUtils.getL7dLogger(JwtRequestCodeFilter.class);\\n     private static final String REQUEST_URI_CONTENT_TYPE = \"application\/oauth-authz-req+jwt\";\\n     private static final String REQUEST_PARAM = \"request\";\\n     private static final String REQUEST_URI_PARAM = \"request_uri\";\\n+\\n     private boolean verifyWithClientCertificates;\\n     private String issuer;\\n     private JsonMapObjectReaderWriter jsonHandler = new JsonMapObjectReaderWriter();\\n+\\n     @Override\\n     public MultivaluedMap<String, String> process(MultivaluedMap<String, String> params,\\n                                                   UserSubject endUser,\\n                                                   Client client) {\\n         String requestToken = params.getFirst(REQUEST_PARAM);\\n+        String requestUri = params.getFirst(REQUEST_URI_PARAM);\\n+\\n         if (requestToken == null) {\\n-            String requestUri = params.getFirst(REQUEST_URI_PARAM);\\n             if (isRequestUriValid(client, requestUri)) {\\n                 requestToken = WebClient.create(requestUri).accept(REQUEST_URI_CONTENT_TYPE).get(String.class);\\n             }\\n+        } else if (requestUri != null) {\\n+            LOG.warning(\"It is not valid to specify both a request and request_uri value\");\\n+            throw new SecurityException();\\n         }\\n+\\n         if (requestToken != null) {\\n             JweDecryptionProvider theDecryptor = super.getInitializedDecryptionProvider(client.getClientSecret());\\n             JwsSignatureVerifier theSigVerifier = getInitializedSigVerifier(client);'}}",
            "message_norm":"make sure both a request + request_uri can't be specified",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['rt\/rs\/security\/oauth-parent\/oauth2\/src\/main\/java\/org\/apache\/cxf\/rs\/security\/oauth2\/grants\/code\/JwtRequestCodeFilter.java'])",
            "num_files":1.0,
            "patch_content":"From aa789c5c4686597a7bdef2443909ab491fc2bc04 Mon Sep 17 00:00:00 2001\nFrom: Colm O hEigeartaigh <coheigea@apache.org>\nDate: Wed, 6 Jan 2021 10:38:21 +0000\nSubject: [PATCH] Make sure both a request + request_uri can't be specified\n\n---\n ...\/oauth2\/grants\/code\/JwtRequestCodeFilter.java     | 12 +++++++++++-\n 1 file changed, 11 insertions(+), 1 deletion(-)\n\ndiff --git a\/rt\/rs\/security\/oauth-parent\/oauth2\/src\/main\/java\/org\/apache\/cxf\/rs\/security\/oauth2\/grants\/code\/JwtRequestCodeFilter.java b\/rt\/rs\/security\/oauth-parent\/oauth2\/src\/main\/java\/org\/apache\/cxf\/rs\/security\/oauth2\/grants\/code\/JwtRequestCodeFilter.java\nindex 29ac00020d4..15fe40b0a74 100644\n--- a\/rt\/rs\/security\/oauth-parent\/oauth2\/src\/main\/java\/org\/apache\/cxf\/rs\/security\/oauth2\/grants\/code\/JwtRequestCodeFilter.java\n+++ b\/rt\/rs\/security\/oauth-parent\/oauth2\/src\/main\/java\/org\/apache\/cxf\/rs\/security\/oauth2\/grants\/code\/JwtRequestCodeFilter.java\n@@ -21,9 +21,11 @@\n import java.security.cert.X509Certificate;\n import java.util.List;\n import java.util.Map;\n+import java.util.logging.Logger;\n \n import javax.ws.rs.core.MultivaluedMap;\n \n+import org.apache.cxf.common.logging.LogUtils;\n import org.apache.cxf.helpers.CastUtils;\n import org.apache.cxf.jaxrs.client.WebClient;\n import org.apache.cxf.jaxrs.impl.MetadataMap;\n@@ -42,23 +44,31 @@\n import org.apache.cxf.rt.security.crypto.CryptoUtils;\n \n public class JwtRequestCodeFilter extends OAuthJoseJwtConsumer implements AuthorizationRequestFilter {\n+    protected static final Logger LOG = LogUtils.getL7dLogger(JwtRequestCodeFilter.class);\n     private static final String REQUEST_URI_CONTENT_TYPE = \"application\/oauth-authz-req+jwt\";\n     private static final String REQUEST_PARAM = \"request\";\n     private static final String REQUEST_URI_PARAM = \"request_uri\";\n+\n     private boolean verifyWithClientCertificates;\n     private String issuer;\n     private JsonMapObjectReaderWriter jsonHandler = new JsonMapObjectReaderWriter();\n+\n     @Override\n     public MultivaluedMap<String, String> process(MultivaluedMap<String, String> params,\n                                                   UserSubject endUser,\n                                                   Client client) {\n         String requestToken = params.getFirst(REQUEST_PARAM);\n+        String requestUri = params.getFirst(REQUEST_URI_PARAM);\n+\n         if (requestToken == null) {\n-            String requestUri = params.getFirst(REQUEST_URI_PARAM);\n             if (isRequestUriValid(client, requestUri)) {\n                 requestToken = WebClient.create(requestUri).accept(REQUEST_URI_CONTENT_TYPE).get(String.class);\n             }\n+        } else if (requestUri != null) {\n+            LOG.warning(\"It is not valid to specify both a request and request_uri value\");\n+            throw new SecurityException();\n         }\n+\n         if (requestToken != null) {\n             JweDecryptionProvider theDecryptor = super.getInitializedDecryptionProvider(client.getClientSecret());\n             JwsSignatureVerifier theSigVerifier = getInitializedSigVerifier(client);"
        },
        {
            "index":63,
            "vuln_id":"GHSA-4h44-w6fm-548g",
            "cwe_id":"{'CWE-325', 'CWE-200', 'CWE-502', 'CWE-20'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/FriendsOfTYPO3\/mediace\/commit\/fa29ffd3e8b275782a8600d2406e1b1e5e16ae75'}",
            "dataset":"osv",
            "summary":"Potential Remote Code Execution in TYPO3 with mediace extension > ### Meta\n> * CVSS: `CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H\/E:F\/RL:O\/RC:C` (9.1)\n> * CWE-325, CWE-20, CWE-200, CWE-502\n\n### Problem\nIt has been discovered that an internal verification mechanism can be used to generate arbitrary checksums. This allows to inject arbitrary data having a valid cryptographic message authentication code (HMAC-SHA1) and can lead to various attack chains as described below.\n\n* [TYPO3-CORE-SA-2020-007](https:\/\/typo3.org\/security\/advisory\/typo3-core-sa-2020-007), [CVE-2020-15099](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2020-15099): Potential Privilege Escalation\n  + the database server used for a TYPO3 installation must be accessible for an attacker (either via internet or shared hosting network)\n  + `CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H\/E:F\/RL:O\/RC:C` (7.5, high)\n* [TYPO3-CORE-SA-2016-013](https:\/\/typo3.org\/security\/advisory\/typo3-core-sa-2016-013), [CVE-2016-5091](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2016-5091): Insecure Deserialization & Remote Code Execution\n  + an attacker must have access to at least one Extbase plugin or module action in a TYPO3 installation\n  + `CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H\/E:F\/RL:O\/RC:C` (9.1, critical)\n\nThe overall severity of this vulnerability is critical (9.1) based on mentioned attack chains and the fact it does not require any privileges.\n\n### Solution\nIn case the extension is not used and required at all, it is suggested to uninstall and remove it from the system completely. Otherwise, an updated version 7.6.5 is available from the TYPO3 extension manager, Packagist and the TYPO3 extension repository:\n\n* https:\/\/extensions.typo3.org\/extension\/download\/mediace\/7.6.5\/zip\/\n* https:\/\/packagist.org\/packages\/friendsoftypo3\/mediace#7.6.5\n\nAs a precautionary measure it is advised to change `encryptionKey` and database credentials in `typo3conf\/LocalConfiguration.php`.\n\n### Credits\nThanks to TYPO3 security team member Oliver Hader who reported and fixed the issue.\n\n### References\n* [TYPO3-EXT-SA-2020-014](https:\/\/typo3.org\/security\/advisory\/typo3-ext-sa-2020-014)",
            "published_date":"2020-07-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/FriendsOfTYPO3\/mediace",
            "commit_href":"https:\/\/github.com\/FriendsOfTYPO3\/mediace\/commit\/fa29ffd3e8b275782a8600d2406e1b1e5e16ae75",
            "commit_sha":"fa29ffd3e8b275782a8600d2406e1b1e5e16ae75",
            "patch":"SINGLE",
            "chain_ord":"['fa29ffd3e8b275782a8600d2406e1b1e5e16ae75']",
            "before_first_fix_commit":"{'a06c3fdf310ea4d53e193f21a23e630a3cd9f608'}",
            "last_fix_commit":"fa29ffd3e8b275782a8600d2406e1b1e5e16ae75",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/29\/2020, 13:39:55",
            "message":"[SECURITY] Restrict file validation hash generation\n\nSecurity-References: CVE-2020-15086",
            "author":"Oliver Hader",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 2, 'total': 9}",
            "files":"{'Resources\/PHP\/ValidateHashEID.php': {'additions': 7, 'deletions': 2, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/FriendsOfTYPO3\/mediace\/raw\/fa29ffd3e8b275782a8600d2406e1b1e5e16ae75\/Resources%2FPHP%2FValidateHashEID.php', 'patch': \"@@ -14,10 +14,15 @@\\n \\n call_user_func(function() {\\n     $value = \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\GeneralUtility::_GET('value');\\n-    $addition = \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\GeneralUtility::_GET('addition');\\n     $scope = \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\GeneralUtility::_GET('scope');\\n \\n-    $content = \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\GeneralUtility::hmac($value, $addition);\\n+    if (!is_string($value) || empty($value)) {\\n+        \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\HttpUtility::setResponseCodeAndExit(\\n+            \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\HttpUtility::HTTP_STATUS_400\\n+        );\\n+    }\\n+\\n+    $content = \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\GeneralUtility::hmac($value, 'flashvars');\\n \\n     if ($scope === 'flashvars') {\\n         header('Content-type: application\/x-www-form-urlencoded');\"}}",
            "message_norm":"[security] restrict file validation hash generation\n\nsecurity-references: cve-2020-15086",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('hash', 'SECWORD', ''), ('security', 'SECWORD', ''), ('cve-2020-15086', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['Resources\/PHP\/ValidateHashEID.php'])",
            "num_files":1.0,
            "patch_content":"From fa29ffd3e8b275782a8600d2406e1b1e5e16ae75 Mon Sep 17 00:00:00 2001\nFrom: Oliver Hader <oliver@typo3.org>\nDate: Mon, 29 Jun 2020 15:39:55 +0200\nSubject: [PATCH] [SECURITY] Restrict file validation hash generation\n\nSecurity-References: CVE-2020-15086\n---\n Resources\/PHP\/ValidateHashEID.php | 9 +++++++--\n 1 file changed, 7 insertions(+), 2 deletions(-)\n\ndiff --git a\/Resources\/PHP\/ValidateHashEID.php b\/Resources\/PHP\/ValidateHashEID.php\nindex e2ee58b..71f1481 100644\n--- a\/Resources\/PHP\/ValidateHashEID.php\n+++ b\/Resources\/PHP\/ValidateHashEID.php\n@@ -14,10 +14,15 @@\n \n call_user_func(function() {\n     $value = \\TYPO3\\CMS\\Core\\Utility\\GeneralUtility::_GET('value');\n-    $addition = \\TYPO3\\CMS\\Core\\Utility\\GeneralUtility::_GET('addition');\n     $scope = \\TYPO3\\CMS\\Core\\Utility\\GeneralUtility::_GET('scope');\n \n-    $content = \\TYPO3\\CMS\\Core\\Utility\\GeneralUtility::hmac($value, $addition);\n+    if (!is_string($value) || empty($value)) {\n+        \\TYPO3\\CMS\\Core\\Utility\\HttpUtility::setResponseCodeAndExit(\n+            \\TYPO3\\CMS\\Core\\Utility\\HttpUtility::HTTP_STATUS_400\n+        );\n+    }\n+\n+    $content = \\TYPO3\\CMS\\Core\\Utility\\GeneralUtility::hmac($value, 'flashvars');\n \n     if ($scope === 'flashvars') {\n         header('Content-type: application\/x-www-form-urlencoded');"
        },
        {
            "index":175,
            "vuln_id":"GHSA-9gwx-9cwp-5c2m",
            "cwe_id":"{'CWE-776'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/opencast\/opencast\/commit\/8ae27da5a6f658011a5741b3210e715b0dc6213e', 'https:\/\/github.com\/opencast\/opencast\/commit\/16b0d641713fe31b8518fcf14fc5e4e815d81206'}",
            "dataset":"osv",
            "summary":"Billion laughs attack (XML bomb) ### Impact\n\nOpencast is vulnerable to the [Billion laughs attack](https:\/\/en.wikipedia.org\/wiki\/Billion_laughs_attack)  which allows an attacker to easily execute a (seemingly permanent) denial of service attack, essentially taking down Opencast using a single HTTP request.\n\nConsider an XML file (`createMediaPackage.xml`) like this:\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<!DOCTYPE lolz [\n <!ENTITY lol \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum. \">\n <!ELEMENT title (#PCDATA)>\n <!ENTITY lol1 \"&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;\">\n <!ENTITY lol2 \"&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;\">\n <!ENTITY lol3 \"&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;\">\n <!ENTITY lol4 \"&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;\">\n <!ENTITY lol5 \"&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;\">\n]>\n<mediapackage xmlns=\"http:\/\/mediapackage.opencastproject.org\" id=\"d162d5b2-b54f-4400-a268-ee6565b0e6e7\" start=\"2020-01-23T23:08:37Z\">\n  <title>&lol5;<\/title>\n  <media\/>\n  <metadata\/>\n  <attachments\/>\n  <publications\/>\n<\/mediapackage>\n```\n\nThrowing this at Opencast will cause Opencast to parse the XML and expand the Lorem Ipsum about 100\u00a0000 times, instantly consuming a huge amount of memory:\n\n```sh\ncurl -i -u admin:opencast https:\/\/develop.opencast.org\/ingestdownload\/ingestdownload \\\n  -F 'mediapackage=<createMediaPackage.xml' \\\n  -F sourceFlavors=\"\" \\\n  -F sourceTags=\"\" \\\n  -F deleteExternal=\"\" \\\n  -F tagsAndFlavor='' \\\n  -o out.xml\n```\n\nAdditional notes:\n\n- You can likely use other endpoints accepting XML (this was just the first one I tried) and depending on how much memory you want to consume, you might want to enlarge the lorem ipsum text.\n- Opencast's XML parser does limit the expansion to 100\u00a0000 times, already limiting the attack. Nevertheless, this can already harm the system. \n- To exploit this, users need to have ingest privileges, limiting the group of potential attackers\n\n### Patches\n\nThe problem has been fixed in Opencast 9.6. Older versions of Opencast are not patched sue to the extent of this patch.\n\n### Workarounds\n\nThere is no known workaround for this issue.\n\n### References\n\n- [Billion laughs attack explained](https:\/\/en.wikipedia.org\/wiki\/Billion_laughs_attack)\n- For technical details, take a look at the patch fixing the issue: https:\/\/github.com\/opencast\/opencast\/commit\/_________\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [our issue tracker](https:\/\/github.com\/opencast\/opencast\/issues)\n- Email us at [security@opencast.org](mailto:security@opencast.org)",
            "published_date":"2021-06-17",
            "chain_len":2,
            "project":"https:\/\/github.com\/opencast\/opencast",
            "commit_href":"https:\/\/github.com\/opencast\/opencast\/commit\/8ae27da5a6f658011a5741b3210e715b0dc6213e",
            "commit_sha":"8ae27da5a6f658011a5741b3210e715b0dc6213e",
            "patch":"MULTI",
            "chain_ord":"['16b0d641713fe31b8518fcf14fc5e4e815d81206', '8ae27da5a6f658011a5741b3210e715b0dc6213e']",
            "before_first_fix_commit":"{'27f401f37e92564d5a89ef71ab6a5aa6c59ee6fc'}",
            "last_fix_commit":"8ae27da5a6f658011a5741b3210e715b0dc6213e",
            "chain_ord_pos":2.0,
            "commit_datetime":"06\/15\/2021, 10:36:31",
            "message":"Clarifies debug options in setenv file (#2735)\n\nCo-authored-by: Lars Kiesow <lkiesow@uos.de>",
            "author":"Maximiliano Lira Del Canto",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 1, 'total': 6}",
            "files":"{'assemblies\/resources\/bin\/setenv': {'additions': 5, 'deletions': 1, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencast\/opencast\/raw\/8ae27da5a6f658011a5741b3210e715b0dc6213e\/assemblies%2Fresources%2Fbin%2Fsetenv', 'patch': '@@ -31,8 +31,12 @@\\n # export KARAF_BASE        # Karaf base folder\\n # export KARAF_ETC         # Karaf etc  folder\\n # export KARAF_OPTS        # Additional Karaf options\\n-# export KARAF_DEBUG       # Enable debug mode\\n # export KARAF_REDIRECT    # Enable\/set the std\/err redirection when using bin\/start\\n+#\\n+# Debug options\\n+# export KARAF_DEBUG       # Enable debug mode\\n+# export JAVA_DEBUG_PORT   # Set debug port (defaults to 5005)\\n+\\n \\n export EXTRA_JAVA_OPTS=\"${EXTRA_JAVA_OPTS} -Dorg.eclipse.jetty.server.Request.maxFormContentSize=1500000 -Dfile.encoding=UTF-8\"\\n export JAVA_MAX_MEM=\"${JAVA_MAX_MEM:-1G}\"'}}",
            "message_norm":"clarifies debug options in setenv file (#2735)\n\nco-authored-by: lars kiesow <lkiesow@uos.de>",
            "language":"en",
            "entities":"[('#2735', 'ISSUE', ''), ('lkiesow@uos.de', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['assemblies\/resources\/bin\/setenv'])",
            "num_files":1.0,
            "patch_content":"From 8ae27da5a6f658011a5741b3210e715b0dc6213e Mon Sep 17 00:00:00 2001\nFrom: Maximiliano Lira Del Canto <8040628+mliradelc@users.noreply.github.com>\nDate: Tue, 15 Jun 2021 12:36:31 +0200\nSubject: [PATCH] Clarifies debug options in setenv file (#2735)\n\nCo-authored-by: Lars Kiesow <lkiesow@uos.de>\n---\n assemblies\/resources\/bin\/setenv | 6 +++++-\n 1 file changed, 5 insertions(+), 1 deletion(-)\n\ndiff --git a\/assemblies\/resources\/bin\/setenv b\/assemblies\/resources\/bin\/setenv\nindex 2787580a895..16171f4f2b6 100644\n--- a\/assemblies\/resources\/bin\/setenv\n+++ b\/assemblies\/resources\/bin\/setenv\n@@ -31,8 +31,12 @@\n # export KARAF_BASE        # Karaf base folder\n # export KARAF_ETC         # Karaf etc  folder\n # export KARAF_OPTS        # Additional Karaf options\n-# export KARAF_DEBUG       # Enable debug mode\n # export KARAF_REDIRECT    # Enable\/set the std\/err redirection when using bin\/start\n+#\n+# Debug options\n+# export KARAF_DEBUG       # Enable debug mode\n+# export JAVA_DEBUG_PORT   # Set debug port (defaults to 5005)\n+\n \n export EXTRA_JAVA_OPTS=\"${EXTRA_JAVA_OPTS} -Dorg.eclipse.jetty.server.Request.maxFormContentSize=1500000 -Dfile.encoding=UTF-8\"\n export JAVA_MAX_MEM=\"${JAVA_MAX_MEM:-1G}\""
        },
        {
            "index":918,
            "vuln_id":"GHSA-rj44-gpjc-29r7",
            "cwe_id":"{'CWE-78'}",
            "score":6.4,
            "chain":"{'https:\/\/github.com\/thi-ng\/umbrella\/commit\/88f61656e5f5cfba960013b8133186389efaf243'}",
            "dataset":"osv",
            "summary":"[thi.ng\/egf] Potential arbitrary code execution of `#gpg`-tagged property values ### Impact\n\nPotential for arbitrary code execution in `#gpg`-tagged property values (only if `decrypt: true` option is enabled)\n\n### Patches\n\n[A fix](https:\/\/github.com\/thi-ng\/umbrella\/commit\/3e14765d6bfd8006742c9e7860bc7d58ae94dfa5) has already been released as v0.4.0\n\n### Workarounds\n\nBy default, EGF parse functions do NOT attempt to decrypt values (since GPG is only available in non-browser env).\n\nHowever, if GPG encrypted values are used\/required:\n\n1. Perform a regex search for `#gpg`-tagged values in the EGF source file\/string and check for backtick (\\`) chars in the encrypted value string\n2. Replace\/remove them or skip parsing if present...\n\n### References\n\nhttps:\/\/github.com\/thi-ng\/umbrella\/security\/advisories\/GHSA-rj44-gpjc-29r7#advisory-comment-65261\n\n### For more information\n\nIf you have any questions or comments about this advisory, please open an issue in the [thi.ng\/umbrella repo](https:\/\/github.com\/thi-ng\/umbrella\/issues), of which this package is part of.",
            "published_date":"2021-04-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/thi-ng\/umbrella",
            "commit_href":"https:\/\/github.com\/thi-ng\/umbrella\/commit\/88f61656e5f5cfba960013b8133186389efaf243",
            "commit_sha":"88f61656e5f5cfba960013b8133186389efaf243",
            "patch":"SINGLE",
            "chain_ord":"['88f61656e5f5cfba960013b8133186389efaf243']",
            "before_first_fix_commit":"{'c3f5ec12f324a4e627b26dc45d480c0e761602ea', '3e14765d6bfd8006742c9e7860bc7d58ae94dfa5'}",
            "last_fix_commit":"88f61656e5f5cfba960013b8133186389efaf243",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/27\/2021, 08:52:42",
            "message":"Merge pull request from GHSA-rj44-gpjc-29r7\n\nfix(egf): update GPG invocation to avoid arb code exec",
            "author":"Karsten Schmidt",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 2, 'total': 6}",
            "files":"{'packages\/egf\/src\/tags.ts': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/thi-ng\/umbrella\/raw\/88f61656e5f5cfba960013b8133186389efaf243\/packages%2Fegf%2Fsrc%2Ftags.ts', 'patch': '@@ -1,7 +1,7 @@\\n import type { IObjectOf } from \"@thi.ng\/api\";\\n import { maybeParseFloat, maybeParseInt, unescape } from \"@thi.ng\/strings\";\\n import { base64Decode } from \"@thi.ng\/transducers-binary\";\\n-import { execSync } from \"child_process\";\\n+import { execFileSync } from \"child_process\";\\n import { readFileSync } from \"fs\";\\n import { resolve as resolvePath } from \"path\";\\n import { IS_NODE, NODE_ONLY, TagParser } from \".\/api\";\\n@@ -24,7 +24,9 @@ export const BUILTINS: IObjectOf<TagParser> = {\\n     gpg: IS_NODE\\n         ? (_, body, ctx) =>\\n               (ctx.opts.decrypt\\n-                  ? execSync(`echo \"${body}\" | gpg --decrypt`).toString()\\n+                  ? execFileSync(\"gpg\", [\"--decrypt\"], {\\n+                        input: body,\\n+                    }).toString()\\n                   : body\\n               ).trim()\\n         : NODE_ONLY,'}}",
            "message_norm":"merge pull request from ghsa-rj44-gpjc-29r7\n\nfix(egf): update gpg invocation to avoid arb code exec",
            "language":"ca",
            "entities":"[('ghsa-rj44-gpjc-29r7', 'VULNID', 'GHSA'), ('fix(egf', 'ACTION', ''), ('code exec', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['packages\/egf\/src\/tags.ts'])",
            "num_files":1.0,
            "patch_content":"From 3e14765d6bfd8006742c9e7860bc7d58ae94dfa5 Mon Sep 17 00:00:00 2001\nFrom: Karsten Schmidt <k@postspectacular.com>\nDate: Fri, 26 Mar 2021 13:34:09 +0000\nSubject: [PATCH] fix(egf): update GPG invocation to avoid arb code exec\n\n- use `execFileSync()` to avoid shell and pass encrypted body\n---\n packages\/egf\/src\/tags.ts | 6 ++++--\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\ndiff --git a\/packages\/egf\/src\/tags.ts b\/packages\/egf\/src\/tags.ts\nindex d4fb004ab7..d96fc0caf7 100644\n--- a\/packages\/egf\/src\/tags.ts\n+++ b\/packages\/egf\/src\/tags.ts\n@@ -1,7 +1,7 @@\n import type { IObjectOf } from \"@thi.ng\/api\";\n import { maybeParseFloat, maybeParseInt, unescape } from \"@thi.ng\/strings\";\n import { base64Decode } from \"@thi.ng\/transducers-binary\";\n-import { execSync } from \"child_process\";\n+import { execFileSync } from \"child_process\";\n import { readFileSync } from \"fs\";\n import { resolve as resolvePath } from \"path\";\n import { IS_NODE, NODE_ONLY, TagParser } from \".\/api\";\n@@ -24,7 +24,9 @@ export const BUILTINS: IObjectOf<TagParser> = {\n     gpg: IS_NODE\n         ? (_, body, ctx) =>\n               (ctx.opts.decrypt\n-                  ? execSync(`echo \"${body}\" | gpg --decrypt`).toString()\n+                  ? execFileSync(\"gpg\", [\"--decrypt\"], {\n+                        input: body,\n+                    }).toString()\n                   : body\n               ).trim()\n         : NODE_ONLY,"
        },
        {
            "index":778,
            "vuln_id":"GHSA-24x4-6qmh-88qg",
            "cwe_id":"{'CWE-416'}",
            "score":7.6,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e746adbfcfee15e9cfdb391ff746c765b99bdf9b'}",
            "dataset":"osv",
            "summary":"Use after free in `DecodePng` kernel ### Impact\nA malicious user can cause a use after free behavior when [decoding PNG images](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/kernels\/image\/decode_image_op.cc#L339-L346):\n```cc\nif (\/* ... error conditions ... *\/) {\n  png::CommonFreeDecode(&decode);\n  OP_REQUIRES(context, false,\n              errors::InvalidArgument(\"PNG size too large for int: \",\n                                      decode.width, \" by \", decode.height));\n}   \n```\nAfter `png::CommonFreeDecode(&decode)` gets called, the values of `decode.width` and `decode.height` are in an unspecified state.\n\n### Patches\nWe have patched the issue in GitHub commit [e746adbfcfee15e9cfdb391ff746c765b99bdf9b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e746adbfcfee15e9cfdb391ff746c765b99bdf9b).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e746adbfcfee15e9cfdb391ff746c765b99bdf9b",
            "commit_sha":"e746adbfcfee15e9cfdb391ff746c765b99bdf9b",
            "patch":"SINGLE",
            "chain_ord":"['e746adbfcfee15e9cfdb391ff746c765b99bdf9b']",
            "before_first_fix_commit":"{'3098fd96f45207b030c48ac78922d6221a4c421a'}",
            "last_fix_commit":"e746adbfcfee15e9cfdb391ff746c765b99bdf9b",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/12\/2021, 03:12:19",
            "message":"Prevent use after free in `DecodePng` kernel.\n\nWe are cleaning up the memory in `decode` and then we are using an `OP_REQUIRES` to check an invariant on the `decode` data.\n\nPiperOrigin-RevId: 409299145\nChange-Id: I4eb93aaca52483eb202e89b78df07fbb2f6cb254",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 0, 'deletions': 1, 'total': 1}",
            "files":"{'tensorflow\/core\/kernels\/image\/decode_image_op.cc': {'additions': 0, 'deletions': 1, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e746adbfcfee15e9cfdb391ff746c765b99bdf9b\/tensorflow%2Fcore%2Fkernels%2Fimage%2Fdecode_image_op.cc', 'patch': '@@ -339,7 +339,6 @@ class DecodeImageV2Op : public OpKernel {\\n     if (width != static_cast<int64_t>(decode.width) || width <= 0 ||\\n         width >= (1LL << 27) || height != static_cast<int64_t>(decode.height) ||\\n         height <= 0 || height >= (1LL << 27) || total_size >= (1LL << 29)) {\\n-      png::CommonFreeDecode(&decode);\\n       OP_REQUIRES(context, false,\\n                   errors::InvalidArgument(\"PNG size too large for int: \",\\n                                           decode.width, \" by \", decode.height));'}}",
            "message_norm":"prevent use after free in `decodepng` kernel.\n\nwe are cleaning up the memory in `decode` and then we are using an `op_requires` to check an invariant on the `decode` data.\n\npiperorigin-revid: 409299145\nchange-id: i4eb93aaca52483eb202e89b78df07fbb2f6cb254",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('use after free', 'SECWORD', ''), ('decodepng', 'SECWORD', ''), ('decode', 'SECWORD', ''), ('decode', 'SECWORD', ''), ('409299145', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/image\/decode_image_op.cc'])",
            "num_files":1.0,
            "patch_content":"From e746adbfcfee15e9cfdb391ff746c765b99bdf9b Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Thu, 11 Nov 2021 19:12:19 -0800\nSubject: [PATCH] Prevent use after free in `DecodePng` kernel.\n\nWe are cleaning up the memory in `decode` and then we are using an `OP_REQUIRES` to check an invariant on the `decode` data.\n\nPiperOrigin-RevId: 409299145\nChange-Id: I4eb93aaca52483eb202e89b78df07fbb2f6cb254\n---\n tensorflow\/core\/kernels\/image\/decode_image_op.cc | 1 -\n 1 file changed, 1 deletion(-)\n\ndiff --git a\/tensorflow\/core\/kernels\/image\/decode_image_op.cc b\/tensorflow\/core\/kernels\/image\/decode_image_op.cc\nindex 4573b4db0f46ca..a0345b7e0b79b0 100644\n--- a\/tensorflow\/core\/kernels\/image\/decode_image_op.cc\n+++ b\/tensorflow\/core\/kernels\/image\/decode_image_op.cc\n@@ -339,7 +339,6 @@ class DecodeImageV2Op : public OpKernel {\n     if (width != static_cast<int64_t>(decode.width) || width <= 0 ||\n         width >= (1LL << 27) || height != static_cast<int64_t>(decode.height) ||\n         height <= 0 || height >= (1LL << 27) || total_size >= (1LL << 29)) {\n-      png::CommonFreeDecode(&decode);\n       OP_REQUIRES(context, false,\n                   errors::InvalidArgument(\"PNG size too large for int: \",\n                                           decode.width, \" by \", decode.height));"
        },
        {
            "index":221,
            "vuln_id":"GHSA-83rh-hx5x-q9p5",
            "cwe_id":"{'CWE-125'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/opencv\/opencv\/pull\/10480\/commits\/4ca89db22dea962690f31c1781bce5937ee91837'}",
            "dataset":"osv",
            "summary":"Out-of-bounds Read in OpenCV In OpenCV 3.3.1 (corresponding with OpenCV-Python 3.3.1.11), a heap-based buffer over-read exists in the function cv::HdrDecoder::checkSignature in modules\/imgcodecs\/src\/grfmt_hdr.cpp.",
            "published_date":"2021-10-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/opencv\/opencv",
            "commit_href":"https:\/\/github.com\/opencv\/opencv\/pull\/10480\/commits\/4ca89db22dea962690f31c1781bce5937ee91837",
            "commit_sha":"4ca89db22dea962690f31c1781bce5937ee91837",
            "patch":"SINGLE",
            "chain_ord":"['4ca89db22dea962690f31c1781bce5937ee91837']",
            "before_first_fix_commit":"{'30373d2566a3ec097f0418dc2661ec03fcfb71d6'}",
            "last_fix_commit":"4ca89db22dea962690f31c1781bce5937ee91837",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/01\/2018, 13:12:21",
            "message":"imgproc(hdr): fix bounds check in HdrDecoder::checkSignature()",
            "author":"Alexander Alekhin",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 4, 'total': 12}",
            "files":"{'modules\/imgcodecs\/src\/grfmt_hdr.cpp': {'additions': 8, 'deletions': 4, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencv\/opencv\/raw\/4ca89db22dea962690f31c1781bce5937ee91837\/modules%2Fimgcodecs%2Fsrc%2Fgrfmt_hdr.cpp', 'patch': '@@ -101,10 +101,14 @@ bool HdrDecoder::readData(Mat& _img)\\n \\n bool HdrDecoder::checkSignature( const String& signature ) const\\n {\\n-    if(signature.size() >= m_signature.size() &&\\n-       (!memcmp(signature.c_str(), m_signature.c_str(), m_signature.size()) ||\\n-       !memcmp(signature.c_str(), m_signature_alt.c_str(), m_signature_alt.size())))\\n-       return true;\\n+    if (signature.size() >= m_signature.size() &&\\n+        0 == memcmp(signature.c_str(), m_signature.c_str(), m_signature.size())\\n+    )\\n+        return true;\\n+    if (signature.size() >= m_signature_alt.size() &&\\n+        0 == memcmp(signature.c_str(), m_signature_alt.c_str(), m_signature_alt.size())\\n+    )\\n+        return true;\\n     return false;\\n }'}}",
            "message_norm":"imgproc(hdr): fix bounds check in hdrdecoder::checksignature()",
            "language":"en",
            "entities":"[('bounds check', 'SECWORD', ''), ('hdrdecoder::checksignature', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/imgcodecs\/src\/grfmt_hdr.cpp'])",
            "num_files":1.0,
            "patch_content":"From 4ca89db22dea962690f31c1781bce5937ee91837 Mon Sep 17 00:00:00 2001\nFrom: Alexander Alekhin <alexander.a.alekhin@gmail.com>\nDate: Mon, 1 Jan 2018 13:12:21 +0000\nSubject: [PATCH] imgproc(hdr): fix bounds check in\n HdrDecoder::checkSignature()\n\n---\n modules\/imgcodecs\/src\/grfmt_hdr.cpp | 12 ++++++++----\n 1 file changed, 8 insertions(+), 4 deletions(-)\n\ndiff --git a\/modules\/imgcodecs\/src\/grfmt_hdr.cpp b\/modules\/imgcodecs\/src\/grfmt_hdr.cpp\nindex f795120547eb..9801106506e2 100644\n--- a\/modules\/imgcodecs\/src\/grfmt_hdr.cpp\n+++ b\/modules\/imgcodecs\/src\/grfmt_hdr.cpp\n@@ -101,10 +101,14 @@ bool HdrDecoder::readData(Mat& _img)\n \n bool HdrDecoder::checkSignature( const String& signature ) const\n {\n-    if(signature.size() >= m_signature.size() &&\n-       (!memcmp(signature.c_str(), m_signature.c_str(), m_signature.size()) ||\n-       !memcmp(signature.c_str(), m_signature_alt.c_str(), m_signature_alt.size())))\n-       return true;\n+    if (signature.size() >= m_signature.size() &&\n+        0 == memcmp(signature.c_str(), m_signature.c_str(), m_signature.size())\n+    )\n+        return true;\n+    if (signature.size() >= m_signature_alt.size() &&\n+        0 == memcmp(signature.c_str(), m_signature_alt.c_str(), m_signature_alt.size())\n+    )\n+        return true;\n     return false;\n }"
        },
        {
            "index":365,
            "vuln_id":"GHSA-3c33-3465-fhx2",
            "cwe_id":"{'CWE-668'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/librenms\/librenms\/commit\/e5bb6d80bc308fc56b9a01ffb76c34159995353c'}",
            "dataset":"osv",
            "summary":"Exposure of Resource to Wrong Sphere in LibreNMS An issue was discovered in LibreNMS before 1.65.1. It has insufficient access control for normal users because of \"'guard' => 'admin'\" instead of \"'middleware' => ['can:admin']\" in routes\/web.php.",
            "published_date":"2021-09-08",
            "chain_len":1,
            "project":"https:\/\/github.com\/librenms\/librenms",
            "commit_href":"https:\/\/github.com\/librenms\/librenms\/commit\/e5bb6d80bc308fc56b9a01ffb76c34159995353c",
            "commit_sha":"e5bb6d80bc308fc56b9a01ffb76c34159995353c",
            "patch":"SINGLE",
            "chain_ord":"['e5bb6d80bc308fc56b9a01ffb76c34159995353c']",
            "before_first_fix_commit":"{'a30fcbde0a0f8a2109cbd4edb2b27b118190b3ca'}",
            "last_fix_commit":"e5bb6d80bc308fc56b9a01ffb76c34159995353c",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/08\/2020, 23:04:48",
            "message":"Fix settings access (#11915)\n\nnormal users could access",
            "author":"Tony Murray",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'routes\/web.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/librenms\/librenms\/raw\/e5bb6d80bc308fc56b9a01ffb76c34159995353c\/routes%2Fweb.php', 'patch': \"@@ -43,7 +43,7 @@\\n     });\\n \\n     \/\/ admin pages\\n-    Route::group(['guard' => 'admin'], function () {\\n+    Route::group(['middleware' => ['can:admin']], function () {\\n         Route::get('settings\/{tab?}\/{section?}', 'SettingsController@index')->name('settings');\\n         Route::put('settings\/{name}', 'SettingsController@update')->name('settings.update');\\n         Route::delete('settings\/{name}', 'SettingsController@destroy')->name('settings.destroy');\"}}",
            "message_norm":"fix settings access (#11915)\n\nnormal users could access",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('#11915', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['routes\/web.php'])",
            "num_files":1.0,
            "patch_content":"From e5bb6d80bc308fc56b9a01ffb76c34159995353c Mon Sep 17 00:00:00 2001\nFrom: Tony Murray <murraytony@gmail.com>\nDate: Wed, 8 Jul 2020 18:04:48 -0500\nSubject: [PATCH] Fix settings access (#11915)\n\nnormal users could access\n---\n routes\/web.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/routes\/web.php b\/routes\/web.php\nindex 7985cbe7e399..6b8fc2e01c09 100644\n--- a\/routes\/web.php\n+++ b\/routes\/web.php\n@@ -43,7 +43,7 @@\n     });\n \n     \/\/ admin pages\n-    Route::group(['guard' => 'admin'], function () {\n+    Route::group(['middleware' => ['can:admin']], function () {\n         Route::get('settings\/{tab?}\/{section?}', 'SettingsController@index')->name('settings');\n         Route::put('settings\/{name}', 'SettingsController@update')->name('settings.update');\n         Route::delete('settings\/{name}', 'SettingsController@destroy')->name('settings.destroy');"
        },
        {
            "index":493,
            "vuln_id":"GHSA-wg4r-q74r-p7c8",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/4b6e6603c714aab1de346c5f5cb0bbb4c871be1f'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in ShowDoc ShowDoc is vulnerable to stored cross-site scripting due to unrestricted file upload in versions 2.10.3 and prior. A patch is available and anticipated to be part of version 2.10.4.",
            "published_date":"2022-03-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/4b6e6603c714aab1de346c5f5cb0bbb4c871be1f",
            "commit_sha":"4b6e6603c714aab1de346c5f5cb0bbb4c871be1f",
            "patch":"SINGLE",
            "chain_ord":"['4b6e6603c714aab1de346c5f5cb0bbb4c871be1f']",
            "before_first_fix_commit":"{'d4363f73fb50193c9701982b59642696edf834a1', '61a23da1925119454d8477e9cf884b6cba93364c'}",
            "last_fix_commit":"4b6e6603c714aab1de346c5f5cb0bbb4c871be1f",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/13\/2022, 12:16:25",
            "message":"Merge pull request #1630 from ajaysenr\/master\n\nUpdate AttachmentModel.class.php",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/4b6e6603c714aab1de346c5f5cb0bbb4c871be1f\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -305,6 +305,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xxhtml\")\\n \\t\\t\\t|| $isDangerStr($filename , \".asp\")\\t\\t\\t\\n+\\t\\t\\t|| $isDangerStr($filename , \".xsl\")\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}'}}",
            "message_norm":"merge pull request #1630 from ajaysenr\/master\n\nupdate attachmentmodel.class.php",
            "language":"en",
            "entities":"[('#1630', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
            "num_files":1.0,
            "patch_content":"From 61a23da1925119454d8477e9cf884b6cba93364c Mon Sep 17 00:00:00 2001\nFrom: Ajaysen R <40132420+ajaysenr@users.noreply.github.com>\nDate: Sun, 13 Mar 2022 12:01:44 +0000\nSubject: [PATCH] Update AttachmentModel.class.php\n\n---\n server\/Application\/Api\/Model\/AttachmentModel.class.php | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/server\/Application\/Api\/Model\/AttachmentModel.class.php b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\nindex 8a17a6c3c..3f33fde76 100644\n--- a\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n+++ b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n@@ -305,6 +305,7 @@ public function isDangerFilename($filename){\n \t\t\t|| $isDangerStr($filename , \".xml\")\n \t\t\t|| $isDangerStr($filename , \".xxhtml\")\n \t\t\t|| $isDangerStr($filename , \".asp\")\t\t\t\n+\t\t\t|| $isDangerStr($filename , \".xsl\")\n \t\t) {\n \t\t\treturn true;\n \t\t}"
        },
        {
            "index":549,
            "vuln_id":"GHSA-cgjv-rghq-qhgp",
            "cwe_id":"{'CWE-22'}",
            "score":8.6,
            "chain":"{'https:\/\/github.com\/AlgoRythm-Dylan\/httpserv\/commit\/bcfe9d4316c2b59aab3a64a38905376026888735'}",
            "dataset":"osv",
            "summary":"Path Traversal in algo-httpserv Versions of `algo-httpserv` prior to 1.1.2 are vulnerable to Path Traversal.  Due to insufficient input sanitization, attackers can access server files by using relative paths. \n\n\n## Recommendation\n\nUpgrade to version 1.1.2 or later.",
            "published_date":"2019-09-11",
            "chain_len":1,
            "project":"https:\/\/github.com\/AlgoRythm-Dylan\/httpserv",
            "commit_href":"https:\/\/github.com\/AlgoRythm-Dylan\/httpserv\/commit\/bcfe9d4316c2b59aab3a64a38905376026888735",
            "commit_sha":"bcfe9d4316c2b59aab3a64a38905376026888735",
            "patch":"SINGLE",
            "chain_ord":"['bcfe9d4316c2b59aab3a64a38905376026888735']",
            "before_first_fix_commit":"{'7763b4f9b0b9e1873ae0cdfef582c786ee96f091'}",
            "last_fix_commit":"bcfe9d4316c2b59aab3a64a38905376026888735",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/17\/2019, 22:10:35",
            "message":"Fixed path vulnerability",
            "author":"AlgoRythm-Dylan",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 2, 'total': 9}",
            "files":"{'httpserv.js': {'additions': 7, 'deletions': 2, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/AlgoRythm-Dylan\/httpserv\/raw\/bcfe9d4316c2b59aab3a64a38905376026888735\/httpserv.js', 'patch': '@@ -1,6 +1,7 @@\\n \/\/ Stream-based KISS HTTP(S) server\\n \\n const url = require(\"url\");\\n+const pathlib = require(\"path\")\\n const fs = require(\"fs\");\\n \\n \/\/ A small database of MIME associations\\n@@ -32,7 +33,7 @@ var MIMES = {\\n     \".zip\": \"application\/zip\"\\n }\\n \\n-var servePath = \"serve\";\\n+var servePath = \"serve\/\";\\n function doStream(request, response, filePath, stats, MIME){\\n     let responseOptions = {};\\n     let streamOptions = {};\\n@@ -82,7 +83,11 @@ module.exports.serve = function(request, response){\\n         MIME = MIMES[fileType];\\n     }\\n     \/\/ Serve the actual file\\n-    var filePath = servePath + path;\\n+    var filePath = pathlib.join(servePath, path);\\n+    if(filePath.indexOf(servePath) !== 0){\\n+        response.end();\\n+        return;\\n+    }\\n     let handler = handlers[path];\\n     if(handler !== undefined){\\n         if(handler.requestTypes === null || handler.requestTypes.indexOf(request.method) != -1){'}}",
            "message_norm":"fixed path vulnerability",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['httpserv.js'])",
            "num_files":1.0,
            "patch_content":"From bcfe9d4316c2b59aab3a64a38905376026888735 Mon Sep 17 00:00:00 2001\nFrom: AlgoRythm-Dylan <dperunko@comcast.net>\nDate: Fri, 17 May 2019 18:10:35 -0400\nSubject: [PATCH] Fixed path vulnerability\n\n---\n httpserv.js | 9 +++++++--\n 1 file changed, 7 insertions(+), 2 deletions(-)\n\ndiff --git a\/httpserv.js b\/httpserv.js\nindex bde8a63..601410e 100644\n--- a\/httpserv.js\n+++ b\/httpserv.js\n@@ -1,6 +1,7 @@\n \/\/ Stream-based KISS HTTP(S) server\n \n const url = require(\"url\");\n+const pathlib = require(\"path\")\n const fs = require(\"fs\");\n \n \/\/ A small database of MIME associations\n@@ -32,7 +33,7 @@ var MIMES = {\n     \".zip\": \"application\/zip\"\n }\n \n-var servePath = \"serve\";\n+var servePath = \"serve\/\";\n function doStream(request, response, filePath, stats, MIME){\n     let responseOptions = {};\n     let streamOptions = {};\n@@ -82,7 +83,11 @@ module.exports.serve = function(request, response){\n         MIME = MIMES[fileType];\n     }\n     \/\/ Serve the actual file\n-    var filePath = servePath + path;\n+    var filePath = pathlib.join(servePath, path);\n+    if(filePath.indexOf(servePath) !== 0){\n+        response.end();\n+        return;\n+    }\n     let handler = handlers[path];\n     if(handler !== undefined){\n         if(handler.requestTypes === null || handler.requestTypes.indexOf(request.method) != -1){"
        },
        {
            "index":593,
            "vuln_id":"GHSA-56wv-2wr9-3h9r",
            "cwe_id":"{'CWE-347'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/e592f106edd5acf6dacedfab2ad16fe6c735c9d1', 'https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/7b64e3efaa806b4daaf73bb5172af3581812f8de', 'https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/4a16daeaf139be20654ef58a9fe4c79dc030458c'}",
            "dataset":"osv",
            "summary":"Improper Verification of Cryptographic Signature in fastecdsa An issue was discovered in fastecdsa before 2.1.2. When using the NIST P-256 curve in the ECDSA implementation, the point at infinity is mishandled. This means that for an extreme value in k and s^-1, the signature verification fails even if the signature is correct. This behavior is not solely a usability problem. There are some threat models where an attacker can benefit by successfully guessing users for whom signature verification will fail.",
            "published_date":"2021-10-12",
            "chain_len":3,
            "project":"https:\/\/github.com\/AntonKueltz\/fastecdsa",
            "commit_href":"https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/7b64e3efaa806b4daaf73bb5172af3581812f8de",
            "commit_sha":"7b64e3efaa806b4daaf73bb5172af3581812f8de",
            "patch":"MULTI",
            "chain_ord":"['e592f106edd5acf6dacedfab2ad16fe6c735c9d1', '7b64e3efaa806b4daaf73bb5172af3581812f8de', '4a16daeaf139be20654ef58a9fe4c79dc030458c']",
            "before_first_fix_commit":"{'7b64e3efaa806b4daaf73bb5172af3581812f8de'}",
            "last_fix_commit":"4a16daeaf139be20654ef58a9fe4c79dc030458c",
            "chain_ord_pos":2.0,
            "commit_datetime":"04\/14\/2020, 09:45:48",
            "message":"Update docs to v2.1.2",
            "author":"AntonKueltz",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'docs\/conf.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/AntonKueltz\/fastecdsa\/raw\/7b64e3efaa806b4daaf73bb5172af3581812f8de\/docs%2Fconf.py', 'patch': \"@@ -64,7 +64,7 @@\\n # The short X.Y version.\\n version = '2.1'\\n # The full version, including alpha\/beta\/rc tags.\\n-release = '2.1.1'\\n+release = '2.1.2'\\n \\n # The language for content autogenerated by Sphinx. Refer to documentation\\n # for a list of supported languages.\"}}",
            "message_norm":"update docs to v2.1.2",
            "language":"sl",
            "entities":"[('v2.1.2', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['docs\/conf.py'])",
            "num_files":1.0,
            "patch_content":"From 7b64e3efaa806b4daaf73bb5172af3581812f8de Mon Sep 17 00:00:00 2001\nFrom: AntonKueltz <kueltz.anton@gmail.com>\nDate: Tue, 14 Apr 2020 02:45:48 -0700\nSubject: [PATCH] Update docs to v2.1.2\n\n---\n docs\/conf.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/docs\/conf.py b\/docs\/conf.py\nindex c0ed824..7f9a0cf 100644\n--- a\/docs\/conf.py\n+++ b\/docs\/conf.py\n@@ -64,7 +64,7 @@\n # The short X.Y version.\n version = '2.1'\n # The full version, including alpha\/beta\/rc tags.\n-release = '2.1.1'\n+release = '2.1.2'\n \n # The language for content autogenerated by Sphinx. Refer to documentation\n # for a list of supported languages."
        },
        {
            "index":943,
            "vuln_id":"GHSA-4p92-fv6v-fhfj",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/15e519a86e4b24526abaf9e6dc81cb1af86843a5'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in microweber Microweber prior to 1.2.11 is vulnerable to reflected cross-site scripting.",
            "published_date":"2022-02-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/15e519a86e4b24526abaf9e6dc81cb1af86843a5",
            "commit_sha":"15e519a86e4b24526abaf9e6dc81cb1af86843a5",
            "patch":"SINGLE",
            "chain_ord":"['15e519a86e4b24526abaf9e6dc81cb1af86843a5']",
            "before_first_fix_commit":"{'c897d0dc159849763a813184d9b75b966c6360bf'}",
            "last_fix_commit":"15e519a86e4b24526abaf9e6dc81cb1af86843a5",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/25\/2022, 10:57:48",
            "message":"update",
            "author":"Peter Ivanov",
            "comments":null,
            "stats":"{'additions': 0, 'deletions': 0, 'total': 0}",
            "files":"{'.github\/workflows\/templates.yml': {'additions': 0, 'deletions': 0, 'changes': 0, 'status': 'renamed', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/15e519a86e4b24526abaf9e6dc81cb1af86843a5\/.github%2Fworkflows%2Ftemplates.yml', 'patch': None}}",
            "message_norm":"update",
            "language":"ro",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['.github\/workflows\/templates.yml'])",
            "num_files":1.0,
            "patch_content":"From 15e519a86e4b24526abaf9e6dc81cb1af86843a5 Mon Sep 17 00:00:00 2001\nFrom: Peter Ivanov <peter@microweber.com>\nDate: Fri, 25 Feb 2022 12:57:48 +0200\nSubject: [PATCH] update\n\n---\n .github\/workflows\/{templates.yml.backup => templates.yml} | 0\n 1 file changed, 0 insertions(+), 0 deletions(-)\n rename .github\/workflows\/{templates.yml.backup => templates.yml} (100%)\n\ndiff --git a\/.github\/workflows\/templates.yml.backup b\/.github\/workflows\/templates.yml\nsimilarity index 100%\nrename from .github\/workflows\/templates.yml.backup\nrename to .github\/workflows\/templates.yml"
        },
        {
            "index":739,
            "vuln_id":"GHSA-8v5f-hp78-jgxq",
            "cwe_id":"{'CWE-347'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/hokaccha\/node-jwt-simple\/commit\/ead36e1d687645da9c3be8befdaaef622ea33106'}",
            "dataset":"osv",
            "summary":"Signature Verification Bypass in jwt-simple Versions of `jwt-simple` prior to 0.5.3 are vulnerable to Signature Verification Bypass. If no algorithm is specified in the `decode()` function, the packages uses the algorithm in the JWT to decode tokens. This allows an attacker to create a HS256 (symmetric algorithm) JWT with the server's public key as secret, and the package will verify it as HS256 instead of RS256 (asymmetric algorithm).\n\n\n## Recommendation\n\nUpgrade to version 0.5.3 or later.",
            "published_date":"2019-06-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/hokaccha\/node-jwt-simple",
            "commit_href":"https:\/\/github.com\/hokaccha\/node-jwt-simple\/commit\/ead36e1d687645da9c3be8befdaaef622ea33106",
            "commit_sha":"ead36e1d687645da9c3be8befdaaef622ea33106",
            "patch":"SINGLE",
            "chain_ord":"['ead36e1d687645da9c3be8befdaaef622ea33106']",
            "before_first_fix_commit":"{'ecb19a046432f3e9d9490c10c74c1d6f123c18e0'}",
            "last_fix_commit":"ead36e1d687645da9c3be8befdaaef622ea33106",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/14\/2017, 01:56:51",
            "message":"Use RS256 if algorithm is undefined but key is RSA",
            "author":"Daniel",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'lib\/jwt.js': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/hokaccha\/node-jwt-simple\/raw\/ead36e1d687645da9c3be8befdaaef622ea33106\/lib%2Fjwt.js', 'patch': \"@@ -76,6 +76,10 @@ jwt.decode = function jwt_decode(token, key, noVerify, algorithm) {\\n   var payload = JSON.parse(base64urlDecode(payloadSeg));\\n \\n   if (!noVerify) {\\n+    if (!algorithm && \/BEGIN( RSA)? PUBLIC KEY\/.test(key.toString())) {\\n+      algorithm = 'RS256';\\n+    }\\n+\\n     var signingMethod = algorithmMap[algorithm || header.alg];\\n     var signingType = typeMap[algorithm || header.alg];\\n     if (!signingMethod || !signingType) {\"}}",
            "message_norm":"use rs256 if algorithm is undefined but key is rsa",
            "language":"en",
            "entities":"[('key', 'SECWORD', ''), ('rsa', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/jwt.js'])",
            "num_files":1.0,
            "patch_content":"From ead36e1d687645da9c3be8befdaaef622ea33106 Mon Sep 17 00:00:00 2001\nFrom: Daniel <nieltansah@gmail.com>\nDate: Thu, 14 Dec 2017 08:56:51 +0700\nSubject: [PATCH] Use RS256 if algorithm is undefined but key is RSA\n\n---\n lib\/jwt.js | 4 ++++\n 1 file changed, 4 insertions(+)\n\ndiff --git a\/lib\/jwt.js b\/lib\/jwt.js\nindex 05c7a21..1d3cf14 100644\n--- a\/lib\/jwt.js\n+++ b\/lib\/jwt.js\n@@ -76,6 +76,10 @@ jwt.decode = function jwt_decode(token, key, noVerify, algorithm) {\n   var payload = JSON.parse(base64urlDecode(payloadSeg));\n \n   if (!noVerify) {\n+    if (!algorithm && \/BEGIN( RSA)? PUBLIC KEY\/.test(key.toString())) {\n+      algorithm = 'RS256';\n+    }\n+\n     var signingMethod = algorithmMap[algorithm || header.alg];\n     var signingType = typeMap[algorithm || header.alg];\n     if (!signingMethod || !signingType) {"
        },
        {
            "index":710,
            "vuln_id":"GHSA-832h-xg76-4gv6",
            "cwe_id":"{'CWE-20'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/juliangruber\/brace-expansion\/pull\/35\/commits\/b13381281cead487cbdbfd6a69fb097ea5e456c3'}",
            "dataset":"osv",
            "summary":"ReDoS in brace-expansion Affected versions of `brace-expansion` are vulnerable to a regular expression denial of service condition.\n\n## Proof of Concept\n\n```\nvar expand = require('brace-expansion');\nexpand('{,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\\n}');\n```\n\n\n## Recommendation\n\nUpdate to version 1.1.7 or later.",
            "published_date":"2018-01-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/juliangruber\/brace-expansion",
            "commit_href":"https:\/\/github.com\/juliangruber\/brace-expansion\/pull\/35\/commits\/b13381281cead487cbdbfd6a69fb097ea5e456c3",
            "commit_sha":"b13381281cead487cbdbfd6a69fb097ea5e456c3",
            "patch":"SINGLE",
            "chain_ord":"['b13381281cead487cbdbfd6a69fb097ea5e456c3']",
            "before_first_fix_commit":"{'265f6cd6586383eebebbfc3c45da2eaa153d9e63'}",
            "last_fix_commit":"b13381281cead487cbdbfd6a69fb097ea5e456c3",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/07\/2017, 02:32:55",
            "message":"fix bug in https:\/\/github.com\/juliangruber\/brace-expansion\/issues\/33",
            "author":"mengyuan.ymy",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/juliangruber\/brace-expansion\/raw\/b13381281cead487cbdbfd6a69fb097ea5e456c3\/index.js', 'patch': \"@@ -106,7 +106,7 @@ function expand(str, isTop) {\\n   var isNumericSequence = \/^-?\\\\d+\\\\.\\\\.-?\\\\d+(?:\\\\.\\\\.-?\\\\d+)?$\/.test(m.body);\\n   var isAlphaSequence = \/^[a-zA-Z]\\\\.\\\\.[a-zA-Z](?:\\\\.\\\\.-?\\\\d+)?$\/.test(m.body);\\n   var isSequence = isNumericSequence || isAlphaSequence;\\n-  var isOptions = \/^(.*,)+(.+)?$\/.test(m.body);\\n+  var isOptions = m.body.indexOf(',') >= 0;\\n   if (!isSequence && !isOptions) {\\n     \/\/ {a},b}\\n     if (m.post.match(\/,.*\\\\}\/)) {\"}}",
            "message_norm":"fix bug in https:\/\/github.com\/juliangruber\/brace-expansion\/issues\/33",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('bug', 'FLAW', ''), ('https:\/\/github.com\/juliangruber\/brace-expansion\/issues\/33', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0,
            "patch_content":"From b13381281cead487cbdbfd6a69fb097ea5e456c3 Mon Sep 17 00:00:00 2001\nFrom: \"mengyuan.ymy\" <mengyuan.ymy@alibaba-inc.com>\nDate: Fri, 7 Apr 2017 10:32:55 +0800\nSubject: [PATCH] fix bug in\n https:\/\/github.com\/juliangruber\/brace-expansion\/issues\/33\n\n---\n index.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/index.js b\/index.js\nindex 955f27c..0478be8 100644\n--- a\/index.js\n+++ b\/index.js\n@@ -106,7 +106,7 @@ function expand(str, isTop) {\n   var isNumericSequence = \/^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$\/.test(m.body);\n   var isAlphaSequence = \/^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$\/.test(m.body);\n   var isSequence = isNumericSequence || isAlphaSequence;\n-  var isOptions = \/^(.*,)+(.+)?$\/.test(m.body);\n+  var isOptions = m.body.indexOf(',') >= 0;\n   if (!isSequence && !isOptions) {\n     \/\/ {a},b}\n     if (m.post.match(\/,.*\\}\/)) {"
        },
        {
            "index":880,
            "vuln_id":"GHSA-89px-ww3j-g2mm",
            "cwe_id":"{'CWE-304', 'CWE-290'}",
            "score":8.7,
            "chain":"{'https:\/\/github.com\/labd\/wagtail-2fa\/commit\/13b12995d35b566df08a17257a23863ab6efb0ca', 'https:\/\/github.com\/labd\/wagtail-2fa\/commit\/a6711b29711729005770ff481b22675b35ff5c81'}",
            "dataset":"osv",
            "summary":"2FA bypass in Wagtail through new device path ## 2FA bypass through new device path\n\n### Impact\nIf someone gains access to someone's Wagtail login credentials, they can log into the CMS and bypass the 2FA check by changing the URL. They can then add a new device and gain full access to the CMS.\n\n### Patches\nThis problem has been patched in version 1.3.0.\n\n### Workarounds\nThere is no workaround at the moment.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [github.com\/labd\/wagtail-2fa](https:\/\/github.com\/labd\/wagtail-2fa)\n* Email us at [security@labdigital.nl](mailto:security@labdigital.nl)",
            "published_date":"2019-11-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/labd\/wagtail-2fa",
            "commit_href":"https:\/\/github.com\/labd\/wagtail-2fa\/commit\/13b12995d35b566df08a17257a23863ab6efb0ca",
            "commit_sha":"13b12995d35b566df08a17257a23863ab6efb0ca",
            "patch":"MULTI",
            "chain_ord":"['a6711b29711729005770ff481b22675b35ff5c81', '13b12995d35b566df08a17257a23863ab6efb0ca']",
            "before_first_fix_commit":"{'bceef354b3ab885350e3bc79a793589c491f6037'}",
            "last_fix_commit":"13b12995d35b566df08a17257a23863ab6efb0ca",
            "chain_ord_pos":2.0,
            "commit_datetime":"11\/26\/2019, 11:56:05",
            "message":"Update changelog for 1.3.0 release",
            "author":"Mike Dingjan",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 0, 'total': 8}",
            "files":"{'CHANGES': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/labd\/wagtail-2fa\/raw\/13b12995d35b566df08a17257a23863ab6efb0ca\/CHANGES', 'patch': '@@ -1,3 +1,11 @@\\n+1.3.0 (2019.11.26)\\n+==================\\n+ - Add OtpRequiredMixin to enforce OTP checks in views\\n+ - Resolve possible vulnerabilities:\\n+    - [CWE-290](http:\/\/cwe.mitre.org\/data\/definitions\/290.html)\\n+    - [CWE-20](http:\/\/cwe.mitre.org\/data\/definitions\/20.html)\\n+\\n+\\n 1.2.0 (2019-10-30)\\n ==================\\n  - Added missing deps for generation of the docs'}}",
            "message_norm":"update changelog for 1.3.0 release",
            "language":"en",
            "entities":"[('update', 'ACTION', ''), ('1.3.0', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['CHANGES'])",
            "num_files":1.0,
            "patch_content":"From 13b12995d35b566df08a17257a23863ab6efb0ca Mon Sep 17 00:00:00 2001\nFrom: Mike Dingjan <m.dingjan@labdigital.nl>\nDate: Tue, 26 Nov 2019 12:56:05 +0100\nSubject: [PATCH] Update changelog for 1.3.0 release\n\n---\n CHANGES | 8 ++++++++\n 1 file changed, 8 insertions(+)\n\ndiff --git a\/CHANGES b\/CHANGES\nindex bc43997..4ade220 100644\n--- a\/CHANGES\n+++ b\/CHANGES\n@@ -1,3 +1,11 @@\n+1.3.0 (2019.11.26)\n+==================\n+ - Add OtpRequiredMixin to enforce OTP checks in views\n+ - Resolve possible vulnerabilities:\n+    - [CWE-290](http:\/\/cwe.mitre.org\/data\/definitions\/290.html)\n+    - [CWE-20](http:\/\/cwe.mitre.org\/data\/definitions\/20.html)\n+\n+\n 1.2.0 (2019-10-30)\n ==================\n  - Added missing deps for generation of the docs"
        },
        {
            "index":510,
            "vuln_id":"GHSA-qr2j-wrhx-4829",
            "cwe_id":"{'CWE-20'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/ethereum\/go-ethereum\/commit\/106d196ec4a6451efedc60ab15957f231fa85639'}",
            "dataset":"osv",
            "summary":"Improper Input Validation In Go Ethereum (aka geth) before 1.8.14, TraceChain in eth\/api_tracer.go does not verify that the end block is after the start block.",
            "published_date":"2021-05-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/ethereum\/go-ethereum",
            "commit_href":"https:\/\/github.com\/ethereum\/go-ethereum\/commit\/106d196ec4a6451efedc60ab15957f231fa85639",
            "commit_sha":"106d196ec4a6451efedc60ab15957f231fa85639",
            "patch":"SINGLE",
            "chain_ord":"['106d196ec4a6451efedc60ab15957f231fa85639']",
            "before_first_fix_commit":"{'6d1e292eefa70b5cb76cd03ff61fc6c4550d7c36'}",
            "last_fix_commit":"106d196ec4a6451efedc60ab15957f231fa85639",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/21\/2018, 07:48:53",
            "message":"eth: ensure from<to when tracing chain (credits Chen Nan via bugbounty)",
            "author":"Martin Holst Swende",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'eth\/api_tracer.go': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ethereum\/go-ethereum\/raw\/106d196ec4a6451efedc60ab15957f231fa85639\/eth%2Fapi_tracer.go', 'patch': '@@ -119,6 +119,9 @@ func (api *PrivateDebugAPI) TraceChain(ctx context.Context, start, end rpc.Block\\n \\tif to == nil {\\n \\t\\treturn nil, fmt.Errorf(\"end block #%d not found\", end)\\n \\t}\\n+\\tif from.Number().Cmp(to.Number()) >= 0 {\\n+\\t\\treturn nil, fmt.Errorf(\"end block (#%d) needs to come after start block (#%d)\", end, start)\\n+\\t}\\n \\treturn api.traceChain(ctx, from, to, config)\\n }'}}",
            "message_norm":"eth: ensure from<to when tracing chain (credits chen nan via bugbounty)",
            "language":"en",
            "entities":"[('ensure', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['eth\/api_tracer.go'])",
            "num_files":1.0,
            "patch_content":"From 106d196ec4a6451efedc60ab15957f231fa85639 Mon Sep 17 00:00:00 2001\nFrom: Martin Holst Swende <martin@swende.se>\nDate: Tue, 21 Aug 2018 09:48:53 +0200\nSubject: [PATCH] eth: ensure from<to when tracing chain (credits Chen Nan via\n bugbounty)\n\n---\n eth\/api_tracer.go | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/eth\/api_tracer.go b\/eth\/api_tracer.go\nindex 722e2a6e329c..704a6cdbaa30 100644\n--- a\/eth\/api_tracer.go\n+++ b\/eth\/api_tracer.go\n@@ -119,6 +119,9 @@ func (api *PrivateDebugAPI) TraceChain(ctx context.Context, start, end rpc.Block\n \tif to == nil {\n \t\treturn nil, fmt.Errorf(\"end block #%d not found\", end)\n \t}\n+\tif from.Number().Cmp(to.Number()) >= 0 {\n+\t\treturn nil, fmt.Errorf(\"end block (#%d) needs to come after start block (#%d)\", end, start)\n+\t}\n \treturn api.traceChain(ctx, from, to, config)\n }"
        }
    ]
}