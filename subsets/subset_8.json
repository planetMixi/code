{
    "schema":{
        "fields":[
            {
                "name":"index",
                "type":"integer"
            },
            {
                "name":"vuln_id",
                "type":"string"
            },
            {
                "name":"cwe_id",
                "type":"string"
            },
            {
                "name":"score",
                "type":"number"
            },
            {
                "name":"chain",
                "type":"string"
            },
            {
                "name":"dataset",
                "type":"string"
            },
            {
                "name":"summary",
                "type":"string"
            },
            {
                "name":"published_date",
                "type":"string"
            },
            {
                "name":"chain_len",
                "type":"integer"
            },
            {
                "name":"project",
                "type":"string"
            },
            {
                "name":"commit_href",
                "type":"string"
            },
            {
                "name":"commit_sha",
                "type":"string"
            },
            {
                "name":"patch",
                "type":"string"
            },
            {
                "name":"chain_ord",
                "type":"string"
            },
            {
                "name":"before_first_fix_commit",
                "type":"string"
            },
            {
                "name":"last_fix_commit",
                "type":"string"
            },
            {
                "name":"chain_ord_pos",
                "type":"number"
            },
            {
                "name":"commit_datetime",
                "type":"string"
            },
            {
                "name":"message",
                "type":"string"
            },
            {
                "name":"author",
                "type":"string"
            },
            {
                "name":"comments",
                "type":"string"
            },
            {
                "name":"stats",
                "type":"string"
            },
            {
                "name":"files",
                "type":"string"
            },
            {
                "name":"message_norm",
                "type":"string"
            },
            {
                "name":"language",
                "type":"string"
            },
            {
                "name":"entities",
                "type":"string"
            },
            {
                "name":"classification_level_1",
                "type":"string"
            },
            {
                "name":"classification_level_2",
                "type":"string"
            },
            {
                "name":"list_files",
                "type":"string"
            },
            {
                "name":"num_files",
                "type":"number"
            },
            {
                "name":"patch_content",
                "type":"string"
            }
        ],
        "primaryKey":[
            "index"
        ],
        "pandas_version":"1.4.0"
    },
    "data":[
        {
            "index":807,
            "vuln_id":"GHSA-5gjh-5j4f-cpwv",
            "cwe_id":"{'CWE-434', 'CWE-20'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/gogs\/gogs\/commit\/0fef3c9082269e9a4e817274942a5d7c50617284'}",
            "dataset":"osv",
            "summary":"Unrestricted Upload of File with Dangerous Type in Gogs ### Impact\n\nThe malicious user is able to upload a crafted `config` file into repository's `.git` directory with to gain SSH access to the server. All installations with [repository upload enabled (default)](https:\/\/github.com\/gogs\/gogs\/blob\/f36eeedbf89328ee70cc3a2e239f6314f9021f58\/conf\/app.ini#L127-L129) are affected.\n\n### Patches\n\nRepository file uploads are prohibited to its `.git` directory. Users should upgrade to 0.12.6 or the latest 0.13.0+dev.\n\n### Workarounds\n\n[Disable repository files upload](https:\/\/github.com\/gogs\/gogs\/blob\/f36eeedbf89328ee70cc3a2e239f6314f9021f58\/conf\/app.ini#L128-L129).\n\n### References\n\nhttps:\/\/huntr.dev\/bounties\/b4928cfe-4110-462f-a180-6d5673797902\/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on #6833.",
            "published_date":"2022-03-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/gogs\/gogs",
            "commit_href":"https:\/\/github.com\/gogs\/gogs\/commit\/0fef3c9082269e9a4e817274942a5d7c50617284",
            "commit_sha":"0fef3c9082269e9a4e817274942a5d7c50617284",
            "patch":"SINGLE",
            "chain_ord":"['0fef3c9082269e9a4e817274942a5d7c50617284']",
            "before_first_fix_commit":"{'5aca56d2ddafad347dd670f4004ebf367c2c84ef'}",
            "last_fix_commit":"0fef3c9082269e9a4e817274942a5d7c50617284",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/13\/2022, 14:18:56",
            "message":"repo_editor: check upload `TreePath` and file name (#6838)",
            "author":"Joe Chen",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 4, 'total': 17}",
            "files":"{'internal\/db\/repo_editor.go': {'additions': 13, 'deletions': 4, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gogs\/gogs\/raw\/0fef3c9082269e9a4e817274942a5d7c50617284\/internal%2Fdb%2Frepo_editor.go', 'patch': '@@ -16,16 +16,18 @@ import (\\n \\t\"strings\"\\n \\t\"time\"\\n \\n+\\t\"github.com\/pkg\/errors\"\\n \\tgouuid \"github.com\/satori\/go.uuid\"\\n \\t\"github.com\/unknwon\/com\"\\n \\n \\t\"github.com\/gogs\/git-module\"\\n \\n \\t\"gogs.io\/gogs\/internal\/conf\"\\n \\t\"gogs.io\/gogs\/internal\/cryptoutil\"\\n-\\t\"gogs.io\/gogs\/internal\/db\/errors\"\\n+\\tdberrors \"gogs.io\/gogs\/internal\/db\/errors\"\\n \\t\"gogs.io\/gogs\/internal\/gitutil\"\\n \\t\"gogs.io\/gogs\/internal\/osutil\"\\n+\\t\"gogs.io\/gogs\/internal\/pathutil\"\\n \\t\"gogs.io\/gogs\/internal\/process\"\\n \\t\"gogs.io\/gogs\/internal\/tool\"\\n )\\n@@ -134,7 +136,7 @@ func (repo *Repository) UpdateRepoFile(doer *User, opts UpdateRepoFileOptions) (\\n \\tif opts.OldBranch != opts.NewBranch {\\n \\t\\t\/\/ Directly return error if new branch already exists in the server\\n \\t\\tif git.RepoHasBranch(repoPath, opts.NewBranch) {\\n-\\t\\t\\treturn errors.BranchAlreadyExists{Name: opts.NewBranch}\\n+\\t\\t\\treturn dberrors.BranchAlreadyExists{Name: opts.NewBranch}\\n \\t\\t}\\n \\n \\t\\t\/\/ Otherwise, delete branch from local copy in case out of sync\\n@@ -449,11 +451,16 @@ func isRepositoryGitPath(path string) bool {\\n \\treturn strings.HasSuffix(path, \".git\") || strings.Contains(path, \".git\"+string(os.PathSeparator))\\n }\\n \\n-func (repo *Repository) UploadRepoFiles(doer *User, opts UploadRepoFileOptions) (err error) {\\n+func (repo *Repository) UploadRepoFiles(doer *User, opts UploadRepoFileOptions) error {\\n \\tif len(opts.Files) == 0 {\\n \\t\\treturn nil\\n \\t}\\n \\n+\\t\/\/ Prevent uploading files into the \".git\" directory\\n+\\tif isRepositoryGitPath(opts.TreePath) {\\n+\\t\\treturn errors.Errorf(\"bad tree path %q\", opts.TreePath)\\n+\\t}\\n+\\n \\tuploads, err := GetUploadsByUUIDs(opts.Files)\\n \\tif err != nil {\\n \\t\\treturn fmt.Errorf(\"get uploads by UUIDs[%v]: %v\", opts.Files, err)\\n@@ -487,7 +494,9 @@ func (repo *Repository) UploadRepoFiles(doer *User, opts UploadRepoFileOptions)\\n \\t\\t\\tcontinue\\n \\t\\t}\\n \\n-\\t\\t\/\/ Prevent copying files into .git directory, see https:\/\/gogs.io\/gogs\/issues\/5558.\\n+\\t\\tupload.Name = pathutil.Clean(upload.Name)\\n+\\n+\\t\\t\/\/ Prevent uploading files into the \".git\" directory\\n \\t\\tif isRepositoryGitPath(upload.Name) {\\n \\t\\t\\tcontinue\\n \\t\\t}'}}",
            "message_norm":"repo_editor: check upload `treepath` and file name (#6838)",
            "language":"en",
            "entities":"[('#6838', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['internal\/db\/repo_editor.go'])",
            "num_files":1.0,
            "patch_content":"From 0fef3c9082269e9a4e817274942a5d7c50617284 Mon Sep 17 00:00:00 2001\nFrom: Joe Chen <jc@unknwon.io>\nDate: Sun, 13 Mar 2022 22:18:56 +0800\nSubject: [PATCH] repo_editor: check upload `TreePath` and file name (#6838)\n\n---\n internal\/db\/repo_editor.go | 17 +++++++++++++----\n 1 file changed, 13 insertions(+), 4 deletions(-)\n\ndiff --git a\/internal\/db\/repo_editor.go b\/internal\/db\/repo_editor.go\nindex 652d6944b7e..99f982abcb1 100644\n--- a\/internal\/db\/repo_editor.go\n+++ b\/internal\/db\/repo_editor.go\n@@ -16,6 +16,7 @@ import (\n \t\"strings\"\n \t\"time\"\n \n+\t\"github.com\/pkg\/errors\"\n \tgouuid \"github.com\/satori\/go.uuid\"\n \t\"github.com\/unknwon\/com\"\n \n@@ -23,9 +24,10 @@ import (\n \n \t\"gogs.io\/gogs\/internal\/conf\"\n \t\"gogs.io\/gogs\/internal\/cryptoutil\"\n-\t\"gogs.io\/gogs\/internal\/db\/errors\"\n+\tdberrors \"gogs.io\/gogs\/internal\/db\/errors\"\n \t\"gogs.io\/gogs\/internal\/gitutil\"\n \t\"gogs.io\/gogs\/internal\/osutil\"\n+\t\"gogs.io\/gogs\/internal\/pathutil\"\n \t\"gogs.io\/gogs\/internal\/process\"\n \t\"gogs.io\/gogs\/internal\/tool\"\n )\n@@ -134,7 +136,7 @@ func (repo *Repository) UpdateRepoFile(doer *User, opts UpdateRepoFileOptions) (\n \tif opts.OldBranch != opts.NewBranch {\n \t\t\/\/ Directly return error if new branch already exists in the server\n \t\tif git.RepoHasBranch(repoPath, opts.NewBranch) {\n-\t\t\treturn errors.BranchAlreadyExists{Name: opts.NewBranch}\n+\t\t\treturn dberrors.BranchAlreadyExists{Name: opts.NewBranch}\n \t\t}\n \n \t\t\/\/ Otherwise, delete branch from local copy in case out of sync\n@@ -449,11 +451,16 @@ func isRepositoryGitPath(path string) bool {\n \treturn strings.HasSuffix(path, \".git\") || strings.Contains(path, \".git\"+string(os.PathSeparator))\n }\n \n-func (repo *Repository) UploadRepoFiles(doer *User, opts UploadRepoFileOptions) (err error) {\n+func (repo *Repository) UploadRepoFiles(doer *User, opts UploadRepoFileOptions) error {\n \tif len(opts.Files) == 0 {\n \t\treturn nil\n \t}\n \n+\t\/\/ Prevent uploading files into the \".git\" directory\n+\tif isRepositoryGitPath(opts.TreePath) {\n+\t\treturn errors.Errorf(\"bad tree path %q\", opts.TreePath)\n+\t}\n+\n \tuploads, err := GetUploadsByUUIDs(opts.Files)\n \tif err != nil {\n \t\treturn fmt.Errorf(\"get uploads by UUIDs[%v]: %v\", opts.Files, err)\n@@ -487,7 +494,9 @@ func (repo *Repository) UploadRepoFiles(doer *User, opts UploadRepoFileOptions)\n \t\t\tcontinue\n \t\t}\n \n-\t\t\/\/ Prevent copying files into .git directory, see https:\/\/gogs.io\/gogs\/issues\/5558.\n+\t\tupload.Name = pathutil.Clean(upload.Name)\n+\n+\t\t\/\/ Prevent uploading files into the \".git\" directory\n \t\tif isRepositoryGitPath(upload.Name) {\n \t\t\tcontinue\n \t\t}"
        },
        {
            "index":55,
            "vuln_id":"GHSA-mw7r-3g6w-85qg",
            "cwe_id":"{'CWE-787'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/6b1250b6ffea7006226dd937e52cf5b353fcfc15', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/242c59ea40c0428e1ced7366bf2c28bfbdda1999'}",
            "dataset":"osv",
            "summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-1139, CVE-2019-1140, CVE-2019-1141, CVE-2019-1195, CVE-2019-1196, CVE-2019-1197.",
            "published_date":"2021-03-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/chakra-core\/ChakraCore",
            "commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/242c59ea40c0428e1ced7366bf2c28bfbdda1999",
            "commit_sha":"242c59ea40c0428e1ced7366bf2c28bfbdda1999",
            "patch":"MULTI",
            "chain_ord":"['242c59ea40c0428e1ced7366bf2c28bfbdda1999', '6b1250b6ffea7006226dd937e52cf5b353fcfc15']",
            "before_first_fix_commit":"{'75162b7f2d8ac2b37d17564e9c979ba1bae707e8', '450a349fda1b153d758a9e01698b977e60870e4c'}",
            "last_fix_commit":"6b1250b6ffea7006226dd937e52cf5b353fcfc15",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/02\/2019, 20:12:05",
            "message":"[CVE-2019-1131] Chakra Type confusion",
            "author":"Taylor Woll",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 4, 'total': 5}",
            "files":"{'lib\/Parser\/Parse.cpp': {'additions': 1, 'deletions': 4, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/242c59ea40c0428e1ced7366bf2c28bfbdda1999\/lib%2FParser%2FParse.cpp', 'patch': '@@ -4664,10 +4664,7 @@ ParseNodePtr Parser::ParseMemberList(LPCOLESTR pNameHint, uint32* pNameHintLengt\\n                     }\\n                 }\\n \\n-                if (buildAST)\\n-                {\\n-                    CheckArgumentsUse(pidHint, GetCurrentFunctionNode());\\n-                }\\n+                CheckArgumentsUse(pidHint, GetCurrentFunctionNode());\\n \\n                 bool couldBeObjectPattern = !isObjectPattern && m_token.tk == tkAsg;\\n                 \/\/ Saving the current state as we may change the isObjectPattern down below.'}}",
            "message_norm":"[cve-2019-1131] chakra type confusion",
            "language":"en",
            "entities":"[('cve-2019-1131', 'VULNID', 'CVE'), ('type confusion', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/Parser\/Parse.cpp'])",
            "num_files":1.0,
            "patch_content":"From 242c59ea40c0428e1ced7366bf2c28bfbdda1999 Mon Sep 17 00:00:00 2001\nFrom: Taylor Woll <tawoll@ntdev.microsoft.com>\nDate: Tue, 2 Jul 2019 13:12:05 -0700\nSubject: [PATCH] [CVE-2019-1131] Chakra Type confusion\n\n---\n lib\/Parser\/Parse.cpp | 5 +----\n 1 file changed, 1 insertion(+), 4 deletions(-)\n\ndiff --git a\/lib\/Parser\/Parse.cpp b\/lib\/Parser\/Parse.cpp\nindex b49d0feec31..518457b8e6d 100644\n--- a\/lib\/Parser\/Parse.cpp\n+++ b\/lib\/Parser\/Parse.cpp\n@@ -4664,10 +4664,7 @@ ParseNodePtr Parser::ParseMemberList(LPCOLESTR pNameHint, uint32* pNameHintLengt\n                     }\n                 }\n \n-                if (buildAST)\n-                {\n-                    CheckArgumentsUse(pidHint, GetCurrentFunctionNode());\n-                }\n+                CheckArgumentsUse(pidHint, GetCurrentFunctionNode());\n \n                 bool couldBeObjectPattern = !isObjectPattern && m_token.tk == tkAsg;\n                 \/\/ Saving the current state as we may change the isObjectPattern down below."
        },
        {
            "index":105,
            "vuln_id":"GHSA-r6pg-pjwc-j585",
            "cwe_id":"{'CWE-476'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/faa76f39014ed3b5e2c158593b1335522e573c7f'}",
            "dataset":"osv",
            "summary":"Null pointer dereference in `SparseFillEmptyRows` ### Impact\nAn attacker can trigger a null pointer dereference in the implementation of `tf.raw_ops.SparseFillEmptyRows`:\n\n```python\nimport tensorflow as tf\n\nindices = tf.constant([], shape=[0, 0], dtype=tf.int64)\nvalues = tf.constant([], shape=[0], dtype=tf.int64)\ndense_shape = tf.constant([], shape=[0], dtype=tf.int64)\ndefault_value = 0\n    \ntf.raw_ops.SparseFillEmptyRows(\n    indices=indices, values=values, dense_shape=dense_shape,\n    default_value=default_value)\n```\n\nThis is because of missing [validation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/fdc82089d206e281c628a93771336bf87863d5e8\/tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc#L230-L231) that was covered under a `TODO`. If the `dense_shape` tensor is empty, then `dense_shape_t.vec<>()` would cause a null pointer dereference in the implementation of the op:\n\n```cc\ntemplate <typename T, typename Tindex>\nstruct SparseFillEmptyRows<CPUDevice, T, Tindex> {\n  Status operator()(OpKernelContext* context, const Tensor& default_value_t,\n                    const Tensor& indices_t, const Tensor& values_t,\n                    const Tensor& dense_shape_t,\n                    typename AsyncOpKernel::DoneCallback done) {\n    ...\n    const auto dense_shape = dense_shape_t.vec<Tindex>();\n    ... \n  }\n}\n``` \n\n### Patches\nWe have patched the issue in GitHub commit [faa76f39014ed3b5e2c158593b1335522e573c7f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/faa76f39014ed3b5e2c158593b1335522e573c7f).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/faa76f39014ed3b5e2c158593b1335522e573c7f",
            "commit_sha":"faa76f39014ed3b5e2c158593b1335522e573c7f",
            "patch":"SINGLE",
            "chain_ord":"['faa76f39014ed3b5e2c158593b1335522e573c7f']",
            "before_first_fix_commit":"{'fdc82089d206e281c628a93771336bf87863d5e8'}",
            "last_fix_commit":"faa76f39014ed3b5e2c158593b1335522e573c7f",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/04\/2021, 22:35:39",
            "message":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseFillEmptyRows`.\n\nPiperOrigin-RevId: 372009178\nChange-Id: Ia1a9e9691ecaa072f32fb39a0887b2aabd399210",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 1, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/faa76f39014ed3b5e2c158593b1335522e573c7f\/tensorflow%2Fcore%2Fkernels%2Fsparse_fill_empty_rows_op.cc', 'patch': '@@ -228,7 +228,10 @@ void SparseFillEmptyRowsOpImpl(OpKernelContext* context,\\n                               default_value_t.shape().DebugString()),\\n       done);\\n   \/\/ TODO(ebrevdo): add shape checks between values, indices,\\n-  \/\/ dense_shape.  Also add check that dense rank > 0.\\n+  \/\/ Also add check that dense rank > 0.\\n+  OP_REQUIRES_ASYNC(context, dense_shape_t.NumElements() != 0,\\n+                    errors::InvalidArgument(\"Dense shape cannot be empty.\"),\\n+                    done);\\n \\n   using FunctorType = functor::SparseFillEmptyRows<Device, T, Tindex>;\\n   OP_REQUIRES_OK_ASYNC(context,'}}",
            "message_norm":"fix heap-buffer-overflow issue with `tf.raw_ops.sparsefillemptyrows`.\n\npiperorigin-revid: 372009178\nchange-id: ia1a9e9691ecaa072f32fb39a0887b2aabd399210",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('372009178', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc'])",
            "num_files":1.0,
            "patch_content":"From faa76f39014ed3b5e2c158593b1335522e573c7f Mon Sep 17 00:00:00 2001\nFrom: Amit Patankar <amitpatankar@google.com>\nDate: Tue, 4 May 2021 15:35:39 -0700\nSubject: [PATCH] Fix heap-buffer-overflow issue with\n `tf.raw_ops.SparseFillEmptyRows`.\n\nPiperOrigin-RevId: 372009178\nChange-Id: Ia1a9e9691ecaa072f32fb39a0887b2aabd399210\n---\n tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc | 5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ndiff --git a\/tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc b\/tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc\nindex a2b8b074aa1f19..c1ed592b965e24 100644\n--- a\/tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc\n+++ b\/tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc\n@@ -228,7 +228,10 @@ void SparseFillEmptyRowsOpImpl(OpKernelContext* context,\n                               default_value_t.shape().DebugString()),\n       done);\n   \/\/ TODO(ebrevdo): add shape checks between values, indices,\n-  \/\/ dense_shape.  Also add check that dense rank > 0.\n+  \/\/ Also add check that dense rank > 0.\n+  OP_REQUIRES_ASYNC(context, dense_shape_t.NumElements() != 0,\n+                    errors::InvalidArgument(\"Dense shape cannot be empty.\"),\n+                    done);\n \n   using FunctorType = functor::SparseFillEmptyRows<Device, T, Tindex>;\n   OP_REQUIRES_OK_ASYNC(context,"
        },
        {
            "index":619,
            "vuln_id":"GHSA-ww4x-rwq6-qpgf",
            "cwe_id":"{'CWE-352'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/rubysec\/ruby-advisory-db\/commit\/aef9f623c0be838234d53baf18977564804da397'}",
            "dataset":"osv",
            "summary":"Cross-site Request Forgery in OmniAuth The request phase of the OmniAuth Ruby gem (1.9.1 and earlier) is vulnerable to Cross-Site Request Forgery when used as part of the Ruby on Rails framework, allowing accounts to be connected without user intent, user interaction, or feedback to the user. This permits a secondary account to be able to sign into the web application as the primary account.\n\nAs of v2 OmniAuth no longer has the vulnerable configuration by default, but it is still possible to configure OmniAuth in such a way that the web application becomes vulnerable to Cross-Site Request Forgery. There is a recommended remediation described [here](https:\/\/github.com\/omniauth\/omniauth\/wiki\/Resolving-CVE-2015-9284).",
            "published_date":"2019-05-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/rubysec\/ruby-advisory-db",
            "commit_href":"https:\/\/github.com\/rubysec\/ruby-advisory-db\/commit\/aef9f623c0be838234d53baf18977564804da397",
            "commit_sha":"aef9f623c0be838234d53baf18977564804da397",
            "patch":"SINGLE",
            "chain_ord":"['aef9f623c0be838234d53baf18977564804da397']",
            "before_first_fix_commit":"{'f05618a2eac8817b13e31f15940fe32c5d4ff6b6'}",
            "last_fix_commit":"aef9f623c0be838234d53baf18977564804da397",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/11\/2021, 22:02:34",
            "message":"Add v2.0.0 as a patched version for CVE-2015-9284\n\nhttps:\/\/github.com\/omniauth\/omniauth\/releases\/tag\/v2.0.0",
            "author":"Reed Loden",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'gems\/omniauth\/CVE-2015-9284.yml': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rubysec\/ruby-advisory-db\/raw\/aef9f623c0be838234d53baf18977564804da397\/gems%2Fomniauth%2FCVE-2015-9284.yml', 'patch': '@@ -20,6 +20,9 @@ description: |\\n cvss_v2: 6.8\\n cvss_v3: 8.8\\n \\n+patched_versions:\\n+  - \">= 2.0.0\"\\n+\\n related:\\n   url:\\n     - https:\/\/github.com\/omniauth\/omniauth\/pull\/809'}}",
            "message_norm":"add v2.0.0 as a patched version for cve-2015-9284\n\nhttps:\/\/github.com\/omniauth\/omniauth\/releases\/tag\/v2.0.0",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('v2.0.0', 'VERSION', ''), ('patched', 'ACTION', ''), ('cve-2015-9284', 'VULNID', 'CVE'), ('https:\/\/github.com\/omniauth\/omniauth\/releases\/tag\/v2.0.0', 'URL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['gems\/omniauth\/CVE-2015-9284.yml'])",
            "num_files":1.0,
            "patch_content":"From aef9f623c0be838234d53baf18977564804da397 Mon Sep 17 00:00:00 2001\nFrom: Reed Loden <reed@hackerone.com>\nDate: Mon, 11 Jan 2021 14:02:34 -0800\nSubject: [PATCH] Add v2.0.0 as a patched version for CVE-2015-9284\n\nhttps:\/\/github.com\/omniauth\/omniauth\/releases\/tag\/v2.0.0\n---\n gems\/omniauth\/CVE-2015-9284.yml | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/gems\/omniauth\/CVE-2015-9284.yml b\/gems\/omniauth\/CVE-2015-9284.yml\nindex 2bf92c0dd2..caffb46e3d 100644\n--- a\/gems\/omniauth\/CVE-2015-9284.yml\n+++ b\/gems\/omniauth\/CVE-2015-9284.yml\n@@ -20,6 +20,9 @@ description: |\n cvss_v2: 6.8\n cvss_v3: 8.8\n \n+patched_versions:\n+  - \">= 2.0.0\"\n+\n related:\n   url:\n     - https:\/\/github.com\/omniauth\/omniauth\/pull\/809"
        },
        {
            "index":134,
            "vuln_id":"GHSA-hhr9-7xvh-8xgc",
            "cwe_id":"{'CWE-918'}",
            "score":7.7,
            "chain":"{'https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/abc9599ee7aded466ca216741dcaea533c908111'}",
            "dataset":"osv",
            "summary":"Server side request forgery in LiveHelperChat SSRF filter bypass port 80, 433 in LiveHelperChat prior to v3.67. An attacker could make the application perform arbitrary requests, bypass CVE-2022-1191",
            "published_date":"2022-04-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/livehelperchat\/livehelperchat",
            "commit_href":"https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/abc9599ee7aded466ca216741dcaea533c908111",
            "commit_sha":"abc9599ee7aded466ca216741dcaea533c908111",
            "patch":"SINGLE",
            "chain_ord":"['abc9599ee7aded466ca216741dcaea533c908111']",
            "before_first_fix_commit":"{'a583f4c60a98779938766e242991e637c0d938f0'}",
            "last_fix_commit":"abc9599ee7aded466ca216741dcaea533c908111",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/03\/2022, 19:37:19",
            "message":"fix #1752",
            "author":"Remigijus Kiminas",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 2, 'total': 10}",
            "files":"{'lhc_web\/modules\/lhcobrowse\/proxycss.php': {'additions': 8, 'deletions': 2, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/LiveHelperChat\/livehelperchat\/raw\/abc9599ee7aded466ca216741dcaea533c908111\/lhc_web%2Fmodules%2Flhcobrowse%2Fproxycss.php', 'patch': \"@@ -15,7 +15,13 @@\\n     $browse = erLhcoreClassCoBrowse::getBrowseInstance($chat);\\r\\n }\\r\\n \\r\\n-$url = parse_url($_GET['base']);\\r\\n+$base = trim($_GET['base']);\\r\\n+\\r\\n+if (!filter_var($base, FILTER_VALIDATE_URL)) {\\r\\n+    exit;\\r\\n+}\\r\\n+\\r\\n+$url = parse_url($base);\\r\\n \\r\\n \/\/ Only http\/https supported\\r\\n if (!in_array($url['scheme'],['http','https']) || (isset($url['port']) && !in_array($url['port'],[80,443]))) {\\r\\n@@ -42,7 +48,7 @@\\n         }\\r\\n     } else {\\r\\n \\r\\n-        if (!in_array($urlCSS['scheme'],['http','https']) || (isset($urlCSS['port']) && !in_array($urlCSS['port'],[80,443]))) {\\r\\n+        if (!filter_var($_GET['css'], FILTER_VALIDATE_URL) || !in_array($urlCSS['scheme'],['http','https']) || (isset($urlCSS['port']) && !in_array($urlCSS['port'],[80,443]))) {\\r\\n             exit;\\r\\n         }\"}}",
            "message_norm":"fix #1752",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('#1752', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lhc_web\/modules\/lhcobrowse\/proxycss.php'])",
            "num_files":1.0,
            "patch_content":"From abc9599ee7aded466ca216741dcaea533c908111 Mon Sep 17 00:00:00 2001\nFrom: Remigijus Kiminas <remdex@gmail.com>\nDate: Sun, 3 Apr 2022 15:37:19 -0400\nSubject: [PATCH] fix #1752\n\n---\n lhc_web\/modules\/lhcobrowse\/proxycss.php | 10 ++++++++--\n 1 file changed, 8 insertions(+), 2 deletions(-)\n\ndiff --git a\/lhc_web\/modules\/lhcobrowse\/proxycss.php b\/lhc_web\/modules\/lhcobrowse\/proxycss.php\nindex 7838aa53fd..89097ca00c 100644\n--- a\/lhc_web\/modules\/lhcobrowse\/proxycss.php\n+++ b\/lhc_web\/modules\/lhcobrowse\/proxycss.php\n@@ -15,7 +15,13 @@\n     $browse = erLhcoreClassCoBrowse::getBrowseInstance($chat);\r\n }\r\n \r\n-$url = parse_url($_GET['base']);\r\n+$base = trim($_GET['base']);\r\n+\r\n+if (!filter_var($base, FILTER_VALIDATE_URL)) {\r\n+    exit;\r\n+}\r\n+\r\n+$url = parse_url($base);\r\n \r\n \/\/ Only http\/https supported\r\n if (!in_array($url['scheme'],['http','https']) || (isset($url['port']) && !in_array($url['port'],[80,443]))) {\r\n@@ -42,7 +48,7 @@\n         }\r\n     } else {\r\n \r\n-        if (!in_array($urlCSS['scheme'],['http','https']) || (isset($urlCSS['port']) && !in_array($urlCSS['port'],[80,443]))) {\r\n+        if (!filter_var($_GET['css'], FILTER_VALIDATE_URL) || !in_array($urlCSS['scheme'],['http','https']) || (isset($urlCSS['port']) && !in_array($urlCSS['port'],[80,443]))) {\r\n             exit;\r\n         }"
        },
        {
            "index":116,
            "vuln_id":"GHSA-v5rv-hpxg-8x49",
            "cwe_id":"{'CWE-347'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/ServiceStack\/ServiceStack\/commit\/540d4060e877a03ae95343c1a8560a26768585ee'}",
            "dataset":"osv",
            "summary":"Signature validation bypass in ServiceStack ServiceStack before 5.9.2 mishandles JWT signature verification unless an application has a custom ValidateToken function that establishes a valid minimum length for a signature.",
            "published_date":"2021-01-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/ServiceStack\/ServiceStack",
            "commit_href":"https:\/\/github.com\/ServiceStack\/ServiceStack\/commit\/540d4060e877a03ae95343c1a8560a26768585ee",
            "commit_sha":"540d4060e877a03ae95343c1a8560a26768585ee",
            "patch":"SINGLE",
            "chain_ord":"['540d4060e877a03ae95343c1a8560a26768585ee']",
            "before_first_fix_commit":"{'794f1363f51f81fbead1dc8eb4dbc5076b2236a3'}",
            "last_fix_commit":"540d4060e877a03ae95343c1a8560a26768585ee",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/04\/2020, 06:16:17",
            "message":"Update EquivalentTo to test length & null for equality as well",
            "author":"Demis Bellot",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'src\/ServiceStack.Common\/EnumerableExtensions.cs': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ServiceStack\/ServiceStack\/raw\/540d4060e877a03ae95343c1a8560a26768585ee\/src%2FServiceStack.Common%2FEnumerableExtensions.cs', 'patch': '@@ -234,6 +234,12 @@ public static T FirstNonDefault<T>(this IEnumerable<T> values)\\n         [MethodImpl(MethodImplOptions.AggressiveInlining)]\\n         public static bool EquivalentTo(this byte[] bytes, byte[] other)\\n         {\\n+            if (bytes == null || other == null)\\n+                return bytes == other;\\n+\\n+            if (bytes.Length != other.Length)\\n+                return false;\\n+\\n             var compare = 0;\\n             for (var i = 0; i < other.Length; i++)\\n                 compare |= other[i] ^ bytes[i];'}}",
            "message_norm":"update equivalentto to test length & null for equality as well",
            "language":"en",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/ServiceStack.Common\/EnumerableExtensions.cs'])",
            "num_files":1.0,
            "patch_content":"From 540d4060e877a03ae95343c1a8560a26768585ee Mon Sep 17 00:00:00 2001\nFrom: Demis Bellot <demis.bellot@gmail.com>\nDate: Tue, 4 Aug 2020 14:16:17 +0800\nSubject: [PATCH] Update EquivalentTo to test length & null for equality as\n well\n\n---\n src\/ServiceStack.Common\/EnumerableExtensions.cs | 6 ++++++\n 1 file changed, 6 insertions(+)\n\ndiff --git a\/src\/ServiceStack.Common\/EnumerableExtensions.cs b\/src\/ServiceStack.Common\/EnumerableExtensions.cs\nindex cc791c31b6a..475351e18d0 100644\n--- a\/src\/ServiceStack.Common\/EnumerableExtensions.cs\n+++ b\/src\/ServiceStack.Common\/EnumerableExtensions.cs\n@@ -234,6 +234,12 @@ public static T FirstNonDefault<T>(this IEnumerable<T> values)\n         [MethodImpl(MethodImplOptions.AggressiveInlining)]\n         public static bool EquivalentTo(this byte[] bytes, byte[] other)\n         {\n+            if (bytes == null || other == null)\n+                return bytes == other;\n+\n+            if (bytes.Length != other.Length)\n+                return false;\n+\n             var compare = 0;\n             for (var i = 0; i < other.Length; i++)\n                 compare |= other[i] ^ bytes[i];"
        },
        {
            "index":706,
            "vuln_id":"GHSA-8462-q7x7-g2x4",
            "cwe_id":"{'CWE-400', 'CWE-185'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/mongodb\/js-bson\/commit\/bd61c45157c53a1698ff23770160cf4783e9ea4a'}",
            "dataset":"osv",
            "summary":"High severity vulnerability that affects bson The MongoDB bson JavaScript module (also known as js-bson) versions 0.5.0 to 1.0.x before 1.0.5 is vulnerable to a Regular Expression Denial of Service (ReDoS) in lib\/bson\/decimal128.js. The flaw is triggered when the Decimal128.fromString() function is called to parse a long untrusted string.",
            "published_date":"2018-09-17",
            "chain_len":1,
            "project":"https:\/\/github.com\/mongodb\/js-bson",
            "commit_href":"https:\/\/github.com\/mongodb\/js-bson\/commit\/bd61c45157c53a1698ff23770160cf4783e9ea4a",
            "commit_sha":"bd61c45157c53a1698ff23770160cf4783e9ea4a",
            "patch":"SINGLE",
            "chain_ord":"['bd61c45157c53a1698ff23770160cf4783e9ea4a']",
            "before_first_fix_commit":"{'e403bd94faadee80cd82bae888e28b8b4d6d1e8d'}",
            "last_fix_commit":"bd61c45157c53a1698ff23770160cf4783e9ea4a",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/26\/2018, 20:09:27",
            "message":"fix(decimal128): add basic guard against REDOS attacks\n\nThis is a naive approach to reducing the efficacy of a REDOS attack\nagainst this module. A refactor of the regular expression or a\ncustom parser substitute would be ideal, however this solution\nsuffices as a stopgap until such work is completed.\n\nMany thanks to James Davis who graciously alterted us to the\nattack",
            "author":"Matt Broadstone",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 0, 'total': 7}",
            "files":"{'lib\/bson\/decimal128.js': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mongodb\/js-bson\/raw\/bd61c45157c53a1698ff23770160cf4783e9ea4a\/lib%2Fbson%2Fdecimal128.js', 'patch': \"@@ -235,6 +235,13 @@ Decimal128.fromString = function(string) {\\n   \/\/ Trim the string\\n   string = string.trim();\\n \\n+  \/\/ Naively prevent against REDOS attacks.\\n+  \/\/ TODO: implementing a custom parsing for this, or refactoring the regex would yield\\n+  \/\/       further gains.\\n+  if (string.length >= 7000) {\\n+    throw new Error('' + string + ' not a valid Decimal128 string');\\n+  }\\n+\\n   \/\/ Results\\n   var stringMatch = string.match(PARSE_STRING_REGEXP);\\n   var infMatch = string.match(PARSE_INF_REGEXP);\"}}",
            "message_norm":"fix(decimal128): add basic guard against redos attacks\n\nthis is a naive approach to reducing the efficacy of a redos attack\nagainst this module. a refactor of the regular expression or a\ncustom parser substitute would be ideal, however this solution\nsuffices as a stopgap until such work is completed.\n\nmany thanks to james davis who graciously alterted us to the\nattack",
            "language":"en",
            "entities":"[('fix(decimal128', 'ACTION', ''), ('add', 'ACTION', ''), ('redos', 'SECWORD', ''), ('attacks', 'FLAW', ''), ('redos', 'SECWORD', ''), ('attack', 'FLAW', ''), ('attack', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/bson\/decimal128.js'])",
            "num_files":1.0,
            "patch_content":"From bd61c45157c53a1698ff23770160cf4783e9ea4a Mon Sep 17 00:00:00 2001\nFrom: Matt Broadstone <mbroadst@gmail.com>\nDate: Mon, 26 Feb 2018 15:09:27 -0500\nSubject: [PATCH] fix(decimal128): add basic guard against REDOS attacks\n\nThis is a naive approach to reducing the efficacy of a REDOS attack\nagainst this module. A refactor of the regular expression or a\ncustom parser substitute would be ideal, however this solution\nsuffices as a stopgap until such work is completed.\n\nMany thanks to James Davis who graciously alterted us to the\nattack\n---\n lib\/bson\/decimal128.js | 7 +++++++\n 1 file changed, 7 insertions(+)\n\ndiff --git a\/lib\/bson\/decimal128.js b\/lib\/bson\/decimal128.js\nindex 6cf24331..1dc2f003 100644\n--- a\/lib\/bson\/decimal128.js\n+++ b\/lib\/bson\/decimal128.js\n@@ -235,6 +235,13 @@ Decimal128.fromString = function(string) {\n   \/\/ Trim the string\n   string = string.trim();\n \n+  \/\/ Naively prevent against REDOS attacks.\n+  \/\/ TODO: implementing a custom parsing for this, or refactoring the regex would yield\n+  \/\/       further gains.\n+  if (string.length >= 7000) {\n+    throw new Error('' + string + ' not a valid Decimal128 string');\n+  }\n+\n   \/\/ Results\n   var stringMatch = string.match(PARSE_STRING_REGEXP);\n   var infMatch = string.match(PARSE_INF_REGEXP);"
        },
        {
            "index":746,
            "vuln_id":"GHSA-f7f4-hqp2-7prc",
            "cwe_id":"{'CWE-20'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/balderdashy\/sails-hook-sockets\/commit\/ff02114eaec090ee51db48435cc32d451662606e', 'https:\/\/github.com\/balderdashy\/sails-hook-sockets\/commit\/0533a4864b1920fd8fbb5287bc0889193c5faf44'}",
            "dataset":"osv",
            "summary":"Improper Input Validation in sails-hook-sockets Sails.js before v1.0.0-46 allows attackers to cause a denial of service with a single request because there is no error handler in sails-hook-sockets to handle an empty pathname in a WebSocket request.",
            "published_date":"2020-07-24",
            "chain_len":2,
            "project":"https:\/\/github.com\/balderdashy\/sails-hook-sockets",
            "commit_href":"https:\/\/github.com\/balderdashy\/sails-hook-sockets\/commit\/0533a4864b1920fd8fbb5287bc0889193c5faf44",
            "commit_sha":"0533a4864b1920fd8fbb5287bc0889193c5faf44",
            "patch":"MULTI",
            "chain_ord":"['ff02114eaec090ee51db48435cc32d451662606e', '0533a4864b1920fd8fbb5287bc0889193c5faf44']",
            "before_first_fix_commit":"{'4f78b7946f7a7ac4c762936d7633298606c1e4a7'}",
            "last_fix_commit":"0533a4864b1920fd8fbb5287bc0889193c5faf44",
            "chain_ord_pos":2.0,
            "commit_datetime":"09\/23\/2018, 21:38:55",
            "message":"Follow up to ff02114eaec090ee51db48435cc32d451662606e to ensure req.path is good and stringy.",
            "author":"Mike McNeil",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 1, 'total': 5}",
            "files":"{'lib\/receive-incoming-sails-io-msg.js': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/balderdashy\/sails-hook-sockets\/raw\/0533a4864b1920fd8fbb5287bc0889193c5faf44\/lib%2Freceive-incoming-sails-io-msg.js', 'patch': \"@@ -106,7 +106,10 @@ module.exports = function ToReceiveIncomingSailsIOMsg(app) {\\n \\n       url     : options.incomingSailsIOMsg.url,\\n \\n-      path    : url.parse(options.incomingSailsIOMsg.url).pathname,\\n+      path    : url.parse(options.incomingSailsIOMsg.url).pathname || '\/',\\n+      \/\/ ^^ Uses || '\/' because otherwise url.parse returns `null`,\\n+      \/\/ which is not a string and thus bad when you try to check\\n+      \/\/ .match() of it.\\n \\n       method  : options.eventName,\"}}",
            "message_norm":"follow up to ff02114eaec090ee51db48435cc32d451662606e to ensure req.path is good and stringy.",
            "language":"en",
            "entities":"[('ff02114eaec090ee51db48435cc32d451662606e', 'SHA', 'generic_sha'), ('ensure', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/receive-incoming-sails-io-msg.js'])",
            "num_files":1.0,
            "patch_content":"From 0533a4864b1920fd8fbb5287bc0889193c5faf44 Mon Sep 17 00:00:00 2001\nFrom: Mike McNeil <git+mikermcneil@sailsjs.com>\nDate: Sun, 23 Sep 2018 16:38:55 -0500\nSubject: [PATCH] Follow up to ff02114eaec090ee51db48435cc32d451662606e to\n ensure req.path is good and stringy.\n\n---\n lib\/receive-incoming-sails-io-msg.js | 5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ndiff --git a\/lib\/receive-incoming-sails-io-msg.js b\/lib\/receive-incoming-sails-io-msg.js\nindex 5be5704..39ebccd 100644\n--- a\/lib\/receive-incoming-sails-io-msg.js\n+++ b\/lib\/receive-incoming-sails-io-msg.js\n@@ -106,7 +106,10 @@ module.exports = function ToReceiveIncomingSailsIOMsg(app) {\n \n       url     : options.incomingSailsIOMsg.url,\n \n-      path    : url.parse(options.incomingSailsIOMsg.url).pathname,\n+      path    : url.parse(options.incomingSailsIOMsg.url).pathname || '\/',\n+      \/\/ ^^ Uses || '\/' because otherwise url.parse returns `null`,\n+      \/\/ which is not a string and thus bad when you try to check\n+      \/\/ .match() of it.\n \n       method  : options.eventName,"
        },
        {
            "index":528,
            "vuln_id":"GHSA-3pcq-34w5-p4g2",
            "cwe_id":"{'CWE-400'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/nicolas-van\/modern-async\/commit\/0010d28de1b15d51db3976080e26357fa7144436'}",
            "dataset":"osv",
            "summary":"forEachSeries and forEachLimit do not limit the number of requests ### Impact\n\nThis is a bug affecting two of the functions in this library: forEachSeries and forEachLimit. They should limit the concurrency of some actions but, in practice, they don't. Any code calling these functions will be written thinking they would limit the concurrency but they won't. This could lead to potential security issues in other projects.\n\n### Patches\n\nThe problem has been patched in 1.0.4.\n\n### Workarounds\n\nThere is no workaround aside from upgrading to 1.0.4.",
            "published_date":"2021-10-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/nicolas-van\/modern-async",
            "commit_href":"https:\/\/github.com\/nicolas-van\/modern-async\/commit\/0010d28de1b15d51db3976080e26357fa7144436",
            "commit_sha":"0010d28de1b15d51db3976080e26357fa7144436",
            "patch":"SINGLE",
            "chain_ord":"['0010d28de1b15d51db3976080e26357fa7144436']",
            "before_first_fix_commit":"{'7aa934294e59bc7359651a852e73bd5785b9b99b'}",
            "last_fix_commit":"0010d28de1b15d51db3976080e26357fa7144436",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/19\/2021, 21:22:02",
            "message":"Fix #5",
            "author":"Nicolas Vanhoren",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/forEachLimit.mjs': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nicolas-van\/modern-async\/raw\/0010d28de1b15d51db3976080e26357fa7144436\/src%2FforEachLimit.mjs', 'patch': \"@@ -35,7 +35,7 @@ import mapLimit from '.\/mapLimit.mjs'\\n  *\/\\n async function forEachLimit (iterable, iteratee, concurrency) {\\n   await mapLimit(iterable, async (v, i, t) => {\\n-    iteratee(v, i, t)\\n+    await iteratee(v, i, t)\\n   }, concurrency)\\n }\"}}",
            "message_norm":"fix #5",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('#5', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/forEachLimit.mjs'])",
            "num_files":1.0,
            "patch_content":"From 0010d28de1b15d51db3976080e26357fa7144436 Mon Sep 17 00:00:00 2001\nFrom: Nicolas Vanhoren <nicolas.vanhoren@gmail.com>\nDate: Tue, 19 Oct 2021 23:22:02 +0200\nSubject: [PATCH] Fix #5\n\n---\n src\/forEachLimit.mjs | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/src\/forEachLimit.mjs b\/src\/forEachLimit.mjs\nindex 08841a7..e6c44fe 100644\n--- a\/src\/forEachLimit.mjs\n+++ b\/src\/forEachLimit.mjs\n@@ -35,7 +35,7 @@ import mapLimit from '.\/mapLimit.mjs'\n  *\/\n async function forEachLimit (iterable, iteratee, concurrency) {\n   await mapLimit(iterable, async (v, i, t) => {\n-    iteratee(v, i, t)\n+    await iteratee(v, i, t)\n   }, concurrency)\n }"
        },
        {
            "index":36,
            "vuln_id":"GHSA-pfj3-56hm-jwq5",
            "cwe_id":"{'CWE-74'}",
            "score":7.9,
            "chain":"{'https:\/\/github.com\/jmrozanec\/cron-utils\/commit\/4cf373f7352f5d95f0bf6512af8af326b31c835e'}",
            "dataset":"osv",
            "summary":"Template injection in cron-utils ### Impact\nA Template Injection was identified in cron-utils enabling attackers to inject arbitrary Java EL expressions, leading to unauthenticated Remote Code Execution (RCE) vulnerability. Versions up to 9.1.2 are susceptible to this vulnerability. Please note, that only projects using the @Cron annotation to validate untrusted Cron expressions are affected.\n\n### Patches\nThe issue was patched and a new version released. Please upgrade to version 9.1.3.\n\n### Workarounds\nThere are no known workarounds up to this moment.\n\n### References\nA description of the issue is provided in [issue 461](https:\/\/github.com\/jmrozanec\/cron-utils\/issues\/461)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [cron-utils Github repository](https:\/\/github.com\/jmrozanec\/cron-utils)",
            "published_date":"2020-11-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/jmrozanec\/cron-utils",
            "commit_href":"https:\/\/github.com\/jmrozanec\/cron-utils\/commit\/4cf373f7352f5d95f0bf6512af8af326b31c835e",
            "commit_sha":"4cf373f7352f5d95f0bf6512af8af326b31c835e",
            "patch":"SINGLE",
            "chain_ord":"['4cf373f7352f5d95f0bf6512af8af326b31c835e']",
            "before_first_fix_commit":"{'864f9f09af58bd48133a1492a09fb7fbc1c5858b'}",
            "last_fix_commit":"4cf373f7352f5d95f0bf6512af8af326b31c835e",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/17\/2020, 13:53:58",
            "message":"Update dependencies to fix security vulnerability.",
            "author":"Joze Rozanec",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 3, 'total': 7}",
            "files":"{'pom.xml': {'additions': 4, 'deletions': 3, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jmrozanec\/cron-utils\/raw\/4cf373f7352f5d95f0bf6512af8af326b31c835e\/pom.xml', 'patch': '@@ -121,11 +121,12 @@\\n             <scope>test<\/scope>\\n         <\/dependency>\\n         <dependency>\\n-            <groupId>org.hibernate<\/groupId>\\n-            <artifactId>hibernate-validator<\/artifactId>\\n+            <groupId>org.apache.bval<\/groupId>\\n+            <artifactId>bval-jsr<\/artifactId>\\n+            <version>1.1.2<\/version>\\n+            <!--The Hibernate dependency is no longer used, due to security vulnerabilities -->\\n             <!-- https:\/\/stackoverflow.com\/questions\/48323244\/java-lang-nosuchmethoderror-javax-validation-bootstrapconfiguration-getclockproExecutionTimeQuartzIntegrationTest -->\\n             <!-- https:\/\/stackoverflow.com\/questions\/24386771\/javax-validation-validationexception-hv000183-unable-to-load-javax-el-express -->\\n-            <version>5.3.6.Final<\/version>\\n             <scope>test<\/scope>\\n         <\/dependency>\\n         <dependency>'}}",
            "message_norm":"update dependencies to fix security vulnerability.",
            "language":"en",
            "entities":"[('update', 'ACTION', ''), ('fix', 'ACTION', ''), ('security', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['pom.xml'])",
            "num_files":1.0,
            "patch_content":"From 4cf373f7352f5d95f0bf6512af8af326b31c835e Mon Sep 17 00:00:00 2001\nFrom: Joze Rozanec <jmrozanec@gmail.com>\nDate: Tue, 17 Nov 2020 14:53:58 +0100\nSubject: [PATCH] Update dependencies to fix security vulnerability.\n\n---\n pom.xml | 7 ++++---\n 1 file changed, 4 insertions(+), 3 deletions(-)\n\ndiff --git a\/pom.xml b\/pom.xml\nindex bd1252ee..f8972d86 100644\n--- a\/pom.xml\n+++ b\/pom.xml\n@@ -121,11 +121,12 @@\n             <scope>test<\/scope>\n         <\/dependency>\n         <dependency>\n-            <groupId>org.hibernate<\/groupId>\n-            <artifactId>hibernate-validator<\/artifactId>\n+            <groupId>org.apache.bval<\/groupId>\n+            <artifactId>bval-jsr<\/artifactId>\n+            <version>1.1.2<\/version>\n+            <!--The Hibernate dependency is no longer used, due to security vulnerabilities -->\n             <!-- https:\/\/stackoverflow.com\/questions\/48323244\/java-lang-nosuchmethoderror-javax-validation-bootstrapconfiguration-getclockproExecutionTimeQuartzIntegrationTest -->\n             <!-- https:\/\/stackoverflow.com\/questions\/24386771\/javax-validation-validationexception-hv000183-unable-to-load-javax-el-express -->\n-            <version>5.3.6.Final<\/version>\n             <scope>test<\/scope>\n         <\/dependency>\n         <dependency>"
        },
        {
            "index":373,
            "vuln_id":"GHSA-gp2m-7cfp-h6gf",
            "cwe_id":"{'CWE-384'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/simplesamlphp\/simplesamlphp\/commit\/90dca835158495b173808273e7df127303b8b953'}",
            "dataset":"osv",
            "summary":"Incorrect persistent NameID generation in SimpleSAMLphp ### Background\nWhen a SimpleSAMLphp Identity Provider is misconfigured, a bug in the software when trying to build a persistent `NameID` to univocally identify the authenticating subject could cause different users to get the same identifier generated, depending on the attributes available for them right after authentication.\n\nPlease note that even though this is possible thanks to a bug, **an IdP must be misconfigured** to release persistent `NameID`s even if it is not properly configured to generate them based on the specifics of the deployment.\n\n### Description\nPersistent `NameID`s will typically be sent as part of the `Subject` element of a SAML assertion, or as the contents of the `eduPersonTargetedID` attribute. Here is an example of such a `NameID`:\n\n    <NameID Format=\u201curn:oasis:names:tc:SAML:2.0:nameid-format:persistent\u201c>\n        zbonsm0Yn9Gnw14uQEEPr6AO7d+IvxwCQN3t+o24jYs=\n    <\/NameID>\n\nSome service providers will use this information to identify a user across sessions because a persistent `NameID` will never change for a given user. This could lead to different users accessing the same account in those service providers.\n\nIn order to be affected by this issue, the following circumstances must concur:\n\n- SimpleSAMLphp acts as an identity provider.\n- The service provider asking for authentication requests a persistent `NameID`.\n- No `saml:PersistentNameID` authentication processing filter is configured (neither for the whole IdP, nor for a given SP).\n- No `simplesaml.nameidattribute` configuration option is set (neither for the whole IdP, nor for a given SP).\n- One of the following alternatives:\n  - No `userid.attribute` configuration option is set **and** the users don't have an `eduPersonPrincipalName` attribute in the users backend, **or**\n  - the `userid.attribute` configuration option is set to an empty or missing attribute.\n\nIf all these requirements are met, the `SimpleSAML_Auth_ProcessingChain` class will try to keep a unique user identifier in the state array (`addUserID()` method). Bear in mind that this code is executed **before** all the authentication processing filters configured, meaning that only those attributes retrieved for the user during **initial authentication** will be available. If no `userid.attribute` configuration option is set, the default `eduPersonPrincipalName` will then be used. However, since it is missing, no identifier will be kept. Alternatively, if `userid.attribute` is set to a missing or empty attribute, the `addUserID()` method will abort trying to register an identifier.\n\nAfter executing all authentication processing filters, SimpleSAMLphp will build a SAML assertion. If the service provider requests persistent `NameID`s, SimpleSAMLphp will attempt to generate one given that none is already available (because the `saml:PersistentNameID` filter was not used). At this point, the code will look for the `simplesaml.nameidattribute` configuration option in either the local IdP metadata or in the remote SP metadata. If none of them are configured, it will default to the unique user identifier previously registered by `SimpleSAML_Auth_ProcessingChain`. If no identifier was kept there, the code will log an error message:\n\n    Unable to generate NameID. Check the userid.attribute option.\n\nHowever, instead of aborting the `NameID` generation at that point, it will go on and use a value missing from the state array as the source for the computation, meaning the `null` type will be used. Hence, all users connecting to a given service provider will get the same `NameID` generated, because all the input parameters will be the same:\n\n- The SP's entity identifier.\n- The IdP's entity identifier.\n- The `null` value.\n- The common secret salt from the main configuration.\n\n### Affected versions\nAll SimpleSAMLphp versions between 1.7.0 and 1.14.10, inclusive.\n\n### Impact\nThose identity providers affected by this bug and misconfigured as previously described could be issuing SAML assertions with common `NameID`s for all or a subset of their users. If a service provider uses those `NameID`s to identify the users of the affected IdP, all the users will be associated with the same user account at the service provider, causing all sorts of potential security issues like information disclosure or unauthorized access.\n\nWhile we can consider this unlikely to happen, some cases have been already observed. In particular, some identity providers using default configurations and consuming metadata automatically (i.e. using the _metarefresh_ module) while using a user backend like _Active Directory_ that does not populate `eduPersonPrincipalName` are particularly sensitive to this issue.\n\n### Resolution\nUpgrade to the latest version.\n\nConfigure a `saml:PersistentNameID` authentication processing filter according to your needs. Remember to check that **the attribute used as the source** for the `NameID` **is present at the moment the `saml:PersistentNameID` filter is executed**. The attribute used must be **unique** per user, and **must not change** over time.",
            "published_date":"2020-01-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/simplesamlphp\/simplesamlphp",
            "commit_href":"https:\/\/github.com\/simplesamlphp\/simplesamlphp\/commit\/90dca835158495b173808273e7df127303b8b953",
            "commit_sha":"90dca835158495b173808273e7df127303b8b953",
            "patch":"SINGLE",
            "chain_ord":"['90dca835158495b173808273e7df127303b8b953']",
            "before_first_fix_commit":"{'300d8aa48fe93706ade95be481c68e9cf2f32d1f'}",
            "last_fix_commit":"90dca835158495b173808273e7df127303b8b953",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/12\/2016, 11:21:31",
            "message":"bugfix: Make sure a persistent NameID is not generated by default when the UserID is missing in the state array.\n\nThis allowed misconfigured IdPs (i.e. those without both a PersistenNameID authproc filter, a \u201cuserid.attribute\u201d configuration option and no \u201ceduPersonPrincipalName\u201d attribute available after running all the authentication processing filters) to generate a persistent NameID based on \u201cnull\u201d, effectively giving all users the same identifier.",
            "author":"Jaime Pe\u0301rez",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'modules\/saml\/lib\/IdP\/SAML2.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/simplesamlphp\/simplesamlphp\/raw\/90dca835158495b173808273e7df127303b8b953\/modules%2Fsaml%2Flib%2FIdP%2FSAML2.php', 'patch': \"@@ -623,6 +623,7 @@ private static function generateNameIdValue(SimpleSAML_Configuration $idpMetadat\\n \\t\\t\\tif ($attribute === NULL) {\\n \\t\\t\\t\\tif (!isset($state['UserID'])) {\\n \\t\\t\\t\\t\\tSimpleSAML_Logger::error('Unable to generate NameID. Check the userid.attribute option.');\\n+\\t\\t\\t\\t\\treturn NULL;\\n \\t\\t\\t\\t}\\n \\t\\t\\t\\t$attributeValue = $state['UserID'];\\n \\t\\t\\t\\t$idpEntityId = $idpMetadata->getString('entityid');\"}}",
            "message_norm":"bugfix: make sure a persistent nameid is not generated by default when the userid is missing in the state array.\n\nthis allowed misconfigured idps (i.e. those without both a persistennameid authproc filter, a \u201cuserid.attribute\u201d configuration option and no \u201cedupersonprincipalname\u201d attribute available after running all the authentication processing filters) to generate a persistent nameid based on \u201cnull\u201d, effectively giving all users the same identifier.",
            "language":"en",
            "entities":"[('bugfix', 'FLAW', ''), ('authentication', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/saml\/lib\/IdP\/SAML2.php'])",
            "num_files":1.0,
            "patch_content":"From 90dca835158495b173808273e7df127303b8b953 Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Jaime=20Pe=CC=81rez?= <jaime.perez@uninett.no>\nDate: Mon, 12 Dec 2016 12:21:31 +0100\nSubject: [PATCH] bugfix: Make sure a persistent NameID is not generated by\n default when the UserID is missing in the state array.\nMIME-Version: 1.0\nContent-Type: text\/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n\nThis allowed misconfigured IdPs (i.e. those without both a PersistenNameID authproc filter, a \u201cuserid.attribute\u201d configuration option and no \u201ceduPersonPrincipalName\u201d attribute available after running all the authentication processing filters) to generate a persistent NameID based on \u201cnull\u201d, effectively giving all users the same identifier.\n---\n modules\/saml\/lib\/IdP\/SAML2.php | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/modules\/saml\/lib\/IdP\/SAML2.php b\/modules\/saml\/lib\/IdP\/SAML2.php\nindex 243ae742fe..3a5ae0fbff 100644\n--- a\/modules\/saml\/lib\/IdP\/SAML2.php\n+++ b\/modules\/saml\/lib\/IdP\/SAML2.php\n@@ -623,6 +623,7 @@ private static function generateNameIdValue(SimpleSAML_Configuration $idpMetadat\n \t\t\tif ($attribute === NULL) {\n \t\t\t\tif (!isset($state['UserID'])) {\n \t\t\t\t\tSimpleSAML_Logger::error('Unable to generate NameID. Check the userid.attribute option.');\n+\t\t\t\t\treturn NULL;\n \t\t\t\t}\n \t\t\t\t$attributeValue = $state['UserID'];\n \t\t\t\t$idpEntityId = $idpMetadata->getString('entityid');"
        },
        {
            "index":326,
            "vuln_id":"GHSA-5xvc-vgmp-jgc3",
            "cwe_id":"{'CWE-284'}",
            "score":9.1,
            "chain":"{'https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/pull\/38\/commits\/9e200d974e0cb85d828a6afedb8ab90a37878f28', 'https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/pull\/38\/commits\/32b21898fb2b53b1a2e36270de6854ad70e9e9bf'}",
            "dataset":"osv",
            "summary":"Improper Access Control in jupyterhub-firstuseauthenticator ### Impact\n\nWhen JupyterHub is used with FirstUseAuthenticator, the vulnerability allows unauthorized access to any user's account if `create_users=True` and the username is known or guessed.\n\n### Patches\n\nUpgrade to jupyterhub-firstuseauthenticator to 1.0, or apply patch https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/pull\/38.patch\n\n### Workarounds\n\nIf you cannot upgrade, there is no complete workaround, but it can be mitigated.\n\nIf you cannot upgrade yet, you can disable user creation with `c.FirstUseAuthenticator.create_users = False`, which will only allow login with fully normalized usernames for already existing users prior to jupyterhub-firstuserauthenticator 1.0. If any users have never logged in with their normalized username (i.e. lowercase), they will still be vulnerable until you can patch or upgrade.",
            "published_date":"2021-10-28",
            "chain_len":2,
            "project":"https:\/\/github.com\/jupyterhub\/firstuseauthenticator",
            "commit_href":"https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/pull\/38\/commits\/9e200d974e0cb85d828a6afedb8ab90a37878f28",
            "commit_sha":"9e200d974e0cb85d828a6afedb8ab90a37878f28",
            "patch":"MULTI",
            "chain_ord":"['32b21898fb2b53b1a2e36270de6854ad70e9e9bf', '9e200d974e0cb85d828a6afedb8ab90a37878f28']",
            "before_first_fix_commit":"{'32b21898fb2b53b1a2e36270de6854ad70e9e9bf'}",
            "last_fix_commit":"9e200d974e0cb85d828a6afedb8ab90a37878f28",
            "chain_ord_pos":2.0,
            "commit_datetime":"10\/26\/2021, 07:00:03",
            "message":"Use normalize_username instead of .lower\n\nallows for following normalization changes",
            "author":"Min RK",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'firstuseauthenticator\/firstuseauthenticator.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/raw\/9e200d974e0cb85d828a6afedb8ab90a37878f28\/firstuseauthenticator%2Ffirstuseauthenticator.py', 'patch': \"@@ -138,7 +138,7 @@ def validate_username(self, name):\\n \\n     @gen.coroutine\\n     def authenticate(self, handler, data):\\n-        username = data['username'].lower()\\n+        username = self.normalize_username(data['username'])\\n \\n         if not self.create_users:\\n             if not self._user_exists(username):\"}}",
            "message_norm":"use normalize_username instead of .lower\n\nallows for following normalization changes",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['firstuseauthenticator\/firstuseauthenticator.py'])",
            "num_files":1.0,
            "patch_content":"From 9e200d974e0cb85d828a6afedb8ab90a37878f28 Mon Sep 17 00:00:00 2001\nFrom: Min RK <benjaminrk@gmail.com>\nDate: Tue, 26 Oct 2021 09:00:03 +0200\nSubject: [PATCH] Use normalize_username instead of .lower\n\nallows for following normalization changes\n---\n firstuseauthenticator\/firstuseauthenticator.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/firstuseauthenticator\/firstuseauthenticator.py b\/firstuseauthenticator\/firstuseauthenticator.py\nindex 1b45aa5..7062b19 100644\n--- a\/firstuseauthenticator\/firstuseauthenticator.py\n+++ b\/firstuseauthenticator\/firstuseauthenticator.py\n@@ -138,7 +138,7 @@ def validate_username(self, name):\n \n     @gen.coroutine\n     def authenticate(self, handler, data):\n-        username = data['username'].lower()\n+        username = self.normalize_username(data['username'])\n \n         if not self.create_users:\n             if not self._user_exists(username):"
        },
        {
            "index":13,
            "vuln_id":"GHSA-c558-5gfm-p2r8",
            "cwe_id":"{'CWE-79'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a'}",
            "dataset":"osv",
            "summary":"JSPUI spellcheck and autocomplete tools vulnerable to Cross Site Scripting ### Impact\nThe JSPUI spellcheck \"Did you mean\" HTML escapes the data-spell attribute in the link, but not the actual displayed text.  Similarly, the JSPUI autocomplete HTML does not properly escape text passed to it. Both are vulnerable to XSS.  This vulnerability only impacts the JSPUI.\n\n_This vulnerability does NOT impact the XMLUI or 7.x._\n\n### Patches\n_DSpace 6.x:_\n* Fixed in 6.4 via two commits: \n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7\n* 6.x patch files available (may be applied manually if an immediate upgrade to 6.4 or above is not possible)\n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d.patch\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7.patch\n\n_DSpace 5.x:_\n* Fixed in 5.11 via two commits: \n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5\n* 5.x patch files available (may be applied manually if an immediate upgrade to 5.11 or 6.4 is not possible)\n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a.patch\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5.patch\n\n#### Apply the patch to your DSpace\nIf at all possible, we recommend upgrading your DSpace site based on the upgrade instructions. However, if you are unable to do so, you can manually apply the above patches as follows:\n1. Download the appropriate patch file to the machine where DSpace is running\n2. From the `[dspace-src]` folder, apply the patch, e.g. `git apply [name-of-file].patch`\n3. Now, update your DSpace site (based loosely on the Upgrade instructions). This generally involves three steps:\n    1. Rebuild DSpace, e.g. `mvn -U clean package`  (This will recompile all DSpace code)\n    2. Redeploy DSpace, e.g. `ant update`  (This will copy all updated WARs \/ configs to your installation directory). Depending on your setup you also may need to copy the updated WARs over to your Tomcat webapps folder.\n    3. Restart Tomcat\n\n### References\nDiscovered & reported by Hassan Bhuiyan (Brunel University London)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@dspace.org",
            "published_date":"2022-08-06",
            "chain_len":4,
            "project":"https:\/\/github.com\/DSpace\/DSpace",
            "commit_href":"https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7",
            "commit_sha":"35030a23e48b5946f5853332c797e1c4adea7bb7",
            "patch":"MULTI",
            "chain_ord":"['ebb83a75234d3de9be129464013e998dc929b68d', '35030a23e48b5946f5853332c797e1c4adea7bb7', 'c89e493e517b424dea6175caba54e91d3847fc3a', '6f75bb084ab1937d094208c55cd84340040bcbb5']",
            "before_first_fix_commit":"{'d1dd7d23329ef055069759df15cfa200c8e32e54'}",
            "last_fix_commit":"6f75bb084ab1937d094208c55cd84340040bcbb5",
            "chain_ord_pos":2.0,
            "commit_datetime":"04\/08\/2020, 01:19:14",
            "message":"[DS-4453] Fix XSS handling in JSPUI discovery autocomplete",
            "author":"Kim Shepherd",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 1, 'total': 7}",
            "files":"{'dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DSpace\/DSpace\/raw\/35030a23e48b5946f5853332c797e1c4adea7bb7\/dspace-jspui%2Fsrc%2Fmain%2Fwebapp%2Fsearch%2Fdiscovery.jsp', 'patch': '@@ -147,7 +147,7 @@\\n \\t\\t\\t\\t\\t\\t\\t\\t\\ttmp_val = item.displayedValue;\\n \\t\\t\\t\\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\t\\t\\t\\treturn {\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\tlabel: item.displayedValue + \" (\" + item.count + \")\",\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\tlabel: escapeHtml(item.displayedValue) + \" (\" + item.count + \")\",\\n \\t\\t\\t\\t\\t\\t\\t\\t\\tvalue: tmp_val\\n \\t\\t\\t\\t\\t\\t\\t\\t};\\n \\t\\t\\t\\t\\t\\t\\t}))\\t\\t\\t\\n@@ -159,6 +159,11 @@\\n \\tfunction validateFilters() {\\n \\t\\treturn document.getElementById(\"filterquery\").value.length > 0;\\n \\t}\\n+\\t\/\/ Generic HTML escape utility\\n+\\tvar escapeHtml = s => (s + \\'\\').replace(\/[&<>\"\\']\/g, m => ({\\n+\\t\\t\\'&\\': \\'&amp;\\', \\'<\\': \\'&lt;\\', \\'>\\': \\'&gt;\\',\\n+\\t\\t\\'\"\\': \\'&quot;\\', \"\\'\": \\'&#39;\\'\\n+\\t})[m]);\\n <\/script>\\t\\t\\n <\/c:set>'}}",
            "message_norm":"[ds-4453] fix xss handling in jspui discovery autocomplete",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp'])",
            "num_files":1.0,
            "patch_content":"From 35030a23e48b5946f5853332c797e1c4adea7bb7 Mon Sep 17 00:00:00 2001\nFrom: Kim Shepherd <kim@shepherd.nz>\nDate: Wed, 8 Apr 2020 13:19:14 +1200\nSubject: [PATCH] [DS-4453] Fix XSS handling in JSPUI discovery autocomplete\n\n---\n dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp | 7 ++++++-\n 1 file changed, 6 insertions(+), 1 deletion(-)\n\ndiff --git a\/dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp b\/dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp\nindex 6d71bb6a0e30..6cfafd4f3c7d 100644\n--- a\/dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp\n+++ b\/dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp\n@@ -147,7 +147,7 @@\n \t\t\t\t\t\t\t\t\ttmp_val = item.displayedValue;\n \t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\treturn {\n-\t\t\t\t\t\t\t\t\tlabel: item.displayedValue + \" (\" + item.count + \")\",\n+\t\t\t\t\t\t\t\t\tlabel: escapeHtml(item.displayedValue) + \" (\" + item.count + \")\",\n \t\t\t\t\t\t\t\t\tvalue: tmp_val\n \t\t\t\t\t\t\t\t};\n \t\t\t\t\t\t\t}))\t\t\t\n@@ -159,6 +159,11 @@\n \tfunction validateFilters() {\n \t\treturn document.getElementById(\"filterquery\").value.length > 0;\n \t}\n+\t\/\/ Generic HTML escape utility\n+\tvar escapeHtml = s => (s + '').replace(\/[&<>\"']\/g, m => ({\n+\t\t'&': '&amp;', '<': '&lt;', '>': '&gt;',\n+\t\t'\"': '&quot;', \"'\": '&#39;'\n+\t})[m]);\n <\/script>\t\t\n <\/c:set>"
        },
        {
            "index":272,
            "vuln_id":"GHSA-m296-j53x-xv95",
            "cwe_id":"{'CWE-362'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/KizzyCode\/tiny_future\/commit\/7ab8a264980d23c2ed64e72f4636f38b7381eb39', 'https:\/\/github.com\/KizzyCode\/tiny_future\/commit\/c7919199a0f6d1ce0e3c33499d1b37f862c990e4'}",
            "dataset":"osv",
            "summary":"Data races in tiny_future `tiny_future` contains a light-weight implementation of `Future`s. The `Future`\ntype it has lacked bound on its `Send` and `Sync` traits.\n\nThis allows for a bug where non-thread safe types such as `Cell` can be used in\n`Future`s and cause data races in concurrent programs.\n\nThe flaw was corrected in commit `c791919` by adding trait bounds to `Future`'s\n`Send` and `Sync`.",
            "published_date":"2021-08-25",
            "chain_len":2,
            "project":"https:\/\/github.com\/KizzyCode\/tiny_future",
            "commit_href":"https:\/\/github.com\/KizzyCode\/tiny_future\/commit\/7ab8a264980d23c2ed64e72f4636f38b7381eb39",
            "commit_sha":"7ab8a264980d23c2ed64e72f4636f38b7381eb39",
            "patch":"MULTI",
            "chain_ord":"['c7919199a0f6d1ce0e3c33499d1b37f862c990e4', '7ab8a264980d23c2ed64e72f4636f38b7381eb39']",
            "before_first_fix_commit":"{'c7919199a0f6d1ce0e3c33499d1b37f862c990e4'}",
            "last_fix_commit":"7ab8a264980d23c2ed64e72f4636f38b7381eb39",
            "chain_ord_pos":2.0,
            "commit_datetime":"12\/08\/2020, 16:33:00",
            "message":"Require `Send` for underlying types to fix https:\/\/github.com\/KizzyCode\/tiny_future\/issues\/1",
            "author":"Keziah Biermann",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'src\/lib.rs': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/KizzyCode\/tiny_future-rust\/raw\/7ab8a264980d23c2ed64e72f4636f38b7381eb39\/src%2Flib.rs', 'patch': \"@@ -178,7 +178,7 @@ pub fn time_remaining(timeout_point: std::time::Instant) -> std::time::Duration\\n \/\/\/ Creates a future for `job` and runs `job`. The result of `job` will be set as result into the\\n \/\/\/ future. The parameter passed to `job` is a function that returns if the future is still waiting\\n \/\/\/ so that `job` can check for cancellation.\\n-pub fn async_with_state<T: 'static, U: 'static, F: FnOnce(Future<T, U>) + Send + 'static>(job: F, shared_state: U) -> Future<T, U> {\\n+pub fn async_with_state<T: 'static + Send, U: 'static + Send, F: FnOnce(Future<T, U>) + Send + 'static>(job: F, shared_state: U) -> Future<T, U> {\\n \\tuse std::clone::Clone;\\n \\t\\n \\t\/\/ Create future and spawn job\\n@@ -192,7 +192,7 @@ pub fn async_with_state<T: 'static, U: 'static, F: FnOnce(Future<T, U>) + Send +\\n \/\/\/ Creates a future for `job` and runs `job`. The result of `job` will be set as result into the\\n \/\/\/ future. The parameter passed to `job` is a function that returns if the future is still waiting\\n \/\/\/ so that `job` can check for cancellation.\\n-pub fn async<T: 'static, F: FnOnce(Future<T, ()>) + Send + 'static>(job: F) -> Future<T, ()> {\\n+pub fn async<T: 'static + Send, F: FnOnce(Future<T, ()>) + Send + 'static>(job: F) -> Future<T, ()> {\\n \\tasync_with_state(job, ())\\n }\"}}",
            "message_norm":"require `send` for underlying types to fix https:\/\/github.com\/kizzycode\/tiny_future\/issues\/1",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('https:\/\/github.com\/kizzycode\/tiny_future\/issues\/1', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lib.rs'])",
            "num_files":1.0,
            "patch_content":"From 7ab8a264980d23c2ed64e72f4636f38b7381eb39 Mon Sep 17 00:00:00 2001\nFrom: Keziah Biermann <development@kizzycode.de>\nDate: Tue, 8 Dec 2020 17:33:00 +0100\nSubject: [PATCH] Require `Send` for underlying types to fix\n https:\/\/github.com\/KizzyCode\/tiny_future\/issues\/1\n\n---\n src\/lib.rs | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/src\/lib.rs b\/src\/lib.rs\nindex 40a08c2..d307e8d 100644\n--- a\/src\/lib.rs\n+++ b\/src\/lib.rs\n@@ -178,7 +178,7 @@ pub fn time_remaining(timeout_point: std::time::Instant) -> std::time::Duration\n \/\/\/ Creates a future for `job` and runs `job`. The result of `job` will be set as result into the\n \/\/\/ future. The parameter passed to `job` is a function that returns if the future is still waiting\n \/\/\/ so that `job` can check for cancellation.\n-pub fn async_with_state<T: 'static, U: 'static, F: FnOnce(Future<T, U>) + Send + 'static>(job: F, shared_state: U) -> Future<T, U> {\n+pub fn async_with_state<T: 'static + Send, U: 'static + Send, F: FnOnce(Future<T, U>) + Send + 'static>(job: F, shared_state: U) -> Future<T, U> {\n \tuse std::clone::Clone;\n \t\n \t\/\/ Create future and spawn job\n@@ -192,7 +192,7 @@ pub fn async_with_state<T: 'static, U: 'static, F: FnOnce(Future<T, U>) + Send +\n \/\/\/ Creates a future for `job` and runs `job`. The result of `job` will be set as result into the\n \/\/\/ future. The parameter passed to `job` is a function that returns if the future is still waiting\n \/\/\/ so that `job` can check for cancellation.\n-pub fn async<T: 'static, F: FnOnce(Future<T, ()>) + Send + 'static>(job: F) -> Future<T, ()> {\n+pub fn async<T: 'static + Send, F: FnOnce(Future<T, ()>) + Send + 'static>(job: F) -> Future<T, ()> {\n \tasync_with_state(job, ())\n }"
        },
        {
            "index":714,
            "vuln_id":"GHSA-qf2g-q4mc-w7rr",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/forkcms\/forkcms\/commit\/981730f1a3d59b423ca903b1f4bf79b848a1766e'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in Fork CMS Fork CMS prior to 5.11.1 is vulnerable to stored cross-site scripting. When uploading a new module, the description of the module can contain JavaScript code. The JavaScript code may be executed after uploading the new module and looking at the `Details` page.",
            "published_date":"2022-03-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/forkcms\/forkcms",
            "commit_href":"https:\/\/github.com\/forkcms\/forkcms\/commit\/981730f1a3d59b423ca903b1f4bf79b848a1766e",
            "commit_sha":"981730f1a3d59b423ca903b1f4bf79b848a1766e",
            "patch":"SINGLE",
            "chain_ord":"['981730f1a3d59b423ca903b1f4bf79b848a1766e']",
            "before_first_fix_commit":"{'1b38e33a98992793e998a937b717355212346993'}",
            "last_fix_commit":"981730f1a3d59b423ca903b1f4bf79b848a1766e",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/23\/2022, 13:20:39",
            "message":"Fix xss though the description in the info.xml file of a theme or module",
            "author":"Jelmer Prins",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'src\/Backend\/Modules\/Extensions\/Engine\/Model.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/forkcms\/forkcms\/raw\/981730f1a3d59b423ca903b1f4bf79b848a1766e\/src%2FBackend%2FModules%2FExtensions%2FEngine%2FModel.php', 'patch': \"@@ -839,7 +839,7 @@ public static function processModuleXml(\\\\SimpleXMLElement $xml): array\\n         $information['name'] = (string) $module->name;\\n         $information['version'] = (string) $module->version;\\n         $information['requirements'] = (array) $module->requirements;\\n-        $information['description'] = (string) $module->description;\\n+        $information['description'] = strip_tags((string) $module->description, '<h1><h2><h3><h4><h5><h6><p><li><a>');\\n         $information['cronjobs'] = [];\\n \\n         \/\/ authors\\n@@ -900,7 +900,7 @@ public static function processThemeXml(\\\\SimpleXMLElement $xml): array\\n         $information['version'] = (string) $theme->version;\\n         $information['requirements'] = (array) $theme->requirements;\\n         $information['thumbnail'] = (string) $theme->thumbnail;\\n-        $information['description'] = (string) $theme->description;\\n+        $information['description'] = strip_tags((string) $theme->description, '<h1><h2><h3><h4><h5><h6><p><li><a>');\\n \\n         \/\/ authors\\n         foreach ($xml->xpath('\/theme\/authors\/author') as $author) {\"}}",
            "message_norm":"fix xss though the description in the info.xml file of a theme or module",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Backend\/Modules\/Extensions\/Engine\/Model.php'])",
            "num_files":1.0,
            "patch_content":"From 981730f1a3d59b423ca903b1f4bf79b848a1766e Mon Sep 17 00:00:00 2001\nFrom: Jelmer Prins <jelmer@pageon.be>\nDate: Wed, 23 Mar 2022 14:20:39 +0100\nSubject: [PATCH] Fix xss though the description in the info.xml file of a\n theme or module\n\n---\n src\/Backend\/Modules\/Extensions\/Engine\/Model.php | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/src\/Backend\/Modules\/Extensions\/Engine\/Model.php b\/src\/Backend\/Modules\/Extensions\/Engine\/Model.php\nindex 4e09814e26..3d81361271 100644\n--- a\/src\/Backend\/Modules\/Extensions\/Engine\/Model.php\n+++ b\/src\/Backend\/Modules\/Extensions\/Engine\/Model.php\n@@ -839,7 +839,7 @@ public static function processModuleXml(\\SimpleXMLElement $xml): array\n         $information['name'] = (string) $module->name;\n         $information['version'] = (string) $module->version;\n         $information['requirements'] = (array) $module->requirements;\n-        $information['description'] = (string) $module->description;\n+        $information['description'] = strip_tags((string) $module->description, '<h1><h2><h3><h4><h5><h6><p><li><a>');\n         $information['cronjobs'] = [];\n \n         \/\/ authors\n@@ -900,7 +900,7 @@ public static function processThemeXml(\\SimpleXMLElement $xml): array\n         $information['version'] = (string) $theme->version;\n         $information['requirements'] = (array) $theme->requirements;\n         $information['thumbnail'] = (string) $theme->thumbnail;\n-        $information['description'] = (string) $theme->description;\n+        $information['description'] = strip_tags((string) $theme->description, '<h1><h2><h3><h4><h5><h6><p><li><a>');\n \n         \/\/ authors\n         foreach ($xml->xpath('\/theme\/authors\/author') as $author) {"
        },
        {
            "index":570,
            "vuln_id":"GHSA-x2mc-8fgj-3wmr",
            "cwe_id":"{'CWE-20'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/mafintosh\/tar-fs\/commit\/06672828e6fa29ac8551b1b6f36c852a9a3c58a2'}",
            "dataset":"osv",
            "summary":"Improper Input Validation in tar-fs A vulnerability was found in tar-fs before 1.16.2. An Arbitrary File Overwrite issue exists when extracting a tarball containing a hardlink to a file that already exists on the system, in conjunction with a later plain file with the same name as the hardlink. This plain file content replaces the existing file content.",
            "published_date":"2019-05-01",
            "chain_len":1,
            "project":"https:\/\/github.com\/mafintosh\/tar-fs",
            "commit_href":"https:\/\/github.com\/mafintosh\/tar-fs\/commit\/06672828e6fa29ac8551b1b6f36c852a9a3c58a2",
            "commit_sha":"06672828e6fa29ac8551b1b6f36c852a9a3c58a2",
            "patch":"SINGLE",
            "chain_ord":"['06672828e6fa29ac8551b1b6f36c852a9a3c58a2']",
            "before_first_fix_commit":"{'7b4ab17e950832cfd3e67421e48898fdb50318fc'}",
            "last_fix_commit":"06672828e6fa29ac8551b1b6f36c852a9a3c58a2",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/30\/2018, 11:20:56",
            "message":"force hardlink targets to be in the tar",
            "author":"Mathias Buus",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mafintosh\/tar-fs\/raw\/06672828e6fa29ac8551b1b6f36c852a9a3c58a2\/index.js', 'patch': \"@@ -261,7 +261,7 @@ exports.extract = function (cwd, opts) {\\n     var onlink = function () {\\n       if (win32) return next() \/\/ skip links on win for now before it can be tested\\n       xfs.unlink(name, function () {\\n-        var srcpath = path.resolve(cwd, header.linkname)\\n+        var srcpath = path.join(cwd, path.join('\/', header.linkname))\\n \\n         xfs.link(srcpath, name, function (err) {\\n           if (err && err.code === 'EPERM' && opts.hardlinkAsFilesFallback) {\"}}",
            "message_norm":"force hardlink targets to be in the tar",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0,
            "patch_content":"From 06672828e6fa29ac8551b1b6f36c852a9a3c58a2 Mon Sep 17 00:00:00 2001\nFrom: Mathias Buus <mathiasbuus@gmail.com>\nDate: Mon, 30 Apr 2018 13:20:56 +0200\nSubject: [PATCH] force hardlink targets to be in the tar\n\n---\n index.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/index.js b\/index.js\nindex 2e1ae6d..4d67485 100644\n--- a\/index.js\n+++ b\/index.js\n@@ -261,7 +261,7 @@ exports.extract = function (cwd, opts) {\n     var onlink = function () {\n       if (win32) return next() \/\/ skip links on win for now before it can be tested\n       xfs.unlink(name, function () {\n-        var srcpath = path.resolve(cwd, header.linkname)\n+        var srcpath = path.join(cwd, path.join('\/', header.linkname))\n \n         xfs.link(srcpath, name, function (err) {\n           if (err && err.code === 'EPERM' && opts.hardlinkAsFilesFallback) {"
        },
        {
            "index":488,
            "vuln_id":"GHSA-r35g-4525-29fq",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1a2a87229d1d61e23a39373777c056161eb4084d'}",
            "dataset":"osv",
            "summary":"Division by 0 in `FusedBatchNorm` ### Impact\nAn attacker can cause a denial of service via a FPE runtime error in `tf.raw_ops.FusedBatchNorm`:\n\n```python\nimport tensorflow as tf\n\nx = tf.constant([], shape=[1, 1, 1, 0], dtype=tf.float32)\nscale = tf.constant([], shape=[0], dtype=tf.float32)\noffset = tf.constant([], shape=[0], dtype=tf.float32)\nmean = tf.constant([], shape=[0], dtype=tf.float32)\nvariance = tf.constant([], shape=[0], dtype=tf.float32)\nepsilon = 0.0\nexponential_avg_factor = 0.0\ndata_format = \"NHWC\"\nis_training = False\n\ntf.raw_ops.FusedBatchNorm(\n    x=x, scale=scale, offset=offset, mean=mean,\n    variance=variance, epsilon=epsilon,\n    exponential_avg_factor=exponential_avg_factor,\n    data_format=data_format, is_training=is_training)\n``` \n  \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/828f346274841fa7505f7020e88ca36c22e557ab\/tensorflow\/core\/kernels\/fused_batch_norm_op.cc#L295-L297) performs a division based on the last dimension of the `x` tensor:\n\n```cc \nconst int depth = x.dimension(3);\nconst int rest_size = size \/ depth;\n```\n\nSince this is controlled by the user, an attacker can trigger a denial of service.\n\n### Patches\nWe have patched the issue in GitHub commit [1a2a87229d1d61e23a39373777c056161eb4084d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1a2a87229d1d61e23a39373777c056161eb4084d).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1a2a87229d1d61e23a39373777c056161eb4084d",
            "commit_sha":"1a2a87229d1d61e23a39373777c056161eb4084d",
            "patch":"SINGLE",
            "chain_ord":"['1a2a87229d1d61e23a39373777c056161eb4084d']",
            "before_first_fix_commit":"{'828f346274841fa7505f7020e88ca36c22e557ab'}",
            "last_fix_commit":"1a2a87229d1d61e23a39373777c056161eb4084d",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 18:30:28",
            "message":"Fix FPE issue with `tf.raw_ops.FusedBatchNorm`.\n\nPiperOrigin-RevId: 370948185\nChange-Id: If0c8e0320062ed6363e94ff5fe38e6a301f69ac2",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/core\/kernels\/fused_batch_norm_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1a2a87229d1d61e23a39373777c056161eb4084d\/tensorflow%2Fcore%2Fkernels%2Ffused_batch_norm_op.cc', 'patch': '@@ -293,6 +293,9 @@ struct FusedBatchNorm<CPUDevice, T, U, \/* is_training= *\/ false> {\\n     const CPUDevice& d = context->eigen_device<CPUDevice>();\\n \\n     const int depth = x.dimension(3);\\n+    OP_REQUIRES(\\n+        context, depth != 0,\\n+        errors::Internal(\"The 4th element in the input shape cannot be 0.\"));\\n     const int size = x.size();\\n     const int rest_size = size \/ depth;\\n     Eigen::DSizes<Eigen::Index, 2> rest_by_depth(rest_size, depth);'}}",
            "message_norm":"fix fpe issue with `tf.raw_ops.fusedbatchnorm`.\n\npiperorigin-revid: 370948185\nchange-id: if0c8e0320062ed6363e94ff5fe38e6a301f69ac2",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('fpe', 'SECWORD', ''), ('issue', 'FLAW', ''), ('370948185', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/fused_batch_norm_op.cc'])",
            "num_files":1.0,
            "patch_content":"From 1a2a87229d1d61e23a39373777c056161eb4084d Mon Sep 17 00:00:00 2001\nFrom: Amit Patankar <amitpatankar@google.com>\nDate: Wed, 28 Apr 2021 11:30:28 -0700\nSubject: [PATCH] Fix FPE issue with `tf.raw_ops.FusedBatchNorm`.\n\nPiperOrigin-RevId: 370948185\nChange-Id: If0c8e0320062ed6363e94ff5fe38e6a301f69ac2\n---\n tensorflow\/core\/kernels\/fused_batch_norm_op.cc | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/fused_batch_norm_op.cc b\/tensorflow\/core\/kernels\/fused_batch_norm_op.cc\nindex 9b917348e2afa5..e564b19857c383 100644\n--- a\/tensorflow\/core\/kernels\/fused_batch_norm_op.cc\n+++ b\/tensorflow\/core\/kernels\/fused_batch_norm_op.cc\n@@ -293,6 +293,9 @@ struct FusedBatchNorm<CPUDevice, T, U, \/* is_training= *\/ false> {\n     const CPUDevice& d = context->eigen_device<CPUDevice>();\n \n     const int depth = x.dimension(3);\n+    OP_REQUIRES(\n+        context, depth != 0,\n+        errors::Internal(\"The 4th element in the input shape cannot be 0.\"));\n     const int size = x.size();\n     const int rest_size = size \/ depth;\n     Eigen::DSizes<Eigen::Index, 2> rest_by_depth(rest_size, depth);"
        },
        {
            "index":357,
            "vuln_id":"GHSA-9g8h-pjm4-q92p",
            "cwe_id":"{'CWE-787'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/opencv\/opencv\/pull\/10566\/commits\/435a3e337bd9d4e11af61cf8b8afca067bf1a8aa'}",
            "dataset":"osv",
            "summary":"Out-of-bounds Write in OpenCV. In OpenCV 3.3.1 (corresponding with OpenCV-Python 3.3.1.11), a heap-based buffer overflow happens in cv::Jpeg2KDecoder::readComponent8u in modules\/imgcodecs\/src\/grfmt_jpeg2000.cpp when parsing a crafted image file.",
            "published_date":"2021-10-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/opencv\/opencv",
            "commit_href":"https:\/\/github.com\/opencv\/opencv\/pull\/10566\/commits\/435a3e337bd9d4e11af61cf8b8afca067bf1a8aa",
            "commit_sha":"435a3e337bd9d4e11af61cf8b8afca067bf1a8aa",
            "patch":"SINGLE",
            "chain_ord":"['435a3e337bd9d4e11af61cf8b8afca067bf1a8aa']",
            "before_first_fix_commit":"{'f34a0a874a029a6201df0acbf46eeeaab8686e4d'}",
            "last_fix_commit":"435a3e337bd9d4e11af61cf8b8afca067bf1a8aa",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/09\/2018, 14:36:57",
            "message":"imgcodecs: add more Jasper checks for supported and tested cases",
            "author":"Alexander Alekhin",
            "comments":null,
            "stats":"{'additions': 39, 'deletions': 7, 'total': 46}",
            "files":"{'modules\/imgcodecs\/src\/grfmt_jpeg2000.cpp': {'additions': 39, 'deletions': 7, 'changes': 46, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencv\/opencv\/raw\/435a3e337bd9d4e11af61cf8b8afca067bf1a8aa\/modules%2Fimgcodecs%2Fsrc%2Fgrfmt_jpeg2000.cpp', 'patch': '@@ -77,7 +77,8 @@ static JasperInitializer initialize_jasper;\\n \\n Jpeg2KDecoder::Jpeg2KDecoder()\\n {\\n-    m_signature = \\'\\\\0\\' + String() + \\'\\\\0\\' + String() + \\'\\\\0\\' + String(\"\\\\x0cjP  \\\\r\\\\n\\\\x87\\\\n\");\\n+    static const unsigned char signature_[12] = { 0, 0, 0, 0x0c, \\'j\\', \\'P\\', \\' \\', \\' \\', 13, 10, 0x87, 10};\\n+    m_signature = String((const char*)signature_, (const char*)signature_ + sizeof(signature_));\\n     m_stream = 0;\\n     m_image = 0;\\n }\\n@@ -121,6 +122,8 @@ bool  Jpeg2KDecoder::readHeader()\\n         jas_image_t* image = jas_image_decode( stream, -1, 0 );\\n         m_image = image;\\n         if( image ) {\\n+            CV_Assert(0 == (jas_image_tlx(image)) && \"not supported\");\\n+            CV_Assert(0 == (jas_image_tly(image)) && \"not supported\");\\n             m_width = jas_image_width( image );\\n             m_height = jas_image_height( image );\\n \\n@@ -130,14 +133,31 @@ bool  Jpeg2KDecoder::readHeader()\\n             for( int i = 0; i < numcmpts; i++ )\\n             {\\n                 int depth_i = jas_image_cmptprec( image, i );\\n+                CV_Assert(depth == 0 || depth == depth_i); \/\/ component data type mismatch\\n                 depth = MAX(depth, depth_i);\\n                 if( jas_image_cmpttype( image, i ) > 2 )\\n                     continue;\\n+                int sgnd = jas_image_cmptsgnd(image, i);\\n+                int xstart = jas_image_cmpttlx(image, i);\\n+                int xend = jas_image_cmptbrx(image, i);\\n+                int xstep = jas_image_cmpthstep(image, i);\\n+                int ystart = jas_image_cmpttly(image, i);\\n+                int yend = jas_image_cmptbry(image, i);\\n+                int ystep = jas_image_cmptvstep(image, i);\\n+                CV_Assert(sgnd == 0 && \"not supported\");\\n+                CV_Assert(xstart == 0 && \"not supported\");\\n+                CV_Assert(ystart == 0 && \"not supported\");\\n+                CV_Assert(xstep == 1 && \"not supported\");\\n+                CV_Assert(ystep == 1 && \"not supported\");\\n+                CV_Assert(xend == m_width);\\n+                CV_Assert(yend == m_height);\\n                 cntcmpts++;\\n             }\\n \\n             if( cntcmpts )\\n             {\\n+                CV_Assert(depth == 8 || depth == 16);\\n+                CV_Assert(cntcmpts == 1 || cntcmpts == 3);\\n                 m_type = CV_MAKETYPE(depth <= 8 ? CV_8U : CV_16U, cntcmpts > 1 ? 3 : 1);\\n                 result = true;\\n             }\\n@@ -150,9 +170,14 @@ bool  Jpeg2KDecoder::readHeader()\\n     return result;\\n }\\n \\n+static void Jpeg2KDecoder_close(Jpeg2KDecoder* ptr)\\n+{\\n+    ptr->close();\\n+}\\n \\n bool  Jpeg2KDecoder::readData( Mat& img )\\n {\\n+    Ptr<Jpeg2KDecoder> close_this(this, Jpeg2KDecoder_close);\\n     bool result = false;\\n     int color = img.channels() > 1;\\n     uchar* data = img.ptr();\\n@@ -204,11 +229,16 @@ bool  Jpeg2KDecoder::readData( Mat& img )\\n                     result = true;\\n                 }\\n                 else\\n-                    fprintf(stderr, \"JPEG 2000 LOADER ERROR: cannot convert colorspace\\\\n\");\\n+                {\\n+                    jas_cmprof_destroy(clrprof);\\n+                    CV_Error(Error::StsError, \"JPEG 2000 LOADER ERROR: cannot convert colorspace\");\\n+                }\\n                 jas_cmprof_destroy( clrprof );\\n             }\\n             else\\n-                fprintf(stderr, \"JPEG 2000 LOADER ERROR: unable to create colorspace\\\\n\");\\n+            {\\n+                CV_Error(Error::StsError, \"JPEG 2000 LOADER ERROR: unable to create colorspace\");\\n+            }\\n         }\\n         else\\n             result = true;\\n@@ -257,8 +287,8 @@ bool  Jpeg2KDecoder::readData( Mat& img )\\n                                 result = readComponent16u( ((unsigned short *)data) + i, buffer, validateToInt(step \/ 2), cmptlut[i], maxval, offset, ncmpts );\\n                             if( !result )\\n                             {\\n-                                i = ncmpts;\\n-                                result = false;\\n+                                jas_matrix_destroy( buffer );\\n+                                CV_Error(Error::StsError, \"JPEG2000 LOADER ERROR: failed to read component\");\\n                             }\\n                         }\\n                         jas_matrix_destroy( buffer );\\n@@ -267,10 +297,12 @@ bool  Jpeg2KDecoder::readData( Mat& img )\\n             }\\n         }\\n         else\\n-            fprintf(stderr, \"JPEG2000 LOADER ERROR: colorspace conversion failed\\\\n\" );\\n+        {\\n+            CV_Error(Error::StsError, \"JPEG2000 LOADER ERROR: colorspace conversion failed\");\\n+        }\\n     }\\n \\n-    close();\\n+    CV_Assert(result == true);\\n \\n #ifndef _WIN32\\n     if (!clr.empty())'}}",
            "message_norm":"imgcodecs: add more jasper checks for supported and tested cases",
            "language":"en",
            "entities":"[('add', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/imgcodecs\/src\/grfmt_jpeg2000.cpp'])",
            "num_files":1.0,
            "patch_content":"From 435a3e337bd9d4e11af61cf8b8afca067bf1a8aa Mon Sep 17 00:00:00 2001\nFrom: Alexander Alekhin <alexander.alekhin@intel.com>\nDate: Tue, 9 Jan 2018 17:36:57 +0300\nSubject: [PATCH] imgcodecs: add more Jasper checks for supported and tested\n cases\n\n---\n modules\/imgcodecs\/src\/grfmt_jpeg2000.cpp | 46 ++++++++++++++++++++----\n 1 file changed, 39 insertions(+), 7 deletions(-)\n\ndiff --git a\/modules\/imgcodecs\/src\/grfmt_jpeg2000.cpp b\/modules\/imgcodecs\/src\/grfmt_jpeg2000.cpp\nindex 24dfb38bb9d6..b8b70fee85b8 100644\n--- a\/modules\/imgcodecs\/src\/grfmt_jpeg2000.cpp\n+++ b\/modules\/imgcodecs\/src\/grfmt_jpeg2000.cpp\n@@ -77,7 +77,8 @@ static JasperInitializer initialize_jasper;\n \n Jpeg2KDecoder::Jpeg2KDecoder()\n {\n-    m_signature = '\\0' + String() + '\\0' + String() + '\\0' + String(\"\\x0cjP  \\r\\n\\x87\\n\");\n+    static const unsigned char signature_[12] = { 0, 0, 0, 0x0c, 'j', 'P', ' ', ' ', 13, 10, 0x87, 10};\n+    m_signature = String((const char*)signature_, (const char*)signature_ + sizeof(signature_));\n     m_stream = 0;\n     m_image = 0;\n }\n@@ -121,6 +122,8 @@ bool  Jpeg2KDecoder::readHeader()\n         jas_image_t* image = jas_image_decode( stream, -1, 0 );\n         m_image = image;\n         if( image ) {\n+            CV_Assert(0 == (jas_image_tlx(image)) && \"not supported\");\n+            CV_Assert(0 == (jas_image_tly(image)) && \"not supported\");\n             m_width = jas_image_width( image );\n             m_height = jas_image_height( image );\n \n@@ -130,14 +133,31 @@ bool  Jpeg2KDecoder::readHeader()\n             for( int i = 0; i < numcmpts; i++ )\n             {\n                 int depth_i = jas_image_cmptprec( image, i );\n+                CV_Assert(depth == 0 || depth == depth_i); \/\/ component data type mismatch\n                 depth = MAX(depth, depth_i);\n                 if( jas_image_cmpttype( image, i ) > 2 )\n                     continue;\n+                int sgnd = jas_image_cmptsgnd(image, i);\n+                int xstart = jas_image_cmpttlx(image, i);\n+                int xend = jas_image_cmptbrx(image, i);\n+                int xstep = jas_image_cmpthstep(image, i);\n+                int ystart = jas_image_cmpttly(image, i);\n+                int yend = jas_image_cmptbry(image, i);\n+                int ystep = jas_image_cmptvstep(image, i);\n+                CV_Assert(sgnd == 0 && \"not supported\");\n+                CV_Assert(xstart == 0 && \"not supported\");\n+                CV_Assert(ystart == 0 && \"not supported\");\n+                CV_Assert(xstep == 1 && \"not supported\");\n+                CV_Assert(ystep == 1 && \"not supported\");\n+                CV_Assert(xend == m_width);\n+                CV_Assert(yend == m_height);\n                 cntcmpts++;\n             }\n \n             if( cntcmpts )\n             {\n+                CV_Assert(depth == 8 || depth == 16);\n+                CV_Assert(cntcmpts == 1 || cntcmpts == 3);\n                 m_type = CV_MAKETYPE(depth <= 8 ? CV_8U : CV_16U, cntcmpts > 1 ? 3 : 1);\n                 result = true;\n             }\n@@ -150,9 +170,14 @@ bool  Jpeg2KDecoder::readHeader()\n     return result;\n }\n \n+static void Jpeg2KDecoder_close(Jpeg2KDecoder* ptr)\n+{\n+    ptr->close();\n+}\n \n bool  Jpeg2KDecoder::readData( Mat& img )\n {\n+    Ptr<Jpeg2KDecoder> close_this(this, Jpeg2KDecoder_close);\n     bool result = false;\n     int color = img.channels() > 1;\n     uchar* data = img.ptr();\n@@ -204,11 +229,16 @@ bool  Jpeg2KDecoder::readData( Mat& img )\n                     result = true;\n                 }\n                 else\n-                    fprintf(stderr, \"JPEG 2000 LOADER ERROR: cannot convert colorspace\\n\");\n+                {\n+                    jas_cmprof_destroy(clrprof);\n+                    CV_Error(Error::StsError, \"JPEG 2000 LOADER ERROR: cannot convert colorspace\");\n+                }\n                 jas_cmprof_destroy( clrprof );\n             }\n             else\n-                fprintf(stderr, \"JPEG 2000 LOADER ERROR: unable to create colorspace\\n\");\n+            {\n+                CV_Error(Error::StsError, \"JPEG 2000 LOADER ERROR: unable to create colorspace\");\n+            }\n         }\n         else\n             result = true;\n@@ -257,8 +287,8 @@ bool  Jpeg2KDecoder::readData( Mat& img )\n                                 result = readComponent16u( ((unsigned short *)data) + i, buffer, validateToInt(step \/ 2), cmptlut[i], maxval, offset, ncmpts );\n                             if( !result )\n                             {\n-                                i = ncmpts;\n-                                result = false;\n+                                jas_matrix_destroy( buffer );\n+                                CV_Error(Error::StsError, \"JPEG2000 LOADER ERROR: failed to read component\");\n                             }\n                         }\n                         jas_matrix_destroy( buffer );\n@@ -267,10 +297,12 @@ bool  Jpeg2KDecoder::readData( Mat& img )\n             }\n         }\n         else\n-            fprintf(stderr, \"JPEG2000 LOADER ERROR: colorspace conversion failed\\n\" );\n+        {\n+            CV_Error(Error::StsError, \"JPEG2000 LOADER ERROR: colorspace conversion failed\");\n+        }\n     }\n \n-    close();\n+    CV_Assert(result == true);\n \n #ifndef _WIN32\n     if (!clr.empty())"
        },
        {
            "index":271,
            "vuln_id":"GHSA-w5cr-frph-hw7f",
            "cwe_id":"{'CWE-908'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/djkoloski\/rkyv\/commit\/f141b560523a20557db6540576d153010bd18712', 'https:\/\/github.com\/djkoloski\/rkyv\/commit\/9c65ae9c2c67dd949b5c3aba9b8eba6da802ab7e'}",
            "dataset":"osv",
            "summary":"Use of uninitialized buffer in rkyv An issue was discovered in the rkyv crate before 0.6.0 for Rust. When an archive is created via serialization, the archive content may contain uninitialized values of certain parts of a struct.",
            "published_date":"2021-08-25",
            "chain_len":2,
            "project":"https:\/\/github.com\/djkoloski\/rkyv",
            "commit_href":"https:\/\/github.com\/djkoloski\/rkyv\/commit\/f141b560523a20557db6540576d153010bd18712",
            "commit_sha":"f141b560523a20557db6540576d153010bd18712",
            "patch":"MULTI",
            "chain_ord":"['f141b560523a20557db6540576d153010bd18712', '9c65ae9c2c67dd949b5c3aba9b8eba6da802ab7e']",
            "before_first_fix_commit":"{'f141b560523a20557db6540576d153010bd18712'}",
            "last_fix_commit":"9c65ae9c2c67dd949b5c3aba9b8eba6da802ab7e",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 14:44:41",
            "message":"Zero aligned memory before resolving",
            "author":"David Koloski",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 5, 'total': 10}",
            "files":"{'rkyv\/src\/ser\/serializers\/std.rs': {'additions': 5, 'deletions': 5, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rkyv\/rkyv\/raw\/f141b560523a20557db6540576d153010bd18712\/rkyv%2Fsrc%2Fser%2Fserializers%2Fstd.rs', 'patch': '@@ -116,11 +116,11 @@ impl<A: Borrow<AlignedVec> + BorrowMut<AlignedVec>> Serializer for AlignedSerial\\n         let additional = mem::size_of::<T::Archived>();\\n         vec.reserve(additional);\\n         vec.set_len(vec.len() + additional);\\n-        value.resolve(\\n-            pos,\\n-            resolver,\\n-            &mut *vec.as_mut_ptr().add(pos).cast::<mem::MaybeUninit<T::Archived>>()\\n-        );\\n+\\n+        let ptr = vec.as_mut_ptr().add(pos).cast::<mem::MaybeUninit<T::Archived>>();\\n+        core::ptr::write_bytes(ptr, 0, 1);\\n+\\n+        value.resolve(pos, resolver, &mut *ptr);\\n         Ok(pos)\\n     }'}}",
            "message_norm":"zero aligned memory before resolving",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['rkyv\/src\/ser\/serializers\/std.rs'])",
            "num_files":1.0,
            "patch_content":"From f141b560523a20557db6540576d153010bd18712 Mon Sep 17 00:00:00 2001\nFrom: David Koloski <djkoloski@gmail.com>\nDate: Wed, 28 Apr 2021 10:44:41 -0400\nSubject: [PATCH] Zero aligned memory before resolving\n\n---\n rkyv\/src\/ser\/serializers\/std.rs | 10 +++++-----\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\ndiff --git a\/rkyv\/src\/ser\/serializers\/std.rs b\/rkyv\/src\/ser\/serializers\/std.rs\nindex 343e40da..9421f43a 100644\n--- a\/rkyv\/src\/ser\/serializers\/std.rs\n+++ b\/rkyv\/src\/ser\/serializers\/std.rs\n@@ -116,11 +116,11 @@ impl<A: Borrow<AlignedVec> + BorrowMut<AlignedVec>> Serializer for AlignedSerial\n         let additional = mem::size_of::<T::Archived>();\n         vec.reserve(additional);\n         vec.set_len(vec.len() + additional);\n-        value.resolve(\n-            pos,\n-            resolver,\n-            &mut *vec.as_mut_ptr().add(pos).cast::<mem::MaybeUninit<T::Archived>>()\n-        );\n+\n+        let ptr = vec.as_mut_ptr().add(pos).cast::<mem::MaybeUninit<T::Archived>>();\n+        core::ptr::write_bytes(ptr, 0, 1);\n+\n+        value.resolve(pos, resolver, &mut *ptr);\n         Ok(pos)\n     }"
        },
        {
            "index":335,
            "vuln_id":"GHSA-88cw-3m6x-49f7",
            "cwe_id":"{'CWE-787'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/pull\/6528\/commits\/e81e8a51ec7ba3d0dfb6089254f166c2733216e1'}",
            "dataset":"osv",
            "summary":"Out-of-bounds Write in ChakraCore Chakra Scripting Engine Memory Corruption Vulnerability This CVE ID is unique from CVE-2020-17048.",
            "published_date":"2021-08-02",
            "chain_len":1,
            "project":"https:\/\/github.com\/chakra-core\/ChakraCore",
            "commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/pull\/6528\/commits\/e81e8a51ec7ba3d0dfb6089254f166c2733216e1",
            "commit_sha":"e81e8a51ec7ba3d0dfb6089254f166c2733216e1",
            "patch":"SINGLE",
            "chain_ord":"['e81e8a51ec7ba3d0dfb6089254f166c2733216e1']",
            "before_first_fix_commit":"{'90e222e9a9ba64bd808666f44e6a0913d6318f78'}",
            "last_fix_commit":"e81e8a51ec7ba3d0dfb6089254f166c2733216e1",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/30\/2020, 22:00:01",
            "message":"[CVE-2020-17054]",
            "author":"Paul Leathers",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 2, 'total': 7}",
            "files":"{'lib\/Backend\/Lower.cpp': {'additions': 5, 'deletions': 2, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/e81e8a51ec7ba3d0dfb6089254f166c2733216e1\/lib%2FBackend%2FLower.cpp', 'patch': '@@ -27152,8 +27152,11 @@ void Lowerer::LowerLdFrameDisplay(IR::Instr *instr, bool doStackFrameDisplay)\\n         if (instr->m_func != this->m_func && this->m_func->DoStackFrameDisplay())\\n         {\\n             StackSym * inlineeFrameDisplaySym = instr->m_func->GetLocalFrameDisplaySym();\\n-            Assert(inlineeFrameDisplaySym->IsAllocated());\\n-            InsertMove(IR::SymOpnd::New(inlineeFrameDisplaySym, TyMachReg, m_func), dstOpnd, instr);\\n+            Assert((inlineeFrameDisplaySym && inlineeFrameDisplaySym->IsAllocated()) || this->m_func->IsLoopBody());\\n+            if (inlineeFrameDisplaySym && inlineeFrameDisplaySym->IsAllocated())\\n+            {\\n+                InsertMove(IR::SymOpnd::New(inlineeFrameDisplaySym, TyMachReg, m_func), dstOpnd, instr);\\n+            }\\n         }\\n     }'}}",
            "message_norm":"[cve-2020-17054]",
            "language":"ro",
            "entities":"[('cve-2020-17054', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/Backend\/Lower.cpp'])",
            "num_files":1.0,
            "patch_content":"From e81e8a51ec7ba3d0dfb6089254f166c2733216e1 Mon Sep 17 00:00:00 2001\nFrom: Paul Leathers <pleath@microsoft.com>\nDate: Wed, 30 Sep 2020 15:00:01 -0700\nSubject: [PATCH] [CVE-2020-17054]\n\n---\n lib\/Backend\/Lower.cpp | 7 +++++--\n 1 file changed, 5 insertions(+), 2 deletions(-)\n\ndiff --git a\/lib\/Backend\/Lower.cpp b\/lib\/Backend\/Lower.cpp\nindex 813227fe3e0..7543a787040 100644\n--- a\/lib\/Backend\/Lower.cpp\n+++ b\/lib\/Backend\/Lower.cpp\n@@ -27152,8 +27152,11 @@ void Lowerer::LowerLdFrameDisplay(IR::Instr *instr, bool doStackFrameDisplay)\n         if (instr->m_func != this->m_func && this->m_func->DoStackFrameDisplay())\n         {\n             StackSym * inlineeFrameDisplaySym = instr->m_func->GetLocalFrameDisplaySym();\n-            Assert(inlineeFrameDisplaySym->IsAllocated());\n-            InsertMove(IR::SymOpnd::New(inlineeFrameDisplaySym, TyMachReg, m_func), dstOpnd, instr);\n+            Assert((inlineeFrameDisplaySym && inlineeFrameDisplaySym->IsAllocated()) || this->m_func->IsLoopBody());\n+            if (inlineeFrameDisplaySym && inlineeFrameDisplaySym->IsAllocated())\n+            {\n+                InsertMove(IR::SymOpnd::New(inlineeFrameDisplaySym, TyMachReg, m_func), dstOpnd, instr);\n+            }\n         }\n     }"
        },
        {
            "index":850,
            "vuln_id":"GHSA-8m49-2xj8-67v9",
            "cwe_id":"{'CWE-59'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/waycrate\/swhkd\/commit\/0b620a09605afb815c6d8d8953bbb7a10a8c0575'}",
            "dataset":"osv",
            "summary":"Data Loss\/Denial of Service in SWHKD SWHKD 1.1.5 unsafely uses the \/tmp\/swhks.pid pathname. There can be data loss or a denial of service. A patch is available on the `1.1.0` branch of the repository.",
            "published_date":"2022-03-31",
            "chain_len":1,
            "project":"https:\/\/github.com\/waycrate\/swhkd",
            "commit_href":"https:\/\/github.com\/waycrate\/swhkd\/commit\/0b620a09605afb815c6d8d8953bbb7a10a8c0575",
            "commit_sha":"0b620a09605afb815c6d8d8953bbb7a10a8c0575",
            "patch":"SINGLE",
            "chain_ord":"['0b620a09605afb815c6d8d8953bbb7a10a8c0575']",
            "before_first_fix_commit":"{'f70b99dd575fab79d8a942111a6980431f006818'}",
            "last_fix_commit":"0b620a09605afb815c6d8d8953bbb7a10a8c0575",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/25\/2022, 15:20:01",
            "message":"[patch] CVE-2022-27816",
            "author":"Shinyzenith",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/server.rs': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/waycrate\/swhkd\/raw\/0b620a09605afb815c6d8d8953bbb7a10a8c0575\/src%2Fserver.rs', 'patch': '@@ -12,7 +12,7 @@ fn main() -> std::io::Result<()> {\\n     env::set_var(\"RUST_LOG\", \"swhks=trace\");\\n     env_logger::init();\\n \\n-    let pid_file_path = String::from(\"\/tmp\/swhks.pid\");\\n+    let pid_file_path = String::from(format!(\"\/run\/user\/{}\/swhks.pid\", unistd::Uid::current()));\\n     let sock_file_path = String::from(format!(\"\/run\/user\/{}\/swhkd.sock\", unistd::Uid::current()));\\n \\n     if Path::new(&pid_file_path).exists() {'}}",
            "message_norm":"[patch] cve-2022-27816",
            "language":"en",
            "entities":"[('cve-2022-27816', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/server.rs'])",
            "num_files":1.0,
            "patch_content":"From 0b620a09605afb815c6d8d8953bbb7a10a8c0575 Mon Sep 17 00:00:00 2001\nFrom: Shinyzenith <aakashsensharma@gmail.com>\nDate: Fri, 25 Mar 2022 20:50:01 +0530\nSubject: [PATCH] [patch] CVE-2022-27816\n\n---\n src\/server.rs | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/src\/server.rs b\/src\/server.rs\nindex 22fd30f..1cc2764 100644\n--- a\/src\/server.rs\n+++ b\/src\/server.rs\n@@ -12,7 +12,7 @@ fn main() -> std::io::Result<()> {\n     env::set_var(\"RUST_LOG\", \"swhks=trace\");\n     env_logger::init();\n \n-    let pid_file_path = String::from(\"\/tmp\/swhks.pid\");\n+    let pid_file_path = String::from(format!(\"\/run\/user\/{}\/swhks.pid\", unistd::Uid::current()));\n     let sock_file_path = String::from(format!(\"\/run\/user\/{}\/swhkd.sock\", unistd::Uid::current()));\n \n     if Path::new(&pid_file_path).exists() {"
        },
        {
            "index":192,
            "vuln_id":"GHSA-74cr-77xc-8g6r",
            "cwe_id":"{'CWE-400', 'CWE-1321'}",
            "score":7.3,
            "chain":"{'https:\/\/github.com\/apollographql\/apollo-server\/commit\/cea7397582a293af6a5f60947da34b95e669c6c1'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in @apollo\/gateway Versions of `@apollo\/gateway` prior to 0.6.2 are vulnerable to Prototype Pollution. The package uses deepMerge() to merge objects, which may allow attackers to alter the Object prototype through queries with GraphQL aliases. Carefully constructed payloads can override properties of all objects in the application. This may lead to Denial of Service or may be chained with other vulnerabilities leading to Remote Code Execution.\n\n\n## Recommendation\n\nUpgrade to version 0.6.2 or later.",
            "published_date":"2019-06-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/apollographql\/apollo-server",
            "commit_href":"https:\/\/github.com\/apollographql\/apollo-server\/commit\/cea7397582a293af6a5f60947da34b95e669c6c1",
            "commit_sha":"cea7397582a293af6a5f60947da34b95e669c6c1",
            "patch":"SINGLE",
            "chain_ord":"['cea7397582a293af6a5f60947da34b95e669c6c1']",
            "before_first_fix_commit":"{'116e1b46ae8a58d5b77038d66588f208eb9b6e2a'}",
            "last_fix_commit":"cea7397582a293af6a5f60947da34b95e669c6c1",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/04\/2019, 22:58:07",
            "message":"Ignore __proto__ fields in deepMerge",
            "author":"Trevor Scheer",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'packages\/apollo-gateway\/src\/utilities\/deepMerge.ts': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apollographql\/apollo-server\/raw\/cea7397582a293af6a5f60947da34b95e669c6c1\/packages%2Fapollo-gateway%2Fsrc%2Futilities%2FdeepMerge.ts', 'patch': \"@@ -4,7 +4,7 @@ export function deepMerge(target: any, source: any): any {\\n   if (source === undefined || source === null) return target;\\n \\n   for (const key of Object.keys(source)) {\\n-    if (source[key] === undefined) continue;\\n+    if (source[key] === undefined || key === '__proto__') continue;\\n \\n     if (target[key] && isObject(source[key])) {\\n       deepMerge(target[key], source[key]);\"}}",
            "message_norm":"ignore __proto__ fields in deepmerge",
            "language":"nl",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['packages\/apollo-gateway\/src\/utilities\/deepMerge.ts'])",
            "num_files":1.0,
            "patch_content":"From cea7397582a293af6a5f60947da34b95e669c6c1 Mon Sep 17 00:00:00 2001\nFrom: Trevor Scheer <trevor@apollographql.com>\nDate: Tue, 4 Jun 2019 15:58:07 -0700\nSubject: [PATCH] Ignore __proto__ fields in deepMerge\n\n---\n packages\/apollo-gateway\/src\/utilities\/deepMerge.ts | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/packages\/apollo-gateway\/src\/utilities\/deepMerge.ts b\/packages\/apollo-gateway\/src\/utilities\/deepMerge.ts\nindex 27f135103dc..6756a36cac2 100644\n--- a\/packages\/apollo-gateway\/src\/utilities\/deepMerge.ts\n+++ b\/packages\/apollo-gateway\/src\/utilities\/deepMerge.ts\n@@ -4,7 +4,7 @@ export function deepMerge(target: any, source: any): any {\n   if (source === undefined || source === null) return target;\n \n   for (const key of Object.keys(source)) {\n-    if (source[key] === undefined) continue;\n+    if (source[key] === undefined || key === '__proto__') continue;\n \n     if (target[key] && isObject(source[key])) {\n       deepMerge(target[key], source[key]);"
        },
        {
            "index":325,
            "vuln_id":"GHSA-wrp6-9w7f-3wxg",
            "cwe_id":"{'CWE-79'}",
            "score":7.3,
            "chain":"{'https:\/\/github.com\/janeczku\/calibre-web\/commit\/7ad419dc8c12180e842a82118f4866ac3d074bc5'}",
            "dataset":"osv",
            "summary":"calibre-web is vulnerable to Cross-site Scripting calibre-web is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "published_date":"2022-01-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/janeczku\/calibre-web",
            "commit_href":"https:\/\/github.com\/janeczku\/calibre-web\/commit\/7ad419dc8c12180e842a82118f4866ac3d074bc5",
            "commit_sha":"7ad419dc8c12180e842a82118f4866ac3d074bc5",
            "patch":"SINGLE",
            "chain_ord":"['7ad419dc8c12180e842a82118f4866ac3d074bc5']",
            "before_first_fix_commit":"{'bcdc97641447965af486964537f3821f47b28874'}",
            "last_fix_commit":"7ad419dc8c12180e842a82118f4866ac3d074bc5",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/20\/2021, 12:40:23",
            "message":"Fix upload of cover and book formats containing html characters",
            "author":"Ozzie Isaacs",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'cps\/static\/js\/edit_books.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/janeczku\/calibre-web\/raw\/7ad419dc8c12180e842a82118f4866ac3d074bc5\/cps%2Fstatic%2Fjs%2Fedit_books.js', 'patch': '@@ -248,15 +248,15 @@ $(\"#btn-upload-format\").on(\"change\", function () {\\n     if (filename.substring(3, 11) === \"fakepath\") {\\n         filename = filename.substring(12);\\n     } \/\/ Remove c:\\\\fake at beginning from localhost chrome\\n-    $(\"#upload-format\").html(filename);\\n+    $(\"#upload-format\").text(filename);\\n });\\n \\n $(\"#btn-upload-cover\").on(\"change\", function () {\\n     var filename = $(this).val();\\n     if (filename.substring(3, 11) === \"fakepath\") {\\n         filename = filename.substring(12);\\n     } \/\/ Remove c:\\\\fake at beginning from localhost chrome\\n-    $(\"#upload-cover\").html(filename);\\n+    $(\"#upload-cover\").text(filename);\\n });\\n \\n $(\"#xchange\").click(function () {'}}",
            "message_norm":"fix upload of cover and book formats containing html characters",
            "language":"en",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['cps\/static\/js\/edit_books.js'])",
            "num_files":1.0,
            "patch_content":"From 7ad419dc8c12180e842a82118f4866ac3d074bc5 Mon Sep 17 00:00:00 2001\nFrom: Ozzie Isaacs <ozzie.fernandez.isaacs@googlemail.com>\nDate: Sat, 20 Nov 2021 13:40:23 +0100\nSubject: [PATCH] Fix upload of cover and book formats containing html\n characters\n\n---\n cps\/static\/js\/edit_books.js | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/cps\/static\/js\/edit_books.js b\/cps\/static\/js\/edit_books.js\nindex ddc7a3e7ee..0bfe078cfe 100644\n--- a\/cps\/static\/js\/edit_books.js\n+++ b\/cps\/static\/js\/edit_books.js\n@@ -248,7 +248,7 @@ $(\"#btn-upload-format\").on(\"change\", function () {\n     if (filename.substring(3, 11) === \"fakepath\") {\n         filename = filename.substring(12);\n     } \/\/ Remove c:\\fake at beginning from localhost chrome\n-    $(\"#upload-format\").html(filename);\n+    $(\"#upload-format\").text(filename);\n });\n \n $(\"#btn-upload-cover\").on(\"change\", function () {\n@@ -256,7 +256,7 @@ $(\"#btn-upload-cover\").on(\"change\", function () {\n     if (filename.substring(3, 11) === \"fakepath\") {\n         filename = filename.substring(12);\n     } \/\/ Remove c:\\fake at beginning from localhost chrome\n-    $(\"#upload-cover\").html(filename);\n+    $(\"#upload-cover\").text(filename);\n });\n \n $(\"#xchange\").click(function () {"
        },
        {
            "index":273,
            "vuln_id":"GHSA-m2fc-9h5m-29cm",
            "cwe_id":"{'CWE-77'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/acrontum\/filesystem-template\/pull\/14\/commits\/baeb727b60991ad82d9e63ac660883793abc0acc'}",
            "dataset":"osv",
            "summary":"@acrontum\/filesystem-template vulnerable to Command Injection due to fetchRepo API missing sanitization The package @acrontum\/filesystem-template before 0.0.2 is vulnerable to Arbitrary Command Injection due to the fetchRepo API missing sanitization of the href field of external input.",
            "published_date":"2022-08-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/acrontum\/filesystem-template",
            "commit_href":"https:\/\/github.com\/acrontum\/filesystem-template\/pull\/14\/commits\/baeb727b60991ad82d9e63ac660883793abc0acc",
            "commit_sha":"baeb727b60991ad82d9e63ac660883793abc0acc",
            "patch":"SINGLE",
            "chain_ord":"['baeb727b60991ad82d9e63ac660883793abc0acc']",
            "before_first_fix_commit":"{'7883cb4e87c1bd2bf276f741fa8eeaa2af7565c7'}",
            "last_fix_commit":"baeb727b60991ad82d9e63ac660883793abc0acc",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/04\/2022, 17:45:08",
            "message":"remove url from fetch repo\n\ncloses #13",
            "author":"p-mcgowan",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 3, 'total': 6}",
            "files":"{'src\/lib\/file-utils.ts': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/acrontum\/filesystem-template\/raw\/baeb727b60991ad82d9e63ac660883793abc0acc\/src%2Flib%2Ffile-utils.ts', 'patch': \"@@ -162,7 +162,7 @@ export const fetchSource = async (pathlike: string, options?: SourceOptions): Pr\\n \\n   const cache = getCacheDir(url);\\n   if (!sourceCache[cache?.path]) {\\n-    sourceCache[cache?.path] = isRecipeFile(url.pathname) ? fetchRecipe(url, cache, options) : fetchRepo(url, cache, options);\\n+    sourceCache[cache?.path] = isRecipeFile(url.pathname) ? fetchRecipe(url, cache, options) : fetchRepo(cache, options);\\n   } else {\\n     logger.log(`cache hit on ${cache?.path}`);\\n   }\\n@@ -237,7 +237,7 @@ export const fetchRecipe = async (url: URL, cacheInfo: CacheInfo, options?: Sour\\n  *\\n  * @return {Promise<string>}  The repo.\\n  *\/\\n-export const fetchRepo = async (url: URL, cacheInfo: CacheInfo, options?: SourceOptions): Promise<string> => {\\n+export const fetchRepo = async (cacheInfo: CacheInfo, options?: SourceOptions): Promise<string> => {\\n   let branch = cacheInfo.branch;\\n   const { path: repo, origin, repoName } = cacheInfo;\\n \\n@@ -247,7 +247,7 @@ export const fetchRepo = async (url: URL, cacheInfo: CacheInfo, options?: Source\\n     return repo;\\n   }\\n \\n-  logger.debug({ url, branch, repo, origin });\\n+  logger.debug({ branch, repo, origin });\\n   logger.info(`will clone ${branch ? `${logger.blu(branch)} of ` : ''}${logger.ylw(origin)} into ${logger.grn(repoName)}`);\\n \\n   const cwd = repo;\"}}",
            "message_norm":"remove url from fetch repo\n\ncloses #13",
            "language":"en",
            "entities":"[('remove', 'ACTION', ''), ('#13', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lib\/file-utils.ts'])",
            "num_files":1.0,
            "patch_content":"From baeb727b60991ad82d9e63ac660883793abc0acc Mon Sep 17 00:00:00 2001\nFrom: p-mcgowan <pat@home.com>\nDate: Mon, 4 Apr 2022 19:45:08 +0200\nSubject: [PATCH] remove url from fetch repo\n\ncloses #13\n---\n src\/lib\/file-utils.ts | 6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ndiff --git a\/src\/lib\/file-utils.ts b\/src\/lib\/file-utils.ts\nindex 77e383d..272d2f4 100644\n--- a\/src\/lib\/file-utils.ts\n+++ b\/src\/lib\/file-utils.ts\n@@ -162,7 +162,7 @@ export const fetchSource = async (pathlike: string, options?: SourceOptions): Pr\n \n   const cache = getCacheDir(url);\n   if (!sourceCache[cache?.path]) {\n-    sourceCache[cache?.path] = isRecipeFile(url.pathname) ? fetchRecipe(url, cache, options) : fetchRepo(url, cache, options);\n+    sourceCache[cache?.path] = isRecipeFile(url.pathname) ? fetchRecipe(url, cache, options) : fetchRepo(cache, options);\n   } else {\n     logger.log(`cache hit on ${cache?.path}`);\n   }\n@@ -237,7 +237,7 @@ export const fetchRecipe = async (url: URL, cacheInfo: CacheInfo, options?: Sour\n  *\n  * @return {Promise<string>}  The repo.\n  *\/\n-export const fetchRepo = async (url: URL, cacheInfo: CacheInfo, options?: SourceOptions): Promise<string> => {\n+export const fetchRepo = async (cacheInfo: CacheInfo, options?: SourceOptions): Promise<string> => {\n   let branch = cacheInfo.branch;\n   const { path: repo, origin, repoName } = cacheInfo;\n \n@@ -247,7 +247,7 @@ export const fetchRepo = async (url: URL, cacheInfo: CacheInfo, options?: Source\n     return repo;\n   }\n \n-  logger.debug({ url, branch, repo, origin });\n+  logger.debug({ branch, repo, origin });\n   logger.info(`will clone ${branch ? `${logger.blu(branch)} of ` : ''}${logger.ylw(origin)} into ${logger.grn(repoName)}`);\n \n   const cwd = repo;"
        },
        {
            "index":818,
            "vuln_id":"GHSA-4w97-57v2-3w44",
            "cwe_id":"{'CWE-697'}",
            "score":8.6,
            "chain":"{'https:\/\/github.com\/simpleledger\/slp-validate\/commit\/cde95c0c6470dceb4f023cd462f904135ebd73e7'}",
            "dataset":"osv",
            "summary":"False-negative validation results in MINT transactions with invalid baton ### Impact\nUsers could experience false-negative validation outcomes for [MINT](https:\/\/github.com\/simpleledger\/slp-specifications\/blob\/master\/slp-token-type-1.md#mint---extended-minting-transaction) transaction operations.  A poorly implemented SLP wallet could allow spending of the affected tokens which would result in the destruction of a user's minting baton.\n\n### Patches\nnpm package [slp-validate](https:\/\/www.npmjs.com\/package\/slp-validate) has been patched and published as version 1.2.1.\n\n### Workarounds\nUpgrade to slp-validate 1.2.1.\n\n### References\n* slp-validate [commit](https:\/\/github.com\/simpleledger\/slp-validate\/commit\/cde95c0c6470dceb4f023cd462f904135ebd73e7)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [slp-validate](https:\/\/github.com\/simpleledger\/slp-validate\/issues)",
            "published_date":"2020-05-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/simpleledger\/slp-validate",
            "commit_href":"https:\/\/github.com\/simpleledger\/slp-validate\/commit\/cde95c0c6470dceb4f023cd462f904135ebd73e7",
            "commit_sha":"cde95c0c6470dceb4f023cd462f904135ebd73e7",
            "patch":"SINGLE",
            "chain_ord":"['cde95c0c6470dceb4f023cd462f904135ebd73e7']",
            "before_first_fix_commit":"{'4ca5ea8556bfacdaa6c81f0c3151a23e728cb8b6'}",
            "last_fix_commit":"cde95c0c6470dceb4f023cd462f904135ebd73e7",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/29\/2020, 13:52:56",
            "message":"fix false negative case for MINT transactions\n\nSee the newly added unit test case for this issue.\nCurrently there are 151 unit tests.",
            "author":"James Cramer",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 6, 'total': 16}",
            "files":"{'lib\/validation.ts': {'additions': 10, 'deletions': 6, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/simpleledger\/slp-validate.js\/raw\/cde95c0c6470dceb4f023cd462f904135ebd73e7\/lib%2Fvalidation.ts', 'patch': '@@ -408,10 +408,10 @@ export class ValidatorType1 {\\n                     }\\n                 } catch (_) { }\\n             }\\n-            if (validation.parents.length !== 1) {\\n+            if (validation.parents.length < 1) {\\n                 validation.validity = false;\\n                 validation.waiting = false;\\n-                validation.invalidReason = \"MINT transaction must have 1 valid baton parent.\";\\n+                validation.invalidReason = \"MINT transaction must have at least 1 candidate baton parent input.\";\\n                 return validation.validity!;\\n             }\\n         } else if (slpmsg.transactionType === SlpTransactionType.SEND) {\\n@@ -468,10 +468,14 @@ export class ValidatorType1 {\\n         \/\/ Set validity validation-cache for parents, and handle MINT condition with no valid input\\n         \/\/ we don\\'t need to check proper token id since we only added parents with same ID in above steps.\\n         const parentTxids = [...new Set(validation.parents.map(p => p.txid))];\\n-        for (let i = 0; i < parentTxids.length; i++) {\\n-            const valid = await this.isValidSlpTxid({ txid: parentTxids[i] });\\n-            validation.parents.filter(p => p.txid === parentTxids[i]).map(p => p.valid = valid);\\n-            if (validation.details!.transactionType === SlpTransactionType.MINT && !valid) {\\n+        for (const id of parentTxids) {\\n+            const valid = await this.isValidSlpTxid({ txid: id });\\n+            validation.parents.filter(p => p.txid === id).map(p => p.valid = valid);\\n+        }\\n+\\n+        \/\/ Check MINT for exactly 1 valid MINT baton\\n+        if (validation.details!.transactionType === SlpTransactionType.MINT) {\\n+            if (validation.parents.filter(p => p.valid && p.inputQty === null).length !== 1) {\\n                 validation.validity = false;\\n                 validation.waiting = false;\\n                 validation.invalidReason = \"MINT transaction with invalid baton parent.\";'}}",
            "message_norm":"fix false negative case for mint transactions\n\nsee the newly added unit test case for this issue.\ncurrently there are 151 unit tests.",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('added', 'ACTION', ''), ('issue', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/validation.ts'])",
            "num_files":1.0,
            "patch_content":"From cde95c0c6470dceb4f023cd462f904135ebd73e7 Mon Sep 17 00:00:00 2001\nFrom: James Cramer <jcramer@simpleledger.io>\nDate: Wed, 29 Apr 2020 09:52:56 -0400\nSubject: [PATCH] fix false negative case for MINT transactions\n\nSee the newly added unit test case for this issue.\nCurrently there are 151 unit tests.\n---\n lib\/validation.ts | 16 ++++++++++------\n 1 file changed, 10 insertions(+), 6 deletions(-)\n\ndiff --git a\/lib\/validation.ts b\/lib\/validation.ts\nindex 8e4b5f1..248dd7d 100644\n--- a\/lib\/validation.ts\n+++ b\/lib\/validation.ts\n@@ -408,10 +408,10 @@ export class ValidatorType1 {\n                     }\n                 } catch (_) { }\n             }\n-            if (validation.parents.length !== 1) {\n+            if (validation.parents.length < 1) {\n                 validation.validity = false;\n                 validation.waiting = false;\n-                validation.invalidReason = \"MINT transaction must have 1 valid baton parent.\";\n+                validation.invalidReason = \"MINT transaction must have at least 1 candidate baton parent input.\";\n                 return validation.validity!;\n             }\n         } else if (slpmsg.transactionType === SlpTransactionType.SEND) {\n@@ -468,10 +468,14 @@ export class ValidatorType1 {\n         \/\/ Set validity validation-cache for parents, and handle MINT condition with no valid input\n         \/\/ we don't need to check proper token id since we only added parents with same ID in above steps.\n         const parentTxids = [...new Set(validation.parents.map(p => p.txid))];\n-        for (let i = 0; i < parentTxids.length; i++) {\n-            const valid = await this.isValidSlpTxid({ txid: parentTxids[i] });\n-            validation.parents.filter(p => p.txid === parentTxids[i]).map(p => p.valid = valid);\n-            if (validation.details!.transactionType === SlpTransactionType.MINT && !valid) {\n+        for (const id of parentTxids) {\n+            const valid = await this.isValidSlpTxid({ txid: id });\n+            validation.parents.filter(p => p.txid === id).map(p => p.valid = valid);\n+        }\n+\n+        \/\/ Check MINT for exactly 1 valid MINT baton\n+        if (validation.details!.transactionType === SlpTransactionType.MINT) {\n+            if (validation.parents.filter(p => p.valid && p.inputQty === null).length !== 1) {\n                 validation.validity = false;\n                 validation.waiting = false;\n                 validation.invalidReason = \"MINT transaction with invalid baton parent.\";"
        },
        {
            "index":353,
            "vuln_id":"GHSA-m87f-9fvv-2mgg",
            "cwe_id":"{'CWE-502'}",
            "score":8.4,
            "chain":"{'https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/4374fa2aba383db6526ab36e939eb1cf8ef99879', 'https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/507d066ef432ea27d3e201da08009872a2f37725'}",
            "dataset":"osv",
            "summary":"Deserialization of Untrusted Data in parlai ### Impact\nDue to use of unsafe YAML deserialization logic, an attacker with the ability to modify local YAML configuration files could provide malicious input, resulting in remote code execution or similar risks.\n\n### Patches\nThe issue can be patched by upgrading to v1.1.0 or later. It can also be patched by replacing YAML deserialization with equivalent safe_load calls.\n\n### References\n\n- https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/507d066ef432ea27d3e201da08009872a2f37725\n- https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/4374fa2aba383db6526ab36e939eb1cf8ef99879\n- https:\/\/anon-artist.github.io\/blogs\/blog3.html",
            "published_date":"2021-09-13",
            "chain_len":2,
            "project":"https:\/\/github.com\/facebookresearch\/ParlAI",
            "commit_href":"https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/4374fa2aba383db6526ab36e939eb1cf8ef99879",
            "commit_sha":"4374fa2aba383db6526ab36e939eb1cf8ef99879",
            "patch":"MULTI",
            "chain_ord":"['507d066ef432ea27d3e201da08009872a2f37725', '4374fa2aba383db6526ab36e939eb1cf8ef99879']",
            "before_first_fix_commit":"{'15fbf55f32e64722c452c907425e10fdb977f62e'}",
            "last_fix_commit":"4374fa2aba383db6526ab36e939eb1cf8ef99879",
            "chain_ord_pos":2.0,
            "commit_datetime":"02\/03\/2021, 17:52:21",
            "message":"Update model_chat_blueprint.py (#3429)",
            "author":"Abhiram V",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'parlai\/crowdsourcing\/tasks\/model_chat\/model_chat_blueprint.py': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/facebookresearch\/ParlAI\/raw\/4374fa2aba383db6526ab36e939eb1cf8ef99879\/parlai%2Fcrowdsourcing%2Ftasks%2Fmodel_chat%2Fmodel_chat_blueprint.py', 'patch': '@@ -453,7 +453,7 @@ def __init__(\\n \\n     def _get_shared_models(self, args: \"DictConfig\") -> Dict[str, dict]:\\n         with open(args.blueprint.model_opt_path) as f:\\n-            all_model_opts = yaml.load(f.read())\\n+            all_model_opts = yaml.safe_load(f.read())\\n         active_model_opts = {\\n             model: opt\\n             for model, opt in all_model_opts.items()\\n@@ -557,5 +557,5 @@ def __init__(\\n \\n     def _get_shared_models(self, args: \"DictConfig\") -> Dict[str, dict]:\\n         with open(args.blueprint.model_opt_path) as f:\\n-            model_opts = yaml.load(f.read())\\n+            model_opts = yaml.safe_load(f.read())\\n         return TurkLikeAgent.get_bot_agents(args=args, model_opts=model_opts)'}}",
            "message_norm":"update model_chat_blueprint.py (#3429)",
            "language":"en",
            "entities":"[('#3429', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['parlai\/crowdsourcing\/tasks\/model_chat\/model_chat_blueprint.py'])",
            "num_files":1.0,
            "patch_content":"From 4374fa2aba383db6526ab36e939eb1cf8ef99879 Mon Sep 17 00:00:00 2001\nFrom: Abhiram V <61599526+Anon-Artist@users.noreply.github.com>\nDate: Wed, 3 Feb 2021 17:52:21 +0000\nSubject: [PATCH] Update model_chat_blueprint.py (#3429)\n\n---\n parlai\/crowdsourcing\/tasks\/model_chat\/model_chat_blueprint.py | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/parlai\/crowdsourcing\/tasks\/model_chat\/model_chat_blueprint.py b\/parlai\/crowdsourcing\/tasks\/model_chat\/model_chat_blueprint.py\nindex c6dedbdf78a..bf0e74bc201 100644\n--- a\/parlai\/crowdsourcing\/tasks\/model_chat\/model_chat_blueprint.py\n+++ b\/parlai\/crowdsourcing\/tasks\/model_chat\/model_chat_blueprint.py\n@@ -453,7 +453,7 @@ def __init__(\n \n     def _get_shared_models(self, args: \"DictConfig\") -> Dict[str, dict]:\n         with open(args.blueprint.model_opt_path) as f:\n-            all_model_opts = yaml.load(f.read())\n+            all_model_opts = yaml.safe_load(f.read())\n         active_model_opts = {\n             model: opt\n             for model, opt in all_model_opts.items()\n@@ -557,5 +557,5 @@ def __init__(\n \n     def _get_shared_models(self, args: \"DictConfig\") -> Dict[str, dict]:\n         with open(args.blueprint.model_opt_path) as f:\n-            model_opts = yaml.load(f.read())\n+            model_opts = yaml.safe_load(f.read())\n         return TurkLikeAgent.get_bot_agents(args=args, model_opts=model_opts)"
        },
        {
            "index":323,
            "vuln_id":"GHSA-46hv-7769-j7rx",
            "cwe_id":"{'CWE-548'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/sintaxi\/harp\/commit\/1ec790baeeb2bfdb4584f1998af3d10a8fa31210'}",
            "dataset":"osv",
            "summary":"Unauthorized File Access in harp Affected versions of `harp` are vulnerable to Unauthorized File Access. The package states that it ignores files and directories with names that start with an underscore, such as `_secret-folder`. If the underscore character is URL encoded the server delivers the file.\n\n## Recommendation\n\nUpgrade to version `0.40.2` or later.",
            "published_date":"2019-06-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/sintaxi\/harp",
            "commit_href":"https:\/\/github.com\/sintaxi\/harp\/commit\/1ec790baeeb2bfdb4584f1998af3d10a8fa31210",
            "commit_sha":"1ec790baeeb2bfdb4584f1998af3d10a8fa31210",
            "patch":"SINGLE",
            "chain_ord":"['1ec790baeeb2bfdb4584f1998af3d10a8fa31210']",
            "before_first_fix_commit":"{'d3f7ba27c7554251a91f2987d702a6d4cfe8f081'}",
            "last_fix_commit":"1ec790baeeb2bfdb4584f1998af3d10a8fa31210",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/02\/2021, 18:56:59",
            "message":"Resolves serving private file via encoded underscore. #646",
            "author":"Brock Whitten",
            "comments":null,
            "stats":"{'additions': 867, 'deletions': 1027, 'total': 1894}",
            "files":"{'package-lock.json': {'additions': 867, 'deletions': 1027, 'changes': 1894, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sintaxi\/harp\/raw\/1ec790baeeb2bfdb4584f1998af3d10a8fa31210\/package-lock.json', 'patch': None}}",
            "message_norm":"resolves serving private file via encoded underscore. #646",
            "language":"it",
            "entities":"[('private file', 'SECWORD', ''), ('encoded', 'SECWORD', ''), ('#646', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['package-lock.json'])",
            "num_files":1.0,
            "patch_content":"From 1ec790baeeb2bfdb4584f1998af3d10a8fa31210 Mon Sep 17 00:00:00 2001\nFrom: Brock Whitten <brock@sintaxi.com>\nDate: Wed, 2 Jun 2021 11:56:59 -0700\nSubject: [PATCH] Resolves serving private file via encoded underscore. #646\n\n---\n package-lock.json | 1894 +++++++++++++++++++++------------------------\n 1 file changed, 867 insertions(+), 1027 deletions(-)\n\ndiff --git a\/package-lock.json b\/package-lock.json\nindex fc879d9..c895365 100644\n--- a\/package-lock.json\n+++ b\/package-lock.json\n@@ -44,15 +44,19 @@\n       \"dev\": true\n     },\n     \"node_modules\/ajv\": {\n-      \"version\": \"6.10.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/ajv\/-\/ajv-6.10.0.tgz\",\n-      \"integrity\": \"sha512-nffhOpkymDECQyR0mnsUtoCE8RlX38G0rYP+wgLWFyZuUyuuojSSvi\/+euOiQBIn63whYwYVIIH1TvE3tu4OEg==\",\n+      \"version\": \"6.12.6\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/ajv\/-\/ajv-6.12.6.tgz\",\n+      \"integrity\": \"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"fast-deep-equal\": \"^2.0.1\",\n+        \"fast-deep-equal\": \"^3.1.1\",\n         \"fast-json-stable-stringify\": \"^2.0.0\",\n         \"json-schema-traverse\": \"^0.4.1\",\n         \"uri-js\": \"^4.2.2\"\n+      },\n+      \"funding\": {\n+        \"type\": \"github\",\n+        \"url\": \"https:\/\/github.com\/sponsors\/epoberezkin\"\n       }\n     },\n     \"node_modules\/ansi-colors\": {\n@@ -65,23 +69,27 @@\n       }\n     },\n     \"node_modules\/ansi-regex\": {\n-      \"version\": \"2.1.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-regex\/-\/ansi-regex-2.1.1.tgz\",\n-      \"integrity\": \"sha1-w7M6te42DYbg5ijwRorn7yfWVN8=\",\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-regex\/-\/ansi-regex-3.0.0.tgz\",\n+      \"integrity\": \"sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=\",\n       \"dev\": true,\n       \"engines\": {\n-        \"node\": \">=0.10.0\"\n+        \"node\": \">=4\"\n       }\n     },\n     \"node_modules\/ansi-styles\": {\n-      \"version\": \"3.2.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-3.2.1.tgz\",\n-      \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm\/u+NqfsAxEpWO0Pf9sq8\/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n+      \"version\": \"4.3.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-4.3.0.tgz\",\n+      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n+      \"dev\": true,\n       \"dependencies\": {\n-        \"color-convert\": \"^1.9.0\"\n+        \"color-convert\": \"^2.0.1\"\n       },\n       \"engines\": {\n-        \"node\": \">=4\"\n+        \"node\": \">=8\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https:\/\/github.com\/chalk\/ansi-styles?sponsor=1\"\n       }\n     },\n     \"node_modules\/anymatch\": {\n@@ -96,22 +104,10 @@\n         \"node\": \">= 8\"\n       }\n     },\n-    \"node_modules\/array-filter\": {\n-      \"version\": \"0.0.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/array-filter\/-\/array-filter-0.0.1.tgz\",\n-      \"integrity\": \"sha1-fajPLiZijtcygDWB\/SH2fKzS7uw=\",\n-      \"dev\": true\n-    },\n-    \"node_modules\/array-map\": {\n-      \"version\": \"0.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/array-map\/-\/array-map-0.0.0.tgz\",\n-      \"integrity\": \"sha1-iKK6tz0c97zVwbEYoAP2b2ZfpmI=\",\n-      \"dev\": true\n-    },\n-    \"node_modules\/array-reduce\": {\n-      \"version\": \"0.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/array-reduce\/-\/array-reduce-0.0.0.tgz\",\n-      \"integrity\": \"sha1-FziZ0\/\/Rx9k4PkR5Ul2+J4yrXys=\",\n+    \"node_modules\/argparse\": {\n+      \"version\": \"2.0.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/argparse\/-\/argparse-2.0.1.tgz\",\n+      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf\/PXw1EjAZ+q2\/bEBg3DvurK3Q==\",\n       \"dev\": true\n     },\n     \"node_modules\/asn1\": {\n@@ -162,15 +158,15 @@\n       }\n     },\n     \"node_modules\/aws4\": {\n-      \"version\": \"1.8.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/aws4\/-\/aws4-1.8.0.tgz\",\n-      \"integrity\": \"sha512-ReZxvNHIOv88FlT7rxcXIIC0fPt4KZqZbOlivyWtXLt8ESx84zd3kMC6iK5jVeS2qt+g7ftS7ye4fi06X5rtRQ==\",\n+      \"version\": \"1.11.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/aws4\/-\/aws4-1.11.0.tgz\",\n+      \"integrity\": \"sha512-xh1Rl34h6Fi1DC2WWKfxUTVqRsNnr6LsKz2+hfwDxQJWmrx8+c7ylaqBMcHfl1U1r2dsifOvKX3LQuLNZ+XSvA==\",\n       \"dev\": true\n     },\n     \"node_modules\/balanced-match\": {\n-      \"version\": \"0.4.2\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/balanced-match\/-\/balanced-match-0.4.2.tgz\",\n-      \"integrity\": \"sha1-yz8+PHMtwPAe5wtAPzAuYddwmDg=\"\n+      \"version\": \"1.0.2\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/balanced-match\/-\/balanced-match-1.0.2.tgz\",\n+      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\"\n     },\n     \"node_modules\/basic-auth\": {\n       \"version\": \"2.0.1\",\n@@ -215,11 +211,11 @@\n       }\n     },\n     \"node_modules\/brace-expansion\": {\n-      \"version\": \"1.1.7\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/brace-expansion\/-\/brace-expansion-1.1.7.tgz\",\n-      \"integrity\": \"sha1-Pv\/DxQ4ABTH7cg6v+A8K6O8jz1k=\",\n+      \"version\": \"1.1.11\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/brace-expansion\/-\/brace-expansion-1.1.11.tgz\",\n+      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI\/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n       \"dependencies\": {\n-        \"balanced-match\": \"^0.4.1\",\n+        \"balanced-match\": \"^1.0.0\",\n         \"concat-map\": \"0.0.1\"\n       }\n     },\n@@ -240,6 +236,18 @@\n       \"integrity\": \"sha512-qhAVI1+Av2X7qelOfAIYwXONood6XlZE\/fXaBSmW\/T5SzLAmCgzi+eiWE7fUvbHaeNBQH13UftjpXxsfLkMpgw==\",\n       \"dev\": true\n     },\n+    \"node_modules\/camelcase\": {\n+      \"version\": \"6.2.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/camelcase\/-\/camelcase-6.2.0.tgz\",\n+      \"integrity\": \"sha512-c7wVvbw3f37nuobQNtgsgG9POC9qMbNuMQmTCqZv23b6MIz0fcYpBiOlv9gEN\/hdLdnZTDQhg6e9Dq5M1vKvfg==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https:\/\/github.com\/sponsors\/sindresorhus\"\n+      }\n+    },\n     \"node_modules\/caseless\": {\n       \"version\": \"0.12.0\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/caseless\/-\/caseless-0.12.0.tgz\",\n@@ -247,16 +255,31 @@\n       \"dev\": true\n     },\n     \"node_modules\/chalk\": {\n-      \"version\": \"2.4.2\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/chalk\/-\/chalk-2.4.2.tgz\",\n-      \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8\/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n+      \"version\": \"4.1.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/chalk\/-\/chalk-4.1.1.tgz\",\n+      \"integrity\": \"sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==\",\n+      \"dev\": true,\n       \"dependencies\": {\n-        \"ansi-styles\": \"^3.2.1\",\n-        \"escape-string-regexp\": \"^1.0.5\",\n-        \"supports-color\": \"^5.3.0\"\n+        \"ansi-styles\": \"^4.1.0\",\n+        \"supports-color\": \"^7.1.0\"\n       },\n       \"engines\": {\n-        \"node\": \">=4\"\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https:\/\/github.com\/chalk\/chalk?sponsor=1\"\n+      }\n+    },\n+    \"node_modules\/chalk\/node_modules\/supports-color\": {\n+      \"version\": \"7.2.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-7.2.0.tgz\",\n+      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO\/+Lwxc9+0q2wLyv4Dfvt80\/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"has-flag\": \"^4.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n       }\n     },\n     \"node_modules\/cheerio\": {\n@@ -306,6 +329,61 @@\n         \"fsevents\": \"~2.3.1\"\n       }\n     },\n+    \"node_modules\/cliui\": {\n+      \"version\": \"7.0.4\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/cliui\/-\/cliui-7.0.4.tgz\",\n+      \"integrity\": \"sha512-OcRE68cOsVMXp1Yvonl\/fzkQOyjLSu\/8bhPDfQt0e0\/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"string-width\": \"^4.2.0\",\n+        \"strip-ansi\": \"^6.0.0\",\n+        \"wrap-ansi\": \"^7.0.0\"\n+      }\n+    },\n+    \"node_modules\/cliui\/node_modules\/ansi-regex\": {\n+      \"version\": \"5.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-regex\/-\/ansi-regex-5.0.0.tgz\",\n+      \"integrity\": \"sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f\/lg==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules\/cliui\/node_modules\/is-fullwidth-code-point\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/is-fullwidth-code-point\/-\/is-fullwidth-code-point-3.0.0.tgz\",\n+      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules\/cliui\/node_modules\/string-width\": {\n+      \"version\": \"4.2.2\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/string-width\/-\/string-width-4.2.2.tgz\",\n+      \"integrity\": \"sha512-XBJbT3N4JhVumXE0eoLU9DCjcaF92KLNqTmFCnG1pf8duUxFGwtP6AD6nkjw9a3IdiRtL3E2w3JDiE\/xi3vOeA==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"emoji-regex\": \"^8.0.0\",\n+        \"is-fullwidth-code-point\": \"^3.0.0\",\n+        \"strip-ansi\": \"^6.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules\/cliui\/node_modules\/strip-ansi\": {\n+      \"version\": \"6.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/strip-ansi\/-\/strip-ansi-6.0.0.tgz\",\n+      \"integrity\": \"sha512-AuvKTrTfQNYNIctbR1K\/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"ansi-regex\": \"^5.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n     \"node_modules\/clone\": {\n       \"version\": \"1.0.4\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/clone\/-\/clone-1.0.4.tgz\",\n@@ -315,27 +393,23 @@\n         \"node\": \">=0.8\"\n       }\n     },\n-    \"node_modules\/code-point-at\": {\n-      \"version\": \"1.1.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/code-point-at\/-\/code-point-at-1.1.0.tgz\",\n-      \"integrity\": \"sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c=\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=0.10.0\"\n-      }\n-    },\n     \"node_modules\/color-convert\": {\n-      \"version\": \"1.9.3\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/color-convert\/-\/color-convert-1.9.3.tgz\",\n-      \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G\/SHHJYAT88\/az\/IuDGALsNVbGg==\",\n+      \"version\": \"2.0.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/color-convert\/-\/color-convert-2.0.1.tgz\",\n+      \"integrity\": \"sha512-RRECPsj7iu\/xb5oKYcsFHSppFNnsj\/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK\/U584fMg38ZHCaElKQ==\",\n+      \"dev\": true,\n       \"dependencies\": {\n-        \"color-name\": \"1.1.3\"\n+        \"color-name\": \"~1.1.4\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=7.0.0\"\n       }\n     },\n     \"node_modules\/color-name\": {\n-      \"version\": \"1.1.3\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/color-name\/-\/color-name-1.1.3.tgz\",\n-      \"integrity\": \"sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=\"\n+      \"version\": \"1.1.4\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/color-name\/-\/color-name-1.1.4.tgz\",\n+      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU\/uBL\/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n+      \"dev\": true\n     },\n     \"node_modules\/colors\": {\n       \"version\": \"1.4.0\",\n@@ -346,9 +420,9 @@\n       }\n     },\n     \"node_modules\/combined-stream\": {\n-      \"version\": \"1.0.7\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/combined-stream\/-\/combined-stream-1.0.7.tgz\",\n-      \"integrity\": \"sha512-brWl9y6vOB1xYPZcpZde3N9zDByXTosAeMDo4p1wzo6UMOX4vumB+TP1RZ76sfE6Md68Q0NJSrE\/gbezd4Ul+w==\",\n+      \"version\": \"1.0.8\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/combined-stream\/-\/combined-stream-1.0.8.tgz\",\n+      \"integrity\": \"sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe\/+5cdoEdg==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"delayed-stream\": \"~1.0.0\"\n@@ -363,27 +437,19 @@\n       \"integrity\": \"sha1-2Klr13\/Wjfd5OnMDajug1UBdR3s=\"\n     },\n     \"node_modules\/connect\": {\n-      \"version\": \"3.6.6\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/connect\/-\/connect-3.6.6.tgz\",\n-      \"integrity\": \"sha1-Ce\/2xVr3I24TcTWnJXSFi2eG9SQ=\",\n+      \"version\": \"3.7.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/connect\/-\/connect-3.7.0.tgz\",\n+      \"integrity\": \"sha512-ZqRXc+tZukToSNmh5C2iWMSoV3X1YUcPbqEM4DkEG5tNQXrQUZCNVGGv3IuicnkMtPfGf3Xtp8WCXs295iQ1pQ==\",\n       \"dependencies\": {\n         \"debug\": \"2.6.9\",\n-        \"finalhandler\": \"1.1.0\",\n-        \"parseurl\": \"~1.3.2\",\n+        \"finalhandler\": \"1.1.2\",\n+        \"parseurl\": \"~1.3.3\",\n         \"utils-merge\": \"1.0.1\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.10.0\"\n       }\n     },\n-    \"node_modules\/connect\/node_modules\/debug\": {\n-      \"version\": \"2.6.9\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/debug\/-\/debug-2.6.9.tgz\",\n-      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm\/E7AdgFBVeAPVMNcKGsHMA==\",\n-      \"dependencies\": {\n-        \"ms\": \"2.0.0\"\n-      }\n-    },\n     \"node_modules\/core-util-is\": {\n       \"version\": \"1.0.2\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/core-util-is\/-\/core-util-is-1.0.2.tgz\",\n@@ -424,28 +490,25 @@\n       }\n     },\n     \"node_modules\/debug\": {\n-      \"version\": \"4.3.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/debug\/-\/debug-4.3.1.tgz\",\n-      \"integrity\": \"sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==\",\n-      \"dev\": true,\n+      \"version\": \"2.6.9\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/debug\/-\/debug-2.6.9.tgz\",\n+      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm\/E7AdgFBVeAPVMNcKGsHMA==\",\n       \"dependencies\": {\n-        \"ms\": \"2.1.2\"\n-      },\n+        \"ms\": \"2.0.0\"\n+      }\n+    },\n+    \"node_modules\/decamelize\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/decamelize\/-\/decamelize-4.0.0.tgz\",\n+      \"integrity\": \"sha512-9iE1PgSik9HeIIw2JO94IidnE3eBoQrFJ3w7sFuzSX4DpmZ3v5sZpUiV5Swcf6mQEF+Y0ru8Neo+p+nyh2J+hQ==\",\n+      \"dev\": true,\n       \"engines\": {\n-        \"node\": \">=6.0\"\n+        \"node\": \">=10\"\n       },\n-      \"peerDependenciesMeta\": {\n-        \"supports-color\": {\n-          \"optional\": true\n-        }\n+      \"funding\": {\n+        \"url\": \"https:\/\/github.com\/sponsors\/sindresorhus\"\n       }\n     },\n-    \"node_modules\/debug\/node_modules\/ms\": {\n-      \"version\": \"2.1.2\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/ms\/-\/ms-2.1.2.tgz\",\n-      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk\/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n-      \"dev\": true\n-    },\n     \"node_modules\/delayed-stream\": {\n       \"version\": \"1.0.0\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/delayed-stream\/-\/delayed-stream-1.0.0.tgz\",\n@@ -566,6 +629,15 @@\n       \"resolved\": \"https:\/\/registry.npmjs.org\/envy-json\/-\/envy-json-0.2.1.tgz\",\n       \"integrity\": \"sha1-Oo4+nWzWH9P6OUCPGt4CDTnBsXg=\"\n     },\n+    \"node_modules\/esbuild\": {\n+      \"version\": \"0.12.5\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/esbuild\/-\/esbuild-0.12.5.tgz\",\n+      \"integrity\": \"sha512-vcuP53pA5XiwUU4FnlXM+2PnVjTfHGthM7uP1gtp+9yfheGvFFbq\/KyuESThmtoHPUrfZH5JpxGVJIFDVD1Egw==\",\n+      \"hasInstallScript\": true,\n+      \"bin\": {\n+        \"esbuild\": \"bin\/esbuild\"\n+      }\n+    },\n     \"node_modules\/escalade\": {\n       \"version\": \"3.1.1\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/escalade\/-\/escalade-3.1.1.tgz\",\n@@ -581,11 +653,15 @@\n       \"integrity\": \"sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=\"\n     },\n     \"node_modules\/escape-string-regexp\": {\n-      \"version\": \"1.0.5\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/escape-string-regexp\/-\/escape-string-regexp-1.0.5.tgz\",\n-      \"integrity\": \"sha1-G2HAViGQqN\/2rjuyzwIAyhMLhtQ=\",\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/escape-string-regexp\/-\/escape-string-regexp-4.0.0.tgz\",\n+      \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n+      \"dev\": true,\n       \"engines\": {\n-        \"node\": \">=0.8.0\"\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https:\/\/github.com\/sponsors\/sindresorhus\"\n       }\n     },\n     \"node_modules\/etag\": {\n@@ -612,15 +688,15 @@\n       ]\n     },\n     \"node_modules\/fast-deep-equal\": {\n-      \"version\": \"2.0.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/fast-deep-equal\/-\/fast-deep-equal-2.0.1.tgz\",\n-      \"integrity\": \"sha1-ewUhjd+WZ79\/Nwv3\/bLLFf3Qqkk=\",\n+      \"version\": \"3.1.3\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/fast-deep-equal\/-\/fast-deep-equal-3.1.3.tgz\",\n+      \"integrity\": \"sha512-f3qQ9oQy9j2AhBe\/H9VC91wLmKBCCU\/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\",\n       \"dev\": true\n     },\n     \"node_modules\/fast-json-stable-stringify\": {\n-      \"version\": \"2.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/fast-json-stable-stringify\/-\/fast-json-stable-stringify-2.0.0.tgz\",\n-      \"integrity\": \"sha1-1RQsDK7msRifh9OnYREGT4bIu\/I=\",\n+      \"version\": \"2.1.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/fast-json-stable-stringify\/-\/fast-json-stable-stringify-2.1.0.tgz\",\n+      \"integrity\": \"sha512-lhd\/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\",\n       \"dev\": true\n     },\n     \"node_modules\/filelist\": {\n@@ -643,30 +719,22 @@\n       }\n     },\n     \"node_modules\/finalhandler\": {\n-      \"version\": \"1.1.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/finalhandler\/-\/finalhandler-1.1.0.tgz\",\n-      \"integrity\": \"sha1-zgtoVbRYU+eRsvzGgARtiCU91\/U=\",\n+      \"version\": \"1.1.2\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/finalhandler\/-\/finalhandler-1.1.2.tgz\",\n+      \"integrity\": \"sha512-aAWcW57uxVNrQZqFXjITpW3sIUQmHGG3qSb9mUah9MgMC4NeWhNOlNjXEYq3HjRAvL6arUviZGGJsBg6z0zsWA==\",\n       \"dependencies\": {\n         \"debug\": \"2.6.9\",\n-        \"encodeurl\": \"~1.0.1\",\n+        \"encodeurl\": \"~1.0.2\",\n         \"escape-html\": \"~1.0.3\",\n         \"on-finished\": \"~2.3.0\",\n-        \"parseurl\": \"~1.3.2\",\n-        \"statuses\": \"~1.3.1\",\n+        \"parseurl\": \"~1.3.3\",\n+        \"statuses\": \"~1.5.0\",\n         \"unpipe\": \"~1.0.0\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.8\"\n       }\n     },\n-    \"node_modules\/finalhandler\/node_modules\/debug\": {\n-      \"version\": \"2.6.9\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/debug\/-\/debug-2.6.9.tgz\",\n-      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm\/E7AdgFBVeAPVMNcKGsHMA==\",\n-      \"dependencies\": {\n-        \"ms\": \"2.0.0\"\n-      }\n-    },\n     \"node_modules\/find-up\": {\n       \"version\": \"5.0.0\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/find-up\/-\/find-up-5.0.0.tgz\",\n@@ -802,9 +870,9 @@\n       }\n     },\n     \"node_modules\/graceful-fs\": {\n-      \"version\": \"4.1.15\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/graceful-fs\/-\/graceful-fs-4.1.15.tgz\",\n-      \"integrity\": \"sha512-6uHUhOPEBgQ24HM+r6b\/QwWfZq+yiFcipKFrOFiBEnWdy5sdzYoi+pJeQaPI5qOLRFqWmAXUPQNsielzdLoecA==\"\n+      \"version\": \"4.2.6\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/graceful-fs\/-\/graceful-fs-4.2.6.tgz\",\n+      \"integrity\": \"sha512-nTnJ528pbqxYanhpDYsi4Rd8MAeaBA67+RZ10CM1m3bTAVFEDcd5AuA4a6W5YkGZ1iNXHzZz8T6TBKLeBuNriQ==\"\n     },\n     \"node_modules\/growl\": {\n       \"version\": \"1.10.5\",\n@@ -825,12 +893,13 @@\n       }\n     },\n     \"node_modules\/har-validator\": {\n-      \"version\": \"5.1.3\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/har-validator\/-\/har-validator-5.1.3.tgz\",\n-      \"integrity\": \"sha512-sNvOCzEQNr\/qrvJgc3UG\/kD4QtlHycrzwS+6mfTrrSq97BvaYcPZZI1ZSqGSPR73Cxn4LKTD4PttRwfU7jWq5g==\",\n+      \"version\": \"5.1.5\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/har-validator\/-\/har-validator-5.1.5.tgz\",\n+      \"integrity\": \"sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==\",\n+      \"deprecated\": \"this library is no longer supported\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"ajv\": \"^6.5.5\",\n+        \"ajv\": \"^6.12.3\",\n         \"har-schema\": \"^2.0.0\"\n       },\n       \"engines\": {\n@@ -838,11 +907,12 @@\n       }\n     },\n     \"node_modules\/has-flag\": {\n-      \"version\": \"3.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/has-flag\/-\/has-flag-3.0.0.tgz\",\n-      \"integrity\": \"sha1-tdRU3CGZriJWmfNGfloH87lVuv0=\",\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/has-flag\/-\/has-flag-4.0.0.tgz\",\n+      \"integrity\": \"sha512-EykJT\/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG\/ZxU3EvlMPQ==\",\n+      \"dev\": true,\n       \"engines\": {\n-        \"node\": \">=4\"\n+        \"node\": \">=8\"\n       }\n     },\n     \"node_modules\/he\": {\n@@ -868,29 +938,6 @@\n         \"readable-stream\": \"^3.1.1\"\n       }\n     },\n-    \"node_modules\/htmlparser2\/node_modules\/readable-stream\": {\n-      \"version\": \"3.2.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/readable-stream\/-\/readable-stream-3.2.0.tgz\",\n-      \"integrity\": \"sha512-RV20kLjdmpZuTF1INEb9IA3L68Nmi+Ri7ppZqo78wj\/\/Pn62fCoJyV9zalccNzDD\/OuJpMG4f+pfMl8+L6QdGw==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"inherits\": \"^2.0.3\",\n-        \"string_decoder\": \"^1.1.1\",\n-        \"util-deprecate\": \"^1.0.1\"\n-      },\n-      \"engines\": {\n-        \"node\": \">= 6\"\n-      }\n-    },\n-    \"node_modules\/htmlparser2\/node_modules\/string_decoder\": {\n-      \"version\": \"1.2.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/string_decoder\/-\/string_decoder-1.2.0.tgz\",\n-      \"integrity\": \"sha512-6YqyX6ZWEYguAxgZzHGL7SsCeGx3V2TtOTqZz1xSTSWnqsbWwbptafNyvf\/ACquZUXV3DANr5BDIwNYe1mN42w==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"safe-buffer\": \"~5.1.0\"\n-      }\n-    },\n     \"node_modules\/http-errors\": {\n       \"version\": \"1.7.3\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/http-errors\/-\/http-errors-1.7.3.tgz\",\n@@ -906,19 +953,6 @@\n         \"node\": \">= 0.6\"\n       }\n     },\n-    \"node_modules\/http-errors\/node_modules\/inherits\": {\n-      \"version\": \"2.0.4\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/inherits\/-\/inherits-2.0.4.tgz\",\n-      \"integrity\": \"sha512-k\/vGaX4\/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\n-    },\n-    \"node_modules\/http-errors\/node_modules\/statuses\": {\n-      \"version\": \"1.5.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/statuses\/-\/statuses-1.5.0.tgz\",\n-      \"integrity\": \"sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=\",\n-      \"engines\": {\n-        \"node\": \">= 0.6\"\n-      }\n-    },\n     \"node_modules\/http-signature\": {\n       \"version\": \"1.2.0\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/http-signature\/-\/http-signature-1.2.0.tgz\",\n@@ -945,10 +979,9 @@\n       }\n     },\n     \"node_modules\/inherits\": {\n-      \"version\": \"2.0.3\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/inherits\/-\/inherits-2.0.3.tgz\",\n-      \"integrity\": \"sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=\",\n-      \"dev\": true\n+      \"version\": \"2.0.4\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/inherits\/-\/inherits-2.0.4.tgz\",\n+      \"integrity\": \"sha512-k\/vGaX4\/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\n     },\n     \"node_modules\/is-binary-path\": {\n       \"version\": \"2.1.0\",\n@@ -970,15 +1003,12 @@\n       }\n     },\n     \"node_modules\/is-fullwidth-code-point\": {\n-      \"version\": \"1.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/is-fullwidth-code-point\/-\/is-fullwidth-code-point-1.0.0.tgz\",\n-      \"integrity\": \"sha1-754xOG8DGn8NZDr4L95QxFfvAMs=\",\n+      \"version\": \"2.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/is-fullwidth-code-point\/-\/is-fullwidth-code-point-2.0.0.tgz\",\n+      \"integrity\": \"sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=\",\n       \"dev\": true,\n-      \"dependencies\": {\n-        \"number-is-nan\": \"^1.0.0\"\n-      },\n       \"engines\": {\n-        \"node\": \">=0.10.0\"\n+        \"node\": \">=4\"\n       }\n     },\n     \"node_modules\/is-glob\": {\n@@ -1044,16 +1074,92 @@\n         \"node\": \"*\"\n       }\n     },\n+    \"node_modules\/jake\/node_modules\/ansi-styles\": {\n+      \"version\": \"3.2.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-3.2.1.tgz\",\n+      \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm\/u+NqfsAxEpWO0Pf9sq8\/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n+      \"dependencies\": {\n+        \"color-convert\": \"^1.9.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=4\"\n+      }\n+    },\n     \"node_modules\/jake\/node_modules\/async\": {\n       \"version\": \"0.9.2\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/async\/-\/async-0.9.2.tgz\",\n       \"integrity\": \"sha1-rqdNXmHB+JlhO\/ZL2mbUx48v0X0=\"\n     },\n+    \"node_modules\/jake\/node_modules\/chalk\": {\n+      \"version\": \"2.4.2\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/chalk\/-\/chalk-2.4.2.tgz\",\n+      \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8\/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n+      \"dependencies\": {\n+        \"ansi-styles\": \"^3.2.1\",\n+        \"escape-string-regexp\": \"^1.0.5\",\n+        \"supports-color\": \"^5.3.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=4\"\n+      }\n+    },\n+    \"node_modules\/jake\/node_modules\/color-convert\": {\n+      \"version\": \"1.9.3\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/color-convert\/-\/color-convert-1.9.3.tgz\",\n+      \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G\/SHHJYAT88\/az\/IuDGALsNVbGg==\",\n+      \"dependencies\": {\n+        \"color-name\": \"1.1.3\"\n+      }\n+    },\n+    \"node_modules\/jake\/node_modules\/color-name\": {\n+      \"version\": \"1.1.3\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/color-name\/-\/color-name-1.1.3.tgz\",\n+      \"integrity\": \"sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=\"\n+    },\n+    \"node_modules\/jake\/node_modules\/escape-string-regexp\": {\n+      \"version\": \"1.0.5\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/escape-string-regexp\/-\/escape-string-regexp-1.0.5.tgz\",\n+      \"integrity\": \"sha1-G2HAViGQqN\/2rjuyzwIAyhMLhtQ=\",\n+      \"engines\": {\n+        \"node\": \">=0.8.0\"\n+      }\n+    },\n+    \"node_modules\/jake\/node_modules\/has-flag\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/has-flag\/-\/has-flag-3.0.0.tgz\",\n+      \"integrity\": \"sha1-tdRU3CGZriJWmfNGfloH87lVuv0=\",\n+      \"engines\": {\n+        \"node\": \">=4\"\n+      }\n+    },\n+    \"node_modules\/jake\/node_modules\/supports-color\": {\n+      \"version\": \"5.5.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-5.5.0.tgz\",\n+      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n+      \"dependencies\": {\n+        \"has-flag\": \"^3.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=4\"\n+      }\n+    },\n     \"node_modules\/js-tokens\": {\n       \"version\": \"4.0.0\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/js-tokens\/-\/js-tokens-4.0.0.tgz\",\n       \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW\/PKQ==\"\n     },\n+    \"node_modules\/js-yaml\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/js-yaml\/-\/js-yaml-4.0.0.tgz\",\n+      \"integrity\": \"sha512-pqon0s+4ScYUvX30wxQi3PogGFAlUyH0awepWvwkj4jD4v+ova3RiYw8bmA6x2rDrEaj8i\/oWKoRxpVNW+Re8Q==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"argparse\": \"^2.0.1\"\n+      },\n+      \"bin\": {\n+        \"js-yaml\": \"bin\/js-yaml.js\"\n+      }\n+    },\n     \"node_modules\/jsbn\": {\n       \"version\": \"0.1.1\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/jsbn\/-\/jsbn-0.1.1.tgz\",\n@@ -1080,18 +1186,12 @@\n     },\n     \"node_modules\/jsonfile\": {\n       \"version\": \"2.4.0\",\n-      \"resolved\": \"http:\/\/registry.npmjs.org\/jsonfile\/-\/jsonfile-2.4.0.tgz\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/jsonfile\/-\/jsonfile-2.4.0.tgz\",\n       \"integrity\": \"sha1-NzaitCi4e72gzIO1P6PWM6NcKug=\",\n       \"optionalDependencies\": {\n         \"graceful-fs\": \"^4.1.6\"\n       }\n     },\n-    \"node_modules\/jsonify\": {\n-      \"version\": \"0.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/jsonify\/-\/jsonify-0.0.0.tgz\",\n-      \"integrity\": \"sha1-LHS27kHZPKUbe1qu6PUDYx0lKnM=\",\n-      \"dev\": true\n-    },\n     \"node_modules\/jsprim\": {\n       \"version\": \"1.4.1\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/jsprim\/-\/jsprim-1.4.1.tgz\",\n@@ -1214,76 +1314,6 @@\n         \"node\": \">=10\"\n       }\n     },\n-    \"node_modules\/log-symbols\/node_modules\/ansi-styles\": {\n-      \"version\": \"4.3.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-4.3.0.tgz\",\n-      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"color-convert\": \"^2.0.1\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https:\/\/github.com\/chalk\/ansi-styles?sponsor=1\"\n-      }\n-    },\n-    \"node_modules\/log-symbols\/node_modules\/chalk\": {\n-      \"version\": \"4.1.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/chalk\/-\/chalk-4.1.1.tgz\",\n-      \"integrity\": \"sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"ansi-styles\": \"^4.1.0\",\n-        \"supports-color\": \"^7.1.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=10\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https:\/\/github.com\/chalk\/chalk?sponsor=1\"\n-      }\n-    },\n-    \"node_modules\/log-symbols\/node_modules\/color-convert\": {\n-      \"version\": \"2.0.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/color-convert\/-\/color-convert-2.0.1.tgz\",\n-      \"integrity\": \"sha512-RRECPsj7iu\/xb5oKYcsFHSppFNnsj\/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK\/U584fMg38ZHCaElKQ==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"color-name\": \"~1.1.4\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=7.0.0\"\n-      }\n-    },\n-    \"node_modules\/log-symbols\/node_modules\/color-name\": {\n-      \"version\": \"1.1.4\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/color-name\/-\/color-name-1.1.4.tgz\",\n-      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU\/uBL\/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n-      \"dev\": true\n-    },\n-    \"node_modules\/log-symbols\/node_modules\/has-flag\": {\n-      \"version\": \"4.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/has-flag\/-\/has-flag-4.0.0.tgz\",\n-      \"integrity\": \"sha512-EykJT\/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG\/ZxU3EvlMPQ==\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      }\n-    },\n-    \"node_modules\/log-symbols\/node_modules\/supports-color\": {\n-      \"version\": \"7.2.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-7.2.0.tgz\",\n-      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO\/+Lwxc9+0q2wLyv4Dfvt80\/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"has-flag\": \"^4.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      }\n-    },\n     \"node_modules\/loose-envify\": {\n       \"version\": \"1.4.0\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/loose-envify\/-\/loose-envify-1.4.0.tgz\",\n@@ -1305,9 +1335,9 @@\n       }\n     },\n     \"node_modules\/marked\": {\n-      \"version\": \"2.0.6\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/marked\/-\/marked-2.0.6.tgz\",\n-      \"integrity\": \"sha512-S2mYj0FzTQa0dLddssqwRVW4EOJOVJ355Xm2Vcbm+LU7GQRGWvwbO5K87OaPSOux2AwTSgtPPaXmc8sDPrhn2A==\",\n+      \"version\": \"2.0.7\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/marked\/-\/marked-2.0.7.tgz\",\n+      \"integrity\": \"sha512-BJXxkuIfJchcXOJWTT2DOL+yFWifFv2yGYOUzvXg8Qz610QKw+sHCvTMYwA+qWGhlA2uivBezChZ\/pBy1tWdkQ==\",\n       \"bin\": {\n         \"marked\": \"bin\/marked\"\n       },\n@@ -1327,19 +1357,19 @@\n       }\n     },\n     \"node_modules\/mime-db\": {\n-      \"version\": \"1.40.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/mime-db\/-\/mime-db-1.40.0.tgz\",\n-      \"integrity\": \"sha512-jYdeOMPy9vnxEqFRRo6ZvTZ8d9oPb+k18PKoYNYUe2stVEBPPwsln\/qWzdbmaIvnhZ9v2P+CuecK+fpUfsV2mA==\",\n+      \"version\": \"1.48.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/mime-db\/-\/mime-db-1.48.0.tgz\",\n+      \"integrity\": \"sha512-FM3QwxV+TnZYQ2aRqhlKBMHxk10lTbMt3bBkMAp54ddrNeVSfcQYOOKuGuy3Ddrm38I04If834fOUSq1yzslJQ==\",\n       \"engines\": {\n         \"node\": \">= 0.6\"\n       }\n     },\n     \"node_modules\/mime-types\": {\n-      \"version\": \"2.1.24\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/mime-types\/-\/mime-types-2.1.24.tgz\",\n-      \"integrity\": \"sha512-WaFHS3MCl5fapm3oLxU4eYDw77IQM2ACcxQ9RIxfaC3ooc6PFuBMGZZsYpvoXS5D5QTWPieo1jjLdAm3TBP3cQ==\",\n+      \"version\": \"2.1.31\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/mime-types\/-\/mime-types-2.1.31.tgz\",\n+      \"integrity\": \"sha512-XGZnNzm3QvgKxa8dpzyhFTHmpP3l5YNusmne07VUOXxou9CqUqYa\/HBy124RqtVh\/O2pECas\/MOcsDgpilPOPg==\",\n       \"dependencies\": {\n-        \"mime-db\": \"1.40.0\"\n+        \"mime-db\": \"1.48.0\"\n       },\n       \"engines\": {\n         \"node\": \">= 0.6\"\n@@ -1405,139 +1435,35 @@\n         \"url\": \"https:\/\/opencollective.com\/mochajs\"\n       }\n     },\n-    \"node_modules\/mocha\/node_modules\/ansi-regex\": {\n-      \"version\": \"5.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-regex\/-\/ansi-regex-5.0.0.tgz\",\n-      \"integrity\": \"sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f\/lg==\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      }\n-    },\n-    \"node_modules\/mocha\/node_modules\/argparse\": {\n-      \"version\": \"2.0.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/argparse\/-\/argparse-2.0.1.tgz\",\n-      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf\/PXw1EjAZ+q2\/bEBg3DvurK3Q==\",\n-      \"dev\": true\n-    },\n-    \"node_modules\/mocha\/node_modules\/cliui\": {\n-      \"version\": \"7.0.4\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/cliui\/-\/cliui-7.0.4.tgz\",\n-      \"integrity\": \"sha512-OcRE68cOsVMXp1Yvonl\/fzkQOyjLSu\/8bhPDfQt0e0\/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==\",\n+    \"node_modules\/mocha\/node_modules\/debug\": {\n+      \"version\": \"4.3.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/debug\/-\/debug-4.3.1.tgz\",\n+      \"integrity\": \"sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"string-width\": \"^4.2.0\",\n-        \"strip-ansi\": \"^6.0.0\",\n-        \"wrap-ansi\": \"^7.0.0\"\n-      }\n-    },\n-    \"node_modules\/mocha\/node_modules\/escape-string-regexp\": {\n-      \"version\": \"4.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/escape-string-regexp\/-\/escape-string-regexp-4.0.0.tgz\",\n-      \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=10\"\n+        \"ms\": \"2.1.2\"\n       },\n-      \"funding\": {\n-        \"url\": \"https:\/\/github.com\/sponsors\/sindresorhus\"\n-      }\n-    },\n-    \"node_modules\/mocha\/node_modules\/has-flag\": {\n-      \"version\": \"4.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/has-flag\/-\/has-flag-4.0.0.tgz\",\n-      \"integrity\": \"sha512-EykJT\/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG\/ZxU3EvlMPQ==\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      }\n-    },\n-    \"node_modules\/mocha\/node_modules\/is-fullwidth-code-point\": {\n-      \"version\": \"3.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/is-fullwidth-code-point\/-\/is-fullwidth-code-point-3.0.0.tgz\",\n-      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n-      \"dev\": true,\n       \"engines\": {\n-        \"node\": \">=8\"\n-      }\n-    },\n-    \"node_modules\/mocha\/node_modules\/js-yaml\": {\n-      \"version\": \"4.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/js-yaml\/-\/js-yaml-4.0.0.tgz\",\n-      \"integrity\": \"sha512-pqon0s+4ScYUvX30wxQi3PogGFAlUyH0awepWvwkj4jD4v+ova3RiYw8bmA6x2rDrEaj8i\/oWKoRxpVNW+Re8Q==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"argparse\": \"^2.0.1\"\n+        \"node\": \">=6.0\"\n       },\n-      \"bin\": {\n-        \"js-yaml\": \"bin\/js-yaml.js\"\n+      \"peerDependenciesMeta\": {\n+        \"supports-color\": {\n+          \"optional\": true\n+        }\n       }\n     },\n+    \"node_modules\/mocha\/node_modules\/debug\/node_modules\/ms\": {\n+      \"version\": \"2.1.2\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/ms\/-\/ms-2.1.2.tgz\",\n+      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk\/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n+      \"dev\": true\n+    },\n     \"node_modules\/mocha\/node_modules\/ms\": {\n       \"version\": \"2.1.3\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/ms\/-\/ms-2.1.3.tgz\",\n       \"integrity\": \"sha512-6FlzubTLZG3J2a\/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq\/s5xXI6\/XXP6tz7R9xAOtHnSO\/tXtF3WRTlA==\",\n       \"dev\": true\n     },\n-    \"node_modules\/mocha\/node_modules\/string-width\": {\n-      \"version\": \"4.2.2\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/string-width\/-\/string-width-4.2.2.tgz\",\n-      \"integrity\": \"sha512-XBJbT3N4JhVumXE0eoLU9DCjcaF92KLNqTmFCnG1pf8duUxFGwtP6AD6nkjw9a3IdiRtL3E2w3JDiE\/xi3vOeA==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"emoji-regex\": \"^8.0.0\",\n-        \"is-fullwidth-code-point\": \"^3.0.0\",\n-        \"strip-ansi\": \"^6.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      }\n-    },\n-    \"node_modules\/mocha\/node_modules\/strip-ansi\": {\n-      \"version\": \"6.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/strip-ansi\/-\/strip-ansi-6.0.0.tgz\",\n-      \"integrity\": \"sha512-AuvKTrTfQNYNIctbR1K\/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"ansi-regex\": \"^5.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      }\n-    },\n-    \"node_modules\/mocha\/node_modules\/supports-color\": {\n-      \"version\": \"8.1.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-8.1.1.tgz\",\n-      \"integrity\": \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"has-flag\": \"^4.0.0\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=10\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https:\/\/github.com\/chalk\/supports-color?sponsor=1\"\n-      }\n-    },\n-    \"node_modules\/mocha\/node_modules\/yargs\": {\n-      \"version\": \"16.2.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/yargs\/-\/yargs-16.2.0.tgz\",\n-      \"integrity\": \"sha512-D1mvvtDG0L5ft\/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"cliui\": \"^7.0.2\",\n-        \"escalade\": \"^3.1.1\",\n-        \"get-caller-file\": \"^2.0.5\",\n-        \"require-directory\": \"^2.1.1\",\n-        \"string-width\": \"^4.2.0\",\n-        \"y18n\": \"^5.0.5\",\n-        \"yargs-parser\": \"^20.2.2\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=10\"\n-      }\n-    },\n     \"node_modules\/ms\": {\n       \"version\": \"2.0.0\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/ms\/-\/ms-2.0.0.tgz\",\n@@ -1583,15 +1509,6 @@\n         \"boolbase\": \"~1.0.0\"\n       }\n     },\n-    \"node_modules\/number-is-nan\": {\n-      \"version\": \"1.0.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/number-is-nan\/-\/number-is-nan-1.0.1.tgz\",\n-      \"integrity\": \"sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0=\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=0.10.0\"\n-      }\n-    },\n     \"node_modules\/oauth-sign\": {\n       \"version\": \"0.9.0\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/oauth-sign\/-\/oauth-sign-0.9.0.tgz\",\n@@ -1660,9 +1577,9 @@\n       }\n     },\n     \"node_modules\/parseurl\": {\n-      \"version\": \"1.3.2\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/parseurl\/-\/parseurl-1.3.2.tgz\",\n-      \"integrity\": \"sha1-\/CidTtiZMRlGDBViUyYs3I3mW\/M=\",\n+      \"version\": \"1.3.3\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/parseurl\/-\/parseurl-1.3.3.tgz\",\n+      \"integrity\": \"sha512-CiyeOxFT\/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\n       \"engines\": {\n         \"node\": \">= 0.8\"\n       }\n@@ -1716,16 +1633,28 @@\n       \"integrity\": \"sha1-8FKijacOYYkX7wqKw0wa5aaChrM=\"\n     },\n     \"node_modules\/psl\": {\n-      \"version\": \"1.1.31\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/psl\/-\/psl-1.1.31.tgz\",\n-      \"integrity\": \"sha512-\/6pt4+C+T+wZUieKR620OpzN\/LlnNKuWjy1iFLQ\/UG35JqHlR\/89MP1d96dUfkf6Dne3TuLQzOYEYshJ+Hx8mw==\",\n+      \"version\": \"1.8.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/psl\/-\/psl-1.8.0.tgz\",\n+      \"integrity\": \"sha512-RIdOzyoavK+hA18OGGWDqUTsCLhtA7IcZ\/6NCs4fFJaHBDab+pDDmDIByWFRQJq2Cd7r1OoQxBGKOaztq+hjIQ==\",\n       \"dev\": true\n     },\n     \"node_modules\/punycode\": {\n-      \"version\": \"1.4.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/punycode\/-\/punycode-1.4.1.tgz\",\n-      \"integrity\": \"sha1-wNWmOycYgArY4esPpSachN1BhF4=\",\n-      \"dev\": true\n+      \"version\": \"2.1.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/punycode\/-\/punycode-2.1.1.tgz\",\n+      \"integrity\": \"sha512-XRsRjdf+j5ml+y\/6GKHPZbrF\/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">=6\"\n+      }\n+    },\n+    \"node_modules\/qs\": {\n+      \"version\": \"6.5.2\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/qs\/-\/qs-6.5.2.tgz\",\n+      \"integrity\": \"sha512-N5ZAX4\/LxJmF+7wN74pUD6qAh9\/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91\/odN2dW\/WOl7qQHNDGA==\",\n+      \"dev\": true,\n+      \"engines\": {\n+        \"node\": \">=0.6\"\n+      }\n     },\n     \"node_modules\/randombytes\": {\n       \"version\": \"2.1.0\",\n@@ -1756,6 +1685,20 @@\n         \"node\": \">=0.10.0\"\n       }\n     },\n+    \"node_modules\/readable-stream\": {\n+      \"version\": \"3.6.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/readable-stream\/-\/readable-stream-3.6.0.tgz\",\n+      \"integrity\": \"sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6\/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"inherits\": \"^2.0.3\",\n+        \"string_decoder\": \"^1.1.1\",\n+        \"util-deprecate\": \"^1.0.1\"\n+      },\n+      \"engines\": {\n+        \"node\": \">= 6\"\n+      }\n+    },\n     \"node_modules\/readdirp\": {\n       \"version\": \"3.5.0\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/readdirp\/-\/readdirp-3.5.0.tgz\",\n@@ -1768,9 +1711,10 @@\n       }\n     },\n     \"node_modules\/request\": {\n-      \"version\": \"2.88.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/request\/-\/request-2.88.0.tgz\",\n-      \"integrity\": \"sha512-NAqBSrijGLZdM0WZNsInLJpkJokL72XYjUpnB0iwsRgxh7dB6COrHnTBNwN0E+lHDAJzu7kLAkDeY08z2\/A0hg==\",\n+      \"version\": \"2.88.2\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/request\/-\/request-2.88.2.tgz\",\n+      \"integrity\": \"sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==\",\n+      \"deprecated\": \"request has been deprecated, see https:\/\/github.com\/request\/request\/issues\/3142\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"aws-sign2\": \"~0.7.0\",\n@@ -1780,7 +1724,7 @@\n         \"extend\": \"~3.0.2\",\n         \"forever-agent\": \"~0.6.1\",\n         \"form-data\": \"~2.3.2\",\n-        \"har-validator\": \"~5.1.0\",\n+        \"har-validator\": \"~5.1.3\",\n         \"http-signature\": \"~1.2.0\",\n         \"is-typedarray\": \"~1.0.0\",\n         \"isstream\": \"~0.1.2\",\n@@ -1790,21 +1734,12 @@\n         \"performance-now\": \"^2.1.0\",\n         \"qs\": \"~6.5.2\",\n         \"safe-buffer\": \"^5.1.2\",\n-        \"tough-cookie\": \"~2.4.3\",\n+        \"tough-cookie\": \"~2.5.0\",\n         \"tunnel-agent\": \"^0.6.0\",\n         \"uuid\": \"^3.3.2\"\n       },\n       \"engines\": {\n-        \"node\": \">= 4\"\n-      }\n-    },\n-    \"node_modules\/request\/node_modules\/qs\": {\n-      \"version\": \"6.5.2\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/qs\/-\/qs-6.5.2.tgz\",\n-      \"integrity\": \"sha512-N5ZAX4\/LxJmF+7wN74pUD6qAh9\/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91\/odN2dW\/WOl7qQHNDGA==\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=0.6\"\n+        \"node\": \">= 6\"\n       }\n     },\n     \"node_modules\/require-directory\": {\n@@ -1828,11 +1763,11 @@\n       \"dev\": true\n     },\n     \"node_modules\/sass\": {\n-      \"version\": \"1.29.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/sass\/-\/sass-1.29.0.tgz\",\n-      \"integrity\": \"sha512-ZpwAUFgnvAUCdkjwPREny+17BpUj8nh5Yr6zKPGtLNTLrmtoRYIjm7njP24COhjJldjwW1dcv52Lpf4tNZVVRA==\",\n+      \"version\": \"1.34.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/sass\/-\/sass-1.34.0.tgz\",\n+      \"integrity\": \"sha512-rHEN0BscqjUYuomUEaqq3BMgsXqQfkcMVR7UhscsAVub0\/spUrZGBMxQXFS2kfiDsPLZw5yuU9iJEFNC2x38Qw==\",\n       \"dependencies\": {\n-        \"chokidar\": \">=2.0.0 <4.0.0\"\n+        \"chokidar\": \">=3.0.0 <4.0.0\"\n       },\n       \"bin\": {\n         \"sass\": \"sass.js\"\n@@ -1864,32 +1799,11 @@\n         \"node\": \">= 0.8.0\"\n       }\n     },\n-    \"node_modules\/send\/node_modules\/debug\": {\n-      \"version\": \"2.6.9\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/debug\/-\/debug-2.6.9.tgz\",\n-      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm\/E7AdgFBVeAPVMNcKGsHMA==\",\n-      \"dependencies\": {\n-        \"ms\": \"2.0.0\"\n-      }\n-    },\n-    \"node_modules\/send\/node_modules\/debug\/node_modules\/ms\": {\n-      \"version\": \"2.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/ms\/-\/ms-2.0.0.tgz\",\n-      \"integrity\": \"sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=\"\n-    },\n     \"node_modules\/send\/node_modules\/ms\": {\n       \"version\": \"2.1.1\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/ms\/-\/ms-2.1.1.tgz\",\n       \"integrity\": \"sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z\/EfhWI4gl1Hwq8B\/GmY\/0oXZ6nF8hDVesS\/FpnYaD\/kOWhYQvyg==\"\n     },\n-    \"node_modules\/send\/node_modules\/statuses\": {\n-      \"version\": \"1.5.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/statuses\/-\/statuses-1.5.0.tgz\",\n-      \"integrity\": \"sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=\",\n-      \"engines\": {\n-        \"node\": \">= 0.6\"\n-      }\n-    },\n     \"node_modules\/serialize-javascript\": {\n       \"version\": \"5.0.1\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/serialize-javascript\/-\/serialize-javascript-5.0.1.tgz\",\n@@ -1905,16 +1819,10 @@\n       \"integrity\": \"sha512-JvdAWfbXeIGaZ9cILp38HntZSFSo3mWg6xGcJJsd+d4aRMOqauag1C63dJfDw7OaMYwEbHMOxEZ1lqVRYP2OAw==\"\n     },\n     \"node_modules\/shell-quote\": {\n-      \"version\": \"1.6.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/shell-quote\/-\/shell-quote-1.6.1.tgz\",\n-      \"integrity\": \"sha1-9HgZSczkAmlxJ0MOo7PFR29IF2c=\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"array-filter\": \"~0.0.0\",\n-        \"array-map\": \"~0.0.0\",\n-        \"array-reduce\": \"~0.0.0\",\n-        \"jsonify\": \"~0.0.0\"\n-      }\n+      \"version\": \"1.7.2\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/shell-quote\/-\/shell-quote-1.7.2.tgz\",\n+      \"integrity\": \"sha512-mRz\/m\/JVscCrkMyPqHc\/bczi3OQHkLTqXHEFu0zDhK\/qfv3UcOA4SVmRCLmos4bhjr9ekVQubj\/R7waKapmiQg==\",\n+      \"dev\": true\n     },\n     \"node_modules\/should\": {\n       \"version\": \"3.3.2\",\n@@ -1938,42 +1846,75 @@\n         \"safer-buffer\": \"^2.0.2\",\n         \"tweetnacl\": \"~0.14.0\"\n       },\n+      \"bin\": {\n+        \"sshpk-conv\": \"bin\/sshpk-conv\",\n+        \"sshpk-sign\": \"bin\/sshpk-sign\",\n+        \"sshpk-verify\": \"bin\/sshpk-verify\"\n+      },\n       \"engines\": {\n         \"node\": \">=0.10.0\"\n       }\n     },\n     \"node_modules\/statuses\": {\n-      \"version\": \"1.3.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/statuses\/-\/statuses-1.3.1.tgz\",\n-      \"integrity\": \"sha1-+vUbnrdKrvOzrPStX2Gr8ky3uT4=\",\n+      \"version\": \"1.5.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/statuses\/-\/statuses-1.5.0.tgz\",\n+      \"integrity\": \"sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=\",\n       \"engines\": {\n         \"node\": \">= 0.6\"\n       }\n     },\n+    \"node_modules\/string_decoder\": {\n+      \"version\": \"1.3.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/string_decoder\/-\/string_decoder-1.3.0.tgz\",\n+      \"integrity\": \"sha512-hkRX8U1WjJFd8LsDJ2yQ\/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup\/wKeA==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"safe-buffer\": \"~5.2.0\"\n+      }\n+    },\n+    \"node_modules\/string_decoder\/node_modules\/safe-buffer\": {\n+      \"version\": \"5.2.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/safe-buffer\/-\/safe-buffer-5.2.1.tgz\",\n+      \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\n+      \"dev\": true,\n+      \"funding\": [\n+        {\n+          \"type\": \"github\",\n+          \"url\": \"https:\/\/github.com\/sponsors\/feross\"\n+        },\n+        {\n+          \"type\": \"patreon\",\n+          \"url\": \"https:\/\/www.patreon.com\/feross\"\n+        },\n+        {\n+          \"type\": \"consulting\",\n+          \"url\": \"https:\/\/feross.org\/support\"\n+        }\n+      ]\n+    },\n     \"node_modules\/string-width\": {\n-      \"version\": \"1.0.2\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/string-width\/-\/string-width-1.0.2.tgz\",\n-      \"integrity\": \"sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=\",\n+      \"version\": \"2.1.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/string-width\/-\/string-width-2.1.1.tgz\",\n+      \"integrity\": \"sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"code-point-at\": \"^1.0.0\",\n-        \"is-fullwidth-code-point\": \"^1.0.0\",\n-        \"strip-ansi\": \"^3.0.0\"\n+        \"is-fullwidth-code-point\": \"^2.0.0\",\n+        \"strip-ansi\": \"^4.0.0\"\n       },\n       \"engines\": {\n-        \"node\": \">=0.10.0\"\n+        \"node\": \">=4\"\n       }\n     },\n     \"node_modules\/strip-ansi\": {\n-      \"version\": \"3.0.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/strip-ansi\/-\/strip-ansi-3.0.1.tgz\",\n-      \"integrity\": \"sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=\",\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/strip-ansi\/-\/strip-ansi-4.0.0.tgz\",\n+      \"integrity\": \"sha1-qEeQIusaw2iocTibY1JixQXuNo8=\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"ansi-regex\": \"^2.0.0\"\n+        \"ansi-regex\": \"^3.0.0\"\n       },\n       \"engines\": {\n-        \"node\": \">=0.10.0\"\n+        \"node\": \">=4\"\n       }\n     },\n     \"node_modules\/strip-json-comments\": {\n@@ -1989,20 +1930,24 @@\n       }\n     },\n     \"node_modules\/supports-color\": {\n-      \"version\": \"5.5.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-5.5.0.tgz\",\n-      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n+      \"version\": \"8.1.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-8.1.1.tgz\",\n+      \"integrity\": \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\",\n+      \"dev\": true,\n       \"dependencies\": {\n-        \"has-flag\": \"^3.0.0\"\n+        \"has-flag\": \"^4.0.0\"\n       },\n       \"engines\": {\n-        \"node\": \">=4\"\n+        \"node\": \">=10\"\n+      },\n+      \"funding\": {\n+        \"url\": \"https:\/\/github.com\/chalk\/supports-color?sponsor=1\"\n       }\n     },\n     \"node_modules\/terraform\": {\n-      \"version\": \"1.20.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/terraform\/-\/terraform-1.20.0.tgz\",\n-      \"integrity\": \"sha512-fkVj8o4hJ1kaoAr8QEK4KjZy2++gNQC7VPJKFxT3YpEyTBqNk+GjirhhlcHhDukrCkbY1VSOHV9QOiuRUEeVZA==\",\n+      \"version\": \"1.20.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/terraform\/-\/terraform-1.20.1.tgz\",\n+      \"integrity\": \"sha512-1YobJ44ZJmYlM1O5YIHYbrGMQYVxCqPiXv72vhXSGQtXCV4MYvUwz2Fd3ShFcqZWKOzyRFPw0KAh3otQ8ZAaYg==\",\n       \"dependencies\": {\n         \"ejs\": \"^3.1.6\",\n         \"esbuild\": \"^0.12.1\",\n@@ -2013,15 +1958,6 @@\n         \"through\": \"2.3.8\"\n       }\n     },\n-    \"node_modules\/terraform\/node_modules\/esbuild\": {\n-      \"version\": \"0.12.5\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/esbuild\/-\/esbuild-0.12.5.tgz\",\n-      \"integrity\": \"sha512-vcuP53pA5XiwUU4FnlXM+2PnVjTfHGthM7uP1gtp+9yfheGvFFbq\/KyuESThmtoHPUrfZH5JpxGVJIFDVD1Egw==\",\n-      \"hasInstallScript\": true,\n-      \"bin\": {\n-        \"esbuild\": \"bin\/esbuild\"\n-      }\n-    },\n     \"node_modules\/through\": {\n       \"version\": \"2.3.8\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/through\/-\/through-2.3.8.tgz\",\n@@ -2047,13 +1983,13 @@\n       }\n     },\n     \"node_modules\/tough-cookie\": {\n-      \"version\": \"2.4.3\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/tough-cookie\/-\/tough-cookie-2.4.3.tgz\",\n-      \"integrity\": \"sha512-Q5srk\/4vDM54WJsJio3XNn6K2sCG+CQ8G5Wz6bZhRZoAe\/+TxjWB\/GlFAnYEbkYVlON9FMk\/fE3h2RLpPXo4lQ==\",\n+      \"version\": \"2.5.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/tough-cookie\/-\/tough-cookie-2.5.0.tgz\",\n+      \"integrity\": \"sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX\/qboeycw6iO8JwVv2+g==\",\n       \"dev\": true,\n       \"dependencies\": {\n-        \"psl\": \"^1.1.24\",\n-        \"punycode\": \"^1.4.1\"\n+        \"psl\": \"^1.1.28\",\n+        \"punycode\": \"^2.1.1\"\n       },\n       \"engines\": {\n         \"node\": \">=0.8\"\n@@ -2086,23 +2022,14 @@\n       }\n     },\n     \"node_modules\/uri-js\": {\n-      \"version\": \"4.2.2\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/uri-js\/-\/uri-js-4.2.2.tgz\",\n-      \"integrity\": \"sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf\/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==\",\n+      \"version\": \"4.4.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/uri-js\/-\/uri-js-4.4.1.tgz\",\n+      \"integrity\": \"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\",\n       \"dev\": true,\n       \"dependencies\": {\n         \"punycode\": \"^2.1.0\"\n       }\n     },\n-    \"node_modules\/uri-js\/node_modules\/punycode\": {\n-      \"version\": \"2.1.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/punycode\/-\/punycode-2.1.1.tgz\",\n-      \"integrity\": \"sha512-XRsRjdf+j5ml+y\/6GKHPZbrF\/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==\",\n-      \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=6\"\n-      }\n-    },\n     \"node_modules\/util-deprecate\": {\n       \"version\": \"1.0.2\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/util-deprecate\/-\/util-deprecate-1.0.2.tgz\",\n@@ -2118,9 +2045,10 @@\n       }\n     },\n     \"node_modules\/uuid\": {\n-      \"version\": \"3.3.2\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/uuid\/-\/uuid-3.3.2.tgz\",\n-      \"integrity\": \"sha512-yXJmeNaw3DnnKAOKJE51sL\/ZaYfWJRl1pK9dr19YFCu0ObS231AB1\/LbqTKRAQ5kw8A90rA6fr4riOUpTZvQZA==\",\n+      \"version\": \"3.4.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/uuid\/-\/uuid-3.4.0.tgz\",\n+      \"integrity\": \"sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S\/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb\/A==\",\n+      \"deprecated\": \"Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https:\/\/v8.dev\/blog\/math-random for details.\",\n       \"dev\": true,\n       \"bin\": {\n         \"uuid\": \"bin\/uuid\"\n@@ -2192,42 +2120,9 @@\n       \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-regex\/-\/ansi-regex-5.0.0.tgz\",\n       \"integrity\": \"sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f\/lg==\",\n       \"dev\": true,\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      }\n-    },\n-    \"node_modules\/wrap-ansi\/node_modules\/ansi-styles\": {\n-      \"version\": \"4.3.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-4.3.0.tgz\",\n-      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"color-convert\": \"^2.0.1\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=8\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https:\/\/github.com\/chalk\/ansi-styles?sponsor=1\"\n-      }\n-    },\n-    \"node_modules\/wrap-ansi\/node_modules\/color-convert\": {\n-      \"version\": \"2.0.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/color-convert\/-\/color-convert-2.0.1.tgz\",\n-      \"integrity\": \"sha512-RRECPsj7iu\/xb5oKYcsFHSppFNnsj\/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK\/U584fMg38ZHCaElKQ==\",\n-      \"dev\": true,\n-      \"dependencies\": {\n-        \"color-name\": \"~1.1.4\"\n-      },\n-      \"engines\": {\n-        \"node\": \">=7.0.0\"\n-      }\n-    },\n-    \"node_modules\/wrap-ansi\/node_modules\/color-name\": {\n-      \"version\": \"1.1.4\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/color-name\/-\/color-name-1.1.4.tgz\",\n-      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU\/uBL\/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n-      \"dev\": true\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n     },\n     \"node_modules\/wrap-ansi\/node_modules\/is-fullwidth-code-point\": {\n       \"version\": \"3.0.0\",\n@@ -2284,6 +2179,24 @@\n       \"resolved\": \"https:\/\/registry.npmjs.org\/yallist\/-\/yallist-2.1.2.tgz\",\n       \"integrity\": \"sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=\"\n     },\n+    \"node_modules\/yargs\": {\n+      \"version\": \"16.2.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/yargs\/-\/yargs-16.2.0.tgz\",\n+      \"integrity\": \"sha512-D1mvvtDG0L5ft\/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"cliui\": \"^7.0.2\",\n+        \"escalade\": \"^3.1.1\",\n+        \"get-caller-file\": \"^2.0.5\",\n+        \"require-directory\": \"^2.1.1\",\n+        \"string-width\": \"^4.2.0\",\n+        \"y18n\": \"^5.0.5\",\n+        \"yargs-parser\": \"^20.2.2\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=10\"\n+      }\n+    },\n     \"node_modules\/yargs-parser\": {\n       \"version\": \"20.2.4\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/yargs-parser\/-\/yargs-parser-20.2.4.tgz\",\n@@ -2308,28 +2221,48 @@\n         \"node\": \">=10\"\n       }\n     },\n-    \"node_modules\/yargs-unparser\/node_modules\/camelcase\": {\n-      \"version\": \"6.2.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/camelcase\/-\/camelcase-6.2.0.tgz\",\n-      \"integrity\": \"sha512-c7wVvbw3f37nuobQNtgsgG9POC9qMbNuMQmTCqZv23b6MIz0fcYpBiOlv9gEN\/hdLdnZTDQhg6e9Dq5M1vKvfg==\",\n+    \"node_modules\/yargs\/node_modules\/ansi-regex\": {\n+      \"version\": \"5.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-regex\/-\/ansi-regex-5.0.0.tgz\",\n+      \"integrity\": \"sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f\/lg==\",\n       \"dev\": true,\n       \"engines\": {\n-        \"node\": \">=10\"\n-      },\n-      \"funding\": {\n-        \"url\": \"https:\/\/github.com\/sponsors\/sindresorhus\"\n+        \"node\": \">=8\"\n       }\n     },\n-    \"node_modules\/yargs-unparser\/node_modules\/decamelize\": {\n-      \"version\": \"4.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/decamelize\/-\/decamelize-4.0.0.tgz\",\n-      \"integrity\": \"sha512-9iE1PgSik9HeIIw2JO94IidnE3eBoQrFJ3w7sFuzSX4DpmZ3v5sZpUiV5Swcf6mQEF+Y0ru8Neo+p+nyh2J+hQ==\",\n+    \"node_modules\/yargs\/node_modules\/is-fullwidth-code-point\": {\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/is-fullwidth-code-point\/-\/is-fullwidth-code-point-3.0.0.tgz\",\n+      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n       \"dev\": true,\n       \"engines\": {\n-        \"node\": \">=10\"\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules\/yargs\/node_modules\/string-width\": {\n+      \"version\": \"4.2.2\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/string-width\/-\/string-width-4.2.2.tgz\",\n+      \"integrity\": \"sha512-XBJbT3N4JhVumXE0eoLU9DCjcaF92KLNqTmFCnG1pf8duUxFGwtP6AD6nkjw9a3IdiRtL3E2w3JDiE\/xi3vOeA==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"emoji-regex\": \"^8.0.0\",\n+        \"is-fullwidth-code-point\": \"^3.0.0\",\n+        \"strip-ansi\": \"^6.0.0\"\n       },\n-      \"funding\": {\n-        \"url\": \"https:\/\/github.com\/sponsors\/sindresorhus\"\n+      \"engines\": {\n+        \"node\": \">=8\"\n+      }\n+    },\n+    \"node_modules\/yargs\/node_modules\/strip-ansi\": {\n+      \"version\": \"6.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/strip-ansi\/-\/strip-ansi-6.0.0.tgz\",\n+      \"integrity\": \"sha512-AuvKTrTfQNYNIctbR1K\/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==\",\n+      \"dev\": true,\n+      \"dependencies\": {\n+        \"ansi-regex\": \"^5.0.0\"\n+      },\n+      \"engines\": {\n+        \"node\": \">=8\"\n       }\n     },\n     \"node_modules\/yocto-queue\": {\n@@ -2353,12 +2286,12 @@\n       \"dev\": true\n     },\n     \"ajv\": {\n-      \"version\": \"6.10.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/ajv\/-\/ajv-6.10.0.tgz\",\n-      \"integrity\": \"sha512-nffhOpkymDECQyR0mnsUtoCE8RlX38G0rYP+wgLWFyZuUyuuojSSvi\/+euOiQBIn63whYwYVIIH1TvE3tu4OEg==\",\n+      \"version\": \"6.12.6\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/ajv\/-\/ajv-6.12.6.tgz\",\n+      \"integrity\": \"sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==\",\n       \"dev\": true,\n       \"requires\": {\n-        \"fast-deep-equal\": \"^2.0.1\",\n+        \"fast-deep-equal\": \"^3.1.1\",\n         \"fast-json-stable-stringify\": \"^2.0.0\",\n         \"json-schema-traverse\": \"^0.4.1\",\n         \"uri-js\": \"^4.2.2\"\n@@ -2371,17 +2304,18 @@\n       \"dev\": true\n     },\n     \"ansi-regex\": {\n-      \"version\": \"2.1.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-regex\/-\/ansi-regex-2.1.1.tgz\",\n-      \"integrity\": \"sha1-w7M6te42DYbg5ijwRorn7yfWVN8=\",\n+      \"version\": \"3.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-regex\/-\/ansi-regex-3.0.0.tgz\",\n+      \"integrity\": \"sha1-7QMXwyIGT3lGbAKWa922Bas32Zg=\",\n       \"dev\": true\n     },\n     \"ansi-styles\": {\n-      \"version\": \"3.2.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-3.2.1.tgz\",\n-      \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm\/u+NqfsAxEpWO0Pf9sq8\/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n+      \"version\": \"4.3.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-4.3.0.tgz\",\n+      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n+      \"dev\": true,\n       \"requires\": {\n-        \"color-convert\": \"^1.9.0\"\n+        \"color-convert\": \"^2.0.1\"\n       }\n     },\n     \"anymatch\": {\n@@ -2393,22 +2327,10 @@\n         \"picomatch\": \"^2.0.4\"\n       }\n     },\n-    \"array-filter\": {\n-      \"version\": \"0.0.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/array-filter\/-\/array-filter-0.0.1.tgz\",\n-      \"integrity\": \"sha1-fajPLiZijtcygDWB\/SH2fKzS7uw=\",\n-      \"dev\": true\n-    },\n-    \"array-map\": {\n-      \"version\": \"0.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/array-map\/-\/array-map-0.0.0.tgz\",\n-      \"integrity\": \"sha1-iKK6tz0c97zVwbEYoAP2b2ZfpmI=\",\n-      \"dev\": true\n-    },\n-    \"array-reduce\": {\n-      \"version\": \"0.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/array-reduce\/-\/array-reduce-0.0.0.tgz\",\n-      \"integrity\": \"sha1-FziZ0\/\/Rx9k4PkR5Ul2+J4yrXys=\",\n+    \"argparse\": {\n+      \"version\": \"2.0.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/argparse\/-\/argparse-2.0.1.tgz\",\n+      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf\/PXw1EjAZ+q2\/bEBg3DvurK3Q==\",\n       \"dev\": true\n     },\n     \"asn1\": {\n@@ -2450,15 +2372,15 @@\n       \"dev\": true\n     },\n     \"aws4\": {\n-      \"version\": \"1.8.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/aws4\/-\/aws4-1.8.0.tgz\",\n-      \"integrity\": \"sha512-ReZxvNHIOv88FlT7rxcXIIC0fPt4KZqZbOlivyWtXLt8ESx84zd3kMC6iK5jVeS2qt+g7ftS7ye4fi06X5rtRQ==\",\n+      \"version\": \"1.11.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/aws4\/-\/aws4-1.11.0.tgz\",\n+      \"integrity\": \"sha512-xh1Rl34h6Fi1DC2WWKfxUTVqRsNnr6LsKz2+hfwDxQJWmrx8+c7ylaqBMcHfl1U1r2dsifOvKX3LQuLNZ+XSvA==\",\n       \"dev\": true\n     },\n     \"balanced-match\": {\n-      \"version\": \"0.4.2\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/balanced-match\/-\/balanced-match-0.4.2.tgz\",\n-      \"integrity\": \"sha1-yz8+PHMtwPAe5wtAPzAuYddwmDg=\"\n+      \"version\": \"1.0.2\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/balanced-match\/-\/balanced-match-1.0.2.tgz\",\n+      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\"\n     },\n     \"basic-auth\": {\n       \"version\": \"2.0.1\",\n@@ -2497,11 +2419,11 @@\n       }\n     },\n     \"brace-expansion\": {\n-      \"version\": \"1.1.7\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/brace-expansion\/-\/brace-expansion-1.1.7.tgz\",\n-      \"integrity\": \"sha1-Pv\/DxQ4ABTH7cg6v+A8K6O8jz1k=\",\n+      \"version\": \"1.1.11\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/brace-expansion\/-\/brace-expansion-1.1.11.tgz\",\n+      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI\/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\n       \"requires\": {\n-        \"balanced-match\": \"^0.4.1\",\n+        \"balanced-match\": \"^1.0.0\",\n         \"concat-map\": \"0.0.1\"\n       }\n     },\n@@ -2519,6 +2441,12 @@\n       \"integrity\": \"sha512-qhAVI1+Av2X7qelOfAIYwXONood6XlZE\/fXaBSmW\/T5SzLAmCgzi+eiWE7fUvbHaeNBQH13UftjpXxsfLkMpgw==\",\n       \"dev\": true\n     },\n+    \"camelcase\": {\n+      \"version\": \"6.2.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/camelcase\/-\/camelcase-6.2.0.tgz\",\n+      \"integrity\": \"sha512-c7wVvbw3f37nuobQNtgsgG9POC9qMbNuMQmTCqZv23b6MIz0fcYpBiOlv9gEN\/hdLdnZTDQhg6e9Dq5M1vKvfg==\",\n+      \"dev\": true\n+    },\n     \"caseless\": {\n       \"version\": \"0.12.0\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/caseless\/-\/caseless-0.12.0.tgz\",\n@@ -2526,13 +2454,24 @@\n       \"dev\": true\n     },\n     \"chalk\": {\n-      \"version\": \"2.4.2\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/chalk\/-\/chalk-2.4.2.tgz\",\n-      \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8\/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n+      \"version\": \"4.1.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/chalk\/-\/chalk-4.1.1.tgz\",\n+      \"integrity\": \"sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==\",\n+      \"dev\": true,\n       \"requires\": {\n-        \"ansi-styles\": \"^3.2.1\",\n-        \"escape-string-regexp\": \"^1.0.5\",\n-        \"supports-color\": \"^5.3.0\"\n+        \"ansi-styles\": \"^4.1.0\",\n+        \"supports-color\": \"^7.1.0\"\n+      },\n+      \"dependencies\": {\n+        \"supports-color\": {\n+          \"version\": \"7.2.0\",\n+          \"resolved\": \"https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-7.2.0.tgz\",\n+          \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO\/+Lwxc9+0q2wLyv4Dfvt80\/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n+          \"dev\": true,\n+          \"requires\": {\n+            \"has-flag\": \"^4.0.0\"\n+          }\n+        }\n       }\n     },\n     \"cheerio\": {\n@@ -2574,30 +2513,71 @@\n         \"readdirp\": \"~3.5.0\"\n       }\n     },\n+    \"cliui\": {\n+      \"version\": \"7.0.4\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/cliui\/-\/cliui-7.0.4.tgz\",\n+      \"integrity\": \"sha512-OcRE68cOsVMXp1Yvonl\/fzkQOyjLSu\/8bhPDfQt0e0\/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==\",\n+      \"dev\": true,\n+      \"requires\": {\n+        \"string-width\": \"^4.2.0\",\n+        \"strip-ansi\": \"^6.0.0\",\n+        \"wrap-ansi\": \"^7.0.0\"\n+      },\n+      \"dependencies\": {\n+        \"ansi-regex\": {\n+          \"version\": \"5.0.0\",\n+          \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-regex\/-\/ansi-regex-5.0.0.tgz\",\n+          \"integrity\": \"sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f\/lg==\",\n+          \"dev\": true\n+        },\n+        \"is-fullwidth-code-point\": {\n+          \"version\": \"3.0.0\",\n+          \"resolved\": \"https:\/\/registry.npmjs.org\/is-fullwidth-code-point\/-\/is-fullwidth-code-point-3.0.0.tgz\",\n+          \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n+          \"dev\": true\n+        },\n+        \"string-width\": {\n+          \"version\": \"4.2.2\",\n+          \"resolved\": \"https:\/\/registry.npmjs.org\/string-width\/-\/string-width-4.2.2.tgz\",\n+          \"integrity\": \"sha512-XBJbT3N4JhVumXE0eoLU9DCjcaF92KLNqTmFCnG1pf8duUxFGwtP6AD6nkjw9a3IdiRtL3E2w3JDiE\/xi3vOeA==\",\n+          \"dev\": true,\n+          \"requires\": {\n+            \"emoji-regex\": \"^8.0.0\",\n+            \"is-fullwidth-code-point\": \"^3.0.0\",\n+            \"strip-ansi\": \"^6.0.0\"\n+          }\n+        },\n+        \"strip-ansi\": {\n+          \"version\": \"6.0.0\",\n+          \"resolved\": \"https:\/\/registry.npmjs.org\/strip-ansi\/-\/strip-ansi-6.0.0.tgz\",\n+          \"integrity\": \"sha512-AuvKTrTfQNYNIctbR1K\/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==\",\n+          \"dev\": true,\n+          \"requires\": {\n+            \"ansi-regex\": \"^5.0.0\"\n+          }\n+        }\n+      }\n+    },\n     \"clone\": {\n       \"version\": \"1.0.4\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/clone\/-\/clone-1.0.4.tgz\",\n       \"integrity\": \"sha1-2jCcwmPfFZlMaIypAheco8fNfH4=\",\n       \"dev\": true\n     },\n-    \"code-point-at\": {\n-      \"version\": \"1.1.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/code-point-at\/-\/code-point-at-1.1.0.tgz\",\n-      \"integrity\": \"sha1-DQcLTQQ6W+ozovGkDi7bPZpMz3c=\",\n-      \"dev\": true\n-    },\n     \"color-convert\": {\n-      \"version\": \"1.9.3\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/color-convert\/-\/color-convert-1.9.3.tgz\",\n-      \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G\/SHHJYAT88\/az\/IuDGALsNVbGg==\",\n+      \"version\": \"2.0.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/color-convert\/-\/color-convert-2.0.1.tgz\",\n+      \"integrity\": \"sha512-RRECPsj7iu\/xb5oKYcsFHSppFNnsj\/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK\/U584fMg38ZHCaElKQ==\",\n+      \"dev\": true,\n       \"requires\": {\n-        \"color-name\": \"1.1.3\"\n+        \"color-name\": \"~1.1.4\"\n       }\n     },\n     \"color-name\": {\n-      \"version\": \"1.1.3\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/color-name\/-\/color-name-1.1.3.tgz\",\n-      \"integrity\": \"sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=\"\n+      \"version\": \"1.1.4\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/color-name\/-\/color-name-1.1.4.tgz\",\n+      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU\/uBL\/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n+      \"dev\": true\n     },\n     \"colors\": {\n       \"version\": \"1.4.0\",\n@@ -2605,9 +2585,9 @@\n       \"integrity\": \"sha512-a+UqTh4kgZg\/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv3PDCZUHbVxuDiH2mtA==\"\n     },\n     \"combined-stream\": {\n-      \"version\": \"1.0.7\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/combined-stream\/-\/combined-stream-1.0.7.tgz\",\n-      \"integrity\": \"sha512-brWl9y6vOB1xYPZcpZde3N9zDByXTosAeMDo4p1wzo6UMOX4vumB+TP1RZ76sfE6Md68Q0NJSrE\/gbezd4Ul+w==\",\n+      \"version\": \"1.0.8\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/combined-stream\/-\/combined-stream-1.0.8.tgz\",\n+      \"integrity\": \"sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe\/+5cdoEdg==\",\n       \"dev\": true,\n       \"requires\": {\n         \"delayed-stream\": \"~1.0.0\"\n@@ -2619,24 +2599,14 @@\n       \"integrity\": \"sha1-2Klr13\/Wjfd5OnMDajug1UBdR3s=\"\n     },\n     \"connect\": {\n-      \"version\": \"3.6.6\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/connect\/-\/connect-3.6.6.tgz\",\n-      \"integrity\": \"sha1-Ce\/2xVr3I24TcTWnJXSFi2eG9SQ=\",\n+      \"version\": \"3.7.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/connect\/-\/connect-3.7.0.tgz\",\n+      \"integrity\": \"sha512-ZqRXc+tZukToSNmh5C2iWMSoV3X1YUcPbqEM4DkEG5tNQXrQUZCNVGGv3IuicnkMtPfGf3Xtp8WCXs295iQ1pQ==\",\n       \"requires\": {\n         \"debug\": \"2.6.9\",\n-        \"finalhandler\": \"1.1.0\",\n-        \"parseurl\": \"~1.3.2\",\n+        \"finalhandler\": \"1.1.2\",\n+        \"parseurl\": \"~1.3.3\",\n         \"utils-merge\": \"1.0.1\"\n-      },\n-      \"dependencies\": {\n-        \"debug\": {\n-          \"version\": \"2.6.9\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/debug\/-\/debug-2.6.9.tgz\",\n-          \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm\/E7AdgFBVeAPVMNcKGsHMA==\",\n-          \"requires\": {\n-            \"ms\": \"2.0.0\"\n-          }\n-        }\n       }\n     },\n     \"core-util-is\": {\n@@ -2673,22 +2643,19 @@\n       }\n     },\n     \"debug\": {\n-      \"version\": \"4.3.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/debug\/-\/debug-4.3.1.tgz\",\n-      \"integrity\": \"sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==\",\n-      \"dev\": true,\n+      \"version\": \"2.6.9\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/debug\/-\/debug-2.6.9.tgz\",\n+      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm\/E7AdgFBVeAPVMNcKGsHMA==\",\n       \"requires\": {\n-        \"ms\": \"2.1.2\"\n-      },\n-      \"dependencies\": {\n-        \"ms\": {\n-          \"version\": \"2.1.2\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/ms\/-\/ms-2.1.2.tgz\",\n-          \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk\/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n-          \"dev\": true\n-        }\n+        \"ms\": \"2.0.0\"\n       }\n     },\n+    \"decamelize\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/decamelize\/-\/decamelize-4.0.0.tgz\",\n+      \"integrity\": \"sha512-9iE1PgSik9HeIIw2JO94IidnE3eBoQrFJ3w7sFuzSX4DpmZ3v5sZpUiV5Swcf6mQEF+Y0ru8Neo+p+nyh2J+hQ==\",\n+      \"dev\": true\n+    },\n     \"delayed-stream\": {\n       \"version\": \"1.0.0\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/delayed-stream\/-\/delayed-stream-1.0.0.tgz\",\n@@ -2791,6 +2758,11 @@\n       \"resolved\": \"https:\/\/registry.npmjs.org\/envy-json\/-\/envy-json-0.2.1.tgz\",\n       \"integrity\": \"sha1-Oo4+nWzWH9P6OUCPGt4CDTnBsXg=\"\n     },\n+    \"esbuild\": {\n+      \"version\": \"0.12.5\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/esbuild\/-\/esbuild-0.12.5.tgz\",\n+      \"integrity\": \"sha512-vcuP53pA5XiwUU4FnlXM+2PnVjTfHGthM7uP1gtp+9yfheGvFFbq\/KyuESThmtoHPUrfZH5JpxGVJIFDVD1Egw==\"\n+    },\n     \"escalade\": {\n       \"version\": \"3.1.1\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/escalade\/-\/escalade-3.1.1.tgz\",\n@@ -2803,9 +2775,10 @@\n       \"integrity\": \"sha1-Aljq5NPQwJdN4cFpGI7wBR0dGYg=\"\n     },\n     \"escape-string-regexp\": {\n-      \"version\": \"1.0.5\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/escape-string-regexp\/-\/escape-string-regexp-1.0.5.tgz\",\n-      \"integrity\": \"sha1-G2HAViGQqN\/2rjuyzwIAyhMLhtQ=\"\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/escape-string-regexp\/-\/escape-string-regexp-4.0.0.tgz\",\n+      \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n+      \"dev\": true\n     },\n     \"etag\": {\n       \"version\": \"1.8.1\",\n@@ -2825,15 +2798,15 @@\n       \"dev\": true\n     },\n     \"fast-deep-equal\": {\n-      \"version\": \"2.0.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/fast-deep-equal\/-\/fast-deep-equal-2.0.1.tgz\",\n-      \"integrity\": \"sha1-ewUhjd+WZ79\/Nwv3\/bLLFf3Qqkk=\",\n+      \"version\": \"3.1.3\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/fast-deep-equal\/-\/fast-deep-equal-3.1.3.tgz\",\n+      \"integrity\": \"sha512-f3qQ9oQy9j2AhBe\/H9VC91wLmKBCCU\/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\",\n       \"dev\": true\n     },\n     \"fast-json-stable-stringify\": {\n-      \"version\": \"2.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/fast-json-stable-stringify\/-\/fast-json-stable-stringify-2.0.0.tgz\",\n-      \"integrity\": \"sha1-1RQsDK7msRifh9OnYREGT4bIu\/I=\",\n+      \"version\": \"2.1.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/fast-json-stable-stringify\/-\/fast-json-stable-stringify-2.1.0.tgz\",\n+      \"integrity\": \"sha512-lhd\/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==\",\n       \"dev\": true\n     },\n     \"filelist\": {\n@@ -2853,27 +2826,17 @@\n       }\n     },\n     \"finalhandler\": {\n-      \"version\": \"1.1.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/finalhandler\/-\/finalhandler-1.1.0.tgz\",\n-      \"integrity\": \"sha1-zgtoVbRYU+eRsvzGgARtiCU91\/U=\",\n+      \"version\": \"1.1.2\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/finalhandler\/-\/finalhandler-1.1.2.tgz\",\n+      \"integrity\": \"sha512-aAWcW57uxVNrQZqFXjITpW3sIUQmHGG3qSb9mUah9MgMC4NeWhNOlNjXEYq3HjRAvL6arUviZGGJsBg6z0zsWA==\",\n       \"requires\": {\n         \"debug\": \"2.6.9\",\n-        \"encodeurl\": \"~1.0.1\",\n+        \"encodeurl\": \"~1.0.2\",\n         \"escape-html\": \"~1.0.3\",\n         \"on-finished\": \"~2.3.0\",\n-        \"parseurl\": \"~1.3.2\",\n-        \"statuses\": \"~1.3.1\",\n+        \"parseurl\": \"~1.3.3\",\n+        \"statuses\": \"~1.5.0\",\n         \"unpipe\": \"~1.0.0\"\n-      },\n-      \"dependencies\": {\n-        \"debug\": {\n-          \"version\": \"2.6.9\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/debug\/-\/debug-2.6.9.tgz\",\n-          \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm\/E7AdgFBVeAPVMNcKGsHMA==\",\n-          \"requires\": {\n-            \"ms\": \"2.0.0\"\n-          }\n-        }\n       }\n     },\n     \"find-up\": {\n@@ -2974,9 +2937,9 @@\n       }\n     },\n     \"graceful-fs\": {\n-      \"version\": \"4.1.15\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/graceful-fs\/-\/graceful-fs-4.1.15.tgz\",\n-      \"integrity\": \"sha512-6uHUhOPEBgQ24HM+r6b\/QwWfZq+yiFcipKFrOFiBEnWdy5sdzYoi+pJeQaPI5qOLRFqWmAXUPQNsielzdLoecA==\"\n+      \"version\": \"4.2.6\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/graceful-fs\/-\/graceful-fs-4.2.6.tgz\",\n+      \"integrity\": \"sha512-nTnJ528pbqxYanhpDYsi4Rd8MAeaBA67+RZ10CM1m3bTAVFEDcd5AuA4a6W5YkGZ1iNXHzZz8T6TBKLeBuNriQ==\"\n     },\n     \"growl\": {\n       \"version\": \"1.10.5\",\n@@ -2991,19 +2954,20 @@\n       \"dev\": true\n     },\n     \"har-validator\": {\n-      \"version\": \"5.1.3\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/har-validator\/-\/har-validator-5.1.3.tgz\",\n-      \"integrity\": \"sha512-sNvOCzEQNr\/qrvJgc3UG\/kD4QtlHycrzwS+6mfTrrSq97BvaYcPZZI1ZSqGSPR73Cxn4LKTD4PttRwfU7jWq5g==\",\n+      \"version\": \"5.1.5\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/har-validator\/-\/har-validator-5.1.5.tgz\",\n+      \"integrity\": \"sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==\",\n       \"dev\": true,\n       \"requires\": {\n-        \"ajv\": \"^6.5.5\",\n+        \"ajv\": \"^6.12.3\",\n         \"har-schema\": \"^2.0.0\"\n       }\n     },\n     \"has-flag\": {\n-      \"version\": \"3.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/has-flag\/-\/has-flag-3.0.0.tgz\",\n-      \"integrity\": \"sha1-tdRU3CGZriJWmfNGfloH87lVuv0=\"\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/has-flag\/-\/has-flag-4.0.0.tgz\",\n+      \"integrity\": \"sha512-EykJT\/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG\/ZxU3EvlMPQ==\",\n+      \"dev\": true\n     },\n     \"he\": {\n       \"version\": \"1.2.0\",\n@@ -3023,28 +2987,6 @@\n         \"entities\": \"^1.1.1\",\n         \"inherits\": \"^2.0.1\",\n         \"readable-stream\": \"^3.1.1\"\n-      },\n-      \"dependencies\": {\n-        \"readable-stream\": {\n-          \"version\": \"3.2.0\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/readable-stream\/-\/readable-stream-3.2.0.tgz\",\n-          \"integrity\": \"sha512-RV20kLjdmpZuTF1INEb9IA3L68Nmi+Ri7ppZqo78wj\/\/Pn62fCoJyV9zalccNzDD\/OuJpMG4f+pfMl8+L6QdGw==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"inherits\": \"^2.0.3\",\n-            \"string_decoder\": \"^1.1.1\",\n-            \"util-deprecate\": \"^1.0.1\"\n-          }\n-        },\n-        \"string_decoder\": {\n-          \"version\": \"1.2.0\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/string_decoder\/-\/string_decoder-1.2.0.tgz\",\n-          \"integrity\": \"sha512-6YqyX6ZWEYguAxgZzHGL7SsCeGx3V2TtOTqZz1xSTSWnqsbWwbptafNyvf\/ACquZUXV3DANr5BDIwNYe1mN42w==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"safe-buffer\": \"~5.1.0\"\n-          }\n-        }\n       }\n     },\n     \"http-errors\": {\n@@ -3057,18 +2999,6 @@\n         \"setprototypeof\": \"1.1.1\",\n         \"statuses\": \">= 1.5.0 < 2\",\n         \"toidentifier\": \"1.0.0\"\n-      },\n-      \"dependencies\": {\n-        \"inherits\": {\n-          \"version\": \"2.0.4\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/inherits\/-\/inherits-2.0.4.tgz\",\n-          \"integrity\": \"sha512-k\/vGaX4\/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\n-        },\n-        \"statuses\": {\n-          \"version\": \"1.5.0\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/statuses\/-\/statuses-1.5.0.tgz\",\n-          \"integrity\": \"sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=\"\n-        }\n       }\n     },\n     \"http-signature\": {\n@@ -3093,10 +3023,9 @@\n       }\n     },\n     \"inherits\": {\n-      \"version\": \"2.0.3\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/inherits\/-\/inherits-2.0.3.tgz\",\n-      \"integrity\": \"sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=\",\n-      \"dev\": true\n+      \"version\": \"2.0.4\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/inherits\/-\/inherits-2.0.4.tgz\",\n+      \"integrity\": \"sha512-k\/vGaX4\/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\n     },\n     \"is-binary-path\": {\n       \"version\": \"2.1.0\",\n@@ -3112,13 +3041,10 @@\n       \"integrity\": \"sha1-qIwCU1eR8C7TfHahueqXc8gz+MI=\"\n     },\n     \"is-fullwidth-code-point\": {\n-      \"version\": \"1.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/is-fullwidth-code-point\/-\/is-fullwidth-code-point-1.0.0.tgz\",\n-      \"integrity\": \"sha1-754xOG8DGn8NZDr4L95QxFfvAMs=\",\n-      \"dev\": true,\n-      \"requires\": {\n-        \"number-is-nan\": \"^1.0.0\"\n-      }\n+      \"version\": \"2.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/is-fullwidth-code-point\/-\/is-fullwidth-code-point-2.0.0.tgz\",\n+      \"integrity\": \"sha1-o7MKXE8ZkYMWeqq5O+764937ZU8=\",\n+      \"dev\": true\n     },\n     \"is-glob\": {\n       \"version\": \"4.0.1\",\n@@ -3168,10 +3094,59 @@\n         \"minimatch\": \"^3.0.4\"\n       },\n       \"dependencies\": {\n+        \"ansi-styles\": {\n+          \"version\": \"3.2.1\",\n+          \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-3.2.1.tgz\",\n+          \"integrity\": \"sha512-VT0ZI6kZRdTh8YyJw3SMbYm\/u+NqfsAxEpWO0Pf9sq8\/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==\",\n+          \"requires\": {\n+            \"color-convert\": \"^1.9.0\"\n+          }\n+        },\n         \"async\": {\n           \"version\": \"0.9.2\",\n           \"resolved\": \"https:\/\/registry.npmjs.org\/async\/-\/async-0.9.2.tgz\",\n           \"integrity\": \"sha1-rqdNXmHB+JlhO\/ZL2mbUx48v0X0=\"\n+        },\n+        \"chalk\": {\n+          \"version\": \"2.4.2\",\n+          \"resolved\": \"https:\/\/registry.npmjs.org\/chalk\/-\/chalk-2.4.2.tgz\",\n+          \"integrity\": \"sha512-Mti+f9lpJNcwF4tWV8\/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==\",\n+          \"requires\": {\n+            \"ansi-styles\": \"^3.2.1\",\n+            \"escape-string-regexp\": \"^1.0.5\",\n+            \"supports-color\": \"^5.3.0\"\n+          }\n+        },\n+        \"color-convert\": {\n+          \"version\": \"1.9.3\",\n+          \"resolved\": \"https:\/\/registry.npmjs.org\/color-convert\/-\/color-convert-1.9.3.tgz\",\n+          \"integrity\": \"sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G\/SHHJYAT88\/az\/IuDGALsNVbGg==\",\n+          \"requires\": {\n+            \"color-name\": \"1.1.3\"\n+          }\n+        },\n+        \"color-name\": {\n+          \"version\": \"1.1.3\",\n+          \"resolved\": \"https:\/\/registry.npmjs.org\/color-name\/-\/color-name-1.1.3.tgz\",\n+          \"integrity\": \"sha1-p9BVi9icQveV3UIyj3QIMcpTvCU=\"\n+        },\n+        \"escape-string-regexp\": {\n+          \"version\": \"1.0.5\",\n+          \"resolved\": \"https:\/\/registry.npmjs.org\/escape-string-regexp\/-\/escape-string-regexp-1.0.5.tgz\",\n+          \"integrity\": \"sha1-G2HAViGQqN\/2rjuyzwIAyhMLhtQ=\"\n+        },\n+        \"has-flag\": {\n+          \"version\": \"3.0.0\",\n+          \"resolved\": \"https:\/\/registry.npmjs.org\/has-flag\/-\/has-flag-3.0.0.tgz\",\n+          \"integrity\": \"sha1-tdRU3CGZriJWmfNGfloH87lVuv0=\"\n+        },\n+        \"supports-color\": {\n+          \"version\": \"5.5.0\",\n+          \"resolved\": \"https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-5.5.0.tgz\",\n+          \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n+          \"requires\": {\n+            \"has-flag\": \"^3.0.0\"\n+          }\n         }\n       }\n     },\n@@ -3180,6 +3155,15 @@\n       \"resolved\": \"https:\/\/registry.npmjs.org\/js-tokens\/-\/js-tokens-4.0.0.tgz\",\n       \"integrity\": \"sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW\/PKQ==\"\n     },\n+    \"js-yaml\": {\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/js-yaml\/-\/js-yaml-4.0.0.tgz\",\n+      \"integrity\": \"sha512-pqon0s+4ScYUvX30wxQi3PogGFAlUyH0awepWvwkj4jD4v+ova3RiYw8bmA6x2rDrEaj8i\/oWKoRxpVNW+Re8Q==\",\n+      \"dev\": true,\n+      \"requires\": {\n+        \"argparse\": \"^2.0.1\"\n+      }\n+    },\n     \"jsbn\": {\n       \"version\": \"0.1.1\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/jsbn\/-\/jsbn-0.1.1.tgz\",\n@@ -3206,18 +3190,12 @@\n     },\n     \"jsonfile\": {\n       \"version\": \"2.4.0\",\n-      \"resolved\": \"http:\/\/registry.npmjs.org\/jsonfile\/-\/jsonfile-2.4.0.tgz\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/jsonfile\/-\/jsonfile-2.4.0.tgz\",\n       \"integrity\": \"sha1-NzaitCi4e72gzIO1P6PWM6NcKug=\",\n       \"requires\": {\n         \"graceful-fs\": \"^4.1.6\"\n       }\n     },\n-    \"jsonify\": {\n-      \"version\": \"0.0.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/jsonify\/-\/jsonify-0.0.0.tgz\",\n-      \"integrity\": \"sha1-LHS27kHZPKUbe1qu6PUDYx0lKnM=\",\n-      \"dev\": true\n-    },\n     \"jsprim\": {\n       \"version\": \"1.4.1\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/jsprim\/-\/jsprim-1.4.1.tgz\",\n@@ -3326,57 +3304,6 @@\n       \"dev\": true,\n       \"requires\": {\n         \"chalk\": \"^4.0.0\"\n-      },\n-      \"dependencies\": {\n-        \"ansi-styles\": {\n-          \"version\": \"4.3.0\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-4.3.0.tgz\",\n-          \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"color-convert\": \"^2.0.1\"\n-          }\n-        },\n-        \"chalk\": {\n-          \"version\": \"4.1.1\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/chalk\/-\/chalk-4.1.1.tgz\",\n-          \"integrity\": \"sha512-diHzdDKxcU+bAsUboHLPEDQiw0qEe0qd7SYUn3HgcFlWgbDcfLGswOHYeGrHKzG9z6UYf01d9VFMfZxPM1xZSg==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"ansi-styles\": \"^4.1.0\",\n-            \"supports-color\": \"^7.1.0\"\n-          }\n-        },\n-        \"color-convert\": {\n-          \"version\": \"2.0.1\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/color-convert\/-\/color-convert-2.0.1.tgz\",\n-          \"integrity\": \"sha512-RRECPsj7iu\/xb5oKYcsFHSppFNnsj\/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK\/U584fMg38ZHCaElKQ==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"color-name\": \"~1.1.4\"\n-          }\n-        },\n-        \"color-name\": {\n-          \"version\": \"1.1.4\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/color-name\/-\/color-name-1.1.4.tgz\",\n-          \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU\/uBL\/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n-          \"dev\": true\n-        },\n-        \"has-flag\": {\n-          \"version\": \"4.0.0\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/has-flag\/-\/has-flag-4.0.0.tgz\",\n-          \"integrity\": \"sha512-EykJT\/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG\/ZxU3EvlMPQ==\",\n-          \"dev\": true\n-        },\n-        \"supports-color\": {\n-          \"version\": \"7.2.0\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-7.2.0.tgz\",\n-          \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO\/+Lwxc9+0q2wLyv4Dfvt80\/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"has-flag\": \"^4.0.0\"\n-          }\n-        }\n       }\n     },\n     \"loose-envify\": {\n@@ -3397,9 +3324,9 @@\n       }\n     },\n     \"marked\": {\n-      \"version\": \"2.0.6\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/marked\/-\/marked-2.0.6.tgz\",\n-      \"integrity\": \"sha512-S2mYj0FzTQa0dLddssqwRVW4EOJOVJ355Xm2Vcbm+LU7GQRGWvwbO5K87OaPSOux2AwTSgtPPaXmc8sDPrhn2A==\"\n+      \"version\": \"2.0.7\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/marked\/-\/marked-2.0.7.tgz\",\n+      \"integrity\": \"sha512-BJXxkuIfJchcXOJWTT2DOL+yFWifFv2yGYOUzvXg8Qz610QKw+sHCvTMYwA+qWGhlA2uivBezChZ\/pBy1tWdkQ==\"\n     },\n     \"mime\": {\n       \"version\": \"1.6.0\",\n@@ -3407,16 +3334,16 @@\n       \"integrity\": \"sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\"\n     },\n     \"mime-db\": {\n-      \"version\": \"1.40.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/mime-db\/-\/mime-db-1.40.0.tgz\",\n-      \"integrity\": \"sha512-jYdeOMPy9vnxEqFRRo6ZvTZ8d9oPb+k18PKoYNYUe2stVEBPPwsln\/qWzdbmaIvnhZ9v2P+CuecK+fpUfsV2mA==\"\n+      \"version\": \"1.48.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/mime-db\/-\/mime-db-1.48.0.tgz\",\n+      \"integrity\": \"sha512-FM3QwxV+TnZYQ2aRqhlKBMHxk10lTbMt3bBkMAp54ddrNeVSfcQYOOKuGuy3Ddrm38I04If834fOUSq1yzslJQ==\"\n     },\n     \"mime-types\": {\n-      \"version\": \"2.1.24\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/mime-types\/-\/mime-types-2.1.24.tgz\",\n-      \"integrity\": \"sha512-WaFHS3MCl5fapm3oLxU4eYDw77IQM2ACcxQ9RIxfaC3ooc6PFuBMGZZsYpvoXS5D5QTWPieo1jjLdAm3TBP3cQ==\",\n+      \"version\": \"2.1.31\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/mime-types\/-\/mime-types-2.1.31.tgz\",\n+      \"integrity\": \"sha512-XGZnNzm3QvgKxa8dpzyhFTHmpP3l5YNusmne07VUOXxou9CqUqYa\/HBy124RqtVh\/O2pECas\/MOcsDgpilPOPg==\",\n       \"requires\": {\n-        \"mime-db\": \"1.40.0\"\n+        \"mime-db\": \"1.48.0\"\n       }\n     },\n     \"minimatch\": {\n@@ -3465,54 +3392,21 @@\n         \"yargs-unparser\": \"2.0.0\"\n       },\n       \"dependencies\": {\n-        \"ansi-regex\": {\n-          \"version\": \"5.0.0\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-regex\/-\/ansi-regex-5.0.0.tgz\",\n-          \"integrity\": \"sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f\/lg==\",\n-          \"dev\": true\n-        },\n-        \"argparse\": {\n-          \"version\": \"2.0.1\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/argparse\/-\/argparse-2.0.1.tgz\",\n-          \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf\/PXw1EjAZ+q2\/bEBg3DvurK3Q==\",\n-          \"dev\": true\n-        },\n-        \"cliui\": {\n-          \"version\": \"7.0.4\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/cliui\/-\/cliui-7.0.4.tgz\",\n-          \"integrity\": \"sha512-OcRE68cOsVMXp1Yvonl\/fzkQOyjLSu\/8bhPDfQt0e0\/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"string-width\": \"^4.2.0\",\n-            \"strip-ansi\": \"^6.0.0\",\n-            \"wrap-ansi\": \"^7.0.0\"\n-          }\n-        },\n-        \"escape-string-regexp\": {\n-          \"version\": \"4.0.0\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/escape-string-regexp\/-\/escape-string-regexp-4.0.0.tgz\",\n-          \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n-          \"dev\": true\n-        },\n-        \"has-flag\": {\n-          \"version\": \"4.0.0\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/has-flag\/-\/has-flag-4.0.0.tgz\",\n-          \"integrity\": \"sha512-EykJT\/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG\/ZxU3EvlMPQ==\",\n-          \"dev\": true\n-        },\n-        \"is-fullwidth-code-point\": {\n-          \"version\": \"3.0.0\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/is-fullwidth-code-point\/-\/is-fullwidth-code-point-3.0.0.tgz\",\n-          \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n-          \"dev\": true\n-        },\n-        \"js-yaml\": {\n-          \"version\": \"4.0.0\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/js-yaml\/-\/js-yaml-4.0.0.tgz\",\n-          \"integrity\": \"sha512-pqon0s+4ScYUvX30wxQi3PogGFAlUyH0awepWvwkj4jD4v+ova3RiYw8bmA6x2rDrEaj8i\/oWKoRxpVNW+Re8Q==\",\n+        \"debug\": {\n+          \"version\": \"4.3.1\",\n+          \"resolved\": \"https:\/\/registry.npmjs.org\/debug\/-\/debug-4.3.1.tgz\",\n+          \"integrity\": \"sha512-doEwdvm4PCeK4K3RQN2ZC2BYUBaxwLARCqZmMjtF8a51J2Rb0xpVloFRnCODwqjpwnAoao4pelN8l3RJdv3gRQ==\",\n           \"dev\": true,\n           \"requires\": {\n-            \"argparse\": \"^2.0.1\"\n+            \"ms\": \"2.1.2\"\n+          },\n+          \"dependencies\": {\n+            \"ms\": {\n+              \"version\": \"2.1.2\",\n+              \"resolved\": \"https:\/\/registry.npmjs.org\/ms\/-\/ms-2.1.2.tgz\",\n+              \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk\/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n+              \"dev\": true\n+            }\n           }\n         },\n         \"ms\": {\n@@ -3520,50 +3414,6 @@\n           \"resolved\": \"https:\/\/registry.npmjs.org\/ms\/-\/ms-2.1.3.tgz\",\n           \"integrity\": \"sha512-6FlzubTLZG3J2a\/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq\/s5xXI6\/XXP6tz7R9xAOtHnSO\/tXtF3WRTlA==\",\n           \"dev\": true\n-        },\n-        \"string-width\": {\n-          \"version\": \"4.2.2\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/string-width\/-\/string-width-4.2.2.tgz\",\n-          \"integrity\": \"sha512-XBJbT3N4JhVumXE0eoLU9DCjcaF92KLNqTmFCnG1pf8duUxFGwtP6AD6nkjw9a3IdiRtL3E2w3JDiE\/xi3vOeA==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"emoji-regex\": \"^8.0.0\",\n-            \"is-fullwidth-code-point\": \"^3.0.0\",\n-            \"strip-ansi\": \"^6.0.0\"\n-          }\n-        },\n-        \"strip-ansi\": {\n-          \"version\": \"6.0.0\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/strip-ansi\/-\/strip-ansi-6.0.0.tgz\",\n-          \"integrity\": \"sha512-AuvKTrTfQNYNIctbR1K\/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"ansi-regex\": \"^5.0.0\"\n-          }\n-        },\n-        \"supports-color\": {\n-          \"version\": \"8.1.1\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-8.1.1.tgz\",\n-          \"integrity\": \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"has-flag\": \"^4.0.0\"\n-          }\n-        },\n-        \"yargs\": {\n-          \"version\": \"16.2.0\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/yargs\/-\/yargs-16.2.0.tgz\",\n-          \"integrity\": \"sha512-D1mvvtDG0L5ft\/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"cliui\": \"^7.0.2\",\n-            \"escalade\": \"^3.1.1\",\n-            \"get-caller-file\": \"^2.0.5\",\n-            \"require-directory\": \"^2.1.1\",\n-            \"string-width\": \"^4.2.0\",\n-            \"y18n\": \"^5.0.5\",\n-            \"yargs-parser\": \"^20.2.2\"\n-          }\n         }\n       }\n     },\n@@ -3603,12 +3453,6 @@\n         \"boolbase\": \"~1.0.0\"\n       }\n     },\n-    \"number-is-nan\": {\n-      \"version\": \"1.0.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/number-is-nan\/-\/number-is-nan-1.0.1.tgz\",\n-      \"integrity\": \"sha1-CXtgK1NCKlIsGvuHkDGDNpQaAR0=\",\n-      \"dev\": true\n-    },\n     \"oauth-sign\": {\n       \"version\": \"0.9.0\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/oauth-sign\/-\/oauth-sign-0.9.0.tgz\",\n@@ -3656,9 +3500,9 @@\n       }\n     },\n     \"parseurl\": {\n-      \"version\": \"1.3.2\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/parseurl\/-\/parseurl-1.3.2.tgz\",\n-      \"integrity\": \"sha1-\/CidTtiZMRlGDBViUyYs3I3mW\/M=\"\n+      \"version\": \"1.3.3\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/parseurl\/-\/parseurl-1.3.3.tgz\",\n+      \"integrity\": \"sha512-CiyeOxFT\/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\"\n     },\n     \"path-exists\": {\n       \"version\": \"4.0.0\",\n@@ -3694,15 +3538,21 @@\n       \"integrity\": \"sha1-8FKijacOYYkX7wqKw0wa5aaChrM=\"\n     },\n     \"psl\": {\n-      \"version\": \"1.1.31\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/psl\/-\/psl-1.1.31.tgz\",\n-      \"integrity\": \"sha512-\/6pt4+C+T+wZUieKR620OpzN\/LlnNKuWjy1iFLQ\/UG35JqHlR\/89MP1d96dUfkf6Dne3TuLQzOYEYshJ+Hx8mw==\",\n+      \"version\": \"1.8.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/psl\/-\/psl-1.8.0.tgz\",\n+      \"integrity\": \"sha512-RIdOzyoavK+hA18OGGWDqUTsCLhtA7IcZ\/6NCs4fFJaHBDab+pDDmDIByWFRQJq2Cd7r1OoQxBGKOaztq+hjIQ==\",\n       \"dev\": true\n     },\n     \"punycode\": {\n-      \"version\": \"1.4.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/punycode\/-\/punycode-1.4.1.tgz\",\n-      \"integrity\": \"sha1-wNWmOycYgArY4esPpSachN1BhF4=\",\n+      \"version\": \"2.1.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/punycode\/-\/punycode-2.1.1.tgz\",\n+      \"integrity\": \"sha512-XRsRjdf+j5ml+y\/6GKHPZbrF\/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==\",\n+      \"dev\": true\n+    },\n+    \"qs\": {\n+      \"version\": \"6.5.2\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/qs\/-\/qs-6.5.2.tgz\",\n+      \"integrity\": \"sha512-N5ZAX4\/LxJmF+7wN74pUD6qAh9\/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91\/odN2dW\/WOl7qQHNDGA==\",\n       \"dev\": true\n     },\n     \"randombytes\": {\n@@ -3728,6 +3578,17 @@\n         \"object-assign\": \"^4.1.1\"\n       }\n     },\n+    \"readable-stream\": {\n+      \"version\": \"3.6.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/readable-stream\/-\/readable-stream-3.6.0.tgz\",\n+      \"integrity\": \"sha512-BViHy7LKeTz4oNnkcLJ+lVSL6vpiFeX6\/d3oSH8zCW7UxP2onchk+vTGB143xuFjHS3deTgkKoXXymXqymiIdA==\",\n+      \"dev\": true,\n+      \"requires\": {\n+        \"inherits\": \"^2.0.3\",\n+        \"string_decoder\": \"^1.1.1\",\n+        \"util-deprecate\": \"^1.0.1\"\n+      }\n+    },\n     \"readdirp\": {\n       \"version\": \"3.5.0\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/readdirp\/-\/readdirp-3.5.0.tgz\",\n@@ -3737,9 +3598,9 @@\n       }\n     },\n     \"request\": {\n-      \"version\": \"2.88.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/request\/-\/request-2.88.0.tgz\",\n-      \"integrity\": \"sha512-NAqBSrijGLZdM0WZNsInLJpkJokL72XYjUpnB0iwsRgxh7dB6COrHnTBNwN0E+lHDAJzu7kLAkDeY08z2\/A0hg==\",\n+      \"version\": \"2.88.2\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/request\/-\/request-2.88.2.tgz\",\n+      \"integrity\": \"sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==\",\n       \"dev\": true,\n       \"requires\": {\n         \"aws-sign2\": \"~0.7.0\",\n@@ -3749,7 +3610,7 @@\n         \"extend\": \"~3.0.2\",\n         \"forever-agent\": \"~0.6.1\",\n         \"form-data\": \"~2.3.2\",\n-        \"har-validator\": \"~5.1.0\",\n+        \"har-validator\": \"~5.1.3\",\n         \"http-signature\": \"~1.2.0\",\n         \"is-typedarray\": \"~1.0.0\",\n         \"isstream\": \"~0.1.2\",\n@@ -3759,17 +3620,9 @@\n         \"performance-now\": \"^2.1.0\",\n         \"qs\": \"~6.5.2\",\n         \"safe-buffer\": \"^5.1.2\",\n-        \"tough-cookie\": \"~2.4.3\",\n+        \"tough-cookie\": \"~2.5.0\",\n         \"tunnel-agent\": \"^0.6.0\",\n         \"uuid\": \"^3.3.2\"\n-      },\n-      \"dependencies\": {\n-        \"qs\": {\n-          \"version\": \"6.5.2\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/qs\/-\/qs-6.5.2.tgz\",\n-          \"integrity\": \"sha512-N5ZAX4\/LxJmF+7wN74pUD6qAh9\/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91\/odN2dW\/WOl7qQHNDGA==\",\n-          \"dev\": true\n-        }\n       }\n     },\n     \"require-directory\": {\n@@ -3790,11 +3643,11 @@\n       \"dev\": true\n     },\n     \"sass\": {\n-      \"version\": \"1.29.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/sass\/-\/sass-1.29.0.tgz\",\n-      \"integrity\": \"sha512-ZpwAUFgnvAUCdkjwPREny+17BpUj8nh5Yr6zKPGtLNTLrmtoRYIjm7njP24COhjJldjwW1dcv52Lpf4tNZVVRA==\",\n+      \"version\": \"1.34.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/sass\/-\/sass-1.34.0.tgz\",\n+      \"integrity\": \"sha512-rHEN0BscqjUYuomUEaqq3BMgsXqQfkcMVR7UhscsAVub0\/spUrZGBMxQXFS2kfiDsPLZw5yuU9iJEFNC2x38Qw==\",\n       \"requires\": {\n-        \"chokidar\": \">=2.0.0 <4.0.0\"\n+        \"chokidar\": \">=3.0.0 <4.0.0\"\n       }\n     },\n     \"send\": {\n@@ -3817,30 +3670,10 @@\n         \"statuses\": \"~1.5.0\"\n       },\n       \"dependencies\": {\n-        \"debug\": {\n-          \"version\": \"2.6.9\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/debug\/-\/debug-2.6.9.tgz\",\n-          \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm\/E7AdgFBVeAPVMNcKGsHMA==\",\n-          \"requires\": {\n-            \"ms\": \"2.0.0\"\n-          },\n-          \"dependencies\": {\n-            \"ms\": {\n-              \"version\": \"2.0.0\",\n-              \"resolved\": \"https:\/\/registry.npmjs.org\/ms\/-\/ms-2.0.0.tgz\",\n-              \"integrity\": \"sha1-VgiurfwAvmwpAd9fmGF4jeDVl8g=\"\n-            }\n-          }\n-        },\n         \"ms\": {\n           \"version\": \"2.1.1\",\n           \"resolved\": \"https:\/\/registry.npmjs.org\/ms\/-\/ms-2.1.1.tgz\",\n           \"integrity\": \"sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z\/EfhWI4gl1Hwq8B\/GmY\/0oXZ6nF8hDVesS\/FpnYaD\/kOWhYQvyg==\"\n-        },\n-        \"statuses\": {\n-          \"version\": \"1.5.0\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/statuses\/-\/statuses-1.5.0.tgz\",\n-          \"integrity\": \"sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=\"\n         }\n       }\n     },\n@@ -3859,16 +3692,10 @@\n       \"integrity\": \"sha512-JvdAWfbXeIGaZ9cILp38HntZSFSo3mWg6xGcJJsd+d4aRMOqauag1C63dJfDw7OaMYwEbHMOxEZ1lqVRYP2OAw==\"\n     },\n     \"shell-quote\": {\n-      \"version\": \"1.6.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/shell-quote\/-\/shell-quote-1.6.1.tgz\",\n-      \"integrity\": \"sha1-9HgZSczkAmlxJ0MOo7PFR29IF2c=\",\n-      \"dev\": true,\n-      \"requires\": {\n-        \"array-filter\": \"~0.0.0\",\n-        \"array-map\": \"~0.0.0\",\n-        \"array-reduce\": \"~0.0.0\",\n-        \"jsonify\": \"~0.0.0\"\n-      }\n+      \"version\": \"1.7.2\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/shell-quote\/-\/shell-quote-1.7.2.tgz\",\n+      \"integrity\": \"sha512-mRz\/m\/JVscCrkMyPqHc\/bczi3OQHkLTqXHEFu0zDhK\/qfv3UcOA4SVmRCLmos4bhjr9ekVQubj\/R7waKapmiQg==\",\n+      \"dev\": true\n     },\n     \"should\": {\n       \"version\": \"3.3.2\",\n@@ -3894,28 +3721,44 @@\n       }\n     },\n     \"statuses\": {\n-      \"version\": \"1.3.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/statuses\/-\/statuses-1.3.1.tgz\",\n-      \"integrity\": \"sha1-+vUbnrdKrvOzrPStX2Gr8ky3uT4=\"\n+      \"version\": \"1.5.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/statuses\/-\/statuses-1.5.0.tgz\",\n+      \"integrity\": \"sha1-Fhx9rBd2Wf2YEfQ3cfqZOBR4Yow=\"\n+    },\n+    \"string_decoder\": {\n+      \"version\": \"1.3.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/string_decoder\/-\/string_decoder-1.3.0.tgz\",\n+      \"integrity\": \"sha512-hkRX8U1WjJFd8LsDJ2yQ\/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup\/wKeA==\",\n+      \"dev\": true,\n+      \"requires\": {\n+        \"safe-buffer\": \"~5.2.0\"\n+      },\n+      \"dependencies\": {\n+        \"safe-buffer\": {\n+          \"version\": \"5.2.1\",\n+          \"resolved\": \"https:\/\/registry.npmjs.org\/safe-buffer\/-\/safe-buffer-5.2.1.tgz\",\n+          \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\n+          \"dev\": true\n+        }\n+      }\n     },\n     \"string-width\": {\n-      \"version\": \"1.0.2\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/string-width\/-\/string-width-1.0.2.tgz\",\n-      \"integrity\": \"sha1-EYvfW4zcUaKn5w0hHgfisLmxB9M=\",\n+      \"version\": \"2.1.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/string-width\/-\/string-width-2.1.1.tgz\",\n+      \"integrity\": \"sha512-nOqH59deCq9SRHlxq1Aw85Jnt4w6KvLKqWVik6oA9ZklXLNIOlqg4F2yrT1MVaTjAqvVwdfeZ7w7aCvJD7ugkw==\",\n       \"dev\": true,\n       \"requires\": {\n-        \"code-point-at\": \"^1.0.0\",\n-        \"is-fullwidth-code-point\": \"^1.0.0\",\n-        \"strip-ansi\": \"^3.0.0\"\n+        \"is-fullwidth-code-point\": \"^2.0.0\",\n+        \"strip-ansi\": \"^4.0.0\"\n       }\n     },\n     \"strip-ansi\": {\n-      \"version\": \"3.0.1\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/strip-ansi\/-\/strip-ansi-3.0.1.tgz\",\n-      \"integrity\": \"sha1-ajhfuIU9lS1f8F0Oiq+UJ43GPc8=\",\n+      \"version\": \"4.0.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/strip-ansi\/-\/strip-ansi-4.0.0.tgz\",\n+      \"integrity\": \"sha1-qEeQIusaw2iocTibY1JixQXuNo8=\",\n       \"dev\": true,\n       \"requires\": {\n-        \"ansi-regex\": \"^2.0.0\"\n+        \"ansi-regex\": \"^3.0.0\"\n       }\n     },\n     \"strip-json-comments\": {\n@@ -3925,17 +3768,18 @@\n       \"dev\": true\n     },\n     \"supports-color\": {\n-      \"version\": \"5.5.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-5.5.0.tgz\",\n-      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\n+      \"version\": \"8.1.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/supports-color\/-\/supports-color-8.1.1.tgz\",\n+      \"integrity\": \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\",\n+      \"dev\": true,\n       \"requires\": {\n-        \"has-flag\": \"^3.0.0\"\n+        \"has-flag\": \"^4.0.0\"\n       }\n     },\n     \"terraform\": {\n-      \"version\": \"1.20.0\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/terraform\/-\/terraform-1.20.0.tgz\",\n-      \"integrity\": \"sha512-fkVj8o4hJ1kaoAr8QEK4KjZy2++gNQC7VPJKFxT3YpEyTBqNk+GjirhhlcHhDukrCkbY1VSOHV9QOiuRUEeVZA==\",\n+      \"version\": \"1.20.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/terraform\/-\/terraform-1.20.1.tgz\",\n+      \"integrity\": \"sha512-1YobJ44ZJmYlM1O5YIHYbrGMQYVxCqPiXv72vhXSGQtXCV4MYvUwz2Fd3ShFcqZWKOzyRFPw0KAh3otQ8ZAaYg==\",\n       \"requires\": {\n         \"ejs\": \"^3.1.6\",\n         \"esbuild\": \"^0.12.1\",\n@@ -3944,13 +3788,6 @@\n         \"react\": \"^17.0.2\",\n         \"sass\": \"^1.29.0\",\n         \"through\": \"2.3.8\"\n-      },\n-      \"dependencies\": {\n-        \"esbuild\": {\n-          \"version\": \"0.12.5\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/esbuild\/-\/esbuild-0.12.5.tgz\",\n-          \"integrity\": \"sha512-vcuP53pA5XiwUU4FnlXM+2PnVjTfHGthM7uP1gtp+9yfheGvFFbq\/KyuESThmtoHPUrfZH5JpxGVJIFDVD1Egw==\"\n-        }\n       }\n     },\n     \"through\": {\n@@ -3972,13 +3809,13 @@\n       \"integrity\": \"sha512-yaOH\/Pk\/VEhBWWTlhI+qXxDFXlejDGcQipMlyxda9nthulaxLZUNcUqFxokp0vcYnvteJln5FNQDRrxj3YcbVw==\"\n     },\n     \"tough-cookie\": {\n-      \"version\": \"2.4.3\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/tough-cookie\/-\/tough-cookie-2.4.3.tgz\",\n-      \"integrity\": \"sha512-Q5srk\/4vDM54WJsJio3XNn6K2sCG+CQ8G5Wz6bZhRZoAe\/+TxjWB\/GlFAnYEbkYVlON9FMk\/fE3h2RLpPXo4lQ==\",\n+      \"version\": \"2.5.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/tough-cookie\/-\/tough-cookie-2.5.0.tgz\",\n+      \"integrity\": \"sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX\/qboeycw6iO8JwVv2+g==\",\n       \"dev\": true,\n       \"requires\": {\n-        \"psl\": \"^1.1.24\",\n-        \"punycode\": \"^1.4.1\"\n+        \"psl\": \"^1.1.28\",\n+        \"punycode\": \"^2.1.1\"\n       }\n     },\n     \"tunnel-agent\": {\n@@ -4002,20 +3839,12 @@\n       \"integrity\": \"sha1-sr9O6FFKrmFltIF4KdIbLvSZBOw=\"\n     },\n     \"uri-js\": {\n-      \"version\": \"4.2.2\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/uri-js\/-\/uri-js-4.2.2.tgz\",\n-      \"integrity\": \"sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf\/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==\",\n+      \"version\": \"4.4.1\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/uri-js\/-\/uri-js-4.4.1.tgz\",\n+      \"integrity\": \"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\",\n       \"dev\": true,\n       \"requires\": {\n         \"punycode\": \"^2.1.0\"\n-      },\n-      \"dependencies\": {\n-        \"punycode\": {\n-          \"version\": \"2.1.1\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/punycode\/-\/punycode-2.1.1.tgz\",\n-          \"integrity\": \"sha512-XRsRjdf+j5ml+y\/6GKHPZbrF\/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==\",\n-          \"dev\": true\n-        }\n       }\n     },\n     \"util-deprecate\": {\n@@ -4030,9 +3859,9 @@\n       \"integrity\": \"sha1-n5VxD1CiZ5R7LMwSR0HBAoQn5xM=\"\n     },\n     \"uuid\": {\n-      \"version\": \"3.3.2\",\n-      \"resolved\": \"https:\/\/registry.npmjs.org\/uuid\/-\/uuid-3.3.2.tgz\",\n-      \"integrity\": \"sha512-yXJmeNaw3DnnKAOKJE51sL\/ZaYfWJRl1pK9dr19YFCu0ObS231AB1\/LbqTKRAQ5kw8A90rA6fr4riOUpTZvQZA==\",\n+      \"version\": \"3.4.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/uuid\/-\/uuid-3.4.0.tgz\",\n+      \"integrity\": \"sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S\/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb\/A==\",\n       \"dev\": true\n     },\n     \"verror\": {\n@@ -4087,30 +3916,6 @@\n           \"integrity\": \"sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f\/lg==\",\n           \"dev\": true\n         },\n-        \"ansi-styles\": {\n-          \"version\": \"4.3.0\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-styles\/-\/ansi-styles-4.3.0.tgz\",\n-          \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"color-convert\": \"^2.0.1\"\n-          }\n-        },\n-        \"color-convert\": {\n-          \"version\": \"2.0.1\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/color-convert\/-\/color-convert-2.0.1.tgz\",\n-          \"integrity\": \"sha512-RRECPsj7iu\/xb5oKYcsFHSppFNnsj\/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK\/U584fMg38ZHCaElKQ==\",\n-          \"dev\": true,\n-          \"requires\": {\n-            \"color-name\": \"~1.1.4\"\n-          }\n-        },\n-        \"color-name\": {\n-          \"version\": \"1.1.4\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/color-name\/-\/color-name-1.1.4.tgz\",\n-          \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU\/uBL\/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n-          \"dev\": true\n-        },\n         \"is-fullwidth-code-point\": {\n           \"version\": \"3.0.0\",\n           \"resolved\": \"https:\/\/registry.npmjs.org\/is-fullwidth-code-point\/-\/is-fullwidth-code-point-3.0.0.tgz\",\n@@ -4156,6 +3961,55 @@\n       \"resolved\": \"https:\/\/registry.npmjs.org\/yallist\/-\/yallist-2.1.2.tgz\",\n       \"integrity\": \"sha1-HBH5IY8HYImkfdUS+TxmmaaoHVI=\"\n     },\n+    \"yargs\": {\n+      \"version\": \"16.2.0\",\n+      \"resolved\": \"https:\/\/registry.npmjs.org\/yargs\/-\/yargs-16.2.0.tgz\",\n+      \"integrity\": \"sha512-D1mvvtDG0L5ft\/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==\",\n+      \"dev\": true,\n+      \"requires\": {\n+        \"cliui\": \"^7.0.2\",\n+        \"escalade\": \"^3.1.1\",\n+        \"get-caller-file\": \"^2.0.5\",\n+        \"require-directory\": \"^2.1.1\",\n+        \"string-width\": \"^4.2.0\",\n+        \"y18n\": \"^5.0.5\",\n+        \"yargs-parser\": \"^20.2.2\"\n+      },\n+      \"dependencies\": {\n+        \"ansi-regex\": {\n+          \"version\": \"5.0.0\",\n+          \"resolved\": \"https:\/\/registry.npmjs.org\/ansi-regex\/-\/ansi-regex-5.0.0.tgz\",\n+          \"integrity\": \"sha512-bY6fj56OUQ0hU1KjFNDQuJFezqKdrAyFdIevADiqrWHwSlbmBNMHp5ak2f40Pm8JTFyM2mqxkG6ngkHO11f\/lg==\",\n+          \"dev\": true\n+        },\n+        \"is-fullwidth-code-point\": {\n+          \"version\": \"3.0.0\",\n+          \"resolved\": \"https:\/\/registry.npmjs.org\/is-fullwidth-code-point\/-\/is-fullwidth-code-point-3.0.0.tgz\",\n+          \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n+          \"dev\": true\n+        },\n+        \"string-width\": {\n+          \"version\": \"4.2.2\",\n+          \"resolved\": \"https:\/\/registry.npmjs.org\/string-width\/-\/string-width-4.2.2.tgz\",\n+          \"integrity\": \"sha512-XBJbT3N4JhVumXE0eoLU9DCjcaF92KLNqTmFCnG1pf8duUxFGwtP6AD6nkjw9a3IdiRtL3E2w3JDiE\/xi3vOeA==\",\n+          \"dev\": true,\n+          \"requires\": {\n+            \"emoji-regex\": \"^8.0.0\",\n+            \"is-fullwidth-code-point\": \"^3.0.0\",\n+            \"strip-ansi\": \"^6.0.0\"\n+          }\n+        },\n+        \"strip-ansi\": {\n+          \"version\": \"6.0.0\",\n+          \"resolved\": \"https:\/\/registry.npmjs.org\/strip-ansi\/-\/strip-ansi-6.0.0.tgz\",\n+          \"integrity\": \"sha512-AuvKTrTfQNYNIctbR1K\/YGTR1756GycPsg7b9bdV9Duqur4gv6aKqHXah67Z8ImS7WEz5QVcOtlfW2rZEugt6w==\",\n+          \"dev\": true,\n+          \"requires\": {\n+            \"ansi-regex\": \"^5.0.0\"\n+          }\n+        }\n+      }\n+    },\n     \"yargs-parser\": {\n       \"version\": \"20.2.4\",\n       \"resolved\": \"https:\/\/registry.npmjs.org\/yargs-parser\/-\/yargs-parser-20.2.4.tgz\",\n@@ -4172,20 +4026,6 @@\n         \"decamelize\": \"^4.0.0\",\n         \"flat\": \"^5.0.2\",\n         \"is-plain-obj\": \"^2.1.0\"\n-      },\n-      \"dependencies\": {\n-        \"camelcase\": {\n-          \"version\": \"6.2.0\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/camelcase\/-\/camelcase-6.2.0.tgz\",\n-          \"integrity\": \"sha512-c7wVvbw3f37nuobQNtgsgG9POC9qMbNuMQmTCqZv23b6MIz0fcYpBiOlv9gEN\/hdLdnZTDQhg6e9Dq5M1vKvfg==\",\n-          \"dev\": true\n-        },\n-        \"decamelize\": {\n-          \"version\": \"4.0.0\",\n-          \"resolved\": \"https:\/\/registry.npmjs.org\/decamelize\/-\/decamelize-4.0.0.tgz\",\n-          \"integrity\": \"sha512-9iE1PgSik9HeIIw2JO94IidnE3eBoQrFJ3w7sFuzSX4DpmZ3v5sZpUiV5Swcf6mQEF+Y0ru8Neo+p+nyh2J+hQ==\",\n-          \"dev\": true\n-        }\n       }\n     },\n     \"yocto-queue\": {"
        },
        {
            "index":9,
            "vuln_id":"GHSA-58jx-f5rf-qgqf",
            "cwe_id":"{'CWE-22', 'CWE-502'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/apache\/hadoop\/commit\/ba041fe6d34215f075e0a7b2078d7273147e14b7', 'https:\/\/github.com\/apache\/hadoop\/commit\/227d64ab59e8aa6477769b2542ad0cd7a6d855cb', 'https:\/\/github.com\/apache\/hadoop\/commit\/45801fba8b00257ab32c02a7d1a05948ba687a49'}",
            "dataset":"osv",
            "summary":"User account escalation in Apache Hadoop In Apache Hadoop 2.2.0 to 2.10.1, 3.0.0-alpha1 to 3.1.4, 3.2.0 to 3.2.2, and 3.3.0 to 3.3.1, a user who can escalate to yarn user can possibly run arbitrary commands as root user. Users should upgrade to Apache Hadoop 2.10.2, 3.2.3, 3.3.2 or higher.",
            "published_date":"2022-06-16",
            "chain_len":3,
            "project":"https:\/\/github.com\/apache\/hadoop",
            "commit_href":"https:\/\/github.com\/apache\/hadoop\/commit\/227d64ab59e8aa6477769b2542ad0cd7a6d855cb",
            "commit_sha":"227d64ab59e8aa6477769b2542ad0cd7a6d855cb",
            "patch":"MULTI",
            "chain_ord":"['ba041fe6d34215f075e0a7b2078d7273147e14b7', '45801fba8b00257ab32c02a7d1a05948ba687a49', '227d64ab59e8aa6477769b2542ad0cd7a6d855cb']",
            "before_first_fix_commit":"{'ba041fe6d34215f075e0a7b2078d7273147e14b7'}",
            "last_fix_commit":"227d64ab59e8aa6477769b2542ad0cd7a6d855cb",
            "chain_ord_pos":3.0,
            "commit_datetime":"05\/24\/2022, 05:07:19",
            "message":"YARN-11162. Set the zk acl for nodes created by ZKConfigurationStore. (#4350)\n\n(cherry picked from commit f390edaec44cfa91b2b09549091f033f1749d8ac)\n\nConflicts:\n\thadoop-yarn-project\/hadoop-yarn\/hadoop-yarn-server\/hadoop-yarn-server-resourcemanager\/src\/main\/java\/org\/apache\/hadoop\/yarn\/server\/resourcemanager\/scheduler\/capacity\/conf\/ZKConfigurationStore.java\n\n(cherry picked from commit 88a8752fa2ba0c70b0df94a78eb9fd86b965acd5)",
            "author":"Owen O'Malley",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'hadoop-yarn-project\/hadoop-yarn\/hadoop-yarn-server\/hadoop-yarn-server-resourcemanager\/src\/main\/java\/org\/apache\/hadoop\/yarn\/server\/resourcemanager\/scheduler\/capacity\/conf\/ZKConfigurationStore.java': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/hadoop\/raw\/227d64ab59e8aa6477769b2542ad0cd7a6d855cb\/hadoop-yarn-project%2Fhadoop-yarn%2Fhadoop-yarn-server%2Fhadoop-yarn-server-resourcemanager%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fhadoop%2Fyarn%2Fserver%2Fresourcemanager%2Fscheduler%2Fcapacity%2Fconf%2FZKConfigurationStore.java', 'patch': '@@ -97,13 +97,13 @@ public void initialize(Configuration config, Configuration schedConf,\\n     zkManager.delete(fencingNodePath);\\n \\n     if (!zkManager.exists(logsPath)) {\\n-      zkManager.create(logsPath);\\n+      zkManager.create(logsPath, zkAcl);\\n       zkManager.setData(logsPath,\\n           serializeObject(new LinkedList<LogMutation>()), -1);\\n     }\\n \\n     if (!zkManager.exists(confStorePath)) {\\n-      zkManager.create(confStorePath);\\n+      zkManager.create(confStorePath, zkAcl);\\n       HashMap<String, String> mapSchedConf = new HashMap<>();\\n       for (Map.Entry<String, String> entry : schedConf) {\\n         mapSchedConf.put(entry.getKey(), entry.getValue());'}}",
            "message_norm":"yarn-11162. set the zk acl for nodes created by zkconfigurationstore. (#4350)\n\n(cherry picked from commit f390edaec44cfa91b2b09549091f033f1749d8ac)\n\nconflicts:\n\thadoop-yarn-project\/hadoop-yarn\/hadoop-yarn-server\/hadoop-yarn-server-resourcemanager\/src\/main\/java\/org\/apache\/hadoop\/yarn\/server\/resourcemanager\/scheduler\/capacity\/conf\/zkconfigurationstore.java\n\n(cherry picked from commit 88a8752fa2ba0c70b0df94a78eb9fd86b965acd5)",
            "language":"en",
            "entities":"[('#4350', 'ISSUE', ''), ('commit f390edaec44cfa91b2b09549091f033f1749d8ac', 'SHA', 'prefix_sha'), ('server', 'SECWORD', ''), ('server', 'SECWORD', ''), ('server', 'SECWORD', ''), ('commit 88a8752fa2ba0c70b0df94a78eb9fd86b965acd5', 'SHA', 'prefix_colon_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['hadoop-yarn-project\/hadoop-yarn\/hadoop-yarn-server\/hadoop-yarn-server-resourcemanager\/src\/main\/java\/org\/apache\/hadoop\/yarn\/server\/resourcemanager\/scheduler\/capacity\/conf\/ZKConfigurationStore.java'])",
            "num_files":1.0,
            "patch_content":"From 227d64ab59e8aa6477769b2542ad0cd7a6d855cb Mon Sep 17 00:00:00 2001\nFrom: Owen O'Malley <oomalley@linkedin.com>\nDate: Mon, 23 May 2022 22:07:19 -0700\nSubject: [PATCH] YARN-11162. Set the zk acl for nodes created by\n ZKConfigurationStore. (#4350)\n\n(cherry picked from commit f390edaec44cfa91b2b09549091f033f1749d8ac)\n\nConflicts:\n\thadoop-yarn-project\/hadoop-yarn\/hadoop-yarn-server\/hadoop-yarn-server-resourcemanager\/src\/main\/java\/org\/apache\/hadoop\/yarn\/server\/resourcemanager\/scheduler\/capacity\/conf\/ZKConfigurationStore.java\n\n(cherry picked from commit 88a8752fa2ba0c70b0df94a78eb9fd86b965acd5)\n---\n ...\/scheduler\/capacity\/conf\/ZKConfigurationStore.java         | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/hadoop-yarn-project\/hadoop-yarn\/hadoop-yarn-server\/hadoop-yarn-server-resourcemanager\/src\/main\/java\/org\/apache\/hadoop\/yarn\/server\/resourcemanager\/scheduler\/capacity\/conf\/ZKConfigurationStore.java b\/hadoop-yarn-project\/hadoop-yarn\/hadoop-yarn-server\/hadoop-yarn-server-resourcemanager\/src\/main\/java\/org\/apache\/hadoop\/yarn\/server\/resourcemanager\/scheduler\/capacity\/conf\/ZKConfigurationStore.java\nindex 09d9e2b9f288b..15c5b700879ab 100644\n--- a\/hadoop-yarn-project\/hadoop-yarn\/hadoop-yarn-server\/hadoop-yarn-server-resourcemanager\/src\/main\/java\/org\/apache\/hadoop\/yarn\/server\/resourcemanager\/scheduler\/capacity\/conf\/ZKConfigurationStore.java\n+++ b\/hadoop-yarn-project\/hadoop-yarn\/hadoop-yarn-server\/hadoop-yarn-server-resourcemanager\/src\/main\/java\/org\/apache\/hadoop\/yarn\/server\/resourcemanager\/scheduler\/capacity\/conf\/ZKConfigurationStore.java\n@@ -97,13 +97,13 @@ public void initialize(Configuration config, Configuration schedConf,\n     zkManager.delete(fencingNodePath);\n \n     if (!zkManager.exists(logsPath)) {\n-      zkManager.create(logsPath);\n+      zkManager.create(logsPath, zkAcl);\n       zkManager.setData(logsPath,\n           serializeObject(new LinkedList<LogMutation>()), -1);\n     }\n \n     if (!zkManager.exists(confStorePath)) {\n-      zkManager.create(confStorePath);\n+      zkManager.create(confStorePath, zkAcl);\n       HashMap<String, String> mapSchedConf = new HashMap<>();\n       for (Map.Entry<String, String> entry : schedConf) {\n         mapSchedConf.put(entry.getKey(), entry.getValue());"
        },
        {
            "index":866,
            "vuln_id":"GHSA-36p3-wjmg-h94x",
            "cwe_id":"{'CWE-74', 'CWE-94'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/spring-projects\/spring-framework\/commit\/002546b3e4b8d791ea6acccb81eb3168f51abb15'}",
            "dataset":"osv",
            "summary":"Remote Code Execution in Spring Framework Spring Framework prior to versions 5.2.20 and 5.3.18 contains a remote code execution vulnerability known as `Spring4Shell`. \n\n## Impact\n\nA Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.\n\nThese are the prerequisites for the exploit:\n- JDK 9 or higher\n- Apache Tomcat as the Servlet container\n- Packaged as WAR\n- `spring-webmvc` or `spring-webflux` dependency\n\n## Patches\n\n- Spring Framework [5.3.18](https:\/\/github.com\/spring-projects\/spring-framework\/releases\/tag\/v5.3.18) and [5.2.20](https:\/\/github.com\/spring-projects\/spring-framework\/releases\/tag\/v5.2.20.RELEASE)\n- Spring Boot [2.6.6](https:\/\/github.com\/spring-projects\/spring-boot\/releases\/tag\/v2.6.6) and [2.5.12](https:\/\/github.com\/spring-projects\/spring-boot\/releases\/tag\/v2.5.12)\n\n## Workarounds\n\nFor those who are unable to upgrade, leaked reports recommend setting `disallowedFields` on `WebDataBinder` through an `@ControllerAdvice`. This works generally, but as a centrally applied workaround fix, may leave some loopholes, in particular if a controller sets `disallowedFields` locally through its own `@InitBinder` method, which overrides the global setting.\n\nTo apply the workaround in a more fail-safe way, applications could extend `RequestMappingHandlerAdapter` to update the `WebDataBinder` at the end after all other initialization. In order to do that, a Spring Boot application can declare a `WebMvcRegistrations` bean (Spring MVC) or a `WebFluxRegistrations` bean (Spring WebFlux).",
            "published_date":"2022-03-31",
            "chain_len":1,
            "project":"https:\/\/github.com\/spring-projects\/spring-framework",
            "commit_href":"https:\/\/github.com\/spring-projects\/spring-framework\/commit\/002546b3e4b8d791ea6acccb81eb3168f51abb15",
            "commit_sha":"002546b3e4b8d791ea6acccb81eb3168f51abb15",
            "patch":"SINGLE",
            "chain_ord":"['002546b3e4b8d791ea6acccb81eb3168f51abb15']",
            "before_first_fix_commit":"{'1627f57f1f77abe17dd607c75476b9e4cb22ffbb'}",
            "last_fix_commit":"002546b3e4b8d791ea6acccb81eb3168f51abb15",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/31\/2022, 07:34:51",
            "message":"Refine PropertyDescriptor filtering\n\nRestrict property paths under `Class` and properties of types\n`ClassLoader` or `ProtectionDomain`.",
            "author":"Brian Clozel",
            "comments":null,
            "stats":"{'additions': 14, 'deletions': 4, 'total': 18}",
            "files":"{'spring-beans\/src\/main\/java\/org\/springframework\/beans\/CachedIntrospectionResults.java': {'additions': 14, 'deletions': 4, 'changes': 18, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/spring-projects\/spring-framework\/raw\/002546b3e4b8d791ea6acccb81eb3168f51abb15\/spring-beans%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fbeans%2FCachedIntrospectionResults.java', 'patch': '@@ -1,5 +1,5 @@\\n \/*\\n- * Copyright 2002-2020 the original author or authors.\\n+ * Copyright 2002-2022 the original author or authors.\\n  *\\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\\n  * you may not use this file except in compliance with the License.\\n@@ -22,6 +22,7 @@\\n import java.beans.PropertyDescriptor;\\n import java.lang.reflect.Method;\\n import java.lang.reflect.Modifier;\\n+import java.security.ProtectionDomain;\\n import java.util.Collections;\\n import java.util.HashSet;\\n import java.util.LinkedHashMap;\\n@@ -286,9 +287,13 @@ private CachedIntrospectionResults(Class<?> beanClass) throws BeansException {\\n \\t\\t\\t\/\/ This call is slow so we do it once.\\n \\t\\t\\tPropertyDescriptor[] pds = this.beanInfo.getPropertyDescriptors();\\n \\t\\t\\tfor (PropertyDescriptor pd : pds) {\\n-\\t\\t\\t\\tif (Class.class == beanClass &&\\n-\\t\\t\\t\\t\\t\\t(\"classLoader\".equals(pd.getName()) ||  \"protectionDomain\".equals(pd.getName()))) {\\n-\\t\\t\\t\\t\\t\/\/ Ignore Class.getClassLoader() and getProtectionDomain() methods - nobody needs to bind to those\\n+\\t\\t\\t\\tif (Class.class == beanClass && (!\"name\".equals(pd.getName()) && !pd.getName().endsWith(\"Name\"))) {\\n+\\t\\t\\t\\t\\t\/\/ Only allow all name variants of Class properties\\n+\\t\\t\\t\\t\\tcontinue;\\n+\\t\\t\\t\\t}\\n+\\t\\t\\t\\tif (pd.getPropertyType() != null && (ClassLoader.class.isAssignableFrom(pd.getPropertyType())\\n+\\t\\t\\t\\t\\t\\t|| ProtectionDomain.class.isAssignableFrom(pd.getPropertyType()))) {\\n+\\t\\t\\t\\t\\t\/\/ Ignore ClassLoader and ProtectionDomain types - nobody needs to bind to those\\n \\t\\t\\t\\t\\tcontinue;\\n \\t\\t\\t\\t}\\n \\t\\t\\t\\tif (logger.isTraceEnabled()) {\\n@@ -337,6 +342,11 @@ private void introspectInterfaces(Class<?> beanClass, Class<?> currClass, Set<St\\n \\t\\t\\t\\t\\t\\t\/\/ GenericTypeAwarePropertyDescriptor leniently resolves a set* write method\\n \\t\\t\\t\\t\\t\\t\/\/ against a declared read method, so we prefer read method descriptors here.\\n \\t\\t\\t\\t\\t\\tpd = buildGenericTypeAwarePropertyDescriptor(beanClass, pd);\\n+\\t\\t\\t\\t\\t\\tif (pd.getPropertyType() != null && (ClassLoader.class.isAssignableFrom(pd.getPropertyType())\\n+\\t\\t\\t\\t\\t\\t\\t\\t|| ProtectionDomain.class.isAssignableFrom(pd.getPropertyType()))) {\\n+\\t\\t\\t\\t\\t\\t\\t\/\/ Ignore ClassLoader and ProtectionDomain types - nobody needs to bind to those\\n+\\t\\t\\t\\t\\t\\t\\tcontinue;\\n+\\t\\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\t\\tthis.propertyDescriptors.put(pd.getName(), pd);\\n \\t\\t\\t\\t\\t\\tMethod readMethod = pd.getReadMethod();\\n \\t\\t\\t\\t\\t\\tif (readMethod != null) {'}}",
            "message_norm":"refine propertydescriptor filtering\n\nrestrict property paths under `class` and properties of types\n`classloader` or `protectiondomain`.",
            "language":"en",
            "entities":"[('protectiondomain', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['spring-beans\/src\/main\/java\/org\/springframework\/beans\/CachedIntrospectionResults.java'])",
            "num_files":1.0,
            "patch_content":"From 002546b3e4b8d791ea6acccb81eb3168f51abb15 Mon Sep 17 00:00:00 2001\nFrom: Brian Clozel <bclozel@vmware.com>\nDate: Thu, 31 Mar 2022 09:34:51 +0200\nSubject: [PATCH] Refine PropertyDescriptor filtering\n\nRestrict property paths under `Class` and properties of types\n`ClassLoader` or `ProtectionDomain`.\n---\n ...\/beans\/CachedIntrospectionResults.java      | 18 ++++++++++++++----\n 1 file changed, 14 insertions(+), 4 deletions(-)\n\ndiff --git a\/spring-beans\/src\/main\/java\/org\/springframework\/beans\/CachedIntrospectionResults.java b\/spring-beans\/src\/main\/java\/org\/springframework\/beans\/CachedIntrospectionResults.java\nindex 7b7a67d91ccf..4187097ce371 100644\n--- a\/spring-beans\/src\/main\/java\/org\/springframework\/beans\/CachedIntrospectionResults.java\n+++ b\/spring-beans\/src\/main\/java\/org\/springframework\/beans\/CachedIntrospectionResults.java\n@@ -1,5 +1,5 @@\n \/*\n- * Copyright 2002-2020 the original author or authors.\n+ * Copyright 2002-2022 the original author or authors.\n  *\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n@@ -22,6 +22,7 @@\n import java.beans.PropertyDescriptor;\n import java.lang.reflect.Method;\n import java.lang.reflect.Modifier;\n+import java.security.ProtectionDomain;\n import java.util.Collections;\n import java.util.HashSet;\n import java.util.LinkedHashMap;\n@@ -286,9 +287,13 @@ private CachedIntrospectionResults(Class<?> beanClass) throws BeansException {\n \t\t\t\/\/ This call is slow so we do it once.\n \t\t\tPropertyDescriptor[] pds = this.beanInfo.getPropertyDescriptors();\n \t\t\tfor (PropertyDescriptor pd : pds) {\n-\t\t\t\tif (Class.class == beanClass &&\n-\t\t\t\t\t\t(\"classLoader\".equals(pd.getName()) ||  \"protectionDomain\".equals(pd.getName()))) {\n-\t\t\t\t\t\/\/ Ignore Class.getClassLoader() and getProtectionDomain() methods - nobody needs to bind to those\n+\t\t\t\tif (Class.class == beanClass && (!\"name\".equals(pd.getName()) && !pd.getName().endsWith(\"Name\"))) {\n+\t\t\t\t\t\/\/ Only allow all name variants of Class properties\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\t\t\t\tif (pd.getPropertyType() != null && (ClassLoader.class.isAssignableFrom(pd.getPropertyType())\n+\t\t\t\t\t\t|| ProtectionDomain.class.isAssignableFrom(pd.getPropertyType()))) {\n+\t\t\t\t\t\/\/ Ignore ClassLoader and ProtectionDomain types - nobody needs to bind to those\n \t\t\t\t\tcontinue;\n \t\t\t\t}\n \t\t\t\tif (logger.isTraceEnabled()) {\n@@ -337,6 +342,11 @@ private void introspectInterfaces(Class<?> beanClass, Class<?> currClass, Set<St\n \t\t\t\t\t\t\/\/ GenericTypeAwarePropertyDescriptor leniently resolves a set* write method\n \t\t\t\t\t\t\/\/ against a declared read method, so we prefer read method descriptors here.\n \t\t\t\t\t\tpd = buildGenericTypeAwarePropertyDescriptor(beanClass, pd);\n+\t\t\t\t\t\tif (pd.getPropertyType() != null && (ClassLoader.class.isAssignableFrom(pd.getPropertyType())\n+\t\t\t\t\t\t\t\t|| ProtectionDomain.class.isAssignableFrom(pd.getPropertyType()))) {\n+\t\t\t\t\t\t\t\/\/ Ignore ClassLoader and ProtectionDomain types - nobody needs to bind to those\n+\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t}\n \t\t\t\t\t\tthis.propertyDescriptors.put(pd.getName(), pd);\n \t\t\t\t\t\tMethod readMethod = pd.getReadMethod();\n \t\t\t\t\t\tif (readMethod != null) {"
        },
        {
            "index":715,
            "vuln_id":"GHSA-5fw9-fq32-wv5p",
            "cwe_id":"{'CWE-78'}",
            "score":5.6,
            "chain":"{'https:\/\/github.com\/mikaelbr\/node-notifier\/commit\/5d62799dab88505a709cd032653b2320c5813fce'}",
            "dataset":"osv",
            "summary":"OS Command Injection in node-notifier This affects the package node-notifier before 8.0.1. It allows an attacker to run arbitrary commands on Linux machines due to the options params not being sanitised when being passed an array.",
            "published_date":"2020-12-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/mikaelbr\/node-notifier",
            "commit_href":"https:\/\/github.com\/mikaelbr\/node-notifier\/commit\/5d62799dab88505a709cd032653b2320c5813fce",
            "commit_sha":"5d62799dab88505a709cd032653b2320c5813fce",
            "patch":"SINGLE",
            "chain_ord":"['5d62799dab88505a709cd032653b2320c5813fce']",
            "before_first_fix_commit":"{'0c4a80df9a3b5015cd1e1ab858e008be3fece082'}",
            "last_fix_commit":"5d62799dab88505a709cd032653b2320c5813fce",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/15\/2020, 15:30:54",
            "message":"v8.0.1",
            "author":"Mikael Brevik",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'package.json': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mikaelbr\/node-notifier\/raw\/5d62799dab88505a709cd032653b2320c5813fce\/package.json', 'patch': '@@ -1,6 +1,6 @@\\n {\\n   \"name\": \"node-notifier\",\\n-  \"version\": \"8.0.0\",\\n+  \"version\": \"8.0.1\",\\n   \"description\": \"A Node.js module for sending notifications on native Mac, Windows (post and pre 8) and Linux (or Growl as fallback)\",\\n   \"main\": \"index.js\",\\n   \"scripts\": {'}}",
            "message_norm":"v8.0.1",
            "language":"sk",
            "entities":"[('v8.0.1', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['package.json'])",
            "num_files":1.0,
            "patch_content":"From 5d62799dab88505a709cd032653b2320c5813fce Mon Sep 17 00:00:00 2001\nFrom: Mikael Brevik <mikaelbre@gmail.com>\nDate: Tue, 15 Dec 2020 16:30:54 +0100\nSubject: [PATCH] v8.0.1\n\n---\n package.json | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/package.json b\/package.json\nindex 614923a..0b2c64e 100644\n--- a\/package.json\n+++ b\/package.json\n@@ -1,6 +1,6 @@\n {\n   \"name\": \"node-notifier\",\n-  \"version\": \"8.0.0\",\n+  \"version\": \"8.0.1\",\n   \"description\": \"A Node.js module for sending notifications on native Mac, Windows (post and pre 8) and Linux (or Growl as fallback)\",\n   \"main\": \"index.js\",\n   \"scripts\": {"
        },
        {
            "index":494,
            "vuln_id":"GHSA-6rv4-4qv6-88g2",
            "cwe_id":"{'CWE-1321'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/IonicaBizau\/set-or-get.js\/commit\/82ede5cccb2e8d13e4f62599203a4389f6d8e936'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in set-or-get Prototype pollution vulnerability in \u2018set-or-get\u2019 version 1.0.0 through 1.2.10 allows an attacker to cause a denial of service and may lead to remote code execution.",
            "published_date":"2021-04-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/IonicaBizau\/set-or-get.js",
            "commit_href":"https:\/\/github.com\/IonicaBizau\/set-or-get.js\/commit\/82ede5cccb2e8d13e4f62599203a4389f6d8e936",
            "commit_sha":"82ede5cccb2e8d13e4f62599203a4389f6d8e936",
            "patch":"SINGLE",
            "chain_ord":"['82ede5cccb2e8d13e4f62599203a4389f6d8e936']",
            "before_first_fix_commit":"{'6a7767c49df4be3efd5e32a68a1ea1fa449cbd03'}",
            "last_fix_commit":"82ede5cccb2e8d13e4f62599203a4389f6d8e936",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/17\/2020, 17:22:45",
            "message":"Security fix for Prototype Pollution",
            "author":"Arjun Shibu",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'lib\/index.js': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/IonicaBizau\/set-or-get.js\/raw\/82ede5cccb2e8d13e4f62599203a4389f6d8e936\/lib%2Findex.js', 'patch': '@@ -13,6 +13,8 @@ var Deffy = require(\"deffy\");\\n  * @return {Object|Array} The field value.\\n  *\/\\n function SetOrGet(input, field, def) {\\n+    if (field == \\'__proto__\\' || field == \\'constructor\\' || field == \\'prototype\\')\\n+        throw new Error(\\'Restricted setting magical attributes\\')\\n     return input[field] = Deffy(input[field], def);\\n }'}}",
            "message_norm":"security fix for prototype pollution",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('prototype pollution', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/index.js'])",
            "num_files":1.0,
            "patch_content":"From 82ede5cccb2e8d13e4f62599203a4389f6d8e936 Mon Sep 17 00:00:00 2001\nFrom: Arjun Shibu <arjunshibu1999@gmail.com>\nDate: Thu, 17 Dec 2020 22:52:45 +0530\nSubject: [PATCH] Security fix for Prototype Pollution\n\n---\n lib\/index.js | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/lib\/index.js b\/lib\/index.js\nindex 3c04df8..f9c76f4 100644\n--- a\/lib\/index.js\n+++ b\/lib\/index.js\n@@ -13,6 +13,8 @@ var Deffy = require(\"deffy\");\n  * @return {Object|Array} The field value.\n  *\/\n function SetOrGet(input, field, def) {\n+    if (field == '__proto__' || field == 'constructor' || field == 'prototype')\n+        throw new Error('Restricted setting magical attributes')\n     return input[field] = Deffy(input[field], def);\n }"
        },
        {
            "index":449,
            "vuln_id":"GHSA-98p5-x8x4-c9m5",
            "cwe_id":"{'CWE-190'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f19be71717c497723ba0cea0379e84f061a75e01', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1de49725a5fc4e48f1a3b902ec3599ee99283043', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a4e401da71458d253b05e41f28637b65baf64be4'}",
            "dataset":"osv",
            "summary":"Integer overflow in TFLite ### Impact \nAn attacker can craft a TFLite model that would cause an integer overflow [in embedding lookup operations](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/ca6f96b62ad84207fbec580404eaa7dd7403a550\/tensorflow\/lite\/kernels\/embedding_lookup_sparse.cc#L179-L189):\n\n```cc\n  int embedding_size = 1;\n  int lookup_size = 1;\n  for (int i = 0; i < lookup_rank - 1; i++, k++) {\n    const int dim = dense_shape->data.i32[i];\n    lookup_size *= dim;\n    output_shape->data[k] = dim;\n  }\n  for (int i = 1; i < embedding_rank; i++, k++) {\n    const int dim = SizeOfDimension(value, i);\n    embedding_size *= dim;\n    output_shape->data[k] = dim;\n  } \n```\n\nBoth `embedding_size` and `lookup_size` are products of values provided by the user. Hence, a malicious user could trigger overflows in the multiplication.\n\nIn certain scenarios, this can then result in heap OOB read\/write.\n  \n### Patches\nWe have patched the issue in GitHub commits [f19be71717c497723ba0cea0379e84f061a75e01](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f19be71717c497723ba0cea0379e84f061a75e01), [1de49725a5fc4e48f1a3b902ec3599ee99283043](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1de49725a5fc4e48f1a3b902ec3599ee99283043) and [a4e401da71458d253b05e41f28637b65baf64be4](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a4e401da71458d253b05e41f28637b65baf64be4).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Wang Xuan of Qihoo 360 AIVul Team.",
            "published_date":"2022-02-09",
            "chain_len":3,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a4e401da71458d253b05e41f28637b65baf64be4",
            "commit_sha":"a4e401da71458d253b05e41f28637b65baf64be4",
            "patch":"MULTI",
            "chain_ord":"['f19be71717c497723ba0cea0379e84f061a75e01', '1de49725a5fc4e48f1a3b902ec3599ee99283043', 'a4e401da71458d253b05e41f28637b65baf64be4']",
            "before_first_fix_commit":"{'f435ae9dee673e83504618b77e1be8cddda73e74'}",
            "last_fix_commit":"a4e401da71458d253b05e41f28637b65baf64be4",
            "chain_ord_pos":3.0,
            "commit_datetime":"12\/21\/2021, 21:06:51",
            "message":"Prevent segfault in `embedding_lookup_sparse.cc`\n\nPrevious fixes missed one additional case.\n\nPiperOrigin-RevId: 417676944\nChange-Id: I8ab412155cf9b1e897448a6611d209eaa7ca9e66",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'tensorflow\/lite\/kernels\/embedding_lookup_sparse.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a4e401da71458d253b05e41f28637b65baf64be4\/tensorflow%2Flite%2Fkernels%2Fembedding_lookup_sparse.cc', 'patch': '@@ -159,6 +159,7 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\\n   TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 3, &weights));\\n   const TfLiteTensor* value;\\n   TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 4, &value));\\n+  const size_t values_size = NumElements(value);\\n \\n   const int lookup_rank = SizeOfDimension(indices, 1);\\n   const int embedding_rank = NumDimensions(value);\\n@@ -253,6 +254,11 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\\n     current_squares_weight += w * w;\\n     current_total_weight += w;\\n     for (int k = 0; k < embedding_size; k++) {\\n+      \/\/ only index if indices are valid\\n+      if (current_output_offset + k < 0) continue;\\n+      if (current_output_offset + k >= output_size) continue;\\n+      if (example_embedding_offset + k < 0) continue;\\n+      if (example_embedding_offset + k >= values_size) continue;\\n       output_ptr[current_output_offset + k] +=\\n           value_ptr[example_embedding_offset + k] * w;\\n     }'}}",
            "message_norm":"prevent segfault in `embedding_lookup_sparse.cc`\n\nprevious fixes missed one additional case.\n\npiperorigin-revid: 417676944\nchange-id: i8ab412155cf9b1e897448a6611d209eaa7ca9e66",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('segfault', 'SECWORD', ''), ('417676944', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/embedding_lookup_sparse.cc'])",
            "num_files":1.0,
            "patch_content":"From a4e401da71458d253b05e41f28637b65baf64be4 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Tue, 21 Dec 2021 13:06:51 -0800\nSubject: [PATCH] Prevent segfault in `embedding_lookup_sparse.cc`\n\nPrevious fixes missed one additional case.\n\nPiperOrigin-RevId: 417676944\nChange-Id: I8ab412155cf9b1e897448a6611d209eaa7ca9e66\n---\n tensorflow\/lite\/kernels\/embedding_lookup_sparse.cc | 6 ++++++\n 1 file changed, 6 insertions(+)\n\ndiff --git a\/tensorflow\/lite\/kernels\/embedding_lookup_sparse.cc b\/tensorflow\/lite\/kernels\/embedding_lookup_sparse.cc\nindex a0b9586203a93e..270ccc929d9bd8 100644\n--- a\/tensorflow\/lite\/kernels\/embedding_lookup_sparse.cc\n+++ b\/tensorflow\/lite\/kernels\/embedding_lookup_sparse.cc\n@@ -159,6 +159,7 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\n   TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 3, &weights));\n   const TfLiteTensor* value;\n   TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 4, &value));\n+  const size_t values_size = NumElements(value);\n \n   const int lookup_rank = SizeOfDimension(indices, 1);\n   const int embedding_rank = NumDimensions(value);\n@@ -253,6 +254,11 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\n     current_squares_weight += w * w;\n     current_total_weight += w;\n     for (int k = 0; k < embedding_size; k++) {\n+      \/\/ only index if indices are valid\n+      if (current_output_offset + k < 0) continue;\n+      if (current_output_offset + k >= output_size) continue;\n+      if (example_embedding_offset + k < 0) continue;\n+      if (example_embedding_offset + k >= values_size) continue;\n       output_ptr[current_output_offset + k] +=\n           value_ptr[example_embedding_offset + k] * w;\n     }"
        },
        {
            "index":74,
            "vuln_id":"GHSA-7ph6-5cmq-xgjq",
            "cwe_id":"{'CWE-22'}",
            "score":6.8,
            "chain":"{'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/ab778254fb8f71c774e1c1239368c44fe3b6bba5'}",
            "dataset":"osv",
            "summary":"Path traversal in xwiki-platform-skin-skinx XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. AbstractSxExportURLFactoryActionHandler#processSx does not escape anything from SSX document reference when serializing it on filesystem, so it's easy to mess up the HTML export process with reference elements containing filesystem syntax like \"..\/\", \".\/\". or \"\/\" in general (the last two not causing any security threat, but can cause conflicts with others serialized files). Patch can be found in 13.6-rc-1. Giving script or subwiki admin right only to trusted people and disabling HTML\/PDF export can be done as workaround.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/xwiki\/xwiki-platform",
            "commit_href":"https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/ab778254fb8f71c774e1c1239368c44fe3b6bba5",
            "commit_sha":"ab778254fb8f71c774e1c1239368c44fe3b6bba5",
            "patch":"SINGLE",
            "chain_ord":"['ab778254fb8f71c774e1c1239368c44fe3b6bba5']",
            "before_first_fix_commit":"{'9e4d40d03960b20233f6887bc142fe4474f620c4'}",
            "last_fix_commit":"ab778254fb8f71c774e1c1239368c44fe3b6bba5",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/07\/2021, 14:02:50",
            "message":"XWIKI-18819: It's possible to save pretty much anything anywhere by creating and using an SSX\/JSX containing \"..\/\" in its reference",
            "author":"Thomas Mortagne",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 11, 'total': 18}",
            "files":"{'xwiki-platform-core\/xwiki-platform-skin\/xwiki-platform-skin-skinx\/src\/main\/java\/org\/xwiki\/skinx\/internal\/AbstractSxExportURLFactoryActionHandler.java': {'additions': 7, 'deletions': 11, 'changes': 18, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/xwiki\/xwiki-platform\/raw\/ab778254fb8f71c774e1c1239368c44fe3b6bba5\/xwiki-platform-core%2Fxwiki-platform-skin%2Fxwiki-platform-skin-skinx%2Fsrc%2Fmain%2Fjava%2Forg%2Fxwiki%2Fskinx%2Finternal%2FAbstractSxExportURLFactoryActionHandler.java', 'patch': '@@ -100,13 +100,13 @@ public URL createURL(String spaces, String name, String queryString, String anch\\n         XWikiDocument.backupContext(backup, context);\\n         try {\\n             sxDocument.setAsContextDoc(context);\\n-            return processSx(spaceNames, name, queryString, context, exportContext);\\n+            return processSx(sxDocument.getId(), queryString, context, exportContext);\\n         } finally {\\n             XWikiDocument.restoreContext(backup, context);\\n         }\\n     }\\n \\n-    private URL processSx(List<String> spaceNames, String name, String queryString, XWikiContext context,\\n+    private URL processSx(long id, String queryString, XWikiContext context,\\n         FilesystemExportContext exportContext) throws Exception\\n     {\\n         SxSource sxSource = null;\\n@@ -128,7 +128,7 @@ private URL processSx(List<String> spaceNames, String name, String queryString,\\n \\n         \/\/ Write the content to file\\n         \/\/ We need a unique name for that SSX content\\n-        String targetPath = String.format(\"%s\/%s\/%s\", getSxPrefix(), StringUtils.join(spaceNames, \\'\/\\'), name);\\n+        String targetPath = String.format(\"%s\/%s\", getSxPrefix(), id);\\n         File targetDirectory = new File(exportContext.getExportDir(), targetPath);\\n         if (!targetDirectory.exists()) {\\n             targetDirectory.mkdirs();\\n@@ -146,11 +146,7 @@ private URL processSx(List<String> spaceNames, String name, String queryString,\\n \\n         path.append(getSxPrefix());\\n         path.append(URL_PATH_SEPARATOR);\\n-        for (String spaceName : spaceNames) {\\n-            path.append(encodeURLPart(spaceName));\\n-            path.append(URL_PATH_SEPARATOR);\\n-        }\\n-        path.append(encodeURLPart(name));\\n+        path.append(id);\\n         path.append(URL_PATH_SEPARATOR);\\n         path.append(encodeURLPart(targetLocation.getName()));\\n \\n@@ -161,14 +157,14 @@ protected String getContent(SxSource sxSource, FilesystemExportContext exportCon\\n     {\\n         String content;\\n \\n-        \/\/ We know we\\'re inside a SX file located at \"<S|J>sx\/<Space>\/<Page>\/<s|j>sx<NNN>.<css|js>\". Inside this CSS\\n+        \/\/ We know we\\'re inside a SX file located at \"<S|J>sx\/<id>\/<s|j>sx<NNN>.<css|js>\". Inside this CSS\\n         \/\/ there can be URLs and we need to ensure that the prefix for these URLs lead to the root of the path, i.e.\\n-        \/\/ 3 levels up (\"..\/..\/..\/\").\\n+        \/\/ 3 levels up (\"..\/..\/\").\\n         \/\/ To make this happen we reuse the Doc Parent Level from FileSystemExportContext to a fixed value of 3.\\n         \/\/ We also make sure to put back the original value\\n         int originalDocParentLevel = exportContext.getDocParentLevel();\\n         try {\\n-            exportContext.setDocParentLevels(3);\\n+            exportContext.setDocParentLevels(2);\\n             content = sxSource.getContent();\\n         } finally {\\n             exportContext.setDocParentLevels(originalDocParentLevel);'}}",
            "message_norm":"xwiki-18819: it's possible to save pretty much anything anywhere by creating and using an ssx\/jsx containing \"..\/\" in its reference",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['xwiki-platform-core\/xwiki-platform-skin\/xwiki-platform-skin-skinx\/src\/main\/java\/org\/xwiki\/skinx\/internal\/AbstractSxExportURLFactoryActionHandler.java'])",
            "num_files":1.0,
            "patch_content":"From ab778254fb8f71c774e1c1239368c44fe3b6bba5 Mon Sep 17 00:00:00 2001\nFrom: Thomas Mortagne <thomas.mortagne@gmail.com>\nDate: Wed, 7 Jul 2021 16:02:50 +0200\nSubject: [PATCH] XWIKI-18819: It's possible to save pretty much anything\n anywhere by creating and using an SSX\/JSX containing \"..\/\" in its reference\n\n---\n ...bstractSxExportURLFactoryActionHandler.java | 18 +++++++-----------\n 1 file changed, 7 insertions(+), 11 deletions(-)\n\ndiff --git a\/xwiki-platform-core\/xwiki-platform-skin\/xwiki-platform-skin-skinx\/src\/main\/java\/org\/xwiki\/skinx\/internal\/AbstractSxExportURLFactoryActionHandler.java b\/xwiki-platform-core\/xwiki-platform-skin\/xwiki-platform-skin-skinx\/src\/main\/java\/org\/xwiki\/skinx\/internal\/AbstractSxExportURLFactoryActionHandler.java\nindex 0b9af4e39b9d..29ff0d1db61c 100644\n--- a\/xwiki-platform-core\/xwiki-platform-skin\/xwiki-platform-skin-skinx\/src\/main\/java\/org\/xwiki\/skinx\/internal\/AbstractSxExportURLFactoryActionHandler.java\n+++ b\/xwiki-platform-core\/xwiki-platform-skin\/xwiki-platform-skin-skinx\/src\/main\/java\/org\/xwiki\/skinx\/internal\/AbstractSxExportURLFactoryActionHandler.java\n@@ -100,13 +100,13 @@ public URL createURL(String spaces, String name, String queryString, String anch\n         XWikiDocument.backupContext(backup, context);\n         try {\n             sxDocument.setAsContextDoc(context);\n-            return processSx(spaceNames, name, queryString, context, exportContext);\n+            return processSx(sxDocument.getId(), queryString, context, exportContext);\n         } finally {\n             XWikiDocument.restoreContext(backup, context);\n         }\n     }\n \n-    private URL processSx(List<String> spaceNames, String name, String queryString, XWikiContext context,\n+    private URL processSx(long id, String queryString, XWikiContext context,\n         FilesystemExportContext exportContext) throws Exception\n     {\n         SxSource sxSource = null;\n@@ -128,7 +128,7 @@ private URL processSx(List<String> spaceNames, String name, String queryString,\n \n         \/\/ Write the content to file\n         \/\/ We need a unique name for that SSX content\n-        String targetPath = String.format(\"%s\/%s\/%s\", getSxPrefix(), StringUtils.join(spaceNames, '\/'), name);\n+        String targetPath = String.format(\"%s\/%s\", getSxPrefix(), id);\n         File targetDirectory = new File(exportContext.getExportDir(), targetPath);\n         if (!targetDirectory.exists()) {\n             targetDirectory.mkdirs();\n@@ -146,11 +146,7 @@ private URL processSx(List<String> spaceNames, String name, String queryString,\n \n         path.append(getSxPrefix());\n         path.append(URL_PATH_SEPARATOR);\n-        for (String spaceName : spaceNames) {\n-            path.append(encodeURLPart(spaceName));\n-            path.append(URL_PATH_SEPARATOR);\n-        }\n-        path.append(encodeURLPart(name));\n+        path.append(id);\n         path.append(URL_PATH_SEPARATOR);\n         path.append(encodeURLPart(targetLocation.getName()));\n \n@@ -161,14 +157,14 @@ protected String getContent(SxSource sxSource, FilesystemExportContext exportCon\n     {\n         String content;\n \n-        \/\/ We know we're inside a SX file located at \"<S|J>sx\/<Space>\/<Page>\/<s|j>sx<NNN>.<css|js>\". Inside this CSS\n+        \/\/ We know we're inside a SX file located at \"<S|J>sx\/<id>\/<s|j>sx<NNN>.<css|js>\". Inside this CSS\n         \/\/ there can be URLs and we need to ensure that the prefix for these URLs lead to the root of the path, i.e.\n-        \/\/ 3 levels up (\"..\/..\/..\/\").\n+        \/\/ 3 levels up (\"..\/..\/\").\n         \/\/ To make this happen we reuse the Doc Parent Level from FileSystemExportContext to a fixed value of 3.\n         \/\/ We also make sure to put back the original value\n         int originalDocParentLevel = exportContext.getDocParentLevel();\n         try {\n-            exportContext.setDocParentLevels(3);\n+            exportContext.setDocParentLevels(2);\n             content = sxSource.getContent();\n         } finally {\n             exportContext.setDocParentLevels(originalDocParentLevel);"
        },
        {
            "index":889,
            "vuln_id":"GHSA-3j78-7m59-r7gv",
            "cwe_id":"{'CWE-284'}",
            "score":8.0,
            "chain":"{'https:\/\/github.com\/buddypress\/BuddyPress\/commit\/39294680369a0c992290577a9d740f4a2f2c2ca3'}",
            "dataset":"osv",
            "summary":"Private data exposure via REST API in BuddyPress In BuddyPress before 5.1.2, requests to a certain REST API endpoint can result in private user data getting exposed. Authentication is not needed.\n\nThis has been patched in version 5.1.2.",
            "published_date":"2020-02-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/buddypress\/BuddyPress",
            "commit_href":"https:\/\/github.com\/buddypress\/BuddyPress\/commit\/39294680369a0c992290577a9d740f4a2f2c2ca3",
            "commit_sha":"39294680369a0c992290577a9d740f4a2f2c2ca3",
            "patch":"SINGLE",
            "chain_ord":"['39294680369a0c992290577a9d740f4a2f2c2ca3']",
            "before_first_fix_commit":"{'98da00c5892ccc7aca5702ffd43d651cb78c0c7c'}",
            "last_fix_commit":"39294680369a0c992290577a9d740f4a2f2c2ca3",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/31\/2020, 16:32:54",
            "message":"Admin: Sanitize external links to activated BP component pages.\n\nProps imath.\nSee #8235.\n\ngit-svn-id: https:\/\/buddypress.svn.wordpress.org\/trunk@12549 cdf35c40-ae34-48e0-9cc9-0c9da1808c22",
            "author":"Mercime",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/bp-core\/admin\/bp-core-admin-slugs.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/buddypress\/buddypress\/raw\/39294680369a0c992290577a9d740f4a2f2c2ca3\/src%2Fbp-core%2Fadmin%2Fbp-core-admin-slugs.php', 'patch': '@@ -145,7 +145,7 @@ function bp_core_admin_slugs_options() {\\n \\n \\t\\t\\t\\t\\t\\t\\t<?php if ( !empty( $existing_pages[$name] ) ) : ?>\\n \\n-\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"<?php echo get_permalink( $existing_pages[$name] ); ?>\" class=\"button-secondary\" target=\"_bp\"><?php _e( \\'View\\', \\'buddypress\\' ); ?><\/a>\\n+\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"<?php echo esc_url( get_permalink( $existing_pages[$name] ) ); ?>\" class=\"button-secondary\" target=\"_bp\"><?php _e( \\'View\\', \\'buddypress\\' ); ?><\/a>\\n \\n \\t\\t\\t\\t\\t\\t\\t<?php endif; ?>'}}",
            "message_norm":"admin: sanitize external links to activated bp component pages.\n\nprops imath.\nsee #8235.\n\ngit-svn-id: https:\/\/buddypress.svn.wordpress.org\/trunk@12549 cdf35c40-ae34-48e0-9cc9-0c9da1808c22",
            "language":"en",
            "entities":"[('admin', 'SECWORD', ''), ('sanitize', 'SECWORD', ''), ('#8235', 'ISSUE', ''), ('https:\/\/buddypress.svn.wordpress.org\/trunk@12549', 'URL', ''), ('cdf35c40', 'SHA', 'generic_sha'), ('0c9da1808c22', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/bp-core\/admin\/bp-core-admin-slugs.php'])",
            "num_files":1.0,
            "patch_content":"From 39294680369a0c992290577a9d740f4a2f2c2ca3 Mon Sep 17 00:00:00 2001\nFrom: Mercime <mercijavier@gmail.com>\nDate: Fri, 31 Jan 2020 16:32:54 +0000\nSubject: [PATCH] Admin: Sanitize external links to activated BP component\n pages.\n\nProps imath.\nSee #8235.\n\ngit-svn-id: https:\/\/buddypress.svn.wordpress.org\/trunk@12549 cdf35c40-ae34-48e0-9cc9-0c9da1808c22\n---\n src\/bp-core\/admin\/bp-core-admin-slugs.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/src\/bp-core\/admin\/bp-core-admin-slugs.php b\/src\/bp-core\/admin\/bp-core-admin-slugs.php\nindex 180e06bd1d..8fbe4d82ea 100644\n--- a\/src\/bp-core\/admin\/bp-core-admin-slugs.php\n+++ b\/src\/bp-core\/admin\/bp-core-admin-slugs.php\n@@ -145,7 +145,7 @@ function bp_core_admin_slugs_options() {\n \n \t\t\t\t\t\t\t<?php if ( !empty( $existing_pages[$name] ) ) : ?>\n \n-\t\t\t\t\t\t\t\t<a href=\"<?php echo get_permalink( $existing_pages[$name] ); ?>\" class=\"button-secondary\" target=\"_bp\"><?php _e( 'View', 'buddypress' ); ?><\/a>\n+\t\t\t\t\t\t\t\t<a href=\"<?php echo esc_url( get_permalink( $existing_pages[$name] ) ); ?>\" class=\"button-secondary\" target=\"_bp\"><?php _e( 'View', 'buddypress' ); ?><\/a>\n \n \t\t\t\t\t\t\t<?php endif; ?>"
        },
        {
            "index":408,
            "vuln_id":"GHSA-49qr-xh3w-h436",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/jupyter\/notebook\/commit\/107a89fce5f413fb5728c1c5d2c7788e1fb17491'}",
            "dataset":"osv",
            "summary":"Moderate severity vulnerability that affects notebook Jupyter Notebook before 5.7.1 allows XSS via an untrusted notebook because nbconvert responses are considered to have the same origin as the notebook server. In other words, nbconvert endpoints can execute JavaScript with access to the server API. In notebook\/nbconvert\/handlers.py, NbconvertFileHandler and NbconvertPostHandler do not set a Content Security Policy to prevent this.",
            "published_date":"2018-11-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/jupyter\/notebook",
            "commit_href":"https:\/\/github.com\/jupyter\/notebook\/commit\/107a89fce5f413fb5728c1c5d2c7788e1fb17491",
            "commit_sha":"107a89fce5f413fb5728c1c5d2c7788e1fb17491",
            "patch":"SINGLE",
            "chain_ord":"['107a89fce5f413fb5728c1c5d2c7788e1fb17491']",
            "before_first_fix_commit":"{'04a686dbaf9dfe553324a03cb9e6f778cf1e3da1'}",
            "last_fix_commit":"107a89fce5f413fb5728c1c5d2c7788e1fb17491",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/22\/2018, 13:52:36",
            "message":"Apply CSP sandboxing for nbconvert responses\n\nThese may contain untrusted content, so they should be treated as being\nfrom a different domain to the notebook server.",
            "author":"Thomas Kluyver",
            "comments":null,
            "stats":"{'additions': 14, 'deletions': 0, 'total': 14}",
            "files":"{'notebook\/nbconvert\/handlers.py': {'additions': 14, 'deletions': 0, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyter\/notebook\/raw\/107a89fce5f413fb5728c1c5d2c7788e1fb17491\/notebook%2Fnbconvert%2Fhandlers.py', 'patch': '@@ -78,6 +78,13 @@ class NbconvertFileHandler(IPythonHandler):\\n \\n     SUPPORTED_METHODS = (\\'GET\\',)\\n \\n+    @property\\n+    def content_security_policy(self):\\n+        # In case we\\'re serving HTML\/SVG, confine any Javascript to a unique\\n+        # origin so it can\\'t interact with the notebook server.\\n+        return super(NbconvertFileHandler, self).content_security_policy + \\\\\\n+               \"; sandbox allow-scripts\"\\n+\\n     @web.authenticated\\n     def get(self, format, path):\\n \\n@@ -145,6 +152,13 @@ def get(self, format, path):\\n class NbconvertPostHandler(IPythonHandler):\\n     SUPPORTED_METHODS = (\\'POST\\',)\\n \\n+    @property\\n+    def content_security_policy(self):\\n+        # In case we\\'re serving HTML\/SVG, confine any Javascript to a unique\\n+        # origin so it can\\'t interact with the notebook server.\\n+        return super(NbconvertPostHandler, self).content_security_policy + \\\\\\n+               \"; sandbox allow-scripts\"\\n+\\n     @web.authenticated\\n     def post(self, format):\\n         exporter = get_exporter(format, config=self.config)'}}",
            "message_norm":"apply csp sandboxing for nbconvert responses\n\nthese may contain untrusted content, so they should be treated as being\nfrom a different domain to the notebook server.",
            "language":"en",
            "entities":"[('untrusted', 'SECWORD', ''), ('server', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['notebook\/nbconvert\/handlers.py'])",
            "num_files":1.0,
            "patch_content":"From 107a89fce5f413fb5728c1c5d2c7788e1fb17491 Mon Sep 17 00:00:00 2001\nFrom: Thomas Kluyver <thomas@kluyver.me.uk>\nDate: Mon, 22 Oct 2018 14:52:36 +0100\nSubject: [PATCH] Apply CSP sandboxing for nbconvert responses\n\nThese may contain untrusted content, so they should be treated as being\nfrom a different domain to the notebook server.\n---\n notebook\/nbconvert\/handlers.py | 14 ++++++++++++++\n 1 file changed, 14 insertions(+)\n\ndiff --git a\/notebook\/nbconvert\/handlers.py b\/notebook\/nbconvert\/handlers.py\nindex bb26664aa7..bf0a4bfba8 100644\n--- a\/notebook\/nbconvert\/handlers.py\n+++ b\/notebook\/nbconvert\/handlers.py\n@@ -78,6 +78,13 @@ class NbconvertFileHandler(IPythonHandler):\n \n     SUPPORTED_METHODS = ('GET',)\n \n+    @property\n+    def content_security_policy(self):\n+        # In case we're serving HTML\/SVG, confine any Javascript to a unique\n+        # origin so it can't interact with the notebook server.\n+        return super(NbconvertFileHandler, self).content_security_policy + \\\n+               \"; sandbox allow-scripts\"\n+\n     @web.authenticated\n     def get(self, format, path):\n \n@@ -145,6 +152,13 @@ def get(self, format, path):\n class NbconvertPostHandler(IPythonHandler):\n     SUPPORTED_METHODS = ('POST',)\n \n+    @property\n+    def content_security_policy(self):\n+        # In case we're serving HTML\/SVG, confine any Javascript to a unique\n+        # origin so it can't interact with the notebook server.\n+        return super(NbconvertPostHandler, self).content_security_policy + \\\n+               \"; sandbox allow-scripts\"\n+\n     @web.authenticated\n     def post(self, format):\n         exporter = get_exporter(format, config=self.config)"
        },
        {
            "index":542,
            "vuln_id":"GHSA-65mj-7c86-79jf",
            "cwe_id":"{'CWE-305', 'CWE-287'}",
            "score":9.1,
            "chain":"{'https:\/\/github.com\/ADOdb\/ADOdb\/commit\/952de6c4273d9b1e91c2b838044f8c2111150c29', 'https:\/\/github.com\/ADOdb\/ADOdb\/commit\/b4d5ce70034c5aac3a1d51d317d93c037a0938d2'}",
            "dataset":"osv",
            "summary":"Authentication Bypass in ADOdb\/ADOdb ### Impact\n\nAn attacker can inject values into a PostgreSQL connection string by providing a parameter surrounded by single quotes.\n\nDepending on how the library is used in the client software, this may allow an attacker to bypass the login process, gain access to the server's IP address, etc.\n\n### Patches\n\nThe vulnerability is fixed in ADOdb versions 5.20.21 (952de6c4273d9b1e91c2b838044f8c2111150c29) and 5.21.4 or later (b4d5ce70034c5aac3a1d51d317d93c037a0938d2).\n\nThe simplest patch is to delete line 29 in `drivers\/adodb-postgres64.inc.php`:\n\n```php\ndiff --git a\/drivers\/adodb-postgres64.inc.php b\/drivers\/adodb-postgres64.inc.php\nindex d04b7f67..729d7141 100644\n--- a\/drivers\/adodb-postgres64.inc.php\n+++ b\/drivers\/adodb-postgres64.inc.php\n@@ -26,7 +26,6 @@ function adodb_addslashes($s)\n {\n    $len = strlen($s);\n    if ($len == 0) return \"''\";\n-   if (strncmp($s,\"'\",1) === 0 && substr($s,$len-1) == \"'\") return $s; \/\/ already quoted\n \n    return \"'\".addslashes($s).\"'\";\n }\n```\n\n### Workarounds\n\nEnsure the parameters passed to *ADOConnection::connect()* or related functions (_nConnect()_, _pConnect()_) are not surrounded by single quotes.\n\n### Credits\n\nThanks to **Emmet Leahy** (@meme-lord) of Sorcery Ltd for reporting this vulnerability, and to the [huntr](https:\/\/huntr.dev\/) team for their support.\n\n### References\n\n- Original issue report https:\/\/huntr.dev\/bounties\/bdf5f216-4499-4225-a737-b28bc6f5801c\/\n- ADOdb reference issue #793 \n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Add a note in issue #793\n* Contact the maintainers on [Gitter](https:\/\/gitter.im\/adodb\/adodb)",
            "published_date":"2022-01-27",
            "chain_len":2,
            "project":"https:\/\/github.com\/ADOdb\/ADOdb",
            "commit_href":"https:\/\/github.com\/ADOdb\/ADOdb\/commit\/952de6c4273d9b1e91c2b838044f8c2111150c29",
            "commit_sha":"952de6c4273d9b1e91c2b838044f8c2111150c29",
            "patch":"MULTI",
            "chain_ord":"['952de6c4273d9b1e91c2b838044f8c2111150c29', 'b4d5ce70034c5aac3a1d51d317d93c037a0938d2']",
            "before_first_fix_commit":"{'c5415722049f36c446a4034d15f1d17943f11458'}",
            "last_fix_commit":"b4d5ce70034c5aac3a1d51d317d93c037a0938d2",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/10\/2022, 08:41:32",
            "message":"Prevent auth bypass with PostgreSQL connections\n\nThanks to Emmet Leahy of Sorcery Ltd for reporting this vulnerability\n(CVE-2021-3850).\n\nThis is a minimalistic approach to patch the issue, to reduce the risk\nof causing regressions in the legacy stable branch.\n\nFixes #793",
            "author":"Damien Regad",
            "comments":null,
            "stats":"{'additions': 0, 'deletions': 1, 'total': 1}",
            "files":"{'drivers\/adodb-postgres64.inc.php': {'additions': 0, 'deletions': 1, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ADOdb\/ADOdb\/raw\/952de6c4273d9b1e91c2b838044f8c2111150c29\/drivers%2Fadodb-postgres64.inc.php', 'patch': '@@ -51,7 +51,6 @@ function adodb_addslashes($s)\\n {\\n \\t$len = strlen($s);\\n \\tif ($len == 0) return \"\\'\\'\";\\n-\\tif (strncmp($s,\"\\'\",1) === 0 && substr($s,$len-1) == \"\\'\") return $s; \/\/ already quoted\\n \\n \\treturn \"\\'\".addslashes($s).\"\\'\";\\n }'}}",
            "message_norm":"prevent auth bypass with postgresql connections\n\nthanks to emmet leahy of sorcery ltd for reporting this vulnerability\n(cve-2021-3850).\n\nthis is a minimalistic approach to patch the issue, to reduce the risk\nof causing regressions in the legacy stable branch.\n\nfixes #793",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('auth', 'SECWORD', ''), ('bypass', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('cve-2021-3850', 'VULNID', 'CVE'), ('patch', 'ACTION', ''), ('issue', 'FLAW', ''), ('fixes', 'ACTION', ''), ('#793', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['drivers\/adodb-postgres64.inc.php'])",
            "num_files":1.0,
            "patch_content":"From 952de6c4273d9b1e91c2b838044f8c2111150c29 Mon Sep 17 00:00:00 2001\nFrom: Damien Regad <dregad@mantisbt.org>\nDate: Mon, 10 Jan 2022 09:41:32 +0100\nSubject: [PATCH] Prevent auth bypass with PostgreSQL connections\n\nThanks to Emmet Leahy of Sorcery Ltd for reporting this vulnerability\n(CVE-2021-3850).\n\nThis is a minimalistic approach to patch the issue, to reduce the risk\nof causing regressions in the legacy stable branch.\n\nFixes #793\n---\n drivers\/adodb-postgres64.inc.php | 1 -\n 1 file changed, 1 deletion(-)\n\ndiff --git a\/drivers\/adodb-postgres64.inc.php b\/drivers\/adodb-postgres64.inc.php\nindex 27e06b069..c98ade9ae 100644\n--- a\/drivers\/adodb-postgres64.inc.php\n+++ b\/drivers\/adodb-postgres64.inc.php\n@@ -51,7 +51,6 @@ function adodb_addslashes($s)\n {\n \t$len = strlen($s);\n \tif ($len == 0) return \"''\";\n-\tif (strncmp($s,\"'\",1) === 0 && substr($s,$len-1) == \"'\") return $s; \/\/ already quoted\n \n \treturn \"'\".addslashes($s).\"'\";\n }"
        },
        {
            "index":687,
            "vuln_id":"GHSA-86ch-6w7v-v6xf",
            "cwe_id":"{'CWE-755'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/soketi\/soketi\/commit\/4b12efef9c31117c36a0a0f1c3aa32114e86364b'}",
            "dataset":"osv",
            "summary":"Denial of Service in soketi ### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nThere was a wrong behavior when reading POST requests, making the server crash if it couldn't read the body. In case a POST request was sent to any endpoint of the server with an empty body, **even unauthenticated with the Pusher Protocol**, it would simply just crash the server for trying to send a response after the request closed.\n\nAll users that run the server are affected by it and it's highly recommended to upgrade to the latest patch.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nUpdating to at least 0.24.1 or the latest version.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nNo. Upgrading is the only solution.\n\n### References\n_Are there any links users can visit to find out more?_\n\nhttps:\/\/github.com\/soketi\/soketi\/releases\/tag\/0.24.1\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the issues board](https:\/\/github.com\/soketi\/soketi\/issues)\n* Email us at [alex@renoki.org](mailto:alex@renoki.org)",
            "published_date":"2022-01-08",
            "chain_len":1,
            "project":"https:\/\/github.com\/soketi\/soketi",
            "commit_href":"https:\/\/github.com\/soketi\/soketi\/commit\/4b12efef9c31117c36a0a0f1c3aa32114e86364b",
            "commit_sha":"4b12efef9c31117c36a0a0f1c3aa32114e86364b",
            "patch":"SINGLE",
            "chain_ord":"['4b12efef9c31117c36a0a0f1c3aa32114e86364b']",
            "before_first_fix_commit":"{'8541e4e07c97de7b6fd2ce22f4e072ef1072d627', '53ba39c7886c614d27633d347dbd93faac9dbdc0'}",
            "last_fix_commit":"4b12efef9c31117c36a0a0f1c3aa32114e86364b",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/07\/2022, 11:26:17",
            "message":"Merge pull request #246 from soketi\/fix\/crash-on-empty-post\n\n[fix] Do not close the connection on empty POST payload",
            "author":"rennokki",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 7, 'total': 16}",
            "files":"{'src\/http-handler.ts': {'additions': 9, 'deletions': 7, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/soketi\/soketi\/raw\/4b12efef9c31117c36a0a0f1c3aa32114e86364b\/src%2Fhttp-handler.ts', 'patch': \"@@ -417,19 +417,22 @@ export class HttpHandler {\\n             let chunk = Buffer.from(ab);\\n \\n             if (isLast) {\\n-                let json;\\n-                let raw;\\n+                let json = {};\\n+                let raw = '{}';\\n \\n                 if (buffer) {\\n                     try {\\n                         \/\/ @ts-ignore\\n                         json = JSON.parse(Buffer.concat([buffer, chunk]));\\n                     } catch (e) {\\n-                        res.close();\\n-                        return;\\n+                        \/\/\\n                     }\\n \\n-                    raw = Buffer.concat([buffer, chunk]).toString();\\n+                    try {\\n+                        raw = Buffer.concat([buffer, chunk]).toString();\\n+                    } catch (e) {\\n+                        \/\/\\n+                    }\\n \\n                     cb(json, raw);\\n                     loggingAction(json);\\n@@ -439,8 +442,7 @@ export class HttpHandler {\\n                         json = JSON.parse(chunk);\\n                         raw = chunk.toString();\\n                     } catch (e) {\\n-                        res.close();\\n-                        return;\\n+                        \/\/\\n                     }\\n \\n                     cb(json, raw);\"}}",
            "message_norm":"merge pull request #246 from soketi\/fix\/crash-on-empty-post\n\n[fix] do not close the connection on empty post payload",
            "language":"en",
            "entities":"[('#246', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/http-handler.ts'])",
            "num_files":1.0,
            "patch_content":"From 8541e4e07c97de7b6fd2ce22f4e072ef1072d627 Mon Sep 17 00:00:00 2001\nFrom: Alex Renoki <rennokki@gmail.com>\nDate: Fri, 7 Jan 2022 13:11:39 +0200\nSubject: [PATCH] Do not close the connection on empty payload\n\n---\n src\/http-handler.ts | 16 +++++++++-------\n 1 file changed, 9 insertions(+), 7 deletions(-)\n\ndiff --git a\/src\/http-handler.ts b\/src\/http-handler.ts\nindex 6ef30a0d..5e565a06 100644\n--- a\/src\/http-handler.ts\n+++ b\/src\/http-handler.ts\n@@ -417,19 +417,22 @@ export class HttpHandler {\n             let chunk = Buffer.from(ab);\n \n             if (isLast) {\n-                let json;\n-                let raw;\n+                let json = {};\n+                let raw = '{}';\n \n                 if (buffer) {\n                     try {\n                         \/\/ @ts-ignore\n                         json = JSON.parse(Buffer.concat([buffer, chunk]));\n                     } catch (e) {\n-                        res.close();\n-                        return;\n+                        \/\/\n                     }\n \n-                    raw = Buffer.concat([buffer, chunk]).toString();\n+                    try {\n+                        raw = Buffer.concat([buffer, chunk]).toString();\n+                    } catch (e) {\n+                        \/\/\n+                    }\n \n                     cb(json, raw);\n                     loggingAction(json);\n@@ -439,8 +442,7 @@ export class HttpHandler {\n                         json = JSON.parse(chunk);\n                         raw = chunk.toString();\n                     } catch (e) {\n-                        res.close();\n-                        return;\n+                        \/\/\n                     }\n \n                     cb(json, raw);"
        },
        {
            "index":109,
            "vuln_id":"GHSA-2877-693q-pj33",
            "cwe_id":"{'CWE-78'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/genieacs\/genieacs\/commit\/7f295beeecc1c1f14308a93c82413bb334045af6'}",
            "dataset":"osv",
            "summary":"OS Command Injection in GenieACS In GenieACS 1.2.x before 1.2.8, the UI interface API is vulnerable to unauthenticated OS command injection via the ping host argument (lib\/ui\/api.ts and lib\/ping.ts). The vulnerability arises from insufficient input validation combined with a missing authorization check.",
            "published_date":"2022-03-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/genieacs\/genieacs",
            "commit_href":"https:\/\/github.com\/genieacs\/genieacs\/commit\/7f295beeecc1c1f14308a93c82413bb334045af6",
            "commit_sha":"7f295beeecc1c1f14308a93c82413bb334045af6",
            "patch":"SINGLE",
            "chain_ord":"['7f295beeecc1c1f14308a93c82413bb334045af6']",
            "before_first_fix_commit":"{'2ac536bf8f2dd03c24b2eff35b69578b4efae94e'}",
            "last_fix_commit":"7f295beeecc1c1f14308a93c82413bb334045af6",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/14\/2021, 07:33:35",
            "message":"Validate host arg passed to ping\n\nFixes remote code execution vulnerability reported by Alex Hordijk.",
            "author":"Zaid Abdulla",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 0, 'total': 13}",
            "files":"{'lib\/ping.ts': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/genieacs\/genieacs\/raw\/7f295beeecc1c1f14308a93c82413bb334045af6\/lib%2Fping.ts', 'patch': '@@ -19,6 +19,7 @@\\n \\n import { platform } from \"os\";\\n import { exec } from \"child_process\";\\n+import { domainToASCII } from \"url\";\\n \\n export interface PingResult {\\n   packetsTransmitted: number;\\n@@ -30,11 +31,23 @@ export interface PingResult {\\n   mdev: number;\\n }\\n \\n+function isValidHost(host: string): boolean {\\n+  \/\/ Valid chars in IPv4, IPv6, domain names\\n+  if (\/^[a-zA-Z0-9\\\\-.:[\\\\]-]+$\/.test(host)) return true;\\n+\\n+  \/\/ Check if input is an IDN convert to Punycode\\n+  \/\/ Can\\'t merge with above because domainToASCII doesn\\'t accept IP addresses\\n+  return \/^[a-zA-Z0-9\\\\-.:[\\\\]-]+$\/.test(domainToASCII(host));\\n+}\\n+\\n export function ping(\\n   host: string,\\n   callback: (err: Error, res?: PingResult, stdout?: string) => void\\n ): void {\\n   let cmd: string, parseRegExp1: RegExp, parseRegExp2: RegExp;\\n+  \/\/ Validate input to prevent possible remote code execution\\n+  \/\/ Credit to Alex Hordijk for reporting this vulnerability\\n+  if (!isValidHost(host)) return callback(new Error(\"Invalid host\"));\\n   host = host.replace(\"[\", \"\").replace(\"]\", \"\");\\n   switch (platform()) {\\n     case \"linux\":'}}",
            "message_norm":"validate host arg passed to ping\n\nfixes remote code execution vulnerability reported by alex hordijk.",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('fixes', 'ACTION', ''), ('remote code execution', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/ping.ts'])",
            "num_files":1.0,
            "patch_content":"From 7f295beeecc1c1f14308a93c82413bb334045af6 Mon Sep 17 00:00:00 2001\nFrom: Zaid Abdulla <zaid@genieacs.com>\nDate: Thu, 14 Oct 2021 00:33:35 -0700\nSubject: [PATCH] Validate host arg passed to ping\n\nFixes remote code execution vulnerability reported by Alex Hordijk.\n---\n lib\/ping.ts | 13 +++++++++++++\n 1 file changed, 13 insertions(+)\n\ndiff --git a\/lib\/ping.ts b\/lib\/ping.ts\nindex 6bf9ca51..e09cb774 100644\n--- a\/lib\/ping.ts\n+++ b\/lib\/ping.ts\n@@ -19,6 +19,7 @@\n \n import { platform } from \"os\";\n import { exec } from \"child_process\";\n+import { domainToASCII } from \"url\";\n \n export interface PingResult {\n   packetsTransmitted: number;\n@@ -30,11 +31,23 @@ export interface PingResult {\n   mdev: number;\n }\n \n+function isValidHost(host: string): boolean {\n+  \/\/ Valid chars in IPv4, IPv6, domain names\n+  if (\/^[a-zA-Z0-9\\-.:[\\]-]+$\/.test(host)) return true;\n+\n+  \/\/ Check if input is an IDN convert to Punycode\n+  \/\/ Can't merge with above because domainToASCII doesn't accept IP addresses\n+  return \/^[a-zA-Z0-9\\-.:[\\]-]+$\/.test(domainToASCII(host));\n+}\n+\n export function ping(\n   host: string,\n   callback: (err: Error, res?: PingResult, stdout?: string) => void\n ): void {\n   let cmd: string, parseRegExp1: RegExp, parseRegExp2: RegExp;\n+  \/\/ Validate input to prevent possible remote code execution\n+  \/\/ Credit to Alex Hordijk for reporting this vulnerability\n+  if (!isValidHost(host)) return callback(new Error(\"Invalid host\"));\n   host = host.replace(\"[\", \"\").replace(\"]\", \"\");\n   switch (platform()) {\n     case \"linux\":"
        },
        {
            "index":842,
            "vuln_id":"GHSA-xm2v-8rrw-w9pm",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2be2cdf3a123e231b16f766aa0e27d56b4606535'}",
            "dataset":"osv",
            "summary":"Division by 0 in `Conv2DBackpropInput` ### Impact\nAn attacker can trigger a division by 0 in `tf.raw_ops.Conv2DBackpropInput`:\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([52, 1, 1, 5], shape=[4], dtype=tf.int32)\nfilter_tensor = tf.constant([], shape=[0, 1, 5, 0], dtype=tf.float32)\nout_backprop = tf.constant([], shape=[52, 1, 1, 0], dtype=tf.float32)\n\ntf.raw_ops.Conv2DBackpropInput(input_sizes=input_tensor, filter=filter_tensor,\n                               out_backprop=out_backprop, strides=[1, 1, 1, 1],\n                               use_cudnn_on_gpu=True, padding='SAME',\n                               explicit_paddings=[], data_format='NHWC',\n                               dilations=[1, 1, 1, 1])\n```                 \n                    \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/b40060c9f697b044e3107917c797ba052f4506ab\/tensorflow\/core\/kernels\/conv_grad_input_ops.h#L625-L655) does a division by a quantity that is controlled by the caller:\n\n```cc \n  const size_t size_A = output_image_size * dims.out_depth; \n  const size_t size_B = filter_total_size * dims.out_depth;\n  const size_t size_C = output_image_size * filter_total_size;\n  const size_t work_unit_size = size_A + size_B + size_C;\n  ...\n  const size_t shard_size =\n      use_parallel_contraction ? 1 :\n      (target_working_set_size + work_unit_size - 1) \/ work_unit_size;\n```\n\n### Patches\nWe have patched the issue in GitHub commit [2be2cdf3a123e231b16f766aa0e27d56b4606535](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2be2cdf3a123e231b16f766aa0e27d56b4606535).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2be2cdf3a123e231b16f766aa0e27d56b4606535",
            "commit_sha":"2be2cdf3a123e231b16f766aa0e27d56b4606535",
            "patch":"SINGLE",
            "chain_ord":"['2be2cdf3a123e231b16f766aa0e27d56b4606535']",
            "before_first_fix_commit":"{'b40060c9f697b044e3107917c797ba052f4506ab'}",
            "last_fix_commit":"2be2cdf3a123e231b16f766aa0e27d56b4606535",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/20\/2021, 01:13:04",
            "message":"Prevent yet another division by zero\n\nPiperOrigin-RevId: 369343977\nChange-Id: I1a60da4cf512e60fd91e069c16e026544632fe7f",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/conv_grad_input_ops.h': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/2be2cdf3a123e231b16f766aa0e27d56b4606535\/tensorflow%2Fcore%2Fkernels%2Fconv_grad_input_ops.h', 'patch': '@@ -649,6 +649,11 @@ class Conv2DCustomBackpropInputOp : public OpKernel {\\n         dims.batch_size == 1 ||\\n         thread_work_unit_size >= min_thread_work_unit_size;\\n \\n+    OP_REQUIRES(\\n+        context, work_unit_size > 0,\\n+        errors::InvalidArgument(\"input, filter_sizes and out_backprop tensors \"\\n+                                \"must all have at least 1 element\"));\\n+\\n     const size_t shard_size =\\n         use_parallel_contraction\\n             ? 1'}}",
            "message_norm":"prevent yet another division by zero\n\npiperorigin-revid: 369343977\nchange-id: i1a60da4cf512e60fd91e069c16e026544632fe7f",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by zero', 'SECWORD', ''), ('369343977', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_grad_input_ops.h'])",
            "num_files":1.0,
            "patch_content":"From 2be2cdf3a123e231b16f766aa0e27d56b4606535 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Mon, 19 Apr 2021 18:13:04 -0700\nSubject: [PATCH] Prevent yet another division by zero\n\nPiperOrigin-RevId: 369343977\nChange-Id: I1a60da4cf512e60fd91e069c16e026544632fe7f\n---\n tensorflow\/core\/kernels\/conv_grad_input_ops.h | 5 +++++\n 1 file changed, 5 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/conv_grad_input_ops.h b\/tensorflow\/core\/kernels\/conv_grad_input_ops.h\nindex b5059c479e5d93..3d3a44390b5f73 100644\n--- a\/tensorflow\/core\/kernels\/conv_grad_input_ops.h\n+++ b\/tensorflow\/core\/kernels\/conv_grad_input_ops.h\n@@ -649,6 +649,11 @@ class Conv2DCustomBackpropInputOp : public OpKernel {\n         dims.batch_size == 1 ||\n         thread_work_unit_size >= min_thread_work_unit_size;\n \n+    OP_REQUIRES(\n+        context, work_unit_size > 0,\n+        errors::InvalidArgument(\"input, filter_sizes and out_backprop tensors \"\n+                                \"must all have at least 1 element\"));\n+\n     const size_t shard_size =\n         use_parallel_contraction\n             ? 1"
        },
        {
            "index":804,
            "vuln_id":"GHSA-hx9q-2mx4-m4pg",
            "cwe_id":"{'CWE-191', 'CWE-20'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/20cb18724b0bf6c09071a3f53434c4eec53cc147', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/84563f265f28b3c36a15335c8b005d405260e943'}",
            "dataset":"osv",
            "summary":"Missing validation causes denial of service via `Conv3DBackpropFilterV2` ### Impact\nThe implementation of [`tf.raw_ops.UnsortedSegmentJoin`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/unsorted_segment_join_op.cc#L83-L148) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport tensorflow as tf\n\ntf.strings.unsorted_segment_join(\n  inputs=['123'],\n  segment_ids=[0],\n  num_segments=-1)\n```\n\nThe code assumes `num_segments` is a positive scalar but there is no validation:\n\n```cc\nconst Tensor& num_segments_tensor = context->input(2);\nauto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\n\/\/ ...\nTensor* output_tensor = nullptr;\nTensorShape output_shape =\n    GetOutputShape(input_shape, segment_id_shape, num_segments);\n```\n\nSince this value is used to allocate the output tensor, a negative value would result in a `CHECK`-failure (assertion failure), as per [TFSA-2021-198](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/tensorflow\/security\/advisory\/tfsa-2021-198.md).\n\n### Patches \nWe have patched the issue in GitHub commit [84563f265f28b3c36a15335c8b005d405260e943](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/84563f265f28b3c36a15335c8b005d405260e943) and GitHub commit [20cb18724b0bf6c09071a3f53434c4eec53cc147](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/20cb18724b0bf6c09071a3f53434c4eec53cc147).\n  \nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n      \n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n                       \n### Attribution \nThis vulnerability has been reported externally via a [GitHub issue](https:\/\/github.com\/tensorflow\/tensorflow\/issues\/55305).",
            "published_date":"2022-05-24",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/84563f265f28b3c36a15335c8b005d405260e943",
            "commit_sha":"84563f265f28b3c36a15335c8b005d405260e943",
            "patch":"MULTI",
            "chain_ord":"['84563f265f28b3c36a15335c8b005d405260e943', '20cb18724b0bf6c09071a3f53434c4eec53cc147']",
            "before_first_fix_commit":"{'3f30e4965889b1b86b1d56392e437ccc08907f65'}",
            "last_fix_commit":"20cb18724b0bf6c09071a3f53434c4eec53cc147",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/15\/2022, 17:34:16",
            "message":"Validate `num_segments > 0` in `unsorted_segment_join`\n\nFixes #55305\n\nPiperOrigin-RevId: 442047005",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/unsorted_segment_join_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/84563f265f28b3c36a15335c8b005d405260e943\/tensorflow%2Fcore%2Fkernels%2Funsorted_segment_join_op.cc', 'patch': '@@ -94,6 +94,8 @@ class UnsortedSegmentJoinOp : public OpKernel {\\n                 errors::InvalidArgument(\"Number of segments cannot be empty.\"));\\n     auto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\\n \\n+    OP_REQUIRES(context, num_segments > 0,\\n+                errors::InvalidArgument(\"Number of segments must be positive\"));\\n     OP_REQUIRES(context, segment_dims != 0,\\n                 errors::InvalidArgument(\"Segment_id cannot have rank 0\"));'}}",
            "message_norm":"validate `num_segments > 0` in `unsorted_segment_join`\n\nfixes #55305\n\npiperorigin-revid: 442047005",
            "language":"ca",
            "entities":"[('validate', 'ACTION', ''), ('fixes', 'ACTION', ''), ('#55305', 'ISSUE', ''), ('442047005', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/unsorted_segment_join_op.cc'])",
            "num_files":1.0,
            "patch_content":"From 84563f265f28b3c36a15335c8b005d405260e943 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Fri, 15 Apr 2022 10:34:16 -0700\nSubject: [PATCH] Validate `num_segments > 0` in `unsorted_segment_join`\n\nFixes #55305\n\nPiperOrigin-RevId: 442047005\n---\n tensorflow\/core\/kernels\/unsorted_segment_join_op.cc | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/unsorted_segment_join_op.cc b\/tensorflow\/core\/kernels\/unsorted_segment_join_op.cc\nindex 2406f9b0d7c5bd..860cec8010042c 100644\n--- a\/tensorflow\/core\/kernels\/unsorted_segment_join_op.cc\n+++ b\/tensorflow\/core\/kernels\/unsorted_segment_join_op.cc\n@@ -94,6 +94,8 @@ class UnsortedSegmentJoinOp : public OpKernel {\n                 errors::InvalidArgument(\"Number of segments cannot be empty.\"));\n     auto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\n \n+    OP_REQUIRES(context, num_segments > 0,\n+                errors::InvalidArgument(\"Number of segments must be positive\"));\n     OP_REQUIRES(context, segment_dims != 0,\n                 errors::InvalidArgument(\"Segment_id cannot have rank 0\"));"
        },
        {
            "index":314,
            "vuln_id":"GHSA-4p4p-www8-8fv9",
            "cwe_id":"{'CWE-824'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8'}",
            "dataset":"osv",
            "summary":"Reference binding to null in `ParameterizedTruncatedNormal` ### Impact\nAn attacker can trigger undefined behavior by binding to null pointer in `tf.raw_ops.ParameterizedTruncatedNormal`:\n\n```python\nimport tensorflow as tf\n    \nshape = tf.constant([], shape=[0], dtype=tf.int32)\nmeans = tf.constant((1), dtype=tf.float32)\nstdevs = tf.constant((1), dtype=tf.float32)\nminvals = tf.constant((1), dtype=tf.float32)\nmaxvals = tf.constant((1), dtype=tf.float32)\n  \ntf.raw_ops.ParameterizedTruncatedNormal(\n  shape=shape, means=means, stdevs=stdevs, minvals=minvals, maxvals=maxvals)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/3f6fe4dfef6f57e768260b48166c27d148f3015f\/tensorflow\/core\/kernels\/parameterized_truncated_normal_op.cc#L630) does not validate input arguments before accessing the first element of `shape`:\n\n```cc\nint32 num_batches = shape_tensor.flat<int32>()(0);\n``` \n\nIf `shape` argument is empty, then `shape_tensor.flat<T>()` is an empty array.\n\n### Patches\nWe have patched the issue in GitHub commit [5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8",
            "commit_sha":"5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8",
            "patch":"SINGLE",
            "chain_ord":"['5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8']",
            "before_first_fix_commit":"{'3f6fe4dfef6f57e768260b48166c27d148f3015f'}",
            "last_fix_commit":"5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/05\/2021, 02:14:24",
            "message":"Fix breakage in parameterized_truncated_normal_op.cc\n\nPiperOrigin-RevId: 372041718\nChange-Id: Iff79e77a2bb27032423eefcb84211627b27dfe81",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/core\/kernels\/parameterized_truncated_normal_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8\/tensorflow%2Fcore%2Fkernels%2Fparameterized_truncated_normal_op.cc', 'patch': '@@ -627,6 +627,9 @@ class ParameterizedTruncatedNormalOp : public OpKernel {\\n         ctx, TensorShapeUtils::IsVector(shape_tensor.shape()),\\n         errors::InvalidArgument(\"Input shape should be a vector, got shape: \",\\n                                 shape_tensor.shape().DebugString()));\\n+    OP_REQUIRES(ctx, shape_tensor.NumElements() > 0,\\n+                errors::InvalidArgument(\"Shape tensor must not be empty, got \",\\n+                                        shape_tensor.DebugString()));\\n     int32 num_batches = shape_tensor.flat<int32>()(0);\\n \\n     int32 samples_per_batch = 1;'}}",
            "message_norm":"fix breakage in parameterized_truncated_normal_op.cc\n\npiperorigin-revid: 372041718\nchange-id: iff79e77a2bb27032423eefcb84211627b27dfe81",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('372041718', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/parameterized_truncated_normal_op.cc'])",
            "num_files":1.0,
            "patch_content":"From 5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Tue, 4 May 2021 19:14:24 -0700\nSubject: [PATCH] Fix breakage in parameterized_truncated_normal_op.cc\n\nPiperOrigin-RevId: 372041718\nChange-Id: Iff79e77a2bb27032423eefcb84211627b27dfe81\n---\n tensorflow\/core\/kernels\/parameterized_truncated_normal_op.cc | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/parameterized_truncated_normal_op.cc b\/tensorflow\/core\/kernels\/parameterized_truncated_normal_op.cc\nindex a63457551ac29b..116df3541d7cf6 100644\n--- a\/tensorflow\/core\/kernels\/parameterized_truncated_normal_op.cc\n+++ b\/tensorflow\/core\/kernels\/parameterized_truncated_normal_op.cc\n@@ -627,6 +627,9 @@ class ParameterizedTruncatedNormalOp : public OpKernel {\n         ctx, TensorShapeUtils::IsVector(shape_tensor.shape()),\n         errors::InvalidArgument(\"Input shape should be a vector, got shape: \",\n                                 shape_tensor.shape().DebugString()));\n+    OP_REQUIRES(ctx, shape_tensor.NumElements() > 0,\n+                errors::InvalidArgument(\"Shape tensor must not be empty, got \",\n+                                        shape_tensor.DebugString()));\n     int32 num_batches = shape_tensor.flat<int32>()(0);\n \n     int32 samples_per_batch = 1;"
        },
        {
            "index":892,
            "vuln_id":"GHSA-9c78-vcq7-7vxq",
            "cwe_id":"{'CWE-787'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6c0b2b70eeee588591680f5b7d5d38175fd7cdf6'}",
            "dataset":"osv",
            "summary":"Out of bounds write in TFLite ### Impact \nAn attacker can craft a TFLite model that would cause a write outside of bounds of an array in TFLite. In fact, the attacker can override the linked list used by the memory allocator. This can be leveraged for an arbitrary write primitive under certain conditions.\n\n### Patches\nWe have patched the issue in GitHub commit [6c0b2b70eeee588591680f5b7d5d38175fd7cdf6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6c0b2b70eeee588591680f5b7d5d38175fd7cdf6).\n  \nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n    \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n  \n### Attribution\nThis vulnerability has been reported by Wang Xuan of Qihoo 360 AIVul Team.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6c0b2b70eeee588591680f5b7d5d38175fd7cdf6",
            "commit_sha":"6c0b2b70eeee588591680f5b7d5d38175fd7cdf6",
            "patch":"SINGLE",
            "chain_ord":"['6c0b2b70eeee588591680f5b7d5d38175fd7cdf6']",
            "before_first_fix_commit":"{'1de49725a5fc4e48f1a3b902ec3599ee99283043'}",
            "last_fix_commit":"6c0b2b70eeee588591680f5b7d5d38175fd7cdf6",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/21\/2021, 16:50:37",
            "message":"[lite] add validation check for sparse fully connected\n\nPiperOrigin-RevId: 417629354\nChange-Id: If96171c4bd4f5fdb01d6368d6deab19d1c9beca7",
            "author":"Karim Nosir",
            "comments":null,
            "stats":"{'additions': 48, 'deletions': 10, 'total': 58}",
            "files":"{'tensorflow\/lite\/kernels\/fully_connected.cc': {'additions': 48, 'deletions': 10, 'changes': 58, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/6c0b2b70eeee588591680f5b7d5d38175fd7cdf6\/tensorflow%2Flite%2Fkernels%2Ffully_connected.cc', 'patch': '@@ -928,6 +928,36 @@ TfLiteStatus EvalShuffledQuantized(TfLiteContext* context, TfLiteNode* node,\\n   return kTfLiteOk;\\n }\\n \\n+\/\/ Verifies that sparsity values are valid given input\/weight\/output.\\n+bool VerifySparsity(const RuntimeShape& weights_shape,\\n+                    const RuntimeShape& input_shape,\\n+                    const RuntimeShape& output_shape,\\n+                    const TfLiteSparsity* sparsity) {\\n+  const int weights_dims_count = weights_shape.DimensionsCount();\\n+  const int output_dims_count = output_shape.DimensionsCount();\\n+  const int w0_size = sparsity->dim_metadata[0].dense_size;\\n+  const int accum_depth = weights_shape.Dims(weights_dims_count - 1);\\n+  const int output_elements = output_shape.FlatSize();\\n+  const int input_elements = input_shape.FlatSize();\\n+  const int batches = FlatSizeSkipDim(output_shape, output_dims_count - 1);\\n+  const int output_depth = MatchingDim(weights_shape, weights_dims_count - 2,\\n+                                       output_shape, output_dims_count - 1);\\n+  const int max_batch_index = batches - 1;\\n+  const int max_output = max_batch_index * output_depth + w0_size;\\n+  const int max_batch_depth = accum_depth * max_batch_index;\\n+\\n+  \/\/ Verify output size is enough.\\n+  if (output_elements < max_output) return false;\\n+\\n+  \/\/ Verify index from sparse in input is valid.\\n+  for (int i = 0; i < sparsity->dim_metadata[1].array_indices->size; ++i) {\\n+    if (input_elements <=\\n+        max_batch_depth + sparsity->dim_metadata[1].array_indices->data[i])\\n+      return false;\\n+  }\\n+  return true;\\n+}\\n+\\n template <KernelType kernel_type>\\n TfLiteStatus EvalFloat(TfLiteContext* context, TfLiteNode* node,\\n                        TfLiteFullyConnectedParams* params, OpData* data,\\n@@ -968,24 +998,32 @@ TfLiteStatus EvalFloat(TfLiteContext* context, TfLiteNode* node,\\n                            \"Unsupported sparse fully-connected weight format.\");\\n         return kTfLiteError;\\n       }\\n+      const auto& input_shape = GetTensorShape(input);\\n+      const auto& filter_shape = GetTensorShape(filter);\\n+      const auto& output_shape = GetTensorShape(output);\\n+      const auto& bias_shape = GetTensorShape(bias);\\n+      if (!VerifySparsity(filter_shape, input_shape, output_shape, &sparsity)) {\\n+        TF_LITE_KERNEL_LOG(context, \"Invalid sparse fully-connected format.\");\\n+        return kTfLiteError;\\n+      }\\n \\n       if (sparsity.dim_metadata_size == kDimMetadataSizeRandomSparse) {\\n         \/\/ Random sparse.\\n         optimized_ops::FullyConnectedSparseWeight(\\n-            sparsity, op_params, GetTensorShape(input),\\n-            GetTensorData<float>(input), GetTensorShape(filter),\\n-            GetTensorData<float>(filter), GetTensorShape(bias),\\n-            GetTensorData<float>(bias), GetTensorShape(output),\\n-            GetTensorData<float>(output));\\n+            sparsity, op_params,                         \/\/ Disable formatting\\n+            input_shape, GetTensorData<float>(input),    \/\/ Disable formatting\\n+            filter_shape, GetTensorData<float>(filter),  \/\/ Disable formatting\\n+            bias_shape, GetTensorData<float>(bias),      \/\/ Disable formatting\\n+            output_shape, GetTensorData<float>(output));\\n       } else if (sparsity.dim_metadata_size == kDimMetadataSizeBlockSparse &&\\n                  sparsity.dim_metadata[2].dense_size == 4) {\\n         \/\/ Block sparse with block size of 1x4.\\n         optimized_ops::FullyConnectedSparseWeight1x4(\\n-            sparsity, op_params, GetTensorShape(input),\\n-            GetTensorData<float>(input), GetTensorShape(filter),\\n-            GetTensorData<float>(filter), GetTensorShape(bias),\\n-            GetTensorData<float>(bias), GetTensorShape(output),\\n-            GetTensorData<float>(output),\\n+            sparsity, op_params,                         \/\/ Disable formatting\\n+            input_shape, GetTensorData<float>(input),    \/\/ Disable formatting\\n+            filter_shape, GetTensorData<float>(filter),  \/\/ Disable formatting\\n+            bias_shape, GetTensorData<float>(bias),      \/\/ Disable formatting\\n+            output_shape, GetTensorData<float>(output),\\n             CpuBackendContext::GetFromContext(context));\\n       } else {\\n         TF_LITE_KERNEL_LOG(context,'}}",
            "message_norm":"[lite] add validation check for sparse fully connected\n\npiperorigin-revid: 417629354\nchange-id: if96171c4bd4f5fdb01d6368d6deab19d1c9beca7",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('417629354', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/fully_connected.cc'])",
            "num_files":1.0,
            "patch_content":"From 6c0b2b70eeee588591680f5b7d5d38175fd7cdf6 Mon Sep 17 00:00:00 2001\nFrom: Karim Nosir <karimnosseir@google.com>\nDate: Tue, 21 Dec 2021 08:50:37 -0800\nSubject: [PATCH] [lite] add validation check for sparse fully connected\n\nPiperOrigin-RevId: 417629354\nChange-Id: If96171c4bd4f5fdb01d6368d6deab19d1c9beca7\n---\n tensorflow\/lite\/kernels\/fully_connected.cc | 58 ++++++++++++++++++----\n 1 file changed, 48 insertions(+), 10 deletions(-)\n\ndiff --git a\/tensorflow\/lite\/kernels\/fully_connected.cc b\/tensorflow\/lite\/kernels\/fully_connected.cc\nindex 8d59a2cbd5a692..8b9f74f623ec68 100644\n--- a\/tensorflow\/lite\/kernels\/fully_connected.cc\n+++ b\/tensorflow\/lite\/kernels\/fully_connected.cc\n@@ -928,6 +928,36 @@ TfLiteStatus EvalShuffledQuantized(TfLiteContext* context, TfLiteNode* node,\n   return kTfLiteOk;\n }\n \n+\/\/ Verifies that sparsity values are valid given input\/weight\/output.\n+bool VerifySparsity(const RuntimeShape& weights_shape,\n+                    const RuntimeShape& input_shape,\n+                    const RuntimeShape& output_shape,\n+                    const TfLiteSparsity* sparsity) {\n+  const int weights_dims_count = weights_shape.DimensionsCount();\n+  const int output_dims_count = output_shape.DimensionsCount();\n+  const int w0_size = sparsity->dim_metadata[0].dense_size;\n+  const int accum_depth = weights_shape.Dims(weights_dims_count - 1);\n+  const int output_elements = output_shape.FlatSize();\n+  const int input_elements = input_shape.FlatSize();\n+  const int batches = FlatSizeSkipDim(output_shape, output_dims_count - 1);\n+  const int output_depth = MatchingDim(weights_shape, weights_dims_count - 2,\n+                                       output_shape, output_dims_count - 1);\n+  const int max_batch_index = batches - 1;\n+  const int max_output = max_batch_index * output_depth + w0_size;\n+  const int max_batch_depth = accum_depth * max_batch_index;\n+\n+  \/\/ Verify output size is enough.\n+  if (output_elements < max_output) return false;\n+\n+  \/\/ Verify index from sparse in input is valid.\n+  for (int i = 0; i < sparsity->dim_metadata[1].array_indices->size; ++i) {\n+    if (input_elements <=\n+        max_batch_depth + sparsity->dim_metadata[1].array_indices->data[i])\n+      return false;\n+  }\n+  return true;\n+}\n+\n template <KernelType kernel_type>\n TfLiteStatus EvalFloat(TfLiteContext* context, TfLiteNode* node,\n                        TfLiteFullyConnectedParams* params, OpData* data,\n@@ -968,24 +998,32 @@ TfLiteStatus EvalFloat(TfLiteContext* context, TfLiteNode* node,\n                            \"Unsupported sparse fully-connected weight format.\");\n         return kTfLiteError;\n       }\n+      const auto& input_shape = GetTensorShape(input);\n+      const auto& filter_shape = GetTensorShape(filter);\n+      const auto& output_shape = GetTensorShape(output);\n+      const auto& bias_shape = GetTensorShape(bias);\n+      if (!VerifySparsity(filter_shape, input_shape, output_shape, &sparsity)) {\n+        TF_LITE_KERNEL_LOG(context, \"Invalid sparse fully-connected format.\");\n+        return kTfLiteError;\n+      }\n \n       if (sparsity.dim_metadata_size == kDimMetadataSizeRandomSparse) {\n         \/\/ Random sparse.\n         optimized_ops::FullyConnectedSparseWeight(\n-            sparsity, op_params, GetTensorShape(input),\n-            GetTensorData<float>(input), GetTensorShape(filter),\n-            GetTensorData<float>(filter), GetTensorShape(bias),\n-            GetTensorData<float>(bias), GetTensorShape(output),\n-            GetTensorData<float>(output));\n+            sparsity, op_params,                         \/\/ Disable formatting\n+            input_shape, GetTensorData<float>(input),    \/\/ Disable formatting\n+            filter_shape, GetTensorData<float>(filter),  \/\/ Disable formatting\n+            bias_shape, GetTensorData<float>(bias),      \/\/ Disable formatting\n+            output_shape, GetTensorData<float>(output));\n       } else if (sparsity.dim_metadata_size == kDimMetadataSizeBlockSparse &&\n                  sparsity.dim_metadata[2].dense_size == 4) {\n         \/\/ Block sparse with block size of 1x4.\n         optimized_ops::FullyConnectedSparseWeight1x4(\n-            sparsity, op_params, GetTensorShape(input),\n-            GetTensorData<float>(input), GetTensorShape(filter),\n-            GetTensorData<float>(filter), GetTensorShape(bias),\n-            GetTensorData<float>(bias), GetTensorShape(output),\n-            GetTensorData<float>(output),\n+            sparsity, op_params,                         \/\/ Disable formatting\n+            input_shape, GetTensorData<float>(input),    \/\/ Disable formatting\n+            filter_shape, GetTensorData<float>(filter),  \/\/ Disable formatting\n+            bias_shape, GetTensorData<float>(bias),      \/\/ Disable formatting\n+            output_shape, GetTensorData<float>(output),\n             CpuBackendContext::GetFromContext(context));\n       } else {\n         TF_LITE_KERNEL_LOG(context,"
        },
        {
            "index":405,
            "vuln_id":"GHSA-xcvv-84j5-jw9h",
            "cwe_id":"{'CWE-471'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/jonschlinkert\/assign-deep\/commit\/19953a8c089b0328c470acaaaf6accdfcb34da11'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in assign-deep Versions of `assign-deep` before 0.4.7 are vulnerable to prototype pollution via merging functions.\n\n\n## Recommendation\n\nUpdate to version 0.4.7 or later.",
            "published_date":"2018-07-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/jonschlinkert\/assign-deep",
            "commit_href":"https:\/\/github.com\/jonschlinkert\/assign-deep\/commit\/19953a8c089b0328c470acaaaf6accdfcb34da11",
            "commit_sha":"19953a8c089b0328c470acaaaf6accdfcb34da11",
            "patch":"SINGLE",
            "chain_ord":"['19953a8c089b0328c470acaaaf6accdfcb34da11']",
            "before_first_fix_commit":"{'f6cba02d11a1d293593be0e942aff60bfd5a5711'}",
            "last_fix_commit":"19953a8c089b0328c470acaaaf6accdfcb34da11",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/07\/2018, 16:20:22",
            "message":"exclude __proto__",
            "author":"doowb",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jonschlinkert\/assign-deep\/raw\/19953a8c089b0328c470acaaaf6accdfcb34da11\/index.js', 'patch': \"@@ -37,7 +37,7 @@ function extend(target, obj) {\\n   assignSymbols(target, obj);\\n \\n   for (var key in obj) {\\n-    if (hasOwn(obj, key)) {\\n+    if (key !== '__proto__' && hasOwn(obj, key)) {\\n       var val = obj[key];\\n       if (isObject(val)) {\\n         if (typeOf(target[key]) === 'undefined' && typeOf(val) === 'function') {\"}}",
            "message_norm":"exclude __proto__",
            "language":"pt",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0,
            "patch_content":"From 19953a8c089b0328c470acaaaf6accdfcb34da11 Mon Sep 17 00:00:00 2001\nFrom: doowb <brian.woodward@gmail.com>\nDate: Wed, 7 Feb 2018 11:20:22 -0500\nSubject: [PATCH] exclude __proto__\n\n---\n index.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/index.js b\/index.js\nindex b2e74cf..c5dc494 100644\n--- a\/index.js\n+++ b\/index.js\n@@ -37,7 +37,7 @@ function extend(target, obj) {\n   assignSymbols(target, obj);\n \n   for (var key in obj) {\n-    if (hasOwn(obj, key)) {\n+    if (key !== '__proto__' && hasOwn(obj, key)) {\n       var val = obj[key];\n       if (isObject(val)) {\n         if (typeOf(target[key]) === 'undefined' && typeOf(val) === 'function') {"
        },
        {
            "index":402,
            "vuln_id":"GHSA-38m9-3vg4-rwvp",
            "cwe_id":"{'CWE-79'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in microweber microweber prior to version 1.2.11 is vulnerable to cross-site scripting.",
            "published_date":"2022-02-20",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8",
            "commit_sha":"2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8",
            "patch":"SINGLE",
            "chain_ord":"['2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8']",
            "before_first_fix_commit":"{'93e1e59185d1fdf921d89a887887bca988b12085'}",
            "last_fix_commit":"2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/18\/2022, 10:09:45",
            "message":"Update UrlManager.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'src\/MicroweberPackages\/Helper\/UrlManager.php': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8\/src%2FMicroweberPackages%2FHelper%2FUrlManager.php', 'patch': '@@ -114,6 +114,9 @@ public function redirect($url)\\n         $redirectUrl = str_replace(\"\\\\r\", \"\", $redirectUrl);\\n         $redirectUrl = str_replace(\"\\\\n\", \"\", $redirectUrl);\\n \\n+        $clearInput = new HTMLClean();\\n+        $redirectUrl = $clearInput->clean($redirectUrl);\\n+\\n         if (headers_sent()) {\\n             echo \\'<meta http-equiv=\"refresh\" content=\"0;url=\\' . $redirectUrl . \\'\">\\';\\n         } else {'}}",
            "message_norm":"update urlmanager.php",
            "language":"sv",
            "entities":null,
            "classification_level_1":"POORLY_DOCUMENTED",
            "classification_level_2":"SUBMIT_CENTERED",
            "list_files":"dict_keys(['src\/MicroweberPackages\/Helper\/UrlManager.php'])",
            "num_files":1.0,
            "patch_content":"From 2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8 Mon Sep 17 00:00:00 2001\nFrom: Bozhidar Slaveykov <bobi@microweber.com>\nDate: Fri, 18 Feb 2022 12:09:45 +0200\nSubject: [PATCH] Update UrlManager.php\n\n---\n src\/MicroweberPackages\/Helper\/UrlManager.php | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/src\/MicroweberPackages\/Helper\/UrlManager.php b\/src\/MicroweberPackages\/Helper\/UrlManager.php\nindex ed94787e1a5..cff71b4dc1b 100644\n--- a\/src\/MicroweberPackages\/Helper\/UrlManager.php\n+++ b\/src\/MicroweberPackages\/Helper\/UrlManager.php\n@@ -114,6 +114,9 @@ public function redirect($url)\n         $redirectUrl = str_replace(\"\\r\", \"\", $redirectUrl);\n         $redirectUrl = str_replace(\"\\n\", \"\", $redirectUrl);\n \n+        $clearInput = new HTMLClean();\n+        $redirectUrl = $clearInput->clean($redirectUrl);\n+\n         if (headers_sent()) {\n             echo '<meta http-equiv=\"refresh\" content=\"0;url=' . $redirectUrl . '\">';\n         } else {"
        },
        {
            "index":33,
            "vuln_id":"GHSA-79mg-4w23-4fqc",
            "cwe_id":"{'CWE-89', 'CWE-287'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/fiveai\/Cachet\/commit\/27bca8280419966ba80c6fa283d985ddffa84bb6'}",
            "dataset":"osv",
            "summary":"Unauthenticated SQL Injection in Cachet ### Impact\nIn Cachet versions through 2.3.18, there is a SQL injection which is in the `SearchableTrait#scopeSearch()`. Attackers without authentication can utilize this vulnerability to exfiltrate sensitive data from the database such as administrator's password and session.\n\n### Patches\n\nThe original repository of [https:\/\/github.com\/CachetHQ\/Cachet](https:\/\/github.com\/CachetHQ\/Cachet) is not active, the stable version 2.3.18 and it's developing 2.4 branch is affected. \n\nUpdate to version 2.5 or later in the [https:\/\/github.com\/fiveai\/Cachet fork](https:\/\/github.com\/fiveai\/Cachet) to fix this vulnerability.",
            "published_date":"2021-08-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/fiveai\/Cachet",
            "commit_href":"https:\/\/github.com\/fiveai\/Cachet\/commit\/27bca8280419966ba80c6fa283d985ddffa84bb6",
            "commit_sha":"27bca8280419966ba80c6fa283d985ddffa84bb6",
            "patch":"SINGLE",
            "chain_ord":"['27bca8280419966ba80c6fa283d985ddffa84bb6']",
            "before_first_fix_commit":"{'8c1a2c27d4a46777a78bceefa7f3fee297ebe7be'}",
            "last_fix_commit":"27bca8280419966ba80c6fa283d985ddffa84bb6",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/15\/2021, 14:17:35",
            "message":"Ensure only allowed searchable columns are used in DB Query",
            "author":"Seb Dangerfield",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 2, 'total': 5}",
            "files":"{'app\/Models\/Traits\/SearchableTrait.php': {'additions': 3, 'deletions': 2, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/fiveai\/Cachet\/raw\/27bca8280419966ba80c6fa283d985ddffa84bb6\/app%2FModels%2FTraits%2FSearchableTrait.php', 'patch': '@@ -34,10 +34,11 @@ public function scopeSearch(Builder $query, array $search = [])\\n             return $query;\\n         }\\n \\n-        if (!array_intersect(array_keys($search), $this->searchable)) {\\n+        $allowed_search = array_intersect_key($search, array_flip($this->searchable));\\n+        if (! $allowed_search) {\\n             return $query;\\n         }\\n \\n-        return $query->where($search);\\n+        return $query->where($allowed_search);\\n     }\\n }'}}",
            "message_norm":"ensure only allowed searchable columns are used in db query",
            "language":"en",
            "entities":"[('ensure', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/Models\/Traits\/SearchableTrait.php'])",
            "num_files":1.0,
            "patch_content":"From 27bca8280419966ba80c6fa283d985ddffa84bb6 Mon Sep 17 00:00:00 2001\nFrom: Seb Dangerfield <1449113+sedan07@users.noreply.github.com>\nDate: Fri, 15 Jan 2021 14:17:35 +0000\nSubject: [PATCH] Ensure only allowed searchable columns are used in DB Query\n\n---\n app\/Models\/Traits\/SearchableTrait.php | 5 +++--\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\ndiff --git a\/app\/Models\/Traits\/SearchableTrait.php b\/app\/Models\/Traits\/SearchableTrait.php\nindex 8038b47aae83..8db2300e6212 100644\n--- a\/app\/Models\/Traits\/SearchableTrait.php\n+++ b\/app\/Models\/Traits\/SearchableTrait.php\n@@ -34,10 +34,11 @@ public function scopeSearch(Builder $query, array $search = [])\n             return $query;\n         }\n \n-        if (!array_intersect(array_keys($search), $this->searchable)) {\n+        $allowed_search = array_intersect_key($search, array_flip($this->searchable));\n+        if (! $allowed_search) {\n             return $query;\n         }\n \n-        return $query->where($search);\n+        return $query->where($allowed_search);\n     }\n }"
        },
        {
            "index":286,
            "vuln_id":"GHSA-p9j6-4pjr-gp48",
            "cwe_id":"{'CWE-22'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/joniles\/mpxj\/commit\/8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d'}",
            "dataset":"osv",
            "summary":"MPXJ path Traversal vulnerability common\/InputStreamHelper.java in Packwood MPXJ before 8.3.5 allows directory traversal in the zip stream handler flow, leading to the writing of files to arbitrary locations.",
            "published_date":"2020-12-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/joniles\/mpxj",
            "commit_href":"https:\/\/github.com\/joniles\/mpxj\/commit\/8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d",
            "commit_sha":"8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d",
            "patch":"SINGLE",
            "chain_ord":"['8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d']",
            "before_first_fix_commit":"{'1eed5f01ac8e49b433e0538bdc079caeda7d6fd7'}",
            "last_fix_commit":"8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/14\/2020, 12:13:14",
            "message":"zip slip fix",
            "author":"Jon Iles",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 0, 'total': 9}",
            "files":"{'src\/main\/java\/net\/sf\/mpxj\/common\/InputStreamHelper.java': {'additions': 9, 'deletions': 0, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/joniles\/mpxj\/raw\/8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d\/src%2Fmain%2Fjava%2Fnet%2Fsf%2Fmpxj%2Fcommon%2FInputStreamHelper.java', 'patch': '@@ -114,6 +114,7 @@ public static File writeZipStreamToTempDir(InputStream inputStream) throws IOExc\\n     *\/\\n    private static void processZipStream(File dir, InputStream inputStream) throws IOException\\n    {\\n+      String canonicalDestinationDirPath = dir.getCanonicalPath();\\n       ZipInputStream zip = new ZipInputStream(inputStream);\\n       while (true)\\n       {\\n@@ -124,6 +125,14 @@ private static void processZipStream(File dir, InputStream inputStream) throws I\\n          }\\n \\n          File file = new File(dir, entry.getName());\\n+\\n+         \/\/ https:\/\/snyk.io\/research\/zip-slip-vulnerability\\n+         String canonicalDestinationFile = file.getCanonicalPath();\\n+         if (!canonicalDestinationFile.startsWith(canonicalDestinationDirPath + File.separator))\\n+         {\\n+            throw new IOException(\"Entry is outside of the target dir: \" + entry.getName());\\n+         }\\n+\\n          if (entry.isDirectory())\\n          {\\n             FileHelper.mkdirsQuietly(file);'}}",
            "message_norm":"zip slip fix",
            "language":"ro",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/net\/sf\/mpxj\/common\/InputStreamHelper.java'])",
            "num_files":1.0,
            "patch_content":"From 8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d Mon Sep 17 00:00:00 2001\nFrom: Jon Iles <jon.iles@bcs.org.uk>\nDate: Mon, 14 Dec 2020 12:13:14 +0000\nSubject: [PATCH] zip slip fix\n\n---\n src\/main\/java\/net\/sf\/mpxj\/common\/InputStreamHelper.java | 9 +++++++++\n 1 file changed, 9 insertions(+)\n\ndiff --git a\/src\/main\/java\/net\/sf\/mpxj\/common\/InputStreamHelper.java b\/src\/main\/java\/net\/sf\/mpxj\/common\/InputStreamHelper.java\nindex 69e2518945..81209caa29 100644\n--- a\/src\/main\/java\/net\/sf\/mpxj\/common\/InputStreamHelper.java\n+++ b\/src\/main\/java\/net\/sf\/mpxj\/common\/InputStreamHelper.java\n@@ -114,6 +114,7 @@ public static File writeZipStreamToTempDir(InputStream inputStream) throws IOExc\n     *\/\n    private static void processZipStream(File dir, InputStream inputStream) throws IOException\n    {\n+      String canonicalDestinationDirPath = dir.getCanonicalPath();\n       ZipInputStream zip = new ZipInputStream(inputStream);\n       while (true)\n       {\n@@ -124,6 +125,14 @@ private static void processZipStream(File dir, InputStream inputStream) throws I\n          }\n \n          File file = new File(dir, entry.getName());\n+\n+         \/\/ https:\/\/snyk.io\/research\/zip-slip-vulnerability\n+         String canonicalDestinationFile = file.getCanonicalPath();\n+         if (!canonicalDestinationFile.startsWith(canonicalDestinationDirPath + File.separator))\n+         {\n+            throw new IOException(\"Entry is outside of the target dir: \" + entry.getName());\n+         }\n+\n          if (entry.isDirectory())\n          {\n             FileHelper.mkdirsQuietly(file);"
        },
        {
            "index":110,
            "vuln_id":"GHSA-jwf9-w5xm-f437",
            "cwe_id":"{'CWE-125'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/eb921122119a6b6e470ee98b89e65d721663179d', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bb6a0383ed553c286f87ca88c207f6774d5c4a8f'}",
            "dataset":"osv",
            "summary":"Heap OOB in TFLite's `Gather*` implementations ### Impact\nTFLite's [`GatherNd` implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/149562d49faa709ea80df1d99fc41d005b81082a\/tensorflow\/lite\/kernels\/gather_nd.cc#L124) does not support negative indices but there are no checks for this situation.\n\nHence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in `indices`.\n\nSimilar issue exists in [`Gather` implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/149562d49faa709ea80df1d99fc41d005b81082a\/tensorflow\/lite\/kernels\/gather.cc).\n\n```python\nimport tensorflow as tf\nimport numpy as np\ntf.compat.v1.disable_v2_behavior()\n\nparams = tf.compat.v1.placeholder(name=\"params\", dtype=tf.int64, shape=(1,))\nindices = tf.compat.v1.placeholder(name=\"indices\", dtype=tf.int64, shape=())\n\nout = tf.gather(params, indices, name='out')\n\nwith tf.compat.v1.Session() as sess:\n   converter = tf.compat.v1.lite.TFLiteConverter.from_session(sess, [params, indices], [out])\n   tflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\n\nparams_data = np.reshape(np.array([1], dtype=np.int64), newshape=(1,))\nindices_data = np.reshape(np.array(-10, dtype=np.int64), newshape=())\ninterpreter.set_tensor(input_details[0]['index'], params_data)\ninterpreter.set_tensor(input_details[1]['index'], indices_data)\n\ninterpreter.invoke()\n```\n\n### Patches\nWe have patched the issue in GitHub commits [bb6a0383ed553c286f87ca88c207f6774d5c4a8f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bb6a0383ed553c286f87ca88c207f6774d5c4a8f) and [eb921122119a6b6e470ee98b89e65d721663179d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/eb921122119a6b6e470ee98b89e65d721663179d).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security  guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.",
            "published_date":"2021-08-25",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bb6a0383ed553c286f87ca88c207f6774d5c4a8f",
            "commit_sha":"bb6a0383ed553c286f87ca88c207f6774d5c4a8f",
            "patch":"MULTI",
            "chain_ord":"['bb6a0383ed553c286f87ca88c207f6774d5c4a8f', 'eb921122119a6b6e470ee98b89e65d721663179d']",
            "before_first_fix_commit":"{'ac72971cc6fbbfe4df7e67a8347ef1b6ab63b5fd'}",
            "last_fix_commit":"eb921122119a6b6e470ee98b89e65d721663179d",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/27\/2021, 22:20:26",
            "message":"Prevent heap OOB read in TFLite's `gather_nd.cc`.\n\nPassing negative indices is illegal but there was a missing check so that resulted in OOB accesses.\n\nPiperOrigin-RevId: 387208551\nChange-Id: I6b7a8a62d3e7c13a16d81619e5bc23ae2cdbc7fd",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 0, 'total': 11}",
            "files":"{'tensorflow\/lite\/kernels\/gather_nd.cc': {'additions': 11, 'deletions': 0, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\/tensorflow%2Flite%2Fkernels%2Fgather_nd.cc', 'patch': '@@ -123,6 +123,17 @@ TfLiteStatus GatherNdString(const TfLiteTensor* params,\\n template <typename IndicesT>\\n TfLiteStatus EvalGatherNd(TfLiteContext* context, const TfLiteTensor* params,\\n                           const TfLiteTensor* indices, TfLiteTensor* output) {\\n+  bool indices_has_only_positive_elements = true;\\n+  const auto* indices_values = GetTensorData<IndicesT>(indices);\\n+  const size_t num_indices = indices->bytes \/ sizeof(IndicesT);\\n+  for (size_t i = 0; i < num_indices; i++) {\\n+    if (indices_values[i] < 0) {\\n+      indices_has_only_positive_elements = false;\\n+      break;\\n+    }\\n+  }\\n+  TF_LITE_ENSURE(context, indices_has_only_positive_elements);\\n+\\n   switch (params->type) {\\n     case kTfLiteFloat32:\\n       return GatherNd<float, IndicesT>(params, indices, output);'}}",
            "message_norm":"prevent heap oob read in tflite's `gather_nd.cc`.\n\npassing negative indices is illegal but there was a missing check so that resulted in oob accesses.\n\npiperorigin-revid: 387208551\nchange-id: i6b7a8a62d3e7c13a16d81619e5bc23ae2cdbc7fd",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('missing check', 'SECWORD', ''), ('oob', 'SECWORD', ''), ('387208551', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/gather_nd.cc'])",
            "num_files":1.0,
            "patch_content":"From bb6a0383ed553c286f87ca88c207f6774d5c4a8f Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Tue, 27 Jul 2021 15:20:26 -0700\nSubject: [PATCH] Prevent heap OOB read in TFLite's `gather_nd.cc`.\n\nPassing negative indices is illegal but there was a missing check so that resulted in OOB accesses.\n\nPiperOrigin-RevId: 387208551\nChange-Id: I6b7a8a62d3e7c13a16d81619e5bc23ae2cdbc7fd\n---\n tensorflow\/lite\/kernels\/gather_nd.cc | 11 +++++++++++\n 1 file changed, 11 insertions(+)\n\ndiff --git a\/tensorflow\/lite\/kernels\/gather_nd.cc b\/tensorflow\/lite\/kernels\/gather_nd.cc\nindex 3ded771382569e..c39917b478505f 100644\n--- a\/tensorflow\/lite\/kernels\/gather_nd.cc\n+++ b\/tensorflow\/lite\/kernels\/gather_nd.cc\n@@ -123,6 +123,17 @@ TfLiteStatus GatherNdString(const TfLiteTensor* params,\n template <typename IndicesT>\n TfLiteStatus EvalGatherNd(TfLiteContext* context, const TfLiteTensor* params,\n                           const TfLiteTensor* indices, TfLiteTensor* output) {\n+  bool indices_has_only_positive_elements = true;\n+  const auto* indices_values = GetTensorData<IndicesT>(indices);\n+  const size_t num_indices = indices->bytes \/ sizeof(IndicesT);\n+  for (size_t i = 0; i < num_indices; i++) {\n+    if (indices_values[i] < 0) {\n+      indices_has_only_positive_elements = false;\n+      break;\n+    }\n+  }\n+  TF_LITE_ENSURE(context, indices_has_only_positive_elements);\n+\n   switch (params->type) {\n     case kTfLiteFloat32:\n       return GatherNd<float, IndicesT>(params, indices, output);"
        },
        {
            "index":914,
            "vuln_id":"GHSA-2cfc-865j-gm4w",
            "cwe_id":"{'CWE-611'}",
            "score":7.3,
            "chain":"{'https:\/\/github.com\/detekt\/detekt\/commit\/c965a8d2a6bbdb9bcfc6acfa7bbffd3da81f5395'}",
            "dataset":"osv",
            "summary":"XML External Entity Reference in detekt Improper Restriction of XML External Entity Reference in GitHub repository detekt\/detekt prior to 1.20.0.",
            "published_date":"2022-04-22",
            "chain_len":1,
            "project":"https:\/\/github.com\/detekt\/detekt",
            "commit_href":"https:\/\/github.com\/detekt\/detekt\/commit\/c965a8d2a6bbdb9bcfc6acfa7bbffd3da81f5395",
            "commit_sha":"c965a8d2a6bbdb9bcfc6acfa7bbffd3da81f5395",
            "patch":"SINGLE",
            "chain_ord":"['c965a8d2a6bbdb9bcfc6acfa7bbffd3da81f5395']",
            "before_first_fix_commit":"{'08eac68caa24ced140cc017d4de3b258a470232b'}",
            "last_fix_commit":"c965a8d2a6bbdb9bcfc6acfa7bbffd3da81f5395",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/18\/2022, 17:21:06",
            "message":"Parse Baseline in a secure way (#4499)",
            "author":"Brais Gab\u00edn",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 1, 'total': 7}",
            "files":"{'detekt-core\/src\/main\/kotlin\/io\/gitlab\/arturbosch\/detekt\/core\/baseline\/BaselineFormat.kt': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/detekt\/detekt\/raw\/c965a8d2a6bbdb9bcfc6acfa7bbffd3da81f5395\/detekt-core%2Fsrc%2Fmain%2Fkotlin%2Fio%2Fgitlab%2Farturbosch%2Fdetekt%2Fcore%2Fbaseline%2FBaselineFormat.kt', 'patch': '@@ -3,6 +3,7 @@ package io.gitlab.arturbosch.detekt.core.baseline\\n import org.xml.sax.SAXParseException\\n import java.nio.file.Files\\n import java.nio.file.Path\\n+import javax.xml.XMLConstants\\n import javax.xml.parsers.SAXParserFactory\\n import javax.xml.stream.XMLStreamException\\n import javax.xml.stream.XMLStreamWriter\\n@@ -17,7 +18,11 @@ internal class BaselineFormat {\\n     fun read(path: Path): Baseline {\\n         try {\\n             Files.newInputStream(path).use {\\n-                val reader = SAXParserFactory.newInstance().newSAXParser()\\n+                val reader = SAXParserFactory.newInstance()\\n+                    .apply {\\n+                        setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true)\\n+                    }\\n+                    .newSAXParser()\\n                 val handler = BaselineHandler()\\n                 reader.parse(it, handler)\\n                 return handler.createBaseline()'}}",
            "message_norm":"parse baseline in a secure way (#4499)",
            "language":"en",
            "entities":"[('secure', 'SECWORD', ''), ('#4499', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['detekt-core\/src\/main\/kotlin\/io\/gitlab\/arturbosch\/detekt\/core\/baseline\/BaselineFormat.kt'])",
            "num_files":1.0,
            "patch_content":"From c965a8d2a6bbdb9bcfc6acfa7bbffd3da81f5395 Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Brais=20Gab=C3=ADn?= <braisgabin@gmail.com>\nDate: Tue, 18 Jan 2022 18:21:06 +0100\nSubject: [PATCH] Parse Baseline in a secure way (#4499)\n\n---\n ...\/arturbosch\/detekt\/core\/baseline\/BaselineFormat.kt      | 7 ++++++-\n 1 file changed, 6 insertions(+), 1 deletion(-)\n\ndiff --git a\/detekt-core\/src\/main\/kotlin\/io\/gitlab\/arturbosch\/detekt\/core\/baseline\/BaselineFormat.kt b\/detekt-core\/src\/main\/kotlin\/io\/gitlab\/arturbosch\/detekt\/core\/baseline\/BaselineFormat.kt\nindex a34097ac6be2..ac8c41e77565 100644\n--- a\/detekt-core\/src\/main\/kotlin\/io\/gitlab\/arturbosch\/detekt\/core\/baseline\/BaselineFormat.kt\n+++ b\/detekt-core\/src\/main\/kotlin\/io\/gitlab\/arturbosch\/detekt\/core\/baseline\/BaselineFormat.kt\n@@ -3,6 +3,7 @@ package io.gitlab.arturbosch.detekt.core.baseline\n import org.xml.sax.SAXParseException\n import java.nio.file.Files\n import java.nio.file.Path\n+import javax.xml.XMLConstants\n import javax.xml.parsers.SAXParserFactory\n import javax.xml.stream.XMLStreamException\n import javax.xml.stream.XMLStreamWriter\n@@ -17,7 +18,11 @@ internal class BaselineFormat {\n     fun read(path: Path): Baseline {\n         try {\n             Files.newInputStream(path).use {\n-                val reader = SAXParserFactory.newInstance().newSAXParser()\n+                val reader = SAXParserFactory.newInstance()\n+                    .apply {\n+                        setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true)\n+                    }\n+                    .newSAXParser()\n                 val handler = BaselineHandler()\n                 reader.parse(it, handler)\n                 return handler.createBaseline()"
        },
        {
            "index":174,
            "vuln_id":"GHSA-62gx-355r-9fhg",
            "cwe_id":"{'CWE-476'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff70c47a396ef1e3cb73c90513da4f5cb71bebba'}",
            "dataset":"osv",
            "summary":"Session operations in eager mode lead to null pointer dereferences ### Impact\nIn eager mode (default in TF 2.0 and later), session operations are invalid. However, users could still call the raw ops associated with them and trigger a null pointer dereference:\n\n```python\nimport tensorflow as tf\ntf.raw_ops.GetSessionTensor(handle=['\\x12\\x1a\\x07'],dtype=4)\n```\n```python\nimport tensorflow as tf\ntf.raw_ops.DeleteSessionTensor(handle=['\\x12\\x1a\\x07'])\n``` \n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/eebb96c2830d48597d055d247c0e9aebaea94cd5\/tensorflow\/core\/kernels\/session_ops.cc#L104) dereferences the session state pointer without checking if it is valid:\n  \n```cc\n  OP_REQUIRES_OK(ctx, ctx->session_state()->GetTensor(name, &val));\n```\n\nThus, in eager mode, `ctx->session_state()` is nullptr and the call of the member function is undefined behavior.\n\n### Patches\nWe have patched the issue in GitHub commit [ff70c47a396ef1e3cb73c90513da4f5cb71bebba](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff70c47a396ef1e3cb73c90513da4f5cb71bebba).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff70c47a396ef1e3cb73c90513da4f5cb71bebba",
            "commit_sha":"ff70c47a396ef1e3cb73c90513da4f5cb71bebba",
            "patch":"SINGLE",
            "chain_ord":"['ff70c47a396ef1e3cb73c90513da4f5cb71bebba']",
            "before_first_fix_commit":"{'eebb96c2830d48597d055d247c0e9aebaea94cd5'}",
            "last_fix_commit":"ff70c47a396ef1e3cb73c90513da4f5cb71bebba",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/13\/2021, 21:24:00",
            "message":"Fix `tf.raw_ops.GetSessionTensor` and `tf.raw_ops.DeleteSessionTensor` null pointer dereferences.\n\nPiperOrigin-RevId: 368294154\nChange-Id: Ie10f07a0a9a1c2b685e08153d48a0ca4b93f9fc9",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 4, 'total': 14}",
            "files":"{'tensorflow\/core\/kernels\/session_ops.cc': {'additions': 10, 'deletions': 4, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ff70c47a396ef1e3cb73c90513da4f5cb71bebba\/tensorflow%2Fcore%2Fkernels%2Fsession_ops.cc', 'patch': '@@ -91,7 +91,6 @@ TF_CALL_NUMBER_TYPES(REGISTER_GPU_KERNEL);\\n REGISTER_GPU_KERNEL(bool);\\n #undef REGISTER_GPU_KERNEL\\n \\n-\\n class GetSessionTensorOp : public OpKernel {\\n  public:\\n   explicit GetSessionTensorOp(OpKernelConstruction* context)\\n@@ -101,7 +100,11 @@ class GetSessionTensorOp : public OpKernel {\\n     const Tensor& handle = ctx->input(0);\\n     const string& name = handle.scalar<tstring>()();\\n     Tensor val;\\n-    OP_REQUIRES_OK(ctx, ctx->session_state()->GetTensor(name, &val));\\n+    auto session_state = ctx->session_state();\\n+    OP_REQUIRES(ctx, session_state != nullptr,\\n+                errors::FailedPrecondition(\\n+                    \"GetSessionTensor called on null session state\"));\\n+    OP_REQUIRES_OK(ctx, session_state->GetTensor(name, &val));\\n     ctx->set_output(0, val);\\n   }\\n \\n@@ -122,7 +125,6 @@ TF_CALL_NUMBER_TYPES(REGISTER_GPU_KERNEL);\\n REGISTER_GPU_KERNEL(bool);\\n #undef REGISTER_GPU_KERNEL\\n \\n-\\n class DeleteSessionTensorOp : public OpKernel {\\n  public:\\n   explicit DeleteSessionTensorOp(OpKernelConstruction* context)\\n@@ -131,7 +133,11 @@ class DeleteSessionTensorOp : public OpKernel {\\n   void Compute(OpKernelContext* ctx) override {\\n     const Tensor& handle = ctx->input(0);\\n     const string& name = handle.scalar<tstring>()();\\n-    OP_REQUIRES_OK(ctx, ctx->session_state()->DeleteTensor(name));\\n+    auto session_state = ctx->session_state();\\n+    OP_REQUIRES(ctx, session_state != nullptr,\\n+                errors::FailedPrecondition(\\n+                    \"DeleteSessionTensor called on null session state\"));\\n+    OP_REQUIRES_OK(ctx, session_state->DeleteTensor(name));\\n   }\\n \\n   TF_DISALLOW_COPY_AND_ASSIGN(DeleteSessionTensorOp);'}}",
            "message_norm":"fix `tf.raw_ops.getsessiontensor` and `tf.raw_ops.deletesessiontensor` null pointer dereferences.\n\npiperorigin-revid: 368294154\nchange-id: ie10f07a0a9a1c2b685e08153d48a0ca4b93f9fc9",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('null pointer dereferences', 'SECWORD', ''), ('368294154', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/session_ops.cc'])",
            "num_files":1.0,
            "patch_content":"From ff70c47a396ef1e3cb73c90513da4f5cb71bebba Mon Sep 17 00:00:00 2001\nFrom: Amit Patankar <amitpatankar@google.com>\nDate: Tue, 13 Apr 2021 14:24:00 -0700\nSubject: [PATCH] Fix `tf.raw_ops.GetSessionTensor` and\n `tf.raw_ops.DeleteSessionTensor` null pointer dereferences.\n\nPiperOrigin-RevId: 368294154\nChange-Id: Ie10f07a0a9a1c2b685e08153d48a0ca4b93f9fc9\n---\n tensorflow\/core\/kernels\/session_ops.cc | 14 ++++++++++----\n 1 file changed, 10 insertions(+), 4 deletions(-)\n\ndiff --git a\/tensorflow\/core\/kernels\/session_ops.cc b\/tensorflow\/core\/kernels\/session_ops.cc\nindex ee81ad27632622..109acc55722ccb 100644\n--- a\/tensorflow\/core\/kernels\/session_ops.cc\n+++ b\/tensorflow\/core\/kernels\/session_ops.cc\n@@ -91,7 +91,6 @@ TF_CALL_NUMBER_TYPES(REGISTER_GPU_KERNEL);\n REGISTER_GPU_KERNEL(bool);\n #undef REGISTER_GPU_KERNEL\n \n-\n class GetSessionTensorOp : public OpKernel {\n  public:\n   explicit GetSessionTensorOp(OpKernelConstruction* context)\n@@ -101,7 +100,11 @@ class GetSessionTensorOp : public OpKernel {\n     const Tensor& handle = ctx->input(0);\n     const string& name = handle.scalar<tstring>()();\n     Tensor val;\n-    OP_REQUIRES_OK(ctx, ctx->session_state()->GetTensor(name, &val));\n+    auto session_state = ctx->session_state();\n+    OP_REQUIRES(ctx, session_state != nullptr,\n+                errors::FailedPrecondition(\n+                    \"GetSessionTensor called on null session state\"));\n+    OP_REQUIRES_OK(ctx, session_state->GetTensor(name, &val));\n     ctx->set_output(0, val);\n   }\n \n@@ -122,7 +125,6 @@ TF_CALL_NUMBER_TYPES(REGISTER_GPU_KERNEL);\n REGISTER_GPU_KERNEL(bool);\n #undef REGISTER_GPU_KERNEL\n \n-\n class DeleteSessionTensorOp : public OpKernel {\n  public:\n   explicit DeleteSessionTensorOp(OpKernelConstruction* context)\n@@ -131,7 +133,11 @@ class DeleteSessionTensorOp : public OpKernel {\n   void Compute(OpKernelContext* ctx) override {\n     const Tensor& handle = ctx->input(0);\n     const string& name = handle.scalar<tstring>()();\n-    OP_REQUIRES_OK(ctx, ctx->session_state()->DeleteTensor(name));\n+    auto session_state = ctx->session_state();\n+    OP_REQUIRES(ctx, session_state != nullptr,\n+                errors::FailedPrecondition(\n+                    \"DeleteSessionTensor called on null session state\"));\n+    OP_REQUIRES_OK(ctx, session_state->DeleteTensor(name));\n   }\n \n   TF_DISALLOW_COPY_AND_ASSIGN(DeleteSessionTensorOp);"
        },
        {
            "index":303,
            "vuln_id":"GHSA-vjj6-5m9f-wqjw",
            "cwe_id":"{'CWE-476'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/hyperledger\/fabric\/pull\/2838\/commits\/ebf94b10ecc86d3a91619b98befc52277b1e3474'}",
            "dataset":"osv",
            "summary":"NULL Pointer Dereference in HyperLedger Fabric A vulnerability has been detected in HyperLedger Fabric v1.4.0, v2.0.0, v2.1.0. This bug can be leveraged by constructing a message whose payload is nil and sending this message with the method 'forwardToLeader'. This bug has been admitted and fixed by the developers of Fabric. If leveraged, any leader node will crash.",
            "published_date":"2022-05-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/hyperledger\/fabric",
            "commit_href":"https:\/\/github.com\/hyperledger\/fabric\/pull\/2838\/commits\/ebf94b10ecc86d3a91619b98befc52277b1e3474",
            "commit_sha":"ebf94b10ecc86d3a91619b98befc52277b1e3474",
            "patch":"SINGLE",
            "chain_ord":"['ebf94b10ecc86d3a91619b98befc52277b1e3474']",
            "before_first_fix_commit":"{'bb8bada7b864d4135aafe1785674be31d6cc78cb'}",
            "last_fix_commit":"ebf94b10ecc86d3a91619b98befc52277b1e3474",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/18\/2021, 14:18:10",
            "message":"FAB18529 added nil check in channel header parsing\n\nFuzz testing has reported SEGV while sending incomplete\/null\nmessage request to orderer.\n\nSigned-off-by: Parameswaran Selvam <parselva@in.ibm.com>",
            "author":"Parameswaran Selvam",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'protoutil\/commonutils.go': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/hyperledger\/fabric\/raw\/ebf94b10ecc86d3a91619b98befc52277b1e3474\/protoutil%2Fcommonutils.go', 'patch': '@@ -212,6 +212,10 @@ func IsConfigBlock(block *cb.Block) bool {\\n \\n \/\/ ChannelHeader returns the *cb.ChannelHeader for a given *cb.Envelope.\\n func ChannelHeader(env *cb.Envelope) (*cb.ChannelHeader, error) {\\n+\\tif env == nil {\\n+\\t\\treturn nil, errors.New(\"Invalid envelope payload. can\\'t be nil\")\\n+\\t}\\n+\\n \\tenvPayload, err := UnmarshalPayload(env.Payload)\\n \\tif err != nil {\\n \\t\\treturn nil, err'}}",
            "message_norm":"fab18529 added nil check in channel header parsing\n\nfuzz testing has reported segv while sending incomplete\/null\nmessage request to orderer.\n\nsigned-off-by: parameswaran selvam <parselva@in.ibm.com>",
            "language":"en",
            "entities":"[('fab18529', 'SHA', 'generic_sha'), ('added', 'ACTION', ''), ('fuzz', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['protoutil\/commonutils.go'])",
            "num_files":1.0,
            "patch_content":"From ebf94b10ecc86d3a91619b98befc52277b1e3474 Mon Sep 17 00:00:00 2001\nFrom: Parameswaran Selvam <parselva@in.ibm.com>\nDate: Wed, 18 Aug 2021 14:18:10 +0000\nSubject: [PATCH] FAB18529 added nil check in channel header parsing\n\nFuzz testing has reported SEGV while sending incomplete\/null\nmessage request to orderer.\n\nSigned-off-by: Parameswaran Selvam <parselva@in.ibm.com>\n---\n protoutil\/commonutils.go | 4 ++++\n 1 file changed, 4 insertions(+)\n\ndiff --git a\/protoutil\/commonutils.go b\/protoutil\/commonutils.go\nindex cc462305e17..ad5c333b1f0 100644\n--- a\/protoutil\/commonutils.go\n+++ b\/protoutil\/commonutils.go\n@@ -212,6 +212,10 @@ func IsConfigBlock(block *cb.Block) bool {\n \n \/\/ ChannelHeader returns the *cb.ChannelHeader for a given *cb.Envelope.\n func ChannelHeader(env *cb.Envelope) (*cb.ChannelHeader, error) {\n+\tif env == nil {\n+\t\treturn nil, errors.New(\"Invalid envelope payload. can't be nil\")\n+\t}\n+\n \tenvPayload, err := UnmarshalPayload(env.Payload)\n \tif err != nil {\n \t\treturn nil, err"
        },
        {
            "index":430,
            "vuln_id":"GHSA-9px9-73fg-3fqp",
            "cwe_id":"{'CWE-476'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/045deec1cbdebb27d817008ad5df94d96a08b1bf', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0a365c029e437be0349c31f8d4c9926b69fa3fa1'}",
            "dataset":"osv",
            "summary":"Null pointer dereference in Grappler's `IsConstant` ### Impact\nUnder certain scenarios, Grappler component of TensorFlow can trigger a null pointer dereference. There are 2 places where this can occur, for the same malicious alteration of a `SavedModel` file (fixing the first one would trigger the same dereference in the second place):\n\nFirst, during [constant folding](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/optimizers\/constant_folding.cc#L3466-L3497), the `GraphDef` might not have the required nodes for the binary operation:\n\n```cc\n  NodeDef* mul_left_child = node_map_->GetNode(node->input(0));\n  NodeDef* mul_right_child = node_map_->GetNode(node->input(1));\n  \/\/ One child must be constant, and the second must be Conv op.\n  const bool left_child_is_constant = IsReallyConstant(*mul_left_child);\n  const bool right_child_is_constant = IsReallyConstant(*mul_right_child);\n```\n\nIf a node is missing, the correposning `mul_*child` would be null, and the dereference in the subsequent line would be incorrect.\n\nWe have a similar issue during [`IsIdentityConsumingSwitch`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/mutable_graph_view.cc#L59-L74):\n\n```cc\n  NodeDef* input_node = graph.GetNode(tensor_id.node());\n  return IsSwitch(*input_node);\n```\n\n### Patches\nWe have patched the issue in GitHub commits [0a365c029e437be0349c31f8d4c9926b69fa3fa1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0a365c029e437be0349c31f8d4c9926b69fa3fa1) and [045deec1cbdebb27d817008ad5df94d96a08b1bf](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/045deec1cbdebb27d817008ad5df94d96a08b1bf).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-09",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/045deec1cbdebb27d817008ad5df94d96a08b1bf",
            "commit_sha":"045deec1cbdebb27d817008ad5df94d96a08b1bf",
            "patch":"MULTI",
            "chain_ord":"['0a365c029e437be0349c31f8d4c9926b69fa3fa1', '045deec1cbdebb27d817008ad5df94d96a08b1bf']",
            "before_first_fix_commit":"{'0a365c029e437be0349c31f8d4c9926b69fa3fa1'}",
            "last_fix_commit":"045deec1cbdebb27d817008ad5df94d96a08b1bf",
            "chain_ord_pos":2.0,
            "commit_datetime":"11\/13\/2021, 18:12:22",
            "message":"Prevent null pointer dereference in `mutable_graph_view`\n\nPiperOrigin-RevId: 409684472\nChange-Id: I577eb9d9ac470fcec0501423171e739a4ec0cb5c",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/core\/grappler\/mutable_graph_view.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/045deec1cbdebb27d817008ad5df94d96a08b1bf\/tensorflow%2Fcore%2Fgrappler%2Fmutable_graph_view.cc', 'patch': '@@ -68,6 +68,9 @@ bool IsIdentityConsumingSwitch(const MutableGraphView& graph,\\n     }\\n \\n     NodeDef* input_node = graph.GetNode(tensor_id.node());\\n+    if (input_node == nullptr) {\\n+      return false;\\n+    }\\n     return IsSwitch(*input_node);\\n   }\\n   return false;'}}",
            "message_norm":"prevent null pointer dereference in `mutable_graph_view`\n\npiperorigin-revid: 409684472\nchange-id: i577eb9d9ac470fcec0501423171e739a4ec0cb5c",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('null pointer dereference', 'SECWORD', ''), ('409684472', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/grappler\/mutable_graph_view.cc'])",
            "num_files":1.0,
            "patch_content":"From 045deec1cbdebb27d817008ad5df94d96a08b1bf Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Sat, 13 Nov 2021 10:12:22 -0800\nSubject: [PATCH] Prevent null pointer dereference in `mutable_graph_view`\n\nPiperOrigin-RevId: 409684472\nChange-Id: I577eb9d9ac470fcec0501423171e739a4ec0cb5c\n---\n tensorflow\/core\/grappler\/mutable_graph_view.cc | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/tensorflow\/core\/grappler\/mutable_graph_view.cc b\/tensorflow\/core\/grappler\/mutable_graph_view.cc\nindex e1eeb42e9c4f44..d70dc2e01c1484 100644\n--- a\/tensorflow\/core\/grappler\/mutable_graph_view.cc\n+++ b\/tensorflow\/core\/grappler\/mutable_graph_view.cc\n@@ -68,6 +68,9 @@ bool IsIdentityConsumingSwitch(const MutableGraphView& graph,\n     }\n \n     NodeDef* input_node = graph.GetNode(tensor_id.node());\n+    if (input_node == nullptr) {\n+      return false;\n+    }\n     return IsSwitch(*input_node);\n   }\n   return false;"
        },
        {
            "index":443,
            "vuln_id":"GHSA-6fc8-4gx4-v693",
            "cwe_id":"{'CWE-400', 'CWE-345'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/websockets\/ws\/commit\/00c425ec77993773d823f018f64a5c44e17023ff'}",
            "dataset":"osv",
            "summary":"ReDoS in Sec-Websocket-Protocol header ### Impact\n\nA specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a ws server.\n\n### Proof of concept\n\n```js\nfor (const length of [1000, 2000, 4000, 8000, 16000, 32000]) {\n  const value = 'b' + ' '.repeat(length) + 'x';\n  const start = process.hrtime.bigint();\n\n  value.trim().split(\/ *, *\/);\n\n  const end = process.hrtime.bigint();\n\n  console.log('length = %d, time = %f ns', length, end - start);\n}\n```\n\n### Patches\n\nThe vulnerability was fixed in ws@7.4.6 (https:\/\/github.com\/websockets\/ws\/commit\/00c425ec77993773d823f018f64a5c44e17023ff) and backported to ws@6.2.2 (https:\/\/github.com\/websockets\/ws\/commit\/78c676d2a1acefbc05292e9f7ea0a9457704bf1b) and ws@5.2.3 (https:\/\/github.com\/websockets\/ws\/commit\/76d47c1479002022a3e4357b3c9f0e23a68d4cd2).\n\n### Workarounds\n\nIn vulnerable versions of ws, the issue can be mitigated by reducing the maximum allowed length of the request headers using the [`--max-http-header-size=size`](https:\/\/nodejs.org\/api\/cli.html#cli_max_http_header_size_size) and\/or the [`maxHeaderSize`](https:\/\/nodejs.org\/api\/http.html#http_http_createserver_options_requestlistener) options.\n\n### Credits\n\nThe vulnerability was responsibly disclosed along with a fix in private by [Robert McLaughlin](https:\/\/github.com\/robmcl4) from University of California, Santa Barbara.",
            "published_date":"2021-05-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/websockets\/ws",
            "commit_href":"https:\/\/github.com\/websockets\/ws\/commit\/00c425ec77993773d823f018f64a5c44e17023ff",
            "commit_sha":"00c425ec77993773d823f018f64a5c44e17023ff",
            "patch":"SINGLE",
            "chain_ord":"['00c425ec77993773d823f018f64a5c44e17023ff']",
            "before_first_fix_commit":"{'990306d1446faf346c76452409a4c11455690514'}",
            "last_fix_commit":"00c425ec77993773d823f018f64a5c44e17023ff",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/25\/2021, 09:00:58",
            "message":"[security] Fix ReDoS vulnerability\n\nA specially crafted value of the `Sec-Websocket-Protocol` header could\nbe used to significantly slow down a ws server.\n\nPoC and fix were sent privately by Robert McLaughlin from University of\nCalifornia, Santa Barbara.",
            "author":"Luigi Pinca",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 1, 'total': 14}",
            "files":"{'lib\/websocket-server.js': {'additions': 13, 'deletions': 1, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/websockets\/ws\/raw\/00c425ec77993773d823f018f64a5c44e17023ff\/lib%2Fwebsocket-server.js', 'patch': \"@@ -286,7 +286,7 @@ class WebSocketServer extends EventEmitter {\\n     let protocol = req.headers['sec-websocket-protocol'];\\n \\n     if (protocol) {\\n-      protocol = protocol.trim().split(\/ *, *\/);\\n+      protocol = protocol.split(',').map(trim);\\n \\n       \/\/\\n       \/\/ Optionally call external protocol selection handler.\\n@@ -404,3 +404,15 @@ function abortHandshake(socket, code, message, headers) {\\n   socket.removeListener('error', socketOnError);\\n   socket.destroy();\\n }\\n+\\n+\/**\\n+ * Remove whitespace characters from both ends of a string.\\n+ *\\n+ * @param {String} str The string\\n+ * @return {String} A new string representing `str` stripped of whitespace\\n+ *     characters from both its beginning and end\\n+ * @private\\n+ *\/\\n+function trim(str) {\\n+  return str.trim();\\n+}\"}}",
            "message_norm":"[security] fix redos vulnerability\n\na specially crafted value of the `sec-websocket-protocol` header could\nbe used to significantly slow down a ws server.\n\npoc and fix were sent privately by robert mclaughlin from university of\ncalifornia, santa barbara.",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('protocol', 'SECWORD', ''), ('server', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/websocket-server.js'])",
            "num_files":1.0,
            "patch_content":"From 00c425ec77993773d823f018f64a5c44e17023ff Mon Sep 17 00:00:00 2001\nFrom: Luigi Pinca <luigipinca@gmail.com>\nDate: Tue, 25 May 2021 11:00:58 +0200\nSubject: [PATCH] [security] Fix ReDoS vulnerability\n\nA specially crafted value of the `Sec-Websocket-Protocol` header could\nbe used to significantly slow down a ws server.\n\nPoC and fix were sent privately by Robert McLaughlin from University of\nCalifornia, Santa Barbara.\n---\n lib\/websocket-server.js | 14 +++++++++++++-\n 1 file changed, 13 insertions(+), 1 deletion(-)\n\ndiff --git a\/lib\/websocket-server.js b\/lib\/websocket-server.js\nindex b99ad050a..3c3bbe0b0 100644\n--- a\/lib\/websocket-server.js\n+++ b\/lib\/websocket-server.js\n@@ -286,7 +286,7 @@ class WebSocketServer extends EventEmitter {\n     let protocol = req.headers['sec-websocket-protocol'];\n \n     if (protocol) {\n-      protocol = protocol.trim().split(\/ *, *\/);\n+      protocol = protocol.split(',').map(trim);\n \n       \/\/\n       \/\/ Optionally call external protocol selection handler.\n@@ -404,3 +404,15 @@ function abortHandshake(socket, code, message, headers) {\n   socket.removeListener('error', socketOnError);\n   socket.destroy();\n }\n+\n+\/**\n+ * Remove whitespace characters from both ends of a string.\n+ *\n+ * @param {String} str The string\n+ * @return {String} A new string representing `str` stripped of whitespace\n+ *     characters from both its beginning and end\n+ * @private\n+ *\/\n+function trim(str) {\n+  return str.trim();\n+}"
        },
        {
            "index":378,
            "vuln_id":"GHSA-gq4h-f254-7cw9",
            "cwe_id":"{'CWE-362'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/kvark\/ticketed_lock\/pull\/8\/commits\/a986a9335d591fa5c826157d1674d47aa525357f'}",
            "dataset":"osv",
            "summary":"Data races in ticketed_lock Affected versions of this crate unconditionally implemented `Send` for `ReadTicket<T>` & `WriteTicket<T>`.\nThis allows to send non-Send `T` to other threads.\n\nThis can allows creating data races by cloning types with internal mutability and sending them to other threads (as `T` of `ReadTicket<T>`\/`WriteTicket<T>`). Such data races can cause memory corruption or other undefined behavior.\n\nThe flaw was corrected in commit a986a93 by adding `T: Send` bounds to `Send` impls of `ReadTicket<T>`\/`WriteTicket<T>`.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/kvark\/ticketed_lock",
            "commit_href":"https:\/\/github.com\/kvark\/ticketed_lock\/pull\/8\/commits\/a986a9335d591fa5c826157d1674d47aa525357f",
            "commit_sha":"a986a9335d591fa5c826157d1674d47aa525357f",
            "patch":"SINGLE",
            "chain_ord":"['a986a9335d591fa5c826157d1674d47aa525357f']",
            "before_first_fix_commit":"{'6d85af9eb5d8bb7cf142de8e832ce3af7e47e306'}",
            "last_fix_commit":"a986a9335d591fa5c826157d1674d47aa525357f",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/24\/2021, 04:07:17",
            "message":"'T: Send' to prevent misuse",
            "author":"JOE1994",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'src\/lib.rs': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/kvark\/ticketed_lock\/raw\/a986a9335d591fa5c826157d1674d47aa525357f\/src%2Flib.rs', 'patch': '@@ -50,7 +50,7 @@ pub struct ReadTicket<T> {\\n     data: Arc<UnsafeCell<T>>,\\n }\\n \\n-unsafe impl<T> Send for ReadTicket<T> {}\\n+unsafe impl<T: Send> Send for ReadTicket<T> {}\\n \\n #[cfg(not(feature = \"futures\"))]\\n impl<T> ReadTicket<T> {\\n@@ -112,7 +112,7 @@ pub struct WriteTicket<T> {\\n     data: Arc<UnsafeCell<T>>,\\n }\\n \\n-unsafe impl<T> Send for WriteTicket<T> {}\\n+unsafe impl<T: Send> Send for WriteTicket<T> {}\\n \\n #[cfg(not(feature = \"futures\"))]\\n impl<T> WriteTicket<T> {'}}",
            "message_norm":"'t: send' to prevent misuse",
            "language":"en",
            "entities":"[('prevent', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lib.rs'])",
            "num_files":1.0,
            "patch_content":"From a986a9335d591fa5c826157d1674d47aa525357f Mon Sep 17 00:00:00 2001\nFrom: JOE1994 <joseph942010@gmail.com>\nDate: Sat, 23 Jan 2021 23:07:17 -0500\nSubject: [PATCH] 'T: Send' to prevent misuse\n\n---\n src\/lib.rs | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/src\/lib.rs b\/src\/lib.rs\nindex 2c600b7..f35c7f0 100644\n--- a\/src\/lib.rs\n+++ b\/src\/lib.rs\n@@ -50,7 +50,7 @@ pub struct ReadTicket<T> {\n     data: Arc<UnsafeCell<T>>,\n }\n \n-unsafe impl<T> Send for ReadTicket<T> {}\n+unsafe impl<T: Send> Send for ReadTicket<T> {}\n \n #[cfg(not(feature = \"futures\"))]\n impl<T> ReadTicket<T> {\n@@ -112,7 +112,7 @@ pub struct WriteTicket<T> {\n     data: Arc<UnsafeCell<T>>,\n }\n \n-unsafe impl<T> Send for WriteTicket<T> {}\n+unsafe impl<T: Send> Send for WriteTicket<T> {}\n \n #[cfg(not(feature = \"futures\"))]\n impl<T> WriteTicket<T> {"
        },
        {
            "index":720,
            "vuln_id":"GHSA-vfrc-ggmc-5jwv",
            "cwe_id":"{'CWE-79'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/django-helpdesk\/django-helpdesk\/commit\/04483bdac3b5196737516398b5ce0383875a5c60'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in django-helpdesk django-helpdesk is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "published_date":"2021-11-23",
            "chain_len":1,
            "project":"https:\/\/github.com\/django-helpdesk\/django-helpdesk",
            "commit_href":"https:\/\/github.com\/django-helpdesk\/django-helpdesk\/commit\/04483bdac3b5196737516398b5ce0383875a5c60",
            "commit_sha":"04483bdac3b5196737516398b5ce0383875a5c60",
            "patch":"SINGLE",
            "chain_ord":"['04483bdac3b5196737516398b5ce0383875a5c60']",
            "before_first_fix_commit":"{'2c7065e0c4296e0c692fb4a7ee19c7357583af30'}",
            "last_fix_commit":"04483bdac3b5196737516398b5ce0383875a5c60",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/18\/2021, 03:42:02",
            "message":"Add `att.full_clean()` before saving\n\nFix issue https:\/\/github.com\/django-helpdesk\/django-helpdesk\/issues\/983\r\nAlso, fix bug stored XSS disclosure: https:\/\/huntr.dev\/bounties\/4d7a5fdd-b2de-467a-ade0-3f2fb386638e\/",
            "author":"lethanhphuc",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'helpdesk\/lib.py': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/django-helpdesk\/django-helpdesk\/raw\/04483bdac3b5196737516398b5ce0383875a5c60\/helpdesk%2Flib.py', 'patch': \"@@ -145,6 +145,7 @@ def process_attachments(followup, attached_files):\\n                 'application\/octet-stream',\\n                 size=attached.size,\\n             )\\n+            att.full_clean()\\n             att.save()\\n \\n             if attached.size < max_email_attachment_size:\"}}",
            "message_norm":"add `att.full_clean()` before saving\n\nfix issue https:\/\/github.com\/django-helpdesk\/django-helpdesk\/issues\/983\r\nalso, fix bug stored xss disclosure: https:\/\/huntr.dev\/bounties\/4d7a5fdd-b2de-467a-ade0-3f2fb386638e\/",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('issue', 'FLAW', ''), ('https:\/\/github.com\/django-helpdesk\/django-helpdesk\/issues\/983', 'URL', ''), ('fix', 'ACTION', ''), ('bug', 'FLAW', ''), ('xss', 'SECWORD', ''), ('disclosure', 'SECWORD', ''), ('https:\/\/huntr.dev\/bounties\/4d7a5fdd-b2de-467a-ade0-3f2fb386638e\/', 'URL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['helpdesk\/lib.py'])",
            "num_files":1.0,
            "patch_content":"From 04483bdac3b5196737516398b5ce0383875a5c60 Mon Sep 17 00:00:00 2001\nFrom: lethanhphuc <31820707+noobpk@users.noreply.github.com>\nDate: Thu, 18 Nov 2021 10:42:02 +0700\nSubject: [PATCH] Add `att.full_clean()` before saving\n\nFix issue https:\/\/github.com\/django-helpdesk\/django-helpdesk\/issues\/983\nAlso, fix bug stored XSS disclosure: https:\/\/huntr.dev\/bounties\/4d7a5fdd-b2de-467a-ade0-3f2fb386638e\/\n---\n helpdesk\/lib.py | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/helpdesk\/lib.py b\/helpdesk\/lib.py\nindex 07d655c39..da853990b 100644\n--- a\/helpdesk\/lib.py\n+++ b\/helpdesk\/lib.py\n@@ -145,6 +145,7 @@ def process_attachments(followup, attached_files):\n                 'application\/octet-stream',\n                 size=attached.size,\n             )\n+            att.full_clean()\n             att.save()\n \n             if attached.size < max_email_attachment_size:"
        },
        {
            "index":384,
            "vuln_id":"GHSA-cjc7-49v2-jp64",
            "cwe_id":"{'CWE-787', 'CWE-665'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6fd02f44810754ae7481838b6a67c5df7f909ca3', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/41727ff06111117bdf86b37db198217fd7a143cc'}",
            "dataset":"osv",
            "summary":"Incomplete validation in `SparseAdd` ### Impact\nIncomplete validation in `SparseAdd` results in allowing attackers to exploit undefined behavior (dereferencing null pointers) as well as write outside of bounds of heap allocated data:\n\n```python\nimport tensorflow as tf\n\na_indices = tf.zeros([10, 97], dtype=tf.int64)\na_values = tf.zeros([10], dtype=tf.int64)\na_shape = tf.zeros([0], dtype=tf.int64)\n\nb_indices = tf.zeros([0, 0], dtype=tf.int64)\nb_values = tf.zeros([0], dtype=tf.int64)\nb_shape = tf.zeros([0], dtype=tf.int64)\n  \nthresh = 0\n\ntf.raw_ops.SparseAdd(a_indices=a_indices,\n                    a_values=a_values,\n                    a_shape=a_shape,\n                    b_indices=b_indices,\n                    b_values=b_values,\n                    b_shape=b_shape,\n                    thresh=thresh)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/656e7673b14acd7835dc778867f84916c6d1cac2\/tensorflow\/core\/kernels\/sparse_add_op.cc) has a large set of validation for the two sparse tensor inputs (6 tensors in total), but does not validate that the tensors are not empty or that the second dimension of `*_indices` matches the size of corresponding `*_shape`. This allows attackers to send tensor triples that represent invalid sparse tensors to abuse code assumptions that are not protected by validation.\n\n### Patches\nWe have patched the issue in GitHub commit [6fd02f44810754ae7481838b6a67c5df7f909ca3](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6fd02f44810754ae7481838b6a67c5df7f909ca3) followed by GitHub commit  [41727ff06111117bdf86b37db198217fd7a143cc](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/41727ff06111117bdf86b37db198217fd7a143cc).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/41727ff06111117bdf86b37db198217fd7a143cc",
            "commit_sha":"41727ff06111117bdf86b37db198217fd7a143cc",
            "patch":"MULTI",
            "chain_ord":"['6fd02f44810754ae7481838b6a67c5df7f909ca3', '41727ff06111117bdf86b37db198217fd7a143cc']",
            "before_first_fix_commit":"{'6f432d6334edc93fd5af0070170def56b0413e8a'}",
            "last_fix_commit":"41727ff06111117bdf86b37db198217fd7a143cc",
            "chain_ord_pos":2.0,
            "commit_datetime":"05\/11\/2021, 22:41:51",
            "message":"Validate that a and b are proper sparse tensors\n\nPiperOrigin-RevId: 373248068\nChange-Id: I0a2041a0747901b3f00387a6a3bce9bca6b0b3b1",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 5, 'total': 17}",
            "files":"{'tensorflow\/core\/kernels\/sparse_add_op.cc': {'additions': 12, 'deletions': 5, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/41727ff06111117bdf86b37db198217fd7a143cc\/tensorflow%2Fcore%2Fkernels%2Fsparse_add_op.cc', 'patch': '@@ -44,6 +44,11 @@ class SparseAddOp : public OpKernel {\\n                     b_indices->shape().DebugString()));\\n     const int64 a_nnz = a_indices->dim_size(0);\\n     const int64 b_nnz = b_indices->dim_size(0);\\n+    const int num_dims = a_indices->dim_size(1);\\n+    OP_REQUIRES(ctx, b_indices->dim_size(1) == num_dims,\\n+                errors::InvalidArgument(\\n+                    \"Input indices must have the same dimension, got \",\\n+                    num_dims, \" and \", b_indices->dim_size(1)));\\n \\n     OP_REQUIRES_OK(ctx, ctx->input(\"a_values\", &a_values_t));\\n     OP_REQUIRES_OK(ctx, ctx->input(\"b_values\", &b_values_t));\\n@@ -72,6 +77,13 @@ class SparseAddOp : public OpKernel {\\n                     \"Input shapes should be a vector but received shapes \",\\n                     a_shape->shape().DebugString(), \" and \",\\n                     b_shape->shape().DebugString()));\\n+    OP_REQUIRES(\\n+        ctx, a_shape->NumElements() == num_dims,\\n+        errors::InvalidArgument(\"Second dimension of a_indices and length of \"\\n+                                \"a_shape must match, got \",\\n+                                num_dims, \" and \", a_shape->NumElements()));\\n+    OP_REQUIRES(ctx, num_dims > 0,\\n+                errors::InvalidArgument(\"Tesors must not be empty\"));\\n     OP_REQUIRES(\\n         ctx, a_shape->IsSameSize(*b_shape),\\n         errors::InvalidArgument(\\n@@ -100,11 +112,6 @@ class SparseAddOp : public OpKernel {\\n     std::vector<std::pair<bool, int64>> entries_to_copy;  \/\/ from_a?, idx\\n     entries_to_copy.reserve(a_nnz + b_nnz);\\n     std::vector<T> out_values;\\n-    const int num_dims = a_shape->dim_size(0);\\n-\\n-    OP_REQUIRES(ctx, num_dims > 0,\\n-                errors::InvalidArgument(\"Invalid input_a shape. Received: \",\\n-                                        a_shape->DebugString()));\\n \\n     \/\/ The input and output sparse tensors are assumed to be ordered along\\n     \/\/ increasing dimension number.'}}",
            "message_norm":"validate that a and b are proper sparse tensors\n\npiperorigin-revid: 373248068\nchange-id: i0a2041a0747901b3f00387a6a3bce9bca6b0b3b1",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('373248068', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_add_op.cc'])",
            "num_files":1.0,
            "patch_content":"From 41727ff06111117bdf86b37db198217fd7a143cc Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Tue, 11 May 2021 15:41:51 -0700\nSubject: [PATCH] Validate that a and b are proper sparse tensors\n\nPiperOrigin-RevId: 373248068\nChange-Id: I0a2041a0747901b3f00387a6a3bce9bca6b0b3b1\n---\n tensorflow\/core\/kernels\/sparse_add_op.cc | 17 ++++++++++++-----\n 1 file changed, 12 insertions(+), 5 deletions(-)\n\ndiff --git a\/tensorflow\/core\/kernels\/sparse_add_op.cc b\/tensorflow\/core\/kernels\/sparse_add_op.cc\nindex 346206365af8d5..2bd05fa41adc26 100644\n--- a\/tensorflow\/core\/kernels\/sparse_add_op.cc\n+++ b\/tensorflow\/core\/kernels\/sparse_add_op.cc\n@@ -44,6 +44,11 @@ class SparseAddOp : public OpKernel {\n                     b_indices->shape().DebugString()));\n     const int64 a_nnz = a_indices->dim_size(0);\n     const int64 b_nnz = b_indices->dim_size(0);\n+    const int num_dims = a_indices->dim_size(1);\n+    OP_REQUIRES(ctx, b_indices->dim_size(1) == num_dims,\n+                errors::InvalidArgument(\n+                    \"Input indices must have the same dimension, got \",\n+                    num_dims, \" and \", b_indices->dim_size(1)));\n \n     OP_REQUIRES_OK(ctx, ctx->input(\"a_values\", &a_values_t));\n     OP_REQUIRES_OK(ctx, ctx->input(\"b_values\", &b_values_t));\n@@ -72,6 +77,13 @@ class SparseAddOp : public OpKernel {\n                     \"Input shapes should be a vector but received shapes \",\n                     a_shape->shape().DebugString(), \" and \",\n                     b_shape->shape().DebugString()));\n+    OP_REQUIRES(\n+        ctx, a_shape->NumElements() == num_dims,\n+        errors::InvalidArgument(\"Second dimension of a_indices and length of \"\n+                                \"a_shape must match, got \",\n+                                num_dims, \" and \", a_shape->NumElements()));\n+    OP_REQUIRES(ctx, num_dims > 0,\n+                errors::InvalidArgument(\"Tesors must not be empty\"));\n     OP_REQUIRES(\n         ctx, a_shape->IsSameSize(*b_shape),\n         errors::InvalidArgument(\n@@ -100,11 +112,6 @@ class SparseAddOp : public OpKernel {\n     std::vector<std::pair<bool, int64>> entries_to_copy;  \/\/ from_a?, idx\n     entries_to_copy.reserve(a_nnz + b_nnz);\n     std::vector<T> out_values;\n-    const int num_dims = a_shape->dim_size(0);\n-\n-    OP_REQUIRES(ctx, num_dims > 0,\n-                errors::InvalidArgument(\"Invalid input_a shape. Received: \",\n-                                        a_shape->DebugString()));\n \n     \/\/ The input and output sparse tensors are assumed to be ordered along\n     \/\/ increasing dimension number."
        },
        {
            "index":472,
            "vuln_id":"GHSA-5xvc-vgmp-jgc3",
            "cwe_id":"{'CWE-284'}",
            "score":9.1,
            "chain":"{'https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/pull\/38\/commits\/9e200d974e0cb85d828a6afedb8ab90a37878f28', 'https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/pull\/38\/commits\/32b21898fb2b53b1a2e36270de6854ad70e9e9bf'}",
            "dataset":"osv",
            "summary":"Improper Access Control in jupyterhub-firstuseauthenticator ### Impact\n\nWhen JupyterHub is used with FirstUseAuthenticator, the vulnerability allows unauthorized access to any user's account if `create_users=True` and the username is known or guessed.\n\n### Patches\n\nUpgrade to jupyterhub-firstuseauthenticator to 1.0, or apply patch https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/pull\/38.patch\n\n### Workarounds\n\nIf you cannot upgrade, there is no complete workaround, but it can be mitigated.\n\nIf you cannot upgrade yet, you can disable user creation with `c.FirstUseAuthenticator.create_users = False`, which will only allow login with fully normalized usernames for already existing users prior to jupyterhub-firstuserauthenticator 1.0. If any users have never logged in with their normalized username (i.e. lowercase), they will still be vulnerable until you can patch or upgrade.",
            "published_date":"2021-10-28",
            "chain_len":2,
            "project":"https:\/\/github.com\/jupyterhub\/firstuseauthenticator",
            "commit_href":"https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/pull\/38\/commits\/32b21898fb2b53b1a2e36270de6854ad70e9e9bf",
            "commit_sha":"32b21898fb2b53b1a2e36270de6854ad70e9e9bf",
            "patch":"MULTI",
            "chain_ord":"['32b21898fb2b53b1a2e36270de6854ad70e9e9bf', '9e200d974e0cb85d828a6afedb8ab90a37878f28']",
            "before_first_fix_commit":"{'32b21898fb2b53b1a2e36270de6854ad70e9e9bf'}",
            "last_fix_commit":"9e200d974e0cb85d828a6afedb8ab90a37878f28",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/02\/2021, 20:23:22",
            "message":"lowercase username to lock password",
            "author":"George Hunt",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'firstuseauthenticator\/firstuseauthenticator.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/raw\/32b21898fb2b53b1a2e36270de6854ad70e9e9bf\/firstuseauthenticator%2Ffirstuseauthenticator.py', 'patch': \"@@ -138,7 +138,7 @@ def validate_username(self, name):\\n \\n     @gen.coroutine\\n     def authenticate(self, handler, data):\\n-        username = data['username']\\n+        username = data['username'].lower()\\n \\n         if not self.create_users:\\n             if not self._user_exists(username):\"}}",
            "message_norm":"lowercase username to lock password",
            "language":"en",
            "entities":"[('password', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['firstuseauthenticator\/firstuseauthenticator.py'])",
            "num_files":1.0,
            "patch_content":"From 32b21898fb2b53b1a2e36270de6854ad70e9e9bf Mon Sep 17 00:00:00 2001\nFrom: George Hunt <georgejhunt@gmail.com>\nDate: Thu, 2 Sep 2021 20:23:22 +0000\nSubject: [PATCH] lowercase username to lock password\n\n---\n firstuseauthenticator\/firstuseauthenticator.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/firstuseauthenticator\/firstuseauthenticator.py b\/firstuseauthenticator\/firstuseauthenticator.py\nindex fa4f161..1b45aa5 100644\n--- a\/firstuseauthenticator\/firstuseauthenticator.py\n+++ b\/firstuseauthenticator\/firstuseauthenticator.py\n@@ -138,7 +138,7 @@ def validate_username(self, name):\n \n     @gen.coroutine\n     def authenticate(self, handler, data):\n-        username = data['username']\n+        username = data['username'].lower()\n \n         if not self.create_users:\n             if not self._user_exists(username):"
        },
        {
            "index":159,
            "vuln_id":"GHSA-qhx9-7hx7-cp4r",
            "cwe_id":"{'CWE-444'}",
            "score":6.8,
            "chain":"{'https:\/\/github.com\/bottlepy\/bottle\/commit\/57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b'}",
            "dataset":"osv",
            "summary":"HTTP Request smuggling in bottle The package bottle before 0.12.19 are vulnerable to Web Cache Poisoning by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",
            "published_date":"2021-04-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/bottlepy\/bottle",
            "commit_href":"https:\/\/github.com\/bottlepy\/bottle\/commit\/57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b",
            "commit_sha":"57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b",
            "patch":"SINGLE",
            "chain_ord":"['57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b']",
            "before_first_fix_commit":"{'2d6acef676d35611dc58ca9c3bac51789adbcce8'}",
            "last_fix_commit":"57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/11\/2020, 18:24:29",
            "message":"Do not split query strings on `;` anymore.\n\nUsing `;` as a separator instead of `&` was allowed a long time ago,\nbut is now obsolete and actually invalid according to the 2014 W3C\nrecommendations. Even if this change is technically backwards-incompatible,\nno real-world application should depend on broken behavior. If you REALLY\nneed this functionality, monkey-patch the _parse_qsl() function.",
            "author":"Marcel Hellkamp",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'bottle.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bottlepy\/bottle\/raw\/57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b\/bottle.py', 'patch': \"@@ -2585,7 +2585,7 @@ def parse_range_header(header, maxlen=0):\\n \\n def _parse_qsl(qs):\\n     r = []\\n-    for pair in qs.replace(';','&').split('&'):\\n+    for pair in qs.split('&'):\\n         if not pair: continue\\n         nv = pair.split('=', 1)\\n         if len(nv) != 2: nv.append('')\"}}",
            "message_norm":"do not split query strings on `;` anymore.\n\nusing `;` as a separator instead of `&` was allowed a long time ago,\nbut is now obsolete and actually invalid according to the 2014 w3c\nrecommendations. even if this change is technically backwards-incompatible,\nno real-world application should depend on broken behavior. if you really\nneed this functionality, monkey-patch the _parse_qsl() function.",
            "language":"en",
            "entities":"[('monkey', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bottle.py'])",
            "num_files":1.0,
            "patch_content":"From 57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b Mon Sep 17 00:00:00 2001\nFrom: Marcel Hellkamp <marc@gsites.de>\nDate: Wed, 11 Nov 2020 19:24:29 +0100\nSubject: [PATCH] Do not split query strings on `;` anymore.\n\nUsing `;` as a separator instead of `&` was allowed a long time ago,\nbut is now obsolete and actually invalid according to the 2014 W3C\nrecommendations. Even if this change is technically backwards-incompatible,\nno real-world application should depend on broken behavior. If you REALLY\nneed this functionality, monkey-patch the _parse_qsl() function.\n---\n bottle.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/bottle.py b\/bottle.py\nindex bcfc5e62b..417b01b98 100644\n--- a\/bottle.py\n+++ b\/bottle.py\n@@ -2585,7 +2585,7 @@ def parse_range_header(header, maxlen=0):\n \n def _parse_qsl(qs):\n     r = []\n-    for pair in qs.replace(';','&').split('&'):\n+    for pair in qs.split('&'):\n         if not pair: continue\n         nv = pair.split('=', 1)\n         if len(nv) != 2: nv.append('')"
        },
        {
            "index":508,
            "vuln_id":"GHSA-mq5p-2mcr-m52j",
            "cwe_id":"{'CWE-94'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/jupyterhub\/nbgitpuller\/commit\/07690644f29a566011dd0d7ba14cae3eb0490481'}",
            "dataset":"osv",
            "summary":"Code injection in nbgitpuller ### Impact\n\nDue to an unsanitized input, visiting maliciously crafted links could result in arbitrary code execution in the user environment.\n\n### Patches\n\n0.10.2\n\n### Workarounds\n\nNone, other than upgrade to 0.10.2 or downgrade to 0.8.x.\n\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [nbgitpuller](https:\/\/github.com\/jupyterhub\/nbgitpuller\/issues)\n* Email our security team at [security@ipython.org](mailto:security@ipython.org)",
            "published_date":"2021-08-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/jupyterhub\/nbgitpuller",
            "commit_href":"https:\/\/github.com\/jupyterhub\/nbgitpuller\/commit\/07690644f29a566011dd0d7ba14cae3eb0490481",
            "commit_sha":"07690644f29a566011dd0d7ba14cae3eb0490481",
            "patch":"SINGLE",
            "chain_ord":"['07690644f29a566011dd0d7ba14cae3eb0490481']",
            "before_first_fix_commit":"{'f25d3f2685035c11bd668d48e71caf4fc245ba68', '2cad6147f1769a962f8d0733045967663add53cb'}",
            "last_fix_commit":"07690644f29a566011dd0d7ba14cae3eb0490481",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/25\/2021, 12:23:02",
            "message":"Merge pull request from GHSA-mq5p-2mcr-m52j\n\nmake positional args explicit",
            "author":"Erik Sundell",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'nbgitpuller\/pull.py': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyterhub\/nbgitpuller\/raw\/07690644f29a566011dd0d7ba14cae3eb0490481\/nbgitpuller%2Fpull.py', 'patch': '@@ -88,13 +88,13 @@ def branch_exists(self, branch):\\n         \"\"\"\\n         try:\\n             heads = subprocess.run(\\n-                [\"git\", \"ls-remote\", \"--heads\", self.git_url],\\n+                [\"git\", \"ls-remote\", \"--heads\", \"--\", self.git_url],\\n                 capture_output=True,\\n                 text=True,\\n                 check=True\\n             )\\n             tags = subprocess.run(\\n-                [\"git\", \"ls-remote\", \"--tags\", self.git_url],\\n+                [\"git\", \"ls-remote\", \"--tags\", \"--\", self.git_url],\\n                 capture_output=True,\\n                 text=True,\\n                 check=True\\n@@ -118,7 +118,7 @@ def resolve_default_branch(self):\\n         \"\"\"\\n         try:\\n             head_branch = subprocess.run(\\n-                [\"git\", \"ls-remote\", \"--symref\", self.git_url, \"HEAD\"],\\n+                [\"git\", \"ls-remote\", \"--symref\", \"--\", self.git_url, \"HEAD\"],\\n                 capture_output=True,\\n                 text=True,\\n                 check=True\\n@@ -154,7 +154,7 @@ def initialize_repo(self):\\n         if self.depth and self.depth > 0:\\n             clone_args.extend([\\'--depth\\', str(self.depth)])\\n         clone_args.extend([\\'--branch\\', self.branch_name])\\n-        clone_args.extend([self.git_url, self.repo_dir])\\n+        clone_args.extend([\"--\", self.git_url, self.repo_dir])\\n         yield from execute_cmd(clone_args)\\n         logging.info(\\'Repo {} initialized\\'.format(self.repo_dir))'}}",
            "message_norm":"merge pull request from ghsa-mq5p-2mcr-m52j\n\nmake positional args explicit",
            "language":"ca",
            "entities":"[('ghsa-mq5p-2mcr-m52j', 'VULNID', 'GHSA')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['nbgitpuller\/pull.py'])",
            "num_files":1.0,
            "patch_content":"From f25d3f2685035c11bd668d48e71caf4fc245ba68 Mon Sep 17 00:00:00 2001\nFrom: Min RK <benjaminrk@gmail.com>\nDate: Tue, 24 Aug 2021 13:04:35 +0200\nSubject: [PATCH] make positional args explicit\n\navoids misinterpreting positional args as flags\n---\n nbgitpuller\/pull.py | 8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ndiff --git a\/nbgitpuller\/pull.py b\/nbgitpuller\/pull.py\nindex ef2aefb7..cc18ac97 100644\n--- a\/nbgitpuller\/pull.py\n+++ b\/nbgitpuller\/pull.py\n@@ -88,13 +88,13 @@ def branch_exists(self, branch):\n         \"\"\"\n         try:\n             heads = subprocess.run(\n-                [\"git\", \"ls-remote\", \"--heads\", self.git_url],\n+                [\"git\", \"ls-remote\", \"--heads\", \"--\", self.git_url],\n                 capture_output=True,\n                 text=True,\n                 check=True\n             )\n             tags = subprocess.run(\n-                [\"git\", \"ls-remote\", \"--tags\", self.git_url],\n+                [\"git\", \"ls-remote\", \"--tags\", \"--\", self.git_url],\n                 capture_output=True,\n                 text=True,\n                 check=True\n@@ -118,7 +118,7 @@ def resolve_default_branch(self):\n         \"\"\"\n         try:\n             head_branch = subprocess.run(\n-                [\"git\", \"ls-remote\", \"--symref\", self.git_url, \"HEAD\"],\n+                [\"git\", \"ls-remote\", \"--symref\", \"--\", self.git_url, \"HEAD\"],\n                 capture_output=True,\n                 text=True,\n                 check=True\n@@ -154,7 +154,7 @@ def initialize_repo(self):\n         if self.depth and self.depth > 0:\n             clone_args.extend(['--depth', str(self.depth)])\n         clone_args.extend(['--branch', self.branch_name])\n-        clone_args.extend([self.git_url, self.repo_dir])\n+        clone_args.extend([\"--\", self.git_url, self.repo_dir])\n         yield from execute_cmd(clone_args)\n         logging.info('Repo {} initialized'.format(self.repo_dir))"
        },
        {
            "index":473,
            "vuln_id":"GHSA-v52p-hfjf-wg88",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6d36ba65577006affb272335b7c1abd829010708'}",
            "dataset":"osv",
            "summary":"Division by zero in TFLite's implementation of `SpaceToBatchNd` ### Impact\nThe implementation of the `SpaceToBatchNd` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/412c7d9bb8f8a762c5b266c9e73bfa165f29aac8\/tensorflow\/lite\/kernels\/space_to_batch_nd.cc#L82-L83):\n\n```cc\nTF_LITE_ENSURE_EQ(context, final_dim_size % block_shape[dim], 0);\noutput_size->data[dim + 1] = final_dim_size \/ block_shape[dim];\n```\n\nAn attacker can craft a model such that one dimension of the `block` input is 0. Hence, the corresponding value in `block_shape` is 0.\n\n### Patches\nWe have patched the issue in GitHub commit [6d36ba65577006affb272335b7c1abd829010708](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6d36ba65577006affb272335b7c1abd829010708).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6d36ba65577006affb272335b7c1abd829010708",
            "commit_sha":"6d36ba65577006affb272335b7c1abd829010708",
            "patch":"SINGLE",
            "chain_ord":"['6d36ba65577006affb272335b7c1abd829010708']",
            "before_first_fix_commit":"{'412c7d9bb8f8a762c5b266c9e73bfa165f29aac8'}",
            "last_fix_commit":"6d36ba65577006affb272335b7c1abd829010708",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 21:22:30",
            "message":"Prevent division by 0\n\nPiperOrigin-RevId: 370984990\nChange-Id: Ib324955bbeb1cbd97c82fd5d61a00a2697c9a2de",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'tensorflow\/lite\/kernels\/space_to_batch_nd.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/6d36ba65577006affb272335b7c1abd829010708\/tensorflow%2Flite%2Fkernels%2Fspace_to_batch_nd.cc', 'patch': '@@ -79,6 +79,7 @@ TfLiteStatus ResizeOutputTensor(TfLiteContext* context,\\n   for (int dim = 0; dim < spatial_dims_num; ++dim) {\\n     int final_dim_size = (input_size->data[dim + 1] + paddings_data[dim * 2] +\\n                           paddings_data[dim * 2 + 1]);\\n+    TF_LITE_ENSURE(context, block_shape[dim] != 0);\\n     TF_LITE_ENSURE_EQ(context, final_dim_size % block_shape[dim], 0);\\n     output_size->data[dim + 1] = final_dim_size \/ block_shape[dim];\\n     output_batch_size *= block_shape[dim];'}}",
            "message_norm":"prevent division by 0\n\npiperorigin-revid: 370984990\nchange-id: ib324955bbeb1cbd97c82fd5d61a00a2697c9a2de",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('370984990', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/space_to_batch_nd.cc'])",
            "num_files":1.0,
            "patch_content":"From 6d36ba65577006affb272335b7c1abd829010708 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Wed, 28 Apr 2021 14:22:30 -0700\nSubject: [PATCH] Prevent division by 0\n\nPiperOrigin-RevId: 370984990\nChange-Id: Ib324955bbeb1cbd97c82fd5d61a00a2697c9a2de\n---\n tensorflow\/lite\/kernels\/space_to_batch_nd.cc | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/tensorflow\/lite\/kernels\/space_to_batch_nd.cc b\/tensorflow\/lite\/kernels\/space_to_batch_nd.cc\nindex 0d537e2d1892fe..af7b9d9e914a1e 100644\n--- a\/tensorflow\/lite\/kernels\/space_to_batch_nd.cc\n+++ b\/tensorflow\/lite\/kernels\/space_to_batch_nd.cc\n@@ -79,6 +79,7 @@ TfLiteStatus ResizeOutputTensor(TfLiteContext* context,\n   for (int dim = 0; dim < spatial_dims_num; ++dim) {\n     int final_dim_size = (input_size->data[dim + 1] + paddings_data[dim * 2] +\n                           paddings_data[dim * 2 + 1]);\n+    TF_LITE_ENSURE(context, block_shape[dim] != 0);\n     TF_LITE_ENSURE_EQ(context, final_dim_size % block_shape[dim], 0);\n     output_size->data[dim + 1] = final_dim_size \/ block_shape[dim];\n     output_batch_size *= block_shape[dim];"
        },
        {
            "index":477,
            "vuln_id":"GHSA-5j3g-jfq3-7jwx",
            "cwe_id":"{'CWE-94'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/hapijs\/bassmaster\/commit\/b751602d8cb7194ee62a61e085069679525138c4'}",
            "dataset":"osv",
            "summary":"Arbitrary JavaScript Execution in bassmaster A vulnerability exists in bassmaster <= 1.5.1 that allows for an attacker to provide arbitrary JavaScript that is then executed server side via eval.\n\n\n## Recommendation\n\nUpdate to bassmaster version 1.5.2 or greater.",
            "published_date":"2017-10-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/hapijs\/bassmaster",
            "commit_href":"https:\/\/github.com\/hapijs\/bassmaster\/commit\/b751602d8cb7194ee62a61e085069679525138c4",
            "commit_sha":"b751602d8cb7194ee62a61e085069679525138c4",
            "patch":"SINGLE",
            "chain_ord":"['b751602d8cb7194ee62a61e085069679525138c4']",
            "before_first_fix_commit":"{'83f02417beab924ce2fe6ee7d6fcfab11d2dafd5'}",
            "last_fix_commit":"b751602d8cb7194ee62a61e085069679525138c4",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/25\/2014, 23:06:07",
            "message":"Remove eval statement",
            "author":"nvcexploder",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 8, 'total': 10}",
            "files":"{'lib\/batch.js': {'additions': 2, 'deletions': 8, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/outmoded\/bassmaster\/raw\/b751602d8cb7194ee62a61e085069679525138c4\/lib%2Fbatch.js', 'patch': \"@@ -146,16 +146,10 @@ internals.batch = function (batchRequest, resultsData, pos, parts, callback) {\\n             var ref = resultsData.resultsMap[parts[i].index];\\n \\n             if (ref) {\\n-                var value = null;\\n-\\n-                try {\\n-                    eval('value = ref.' + parts[i].value + ';');\\n-                }\\n-                catch (e) {\\n-                    error = new Error(e.message);\\n-                }\\n+                var value = ref[parts[i].value]||null;\\n \\n                 if (value) {\\n+\\n                     if (value.match && value.match(\/^[\\\\w:]+$\/)) {\\n                         path += value;\\n                     }\"}}",
            "message_norm":"remove eval statement",
            "language":"sl",
            "entities":"[('remove', 'ACTION', ''), ('eval', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/batch.js'])",
            "num_files":1.0,
            "patch_content":"From b751602d8cb7194ee62a61e085069679525138c4 Mon Sep 17 00:00:00 2001\nFrom: nvcexploder <benacker@gmail.com>\nDate: Thu, 25 Sep 2014 16:06:07 -0700\nSubject: [PATCH] Remove eval statement\n\n---\n lib\/batch.js | 10 ++--------\n 1 file changed, 2 insertions(+), 8 deletions(-)\n\ndiff --git a\/lib\/batch.js b\/lib\/batch.js\nindex fe98963..e0cbabf 100644\n--- a\/lib\/batch.js\n+++ b\/lib\/batch.js\n@@ -146,16 +146,10 @@ internals.batch = function (batchRequest, resultsData, pos, parts, callback) {\n             var ref = resultsData.resultsMap[parts[i].index];\n \n             if (ref) {\n-                var value = null;\n-\n-                try {\n-                    eval('value = ref.' + parts[i].value + ';');\n-                }\n-                catch (e) {\n-                    error = new Error(e.message);\n-                }\n+                var value = ref[parts[i].value]||null;\n \n                 if (value) {\n+\n                     if (value.match && value.match(\/^[\\w:]+$\/)) {\n                         path += value;\n                     }"
        },
        {
            "index":725,
            "vuln_id":"GHSA-f78f-353m-cf4j",
            "cwe_id":"{'CWE-94'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/mithunsatheesh\/node-rules\/commit\/100862223904bb6478fcc33b701c7dee11f7b832'}",
            "dataset":"osv",
            "summary":"Code Injection in node-rules node-rules including 3.0.0 and prior to 5.0.0 allows injection of arbitrary commands. The argument rules of function \"fromJSON()\" can be controlled by users without any sanitization.",
            "published_date":"2021-12-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/mithunsatheesh\/node-rules",
            "commit_href":"https:\/\/github.com\/mithunsatheesh\/node-rules\/commit\/100862223904bb6478fcc33b701c7dee11f7b832",
            "commit_sha":"100862223904bb6478fcc33b701c7dee11f7b832",
            "patch":"SINGLE",
            "chain_ord":"['100862223904bb6478fcc33b701c7dee11f7b832']",
            "before_first_fix_commit":"{'1b07c48336ce30aa6d3b6b3be1850cd292860dbb'}",
            "last_fix_commit":"100862223904bb6478fcc33b701c7dee11f7b832",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/16\/2020, 13:43:37",
            "message":"Remove fromJSON and toJSON from exposed APIs\n\nRemove fromJSON and toJSON from exposed APIs in V5.0.0",
            "author":"Mithun Satheesh",
            "comments":null,
            "stats":"{'additions': 0, 'deletions': 31, 'total': 31}",
            "files":"{'lib\/node-rules.js': {'additions': 0, 'deletions': 31, 'changes': 31, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mithunsatheesh\/node-rules\/raw\/100862223904bb6478fcc33b701c7dee11f7b832\/lib%2Fnode-rules.js', 'patch': '@@ -128,36 +128,5 @@\\n         }\\n         this.sync();\\n     }\\n-    RuleEngine.prototype.toJSON = function() {\\n-        var rules = this.rules;\\n-        if (rules instanceof Array) {\\n-            rules = rules.map(function(rule) {\\n-                rule.condition = rule.condition.toString();\\n-                rule.consequence = rule.consequence.toString();\\n-                return rule;\\n-            });\\n-        } else if (typeof(rules) != \"undefined\") {\\n-            rules.condition = rules.condition.toString();\\n-            rules.consequence = rules.consequence.toString();\\n-        }\\n-        return rules;\\n-    };\\n-    RuleEngine.prototype.fromJSON = function(rules) {\\n-        this.init();\\n-        if (typeof(rules) == \"string\") {\\n-            rules = JSON.parse(rules);\\n-        }\\n-        if (rules instanceof Array) {\\n-            rules = rules.map(function(rule) {\\n-                rule.condition = eval(\"(\" + rule.condition + \")\");\\n-                rule.consequence = eval(\"(\" + rule.consequence + \")\");\\n-                return rule;\\n-            });\\n-        } else if (rules !== null && typeof(rules) == \"object\") {\\n-            rules.condition = eval(\"(\" + rules.condition + \")\");\\n-            rules.consequence = eval(\"(\" + rules.consequence + \")\");\\n-        }\\n-        this.register(rules);\\n-    };\\n     module.exports = RuleEngine;\\n }(module.exports));'}}",
            "message_norm":"remove fromjson and tojson from exposed apis\n\nremove fromjson and tojson from exposed apis in v5.0.0",
            "language":"en",
            "entities":"[('remove', 'ACTION', ''), ('exposed apis', 'SECWORD', ''), ('exposed apis', 'SECWORD', ''), ('v5.0.0', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/node-rules.js'])",
            "num_files":1.0,
            "patch_content":"From 100862223904bb6478fcc33b701c7dee11f7b832 Mon Sep 17 00:00:00 2001\nFrom: Mithun Satheesh <mithunsatish@gmail.com>\nDate: Mon, 16 Mar 2020 19:13:37 +0530\nSubject: [PATCH] Remove fromJSON and toJSON from exposed APIs\n\nRemove fromJSON and toJSON from exposed APIs in V5.0.0\n---\n lib\/node-rules.js | 31 -------------------------------\n 1 file changed, 31 deletions(-)\n\ndiff --git a\/lib\/node-rules.js b\/lib\/node-rules.js\nindex 443a156..0f9eb6b 100644\n--- a\/lib\/node-rules.js\n+++ b\/lib\/node-rules.js\n@@ -128,36 +128,5 @@\n         }\n         this.sync();\n     }\n-    RuleEngine.prototype.toJSON = function() {\n-        var rules = this.rules;\n-        if (rules instanceof Array) {\n-            rules = rules.map(function(rule) {\n-                rule.condition = rule.condition.toString();\n-                rule.consequence = rule.consequence.toString();\n-                return rule;\n-            });\n-        } else if (typeof(rules) != \"undefined\") {\n-            rules.condition = rules.condition.toString();\n-            rules.consequence = rules.consequence.toString();\n-        }\n-        return rules;\n-    };\n-    RuleEngine.prototype.fromJSON = function(rules) {\n-        this.init();\n-        if (typeof(rules) == \"string\") {\n-            rules = JSON.parse(rules);\n-        }\n-        if (rules instanceof Array) {\n-            rules = rules.map(function(rule) {\n-                rule.condition = eval(\"(\" + rule.condition + \")\");\n-                rule.consequence = eval(\"(\" + rule.consequence + \")\");\n-                return rule;\n-            });\n-        } else if (rules !== null && typeof(rules) == \"object\") {\n-            rules.condition = eval(\"(\" + rules.condition + \")\");\n-            rules.consequence = eval(\"(\" + rules.consequence + \")\");\n-        }\n-        this.register(rules);\n-    };\n     module.exports = RuleEngine;\n }(module.exports));"
        },
        {
            "index":239,
            "vuln_id":"GHSA-rhq2-3vr9-6mcr",
            "cwe_id":"{'CWE-22'}",
            "score":8.3,
            "chain":"{'https:\/\/github.com\/gradio-app\/gradio\/commit\/41bd3645bdb616e1248b2167ca83636a2653f781'}",
            "dataset":"osv",
            "summary":"Files on the host computer can be accessed from the Gradio interface ### Impact\nThis is a vulnerability that affects anyone who creates and publicly shares Gradio interfaces using `gradio<2.4.8`. Because of the way that static files were being served, someone who generated a public Gradio link and shared it with others would potentially be exposing the files on the computer that generated the link, while the link was active. An attacker would be able to view the contents of a file on the computer if they knew the exact relative filepath. We do not have any evidence that this was ever exploited, but we treated the issue seriously and immediately took steps to mitigate it (see below)\n\n### Response\n1. We worked with @haby0 to immediately patch the issue and released a new version, `gradio 2.5.0`, within 24 hours of the issue being brought to our attention \n2. We enabled a notification that is printed to anyone using an older version of gradio telling them to upgrade (see screenshot below)\n3. We expanded our test suite to test for this vulnerability ensuring that our patch does not get reverted in future releases of `gradio`\n\n![image](https:\/\/user-images.githubusercontent.com\/1778297\/146251425-f36b519b-6d4a-4dfb-8d89-c1ed005979d3.png)\n\n### Patches\nThe problem has been patched in `gradio>=2.5.0`.",
            "published_date":"2022-01-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/gradio-app\/gradio",
            "commit_href":"https:\/\/github.com\/gradio-app\/gradio\/commit\/41bd3645bdb616e1248b2167ca83636a2653f781",
            "commit_sha":"41bd3645bdb616e1248b2167ca83636a2653f781",
            "patch":"SINGLE",
            "chain_ord":"['41bd3645bdb616e1248b2167ca83636a2653f781']",
            "before_first_fix_commit":"{'0b2c4901a63b2e5a7d7b3964d27b8f82d6d330e1'}",
            "last_fix_commit":"41bd3645bdb616e1248b2167ca83636a2653f781",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/14\/2021, 21:01:55",
            "message":"secure path hotfix",
            "author":"Ali Abid",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 3, 'total': 5}",
            "files":"{'gradio\/networking.py': {'additions': 2, 'deletions': 3, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gradio-app\/gradio\/raw\/41bd3645bdb616e1248b2167ca83636a2653f781\/gradio%2Fnetworking.py', 'patch': '@@ -377,15 +377,14 @@ def interpret():\\n @app.route(\"\/file\/<path:path>\", methods=[\"GET\"])\\n @login_check\\n def file(path):\\n-    path = secure_filename(path)\\n     if app.interface.encrypt and isinstance(app.interface.examples, str) and path.startswith(app.interface.examples):\\n-        with open(os.path.join(app.cwd, path), \"rb\") as encrypted_file:\\n+        with open(safe_join(app.cwd, path), \"rb\") as encrypted_file:\\n             encrypted_data = encrypted_file.read()\\n         file_data = encryptor.decrypt(\\n             app.interface.encryption_key, encrypted_data)\\n         return send_file(io.BytesIO(file_data), attachment_filename=os.path.basename(path))\\n     else:\\n-        return send_file(os.path.join(app.cwd, path))\\n+        return send_file(safe_join(app.cwd, path))\\n \\n \\n @app.route(\"\/api\/queue\/push\/\", methods=[\"POST\"])'}}",
            "message_norm":"secure path hotfix",
            "language":"en",
            "entities":"[('secure', 'SECWORD', ''), ('hotfix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['gradio\/networking.py'])",
            "num_files":1.0,
            "patch_content":"From 41bd3645bdb616e1248b2167ca83636a2653f781 Mon Sep 17 00:00:00 2001\nFrom: Ali Abid <you@example.comgit>\nDate: Tue, 14 Dec 2021 21:01:55 +0000\nSubject: [PATCH] secure path hotfix\n\n---\n gradio\/networking.py | 5 ++---\n 1 file changed, 2 insertions(+), 3 deletions(-)\n\ndiff --git a\/gradio\/networking.py b\/gradio\/networking.py\nindex 0a97281692..18017249cf 100644\n--- a\/gradio\/networking.py\n+++ b\/gradio\/networking.py\n@@ -377,15 +377,14 @@ def interpret():\n @app.route(\"\/file\/<path:path>\", methods=[\"GET\"])\n @login_check\n def file(path):\n-    path = secure_filename(path)\n     if app.interface.encrypt and isinstance(app.interface.examples, str) and path.startswith(app.interface.examples):\n-        with open(os.path.join(app.cwd, path), \"rb\") as encrypted_file:\n+        with open(safe_join(app.cwd, path), \"rb\") as encrypted_file:\n             encrypted_data = encrypted_file.read()\n         file_data = encryptor.decrypt(\n             app.interface.encryption_key, encrypted_data)\n         return send_file(io.BytesIO(file_data), attachment_filename=os.path.basename(path))\n     else:\n-        return send_file(os.path.join(app.cwd, path))\n+        return send_file(safe_join(app.cwd, path))\n \n \n @app.route(\"\/api\/queue\/push\/\", methods=[\"POST\"])"
        },
        {
            "index":251,
            "vuln_id":"GHSA-cvpc-8phh-8f45",
            "cwe_id":"{'CWE-787', 'CWE-125'}",
            "score":4.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/00302787b788c5ff04cb6f62aed5a74d936e86c0', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e11f55585f614645b360563072ffeb5c3eeff162', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/46d5b0852528ddfd614ded79bccc75589f801bd9', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1970c2158b1ffa416d159d03c3370b9a462aee35', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/fff2c8326280c07733828f990548979bdc893859'}",
            "dataset":"osv",
            "summary":"Out of bounds access in tensorflow-lite ### Impact\nIn TensorFlow Lite, saved models in the flatbuffer format use a double indexing scheme: a model has a set of subgraphs, each subgraph has a set of operators and each operator has a set of input\/output tensors. The flatbuffer format uses indices for the tensors, indexing into an array of tensors that is owned by the subgraph. This results in a pattern of double array indexing when trying to get the data of each tensor:https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/kernels\/kernel_util.cc#L36\n\nHowever, some operators can have some tensors be optional. To handle this scenario, the flatbuffer model uses a negative `-1` value as index for these tensors:\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/c\/common.h#L82\n\nThis results in special casing during validation at model loading time: https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/core\/subgraph.cc#L566-L580\n\nUnfortunately, this means that the `-1` index is a valid tensor index for any operator, including those that don't expect optional inputs and including for output tensors. Thus, this allows writing and reading from outside the bounds of heap allocated arrays, although only at a specific offset from the start of these arrays.\n\nThis results in both read and write gadgets, albeit very limited in scope.\n\n### Patches\nWe have patched the issue in several commits (46d5b0852, 00302787b7, e11f5558, cd31fd0ce, 1970c21, and fff2c83). We will release patch releases for all versions between 1.15 and 2.3.\n\nWe recommend users to upgrade to TensorFlow 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.\n\n### Workarounds\nA potential workaround would be to add a custom `Verifier` to the model loading code to ensure that only operators which accept optional inputs use the `-1` special value and only for the tensors that they expect to be optional. Since this allow-list type approach is erro-prone, we advise upgrading to the patched code.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2020-09-25",
            "chain_len":6,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/00302787b788c5ff04cb6f62aed5a74d936e86c0",
            "commit_sha":"00302787b788c5ff04cb6f62aed5a74d936e86c0",
            "patch":"MULTI",
            "chain_ord":"['46d5b0852528ddfd614ded79bccc75589f801bd9', '00302787b788c5ff04cb6f62aed5a74d936e86c0', 'e11f55585f614645b360563072ffeb5c3eeff162', 'cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f', 'fff2c8326280c07733828f990548979bdc893859', '1970c2158b1ffa416d159d03c3370b9a462aee35']",
            "before_first_fix_commit":"{'fff2c8326280c07733828f990548979bdc893859'}",
            "last_fix_commit":"1970c2158b1ffa416d159d03c3370b9a462aee35",
            "chain_ord_pos":2.0,
            "commit_datetime":"09\/18\/2020, 20:16:53",
            "message":"[tflite] Make `GetOptionalInputTensor` the same as `GetInput`.\n\nWith the previous change, there is no more need for two separate APIs. We would deprecate `GetOptionalInputTensor` in the future.\n\nPiperOrigin-RevId: 332513386\nChange-Id: Id7110271c25ebd6126ad8c82a493e37e0e0756b3",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 6, 'total': 7}",
            "files":"{'tensorflow\/lite\/kernels\/kernel_util.cc': {'additions': 1, 'deletions': 6, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/00302787b788c5ff04cb6f62aed5a74d936e86c0\/tensorflow%2Flite%2Fkernels%2Fkernel_util.cc', 'patch': '@@ -75,12 +75,7 @@ TfLiteTensor* GetOutput(TfLiteContext* context, const TfLiteNode* node,\\n \\n const TfLiteTensor* GetOptionalInputTensor(const TfLiteContext* context,\\n                                            const TfLiteNode* node, int index) {\\n-  const bool use_tensor = index < node->inputs->size &&\\n-                          node->inputs->data[index] != kTfLiteOptionalTensor;\\n-  if (use_tensor) {\\n-    return GetMutableInput(context, node, index);\\n-  }\\n-  return nullptr;\\n+  return GetInput(context, node, index);\\n }\\n \\n \/\/ Per-axis'}}",
            "message_norm":"[tflite] make `getoptionalinputtensor` the same as `getinput`.\n\nwith the previous change, there is no more need for two separate apis. we would deprecate `getoptionalinputtensor` in the future.\n\npiperorigin-revid: 332513386\nchange-id: id7110271c25ebd6126ad8c82a493e37e0e0756b3",
            "language":"en",
            "entities":"[('332513386', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/kernel_util.cc'])",
            "num_files":1.0,
            "patch_content":"From 00302787b788c5ff04cb6f62aed5a74d936e86c0 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Fri, 18 Sep 2020 13:16:53 -0700\nSubject: [PATCH] [tflite] Make `GetOptionalInputTensor` the same as\n `GetInput`.\n\nWith the previous change, there is no more need for two separate APIs. We would deprecate `GetOptionalInputTensor` in the future.\n\nPiperOrigin-RevId: 332513386\nChange-Id: Id7110271c25ebd6126ad8c82a493e37e0e0756b3\n---\n tensorflow\/lite\/kernels\/kernel_util.cc | 7 +------\n 1 file changed, 1 insertion(+), 6 deletions(-)\n\ndiff --git a\/tensorflow\/lite\/kernels\/kernel_util.cc b\/tensorflow\/lite\/kernels\/kernel_util.cc\nindex fab884bc90c9a0..cd243335c9ca15 100644\n--- a\/tensorflow\/lite\/kernels\/kernel_util.cc\n+++ b\/tensorflow\/lite\/kernels\/kernel_util.cc\n@@ -75,12 +75,7 @@ TfLiteTensor* GetOutput(TfLiteContext* context, const TfLiteNode* node,\n \n const TfLiteTensor* GetOptionalInputTensor(const TfLiteContext* context,\n                                            const TfLiteNode* node, int index) {\n-  const bool use_tensor = index < node->inputs->size &&\n-                          node->inputs->data[index] != kTfLiteOptionalTensor;\n-  if (use_tensor) {\n-    return GetMutableInput(context, node, index);\n-  }\n-  return nullptr;\n+  return GetInput(context, node, index);\n }\n \n \/\/ Per-axis"
        },
        {
            "index":775,
            "vuln_id":"GHSA-2647-c639-qv2j",
            "cwe_id":"{'CWE-918'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/janeczku\/calibre-web\/commit\/965352c8d96c9eae7a6867ff76b0db137d04b0b8'}",
            "dataset":"osv",
            "summary":"Server-Side Request Forgery in calibreweb calibreweb prior to version 0.6.17 is vulnerable to server-side request forgery (SSRF). This is due to an incomplete fix for [CVE-2022-0339](https:\/\/github.com\/advisories\/GHSA-4w8p-x6g8-fv64). The blacklist does not check for `0.0.0.0`, which would result in a payload of `0.0.0.0` resolving to `localhost`.",
            "published_date":"2022-03-08",
            "chain_len":1,
            "project":"https:\/\/github.com\/janeczku\/calibre-web",
            "commit_href":"https:\/\/github.com\/janeczku\/calibre-web\/commit\/965352c8d96c9eae7a6867ff76b0db137d04b0b8",
            "commit_sha":"965352c8d96c9eae7a6867ff76b0db137d04b0b8",
            "patch":"SINGLE",
            "chain_ord":"['965352c8d96c9eae7a6867ff76b0db137d04b0b8']",
            "before_first_fix_commit":"{'8007e450b3178f517b83b0989744c6df38867932'}",
            "last_fix_commit":"965352c8d96c9eae7a6867ff76b0db137d04b0b8",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/26\/2022, 07:05:35",
            "message":"Don't allow redirects on cover uploads, catch more addresses which resolve to localhost",
            "author":"Ozzie Isaacs",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'cps\/helper.py': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/janeczku\/calibre-web\/raw\/965352c8d96c9eae7a6867ff76b0db137d04b0b8\/cps%2Fhelper.py', 'patch': '@@ -734,10 +734,10 @@ def save_cover_from_url(url, book_path):\\n         if not cli.allow_localhost:\\n             # 127.0.x.x, localhost, [::1], [::ffff:7f00:1]\\n             ip = socket.getaddrinfo(urlparse(url).hostname, 0)[0][4][0]\\n-            if ip.startswith(\"127.\") or ip.startswith(\\'::ffff:7f\\') or ip == \"::1\":\\n+            if ip.startswith(\"127.\") or ip.startswith(\\'::ffff:7f\\') or ip == \"::1\" or ip == \"0.0.0.0\" or ip == \"::\":\\n                 log.error(\"Localhost was accessed for cover upload\")\\n                 return False, _(\"You are not allowed to access localhost for cover uploads\")\\n-        img = requests.get(url, timeout=(10, 200))      # ToDo: Error Handling\\n+        img = requests.get(url, timeout=(10, 200), allow_redirects=False)      # ToDo: Error Handling\\n         img.raise_for_status()\\n         return save_cover(img, book_path)\\n     except (socket.gaierror,'}}",
            "message_norm":"don't allow redirects on cover uploads, catch more addresses which resolve to localhost",
            "language":"en",
            "entities":null,
            "classification_level_1":"POORLY_DOCUMENTED",
            "classification_level_2":"REDUNDANT_MESSAGE",
            "list_files":"dict_keys(['cps\/helper.py'])",
            "num_files":1.0,
            "patch_content":"From 965352c8d96c9eae7a6867ff76b0db137d04b0b8 Mon Sep 17 00:00:00 2001\nFrom: Ozzie Isaacs <ozzie.fernandez.isaacs@googlemail.com>\nDate: Sat, 26 Feb 2022 08:05:35 +0100\nSubject: [PATCH] Don't allow redirects on cover uploads, catch more addresses\n which resolve to localhost\n\n---\n cps\/helper.py | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/cps\/helper.py b\/cps\/helper.py\nindex b5495930bd..c162f7eefc 100644\n--- a\/cps\/helper.py\n+++ b\/cps\/helper.py\n@@ -734,10 +734,10 @@ def save_cover_from_url(url, book_path):\n         if not cli.allow_localhost:\n             # 127.0.x.x, localhost, [::1], [::ffff:7f00:1]\n             ip = socket.getaddrinfo(urlparse(url).hostname, 0)[0][4][0]\n-            if ip.startswith(\"127.\") or ip.startswith('::ffff:7f') or ip == \"::1\":\n+            if ip.startswith(\"127.\") or ip.startswith('::ffff:7f') or ip == \"::1\" or ip == \"0.0.0.0\" or ip == \"::\":\n                 log.error(\"Localhost was accessed for cover upload\")\n                 return False, _(\"You are not allowed to access localhost for cover uploads\")\n-        img = requests.get(url, timeout=(10, 200))      # ToDo: Error Handling\n+        img = requests.get(url, timeout=(10, 200), allow_redirects=False)      # ToDo: Error Handling\n         img.raise_for_status()\n         return save_cover(img, book_path)\n     except (socket.gaierror,"
        },
        {
            "index":288,
            "vuln_id":"GHSA-vc2p-r46x-m3vx",
            "cwe_id":"{'CWE-77'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/lettre\/lettre\/pull\/508\/commits\/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b'}",
            "dataset":"osv",
            "summary":"Argument injection in lettre ### Impact\n\nAffected versions of lettre allowed argument injection to the sendmail command. It was possible, using forged to addresses, to pass arbitrary arguments to the sendmail executable.\n\nDepending on the implementation (original sendmail, postfix, exim, etc.) it could be possible in some cases to write email data into abritrary files (using sendmail's logging features).\n\n*NOTE*: This vulnerability only affects the sendmail transport. Others, including smtp, are not affected.\n\n### Fix\n\nThe flaw is corrected by modifying the executed command to stop parsing arguments before passing the destination addresses.\n\n### References\n\n* [RUSTSEC-2020-0069](https:\/\/rustsec.org\/advisories\/RUSTSEC-2020-0069.html)\n* [CVE-2020-28247](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2020-28247)",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/lettre\/lettre",
            "commit_href":"https:\/\/github.com\/lettre\/lettre\/pull\/508\/commits\/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b",
            "commit_sha":"bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b",
            "patch":"SINGLE",
            "chain_ord":"['bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b']",
            "before_first_fix_commit":"{'b187885e70af400d50e3200390306b9bd2109675'}",
            "last_fix_commit":"bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/11\/2020, 15:43:09",
            "message":"fix(transport-sendmail): Stop argument parsing before destination addresses",
            "author":"Alexis Mousset",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'src\/transport\/sendmail\/mod.rs': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/lettre\/lettre\/raw\/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b\/src%2Ftransport%2Fsendmail%2Fmod.rs', 'patch': '@@ -120,6 +120,7 @@ impl SendmailTransport {\\n         c.arg(\"-i\")\\n             .arg(\"-f\")\\n             .arg(envelope.from().map(|f| f.as_ref()).unwrap_or(\"\\\\\"\\\\\"\"))\\n+            .arg(\"--\")\\n             .args(envelope.to())\\n             .stdin(Stdio::piped())\\n             .stdout(Stdio::piped());\\n@@ -135,6 +136,7 @@ impl SendmailTransport {\\n         c.arg(\"-i\")\\n             .arg(\"-f\")\\n             .arg(envelope.from().map(|f| f.as_ref()).unwrap_or(\"\\\\\"\\\\\"\"))\\n+            .arg(\"--\")\\n             .args(envelope.to())\\n             .stdin(Stdio::piped())\\n             .stdout(Stdio::piped());\\n@@ -150,6 +152,7 @@ impl SendmailTransport {\\n         c.arg(\"-i\")\\n             .arg(\"-f\")\\n             .arg(envelope.from().map(|f| f.as_ref()).unwrap_or(\"\\\\\"\\\\\"\"))\\n+            .arg(\"--\")\\n             .args(envelope.to())\\n             .stdin(Stdio::piped())\\n             .stdout(Stdio::piped());'}}",
            "message_norm":"fix(transport-sendmail): stop argument parsing before destination addresses",
            "language":"fr",
            "entities":"[('fix(transport', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/transport\/sendmail\/mod.rs'])",
            "num_files":1.0,
            "patch_content":"From bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b Mon Sep 17 00:00:00 2001\nFrom: Alexis Mousset <alexis.mousset@rudder.io>\nDate: Wed, 11 Nov 2020 16:43:09 +0100\nSubject: [PATCH] fix(transport-sendmail): Stop argument parsing before\n destination addresses\n\n---\n src\/transport\/sendmail\/mod.rs | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/src\/transport\/sendmail\/mod.rs b\/src\/transport\/sendmail\/mod.rs\nindex 5a20f1b0a..c0a24ef03 100644\n--- a\/src\/transport\/sendmail\/mod.rs\n+++ b\/src\/transport\/sendmail\/mod.rs\n@@ -120,6 +120,7 @@ impl SendmailTransport {\n         c.arg(\"-i\")\n             .arg(\"-f\")\n             .arg(envelope.from().map(|f| f.as_ref()).unwrap_or(\"\\\"\\\"\"))\n+            .arg(\"--\")\n             .args(envelope.to())\n             .stdin(Stdio::piped())\n             .stdout(Stdio::piped());\n@@ -135,6 +136,7 @@ impl SendmailTransport {\n         c.arg(\"-i\")\n             .arg(\"-f\")\n             .arg(envelope.from().map(|f| f.as_ref()).unwrap_or(\"\\\"\\\"\"))\n+            .arg(\"--\")\n             .args(envelope.to())\n             .stdin(Stdio::piped())\n             .stdout(Stdio::piped());\n@@ -150,6 +152,7 @@ impl SendmailTransport {\n         c.arg(\"-i\")\n             .arg(\"-f\")\n             .arg(envelope.from().map(|f| f.as_ref()).unwrap_or(\"\\\"\\\"\"))\n+            .arg(\"--\")\n             .args(envelope.to())\n             .stdin(Stdio::piped())\n             .stdout(Stdio::piped());"
        },
        {
            "index":797,
            "vuln_id":"GHSA-5gqf-456p-4836",
            "cwe_id":"{'CWE-476'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f7cc8755ac6683131fdfa7a8a121f9d7a9dec6fb'}",
            "dataset":"osv",
            "summary":"Reference binding to nullptr in `SdcaOptimizer` ### Impact\nThe implementation of `tf.raw_ops.SdcaOptimizer` triggers undefined behavior due to dereferencing a null pointer:\n\n```python\nimport tensorflow as tf\n\nsparse_example_indices = [tf.constant((0), dtype=tf.int64), tf.constant((0), dtype=tf.int64)]\nsparse_feature_indices = [tf.constant([], shape=[0, 0, 0, 0], dtype=tf.int64), tf.constant((0), dtype=tf.int64)]\nsparse_feature_values = []\n\ndense_features = []\ndense_weights = []\n\nexample_weights = tf.constant((0.0), dtype=tf.float32)\nexample_labels = tf.constant((0.0), dtype=tf.float32)\n\nsparse_indices = [tf.constant((0), dtype=tf.int64), tf.constant((0), dtype=tf.int64)]\nsparse_weights = [tf.constant((0.0), dtype=tf.float32), tf.constant((0.0), dtype=tf.float32)]\n  \nexample_state_data = tf.constant([0.0, 0.0, 0.0, 0.0], shape=[1, 4], dtype=tf.float32)\n  \ntf.raw_ops.SdcaOptimizer(\n  sparse_example_indices=sparse_example_indices,\n  sparse_feature_indices=sparse_feature_indices,\n  sparse_feature_values=sparse_feature_values, dense_features=dense_features,\n  example_weights=example_weights, example_labels=example_labels, \n  sparse_indices=sparse_indices, sparse_weights=sparse_weights, \n  dense_weights=dense_weights, example_state_data=example_state_data,\n  loss_type=\"logistic_loss\", l1=0.0, l2=0.0, num_loss_partitions=1,\n  num_inner_iterations=1, adaptative=False)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/60a45c8b6192a4699f2e2709a2645a751d435cc3\/tensorflow\/core\/kernels\/sdca_internal.cc) does not validate that the user supplied arguments satisfy all [constraints expected by the op](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/raw_ops\/SdcaOptimizer).\n\n### Patches\nWe have patched the issue in GitHub commit [f7cc8755ac6683131fdfa7a8a121f9d7a9dec6fb](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f7cc8755ac6683131fdfa7a8a121f9d7a9dec6fb).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f7cc8755ac6683131fdfa7a8a121f9d7a9dec6fb",
            "commit_sha":"f7cc8755ac6683131fdfa7a8a121f9d7a9dec6fb",
            "patch":"SINGLE",
            "chain_ord":"['f7cc8755ac6683131fdfa7a8a121f9d7a9dec6fb']",
            "before_first_fix_commit":"{'60a45c8b6192a4699f2e2709a2645a751d435cc3'}",
            "last_fix_commit":"f7cc8755ac6683131fdfa7a8a121f9d7a9dec6fb",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/05\/2021, 18:40:50",
            "message":"Add several missing validations in SDCA\n\nPiperOrigin-RevId: 372172877\nChange-Id: Id366da962432e18dcbfac847d11e98488bebb70a",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 36, 'deletions': 0, 'total': 36}",
            "files":"{'tensorflow\/core\/kernels\/sdca_internal.cc': {'additions': 36, 'deletions': 0, 'changes': 36, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f7cc8755ac6683131fdfa7a8a121f9d7a9dec6fb\/tensorflow%2Fcore%2Fkernels%2Fsdca_internal.cc', 'patch': '@@ -99,17 +99,31 @@ Status ModelWeights::Initialize(OpKernelContext* const context) {\\n   OpInputList sparse_weights_inputs;\\n   TF_RETURN_IF_ERROR(\\n       context->input_list(\"sparse_weights\", &sparse_weights_inputs));\\n+  if (sparse_indices_inputs.size() != sparse_weights_inputs.size())\\n+    return errors::InvalidArgument(\\n+        \"sparse_indices and sparse_weights must have the same length, got \",\\n+        sparse_indices_inputs.size(), \" and \", sparse_weights_inputs.size());\\n   OpInputList dense_weights_inputs;\\n   TF_RETURN_IF_ERROR(\\n       context->input_list(\"dense_weights\", &dense_weights_inputs));\\n \\n   OpOutputList sparse_weights_outputs;\\n   TF_RETURN_IF_ERROR(context->output_list(\"out_delta_sparse_weights\",\\n                                           &sparse_weights_outputs));\\n+  if (sparse_weights_outputs.size() != sparse_weights_inputs.size())\\n+    return errors::InvalidArgument(\\n+        \"out_delta_sparse_weights and sparse_weights must have the same \"\\n+        \"length, got \",\\n+        sparse_weights_outputs.size(), \" and \", sparse_weights_inputs.size());\\n \\n   OpOutputList dense_weights_outputs;\\n   TF_RETURN_IF_ERROR(\\n       context->output_list(\"out_delta_dense_weights\", &dense_weights_outputs));\\n+  if (dense_weights_outputs.size() != dense_weights_inputs.size())\\n+    return errors::InvalidArgument(\\n+        \"out_delta_dense_weights and dense_weights must have the same length, \"\\n+        \"got \",\\n+        dense_weights_outputs.size(), \" and \", dense_weights_inputs.size());\\n \\n   for (int i = 0; i < sparse_weights_inputs.size(); ++i) {\\n     Tensor* delta_t;\\n@@ -327,13 +341,28 @@ Status Examples::Initialize(OpKernelContext* const context,\\n   OpInputList sparse_example_indices_inputs;\\n   TF_RETURN_IF_ERROR(context->input_list(\"sparse_example_indices\",\\n                                          &sparse_example_indices_inputs));\\n+  if (sparse_example_indices_inputs.size() != num_sparse_features)\\n+    return errors::InvalidArgument(\\n+        \"Expected \", num_sparse_features,\\n+        \" tensors in sparse_example_indices but got \",\\n+        sparse_example_indices_inputs.size());\\n   OpInputList sparse_feature_indices_inputs;\\n   TF_RETURN_IF_ERROR(context->input_list(\"sparse_feature_indices\",\\n                                          &sparse_feature_indices_inputs));\\n+  if (sparse_feature_indices_inputs.size() != num_sparse_features)\\n+    return errors::InvalidArgument(\\n+        \"Expected \", num_sparse_features,\\n+        \" tensors in sparse_feature_indices but got \",\\n+        sparse_feature_indices_inputs.size());\\n   OpInputList sparse_feature_values_inputs;\\n   if (num_sparse_features_with_values > 0) {\\n     TF_RETURN_IF_ERROR(context->input_list(\"sparse_feature_values\",\\n                                            &sparse_feature_values_inputs));\\n+    if (sparse_feature_values_inputs.size() != num_sparse_features_with_values)\\n+      return errors::InvalidArgument(\\n+          \"Expected \", num_sparse_features_with_values,\\n+          \" tensors in sparse_feature_values but got \",\\n+          sparse_feature_values_inputs.size());\\n   }\\n \\n   const Tensor* example_weights_t;\\n@@ -400,6 +429,13 @@ Status Examples::CreateSparseFeatureRepresentation(\\n           sparse_example_indices_inputs[i].template flat<int64>();\\n       auto feature_indices =\\n           sparse_feature_indices_inputs[i].template flat<int64>();\\n+      if (example_indices.size() != feature_indices.size()) {\\n+        mutex_lock l(mu);\\n+        result = errors::InvalidArgument(\\n+            \"Found mismatched example_indices and feature_indices [\",\\n+            example_indices, \"] vs [\", feature_indices, \"]\");\\n+        return;\\n+      }\\n \\n       \/\/ Parse features for each example. Features for a particular example\\n       \/\/ are at the offsets (start_id, end_id]'}}",
            "message_norm":"add several missing validations in sdca\n\npiperorigin-revid: 372172877\nchange-id: id366da962432e18dcbfac847d11e98488bebb70a",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('missing validations', 'SECWORD', ''), ('372172877', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sdca_internal.cc'])",
            "num_files":1.0,
            "patch_content":"From f7cc8755ac6683131fdfa7a8a121f9d7a9dec6fb Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Wed, 5 May 2021 11:40:50 -0700\nSubject: [PATCH] Add several missing validations in SDCA\n\nPiperOrigin-RevId: 372172877\nChange-Id: Id366da962432e18dcbfac847d11e98488bebb70a\n---\n tensorflow\/core\/kernels\/sdca_internal.cc | 36 ++++++++++++++++++++++++\n 1 file changed, 36 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/sdca_internal.cc b\/tensorflow\/core\/kernels\/sdca_internal.cc\nindex cbc754af0e9bb1..11a3be8bf46a76 100644\n--- a\/tensorflow\/core\/kernels\/sdca_internal.cc\n+++ b\/tensorflow\/core\/kernels\/sdca_internal.cc\n@@ -99,6 +99,10 @@ Status ModelWeights::Initialize(OpKernelContext* const context) {\n   OpInputList sparse_weights_inputs;\n   TF_RETURN_IF_ERROR(\n       context->input_list(\"sparse_weights\", &sparse_weights_inputs));\n+  if (sparse_indices_inputs.size() != sparse_weights_inputs.size())\n+    return errors::InvalidArgument(\n+        \"sparse_indices and sparse_weights must have the same length, got \",\n+        sparse_indices_inputs.size(), \" and \", sparse_weights_inputs.size());\n   OpInputList dense_weights_inputs;\n   TF_RETURN_IF_ERROR(\n       context->input_list(\"dense_weights\", &dense_weights_inputs));\n@@ -106,10 +110,20 @@ Status ModelWeights::Initialize(OpKernelContext* const context) {\n   OpOutputList sparse_weights_outputs;\n   TF_RETURN_IF_ERROR(context->output_list(\"out_delta_sparse_weights\",\n                                           &sparse_weights_outputs));\n+  if (sparse_weights_outputs.size() != sparse_weights_inputs.size())\n+    return errors::InvalidArgument(\n+        \"out_delta_sparse_weights and sparse_weights must have the same \"\n+        \"length, got \",\n+        sparse_weights_outputs.size(), \" and \", sparse_weights_inputs.size());\n \n   OpOutputList dense_weights_outputs;\n   TF_RETURN_IF_ERROR(\n       context->output_list(\"out_delta_dense_weights\", &dense_weights_outputs));\n+  if (dense_weights_outputs.size() != dense_weights_inputs.size())\n+    return errors::InvalidArgument(\n+        \"out_delta_dense_weights and dense_weights must have the same length, \"\n+        \"got \",\n+        dense_weights_outputs.size(), \" and \", dense_weights_inputs.size());\n \n   for (int i = 0; i < sparse_weights_inputs.size(); ++i) {\n     Tensor* delta_t;\n@@ -327,13 +341,28 @@ Status Examples::Initialize(OpKernelContext* const context,\n   OpInputList sparse_example_indices_inputs;\n   TF_RETURN_IF_ERROR(context->input_list(\"sparse_example_indices\",\n                                          &sparse_example_indices_inputs));\n+  if (sparse_example_indices_inputs.size() != num_sparse_features)\n+    return errors::InvalidArgument(\n+        \"Expected \", num_sparse_features,\n+        \" tensors in sparse_example_indices but got \",\n+        sparse_example_indices_inputs.size());\n   OpInputList sparse_feature_indices_inputs;\n   TF_RETURN_IF_ERROR(context->input_list(\"sparse_feature_indices\",\n                                          &sparse_feature_indices_inputs));\n+  if (sparse_feature_indices_inputs.size() != num_sparse_features)\n+    return errors::InvalidArgument(\n+        \"Expected \", num_sparse_features,\n+        \" tensors in sparse_feature_indices but got \",\n+        sparse_feature_indices_inputs.size());\n   OpInputList sparse_feature_values_inputs;\n   if (num_sparse_features_with_values > 0) {\n     TF_RETURN_IF_ERROR(context->input_list(\"sparse_feature_values\",\n                                            &sparse_feature_values_inputs));\n+    if (sparse_feature_values_inputs.size() != num_sparse_features_with_values)\n+      return errors::InvalidArgument(\n+          \"Expected \", num_sparse_features_with_values,\n+          \" tensors in sparse_feature_values but got \",\n+          sparse_feature_values_inputs.size());\n   }\n \n   const Tensor* example_weights_t;\n@@ -400,6 +429,13 @@ Status Examples::CreateSparseFeatureRepresentation(\n           sparse_example_indices_inputs[i].template flat<int64>();\n       auto feature_indices =\n           sparse_feature_indices_inputs[i].template flat<int64>();\n+      if (example_indices.size() != feature_indices.size()) {\n+        mutex_lock l(mu);\n+        result = errors::InvalidArgument(\n+            \"Found mismatched example_indices and feature_indices [\",\n+            example_indices, \"] vs [\", feature_indices, \"]\");\n+        return;\n+      }\n \n       \/\/ Parse features for each example. Features for a particular example\n       \/\/ are at the offsets (start_id, end_id]"
        },
        {
            "index":950,
            "vuln_id":"GHSA-257v-vj4p-3w2h",
            "cwe_id":"{'CWE-770'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/Qix-\/color-string\/commit\/0789e21284c33d89ebc4ab4ca6f759b9375ac9d3'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service (ReDOS) In the npm package `color-string`, there is a  ReDos (Regular Expression Denial of Service) vulnerability regarding an exponential time complexity for\nlinearly increasing input lengths for `hwb()` color strings.\n\nStrings reaching more than 5000 characters would see several\nmilliseconds of processing time; strings reaching more than\n50,000 characters began seeing 1500ms (1.5s) of processing time.\n\nThe cause was due to a the regular expression that parses\nhwb() strings - specifically, the hue value - where\nthe integer portion of the hue value used a 0-or-more quantifier\nshortly thereafter followed by a 1-or-more quantifier.\n\nThis caused excessive backtracking and a cartesian scan,\nresulting in exponential time complexity given a linear\nincrease in input length.",
            "published_date":"2021-06-22",
            "chain_len":1,
            "project":"https:\/\/github.com\/Qix-\/color-string",
            "commit_href":"https:\/\/github.com\/Qix-\/color-string\/commit\/0789e21284c33d89ebc4ab4ca6f759b9375ac9d3",
            "commit_sha":"0789e21284c33d89ebc4ab4ca6f759b9375ac9d3",
            "patch":"SINGLE",
            "chain_ord":"['0789e21284c33d89ebc4ab4ca6f759b9375ac9d3']",
            "before_first_fix_commit":"{'60f3f66477a298589288e3df6e895f88e6cd8e8e'}",
            "last_fix_commit":"0789e21284c33d89ebc4ab4ca6f759b9375ac9d3",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/05\/2021, 17:48:41",
            "message":"fix ReDos in hwb() parser (low-severity)\n\nDiscovered by Yeting Li, c\/o Colin Ife via Snyk.io.\n\nA ReDos (Regular Expression Denial of Service) vulnerability\nwas responsibly disclosed to me via email by Colin on\nMar 5 2021 regarding an exponential time complexity for\nlinearly increasing input lengths for `hwb()` color strings.\n\nStrings reaching more than 5000 characters would see several\nmilliseconds of processing time; strings reaching more than\n50,000 characters began seeing 1500ms (1.5s) of processing time.\n\nThe cause was due to a the regular expression that parses\nhwb() strings - specifically, the hue value - where\nthe integer portion of the hue value used a 0-or-more quantifier\nshortly thereafter followed by a 1-or-more quantifier.\n\nThis caused excessive backtracking and a cartesian scan,\nresulting in exponential time complexity given a linear\nincrease in input length.\n\nThank you Yeting Li and Colin Ife for bringing this to my\nattention in a secure, responsible and professional manner.\n\nA CVE will not be assigned for this vulnerability.",
            "author":"Josh Junon",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'index.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Qix-\/color-string\/raw\/0789e21284c33d89ebc4ab4ca6f759b9375ac9d3\/index.js', 'patch': '@@ -129,7 +129,7 @@ cs.get.hsl = function (string) {\\n \\t\\treturn null;\\n \\t}\\n \\n-\\tvar hsl = \/^hsla?\\\\(\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+)(?:deg)?\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$\/;\\n+\\tvar hsl = \/^hsla?\\\\(\\\\s*([+-]?(?:\\\\d{0,3}\\\\.)?\\\\d+)(?:deg)?\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$\/;\\n \\tvar match = string.match(hsl);\\n \\n \\tif (match) {\\n@@ -150,7 +150,7 @@ cs.get.hwb = function (string) {\\n \\t\\treturn null;\\n \\t}\\n \\n-\\tvar hwb = \/^hwb\\\\(\\\\s*([+-]?\\\\d*[\\\\.]?\\\\d+)(?:deg)?\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$\/;\\n+\\tvar hwb = \/^hwb\\\\(\\\\s*([+-]?\\\\d{0,3}(?:\\\\.\\\\d+)?)(?:deg)?\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$\/;\\n \\tvar match = string.match(hwb);\\n \\n \\tif (match) {'}}",
            "message_norm":"fix redos in hwb() parser (low-severity)\n\ndiscovered by yeting li, c\/o colin ife via snyk.io.\n\na redos (regular expression denial of service) vulnerability\nwas responsibly disclosed to me via email by colin on\nmar 5 2021 regarding an exponential time complexity for\nlinearly increasing input lengths for `hwb()` color strings.\n\nstrings reaching more than 5000 characters would see several\nmilliseconds of processing time; strings reaching more than\n50,000 characters began seeing 1500ms (1.5s) of processing time.\n\nthe cause was due to a the regular expression that parses\nhwb() strings - specifically, the hue value - where\nthe integer portion of the hue value used a 0-or-more quantifier\nshortly thereafter followed by a 1-or-more quantifier.\n\nthis caused excessive backtracking and a cartesian scan,\nresulting in exponential time complexity given a linear\nincrease in input length.\n\nthank you yeting li and colin ife for bringing this to my\nattention in a secure, responsible and professional manner.\n\na cve will not be assigned for this vulnerability.",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('low', 'SEVERITY', ''), ('redos', 'SECWORD', ''), ('denial of service', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('secure', 'SECWORD', ''), ('cve', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0,
            "patch_content":"From 0789e21284c33d89ebc4ab4ca6f759b9375ac9d3 Mon Sep 17 00:00:00 2001\nFrom: Josh Junon <junon@wavetilt.com>\nDate: Fri, 5 Mar 2021 18:48:41 +0100\nSubject: [PATCH] fix ReDos in hwb() parser (low-severity)\n\nDiscovered by Yeting Li, c\/o Colin Ife via Snyk.io.\n\nA ReDos (Regular Expression Denial of Service) vulnerability\nwas responsibly disclosed to me via email by Colin on\nMar 5 2021 regarding an exponential time complexity for\nlinearly increasing input lengths for `hwb()` color strings.\n\nStrings reaching more than 5000 characters would see several\nmilliseconds of processing time; strings reaching more than\n50,000 characters began seeing 1500ms (1.5s) of processing time.\n\nThe cause was due to a the regular expression that parses\nhwb() strings - specifically, the hue value - where\nthe integer portion of the hue value used a 0-or-more quantifier\nshortly thereafter followed by a 1-or-more quantifier.\n\nThis caused excessive backtracking and a cartesian scan,\nresulting in exponential time complexity given a linear\nincrease in input length.\n\nThank you Yeting Li and Colin Ife for bringing this to my\nattention in a secure, responsible and professional manner.\n\nA CVE will not be assigned for this vulnerability.\n---\n index.js | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/index.js b\/index.js\nindex 7098c4c..25fba85 100644\n--- a\/index.js\n+++ b\/index.js\n@@ -129,7 +129,7 @@ cs.get.hsl = function (string) {\n \t\treturn null;\n \t}\n \n-\tvar hsl = \/^hsla?\\(\\s*([+-]?(?:\\d*\\.)?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$\/;\n+\tvar hsl = \/^hsla?\\(\\s*([+-]?(?:\\d{0,3}\\.)?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$\/;\n \tvar match = string.match(hsl);\n \n \tif (match) {\n@@ -150,7 +150,7 @@ cs.get.hwb = function (string) {\n \t\treturn null;\n \t}\n \n-\tvar hwb = \/^hwb\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$\/;\n+\tvar hwb = \/^hwb\\(\\s*([+-]?\\d{0,3}(?:\\.\\d+)?)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$\/;\n \tvar match = string.match(hwb);\n \n \tif (match) {"
        },
        {
            "index":499,
            "vuln_id":"GHSA-3fw8-66wf-pr7m",
            "cwe_id":"{'CWE-79'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/senchalabs\/connect\/commit\/126187c4e12162e231b87350740045e5bb06e93a', 'https:\/\/github.com\/senchalabs\/connect\/commit\/277e5aad6a95d00f55571a9a0e11f2fa190d8135'}",
            "dataset":"osv",
            "summary":"methodOverride Middleware Reflected Cross-Site Scripting in connect Connect is a stack of middleware that is executed in order in each request.\n\nThe \"methodOverride\" middleware allows the http post to override the method of the request with the value of the \"_method\" post key or with the header \"x-http-method-override\".\n\nBecause the user post input was not checked, req.method could contain any kind of value. Because the req.method did not match any common method VERB, connect answered with a 404 page containing the \"Cannot `[method]` `[url]`\" content. The method was not properly encoded for output in the browser.\n\n\n###Example:\n```\n~ curl \"localhost:3000\" -d \"_method=<script src=http:\/\/nodesecurity.io\/xss.js><\/script>\"\nCannot <SCRIPT SRC=HTTP:\/\/NODESECURITY.IO\/XSS.JS><\/SCRIPT> \/\n```\n\n## Recommendation\n\nUpdate to the newest version of Connect or disable methodOverride. It is not possible to avoid the vulnerability if you have enabled this middleware in the top of your stack.",
            "published_date":"2020-08-31",
            "chain_len":2,
            "project":"https:\/\/github.com\/senchalabs\/connect",
            "commit_href":"https:\/\/github.com\/senchalabs\/connect\/commit\/277e5aad6a95d00f55571a9a0e11f2fa190d8135",
            "commit_sha":"277e5aad6a95d00f55571a9a0e11f2fa190d8135",
            "patch":"MULTI",
            "chain_ord":"['277e5aad6a95d00f55571a9a0e11f2fa190d8135', '126187c4e12162e231b87350740045e5bb06e93a']",
            "before_first_fix_commit":"{'b0df35bcf2e1b4e487a17889a8440ecf254ac3b4'}",
            "last_fix_commit":"126187c4e12162e231b87350740045e5bb06e93a",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/27\/2013, 15:31:23",
            "message":"fix: escape req.method in 404 response",
            "author":"TJ Holowaychuk",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'lib\/proto.js': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/senchalabs\/connect\/raw\/277e5aad6a95d00f55571a9a0e11f2fa190d8135\/lib%2Fproto.js', 'patch': \"@@ -152,7 +152,7 @@ app.handle = function(req, res, out) {\\n         res.statusCode = 404;\\n         res.setHeader('Content-Type', 'text\/plain');\\n         if ('HEAD' == req.method) return res.end();\\n-        res.end('Cannot ' + req.method + ' ' + utils.escape(req.originalUrl));\\n+        res.end('Cannot ' + utils.escape(req.method) + ' ' + utils.escape(req.originalUrl));\\n       }\\n       return;\\n     }\\n@@ -202,7 +202,7 @@ app.handle = function(req, res, out) {\\n  * Listen for connections.\\n  *\\n  * This method takes the same arguments\\n- * as node's `http.Server#listen()`.  \\n+ * as node's `http.Server#listen()`.\\n  *\\n  * HTTP and HTTPS:\\n  *\\n@@ -214,9 +214,9 @@ app.handle = function(req, res, out) {\\n  *      var connect = require('connect')\\n  *        , http = require('http')\\n  *        , https = require('https');\\n- *      \\n+ *\\n  *      var app = connect();\\n- *      \\n+ *\\n  *      http.createServer(app).listen(80);\\n  *      https.createServer(options, app).listen(443);\\n  *\"}}",
            "message_norm":"fix: escape req.method in 404 response",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/proto.js'])",
            "num_files":1.0,
            "patch_content":"From 277e5aad6a95d00f55571a9a0e11f2fa190d8135 Mon Sep 17 00:00:00 2001\nFrom: TJ Holowaychuk <tj@vision-media.ca>\nDate: Thu, 27 Jun 2013 08:31:23 -0700\nSubject: [PATCH] fix: escape req.method in 404 response\n\n---\n lib\/proto.js | 8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ndiff --git a\/lib\/proto.js b\/lib\/proto.js\nindex b304cf72f..7a8f3098f 100644\n--- a\/lib\/proto.js\n+++ b\/lib\/proto.js\n@@ -152,7 +152,7 @@ app.handle = function(req, res, out) {\n         res.statusCode = 404;\n         res.setHeader('Content-Type', 'text\/plain');\n         if ('HEAD' == req.method) return res.end();\n-        res.end('Cannot ' + req.method + ' ' + utils.escape(req.originalUrl));\n+        res.end('Cannot ' + utils.escape(req.method) + ' ' + utils.escape(req.originalUrl));\n       }\n       return;\n     }\n@@ -202,7 +202,7 @@ app.handle = function(req, res, out) {\n  * Listen for connections.\n  *\n  * This method takes the same arguments\n- * as node's `http.Server#listen()`.  \n+ * as node's `http.Server#listen()`.\n  *\n  * HTTP and HTTPS:\n  *\n@@ -214,9 +214,9 @@ app.handle = function(req, res, out) {\n  *      var connect = require('connect')\n  *        , http = require('http')\n  *        , https = require('https');\n- *      \n+ *\n  *      var app = connect();\n- *      \n+ *\n  *      http.createServer(app).listen(80);\n  *      https.createServer(options, app).listen(443);\n  *"
        },
        {
            "index":11,
            "vuln_id":"GHSA-v3mr-gp7j-pw5w",
            "cwe_id":"{'CWE-89'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/terminal42\/contao-tablelookupwizard\/commit\/a5e723a28f110b7df8ffc4175cef9b061d3cc717'}",
            "dataset":"osv",
            "summary":"Possible SQL injection in tablelookupwizard Contao Extension ### Impact\nThe currently selected widget values were not correctly sanitized before passing it to the database, leading to an SQL injection possibility.\n\n### Patches\nThe issue has been patched in `tablelookupwizard` version 3.3.5 and version 4.0.0.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in https:\/\/github.com\/terminal42\/contao-tablelookupwizard\n* Email us at [info@terminal42.ch](mailto:info@terminal42.ch)",
            "published_date":"2022-02-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/terminal42\/contao-tablelookupwizard",
            "commit_href":"https:\/\/github.com\/terminal42\/contao-tablelookupwizard\/commit\/a5e723a28f110b7df8ffc4175cef9b061d3cc717",
            "commit_sha":"a5e723a28f110b7df8ffc4175cef9b061d3cc717",
            "patch":"SINGLE",
            "chain_ord":"['a5e723a28f110b7df8ffc4175cef9b061d3cc717']",
            "before_first_fix_commit":"{'ae6c82f10b0f1e87226079ebaa78ac630b05279a'}",
            "last_fix_commit":"a5e723a28f110b7df8ffc4175cef9b061d3cc717",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/04\/2022, 07:13:15",
            "message":"Fixed SQL query for current field value",
            "author":"Andreas Schempp",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'TableLookupWizard.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/terminal42\/contao-tablelookupwizard\/raw\/a5e723a28f110b7df8ffc4175cef9b061d3cc717\/TableLookupWizard.php', 'patch': '@@ -407,9 +407,9 @@ protected function prepareWhere()\\n \\n         \/\/ Filter those that have already been chosen\\n         if (\\'checkbox\\' === $this->fieldType && \\\\is_array($varData) && !empty($varData)) {\\n-            $this->arrWhereProcedure[] = $this->foreignTable.\\'.id NOT IN (\\'.implode(\\',\\', $varData).\\')\\';\\n+            $this->arrWhereProcedure[] = $this->foreignTable.\\'.id NOT IN (\\'.implode(\\',\\', array_map(\\'intval\\', $varData)).\\')\\';\\n         } elseif (\\'radio\\' === $this->fieldType && \\'\\' !== $varData) {\\n-            $this->arrWhereProcedure[] = \"{$this->foreignTable}.id!=\\'$varData\\'\";\\n+            $this->arrWhereProcedure[] = $this->foreignTable.\\'.id!=\\'.(int) $varData;\\n         }\\n \\n         \/\/ If custom WHERE is set, add it to the statement'}}",
            "message_norm":"fixed sql query for current field value",
            "language":"ca",
            "entities":"[('fixed', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['TableLookupWizard.php'])",
            "num_files":1.0,
            "patch_content":"From a5e723a28f110b7df8ffc4175cef9b061d3cc717 Mon Sep 17 00:00:00 2001\nFrom: Andreas Schempp <andreas.schempp@terminal42.ch>\nDate: Fri, 4 Feb 2022 08:13:15 +0100\nSubject: [PATCH] Fixed SQL query for current field value\n\n---\n TableLookupWizard.php | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/TableLookupWizard.php b\/TableLookupWizard.php\nindex 8b1529d..92aa645 100644\n--- a\/TableLookupWizard.php\n+++ b\/TableLookupWizard.php\n@@ -407,9 +407,9 @@ protected function prepareWhere()\n \n         \/\/ Filter those that have already been chosen\n         if ('checkbox' === $this->fieldType && \\is_array($varData) && !empty($varData)) {\n-            $this->arrWhereProcedure[] = $this->foreignTable.'.id NOT IN ('.implode(',', $varData).')';\n+            $this->arrWhereProcedure[] = $this->foreignTable.'.id NOT IN ('.implode(',', array_map('intval', $varData)).')';\n         } elseif ('radio' === $this->fieldType && '' !== $varData) {\n-            $this->arrWhereProcedure[] = \"{$this->foreignTable}.id!='$varData'\";\n+            $this->arrWhereProcedure[] = $this->foreignTable.'.id!='.(int) $varData;\n         }\n \n         \/\/ If custom WHERE is set, add it to the statement"
        },
        {
            "index":591,
            "vuln_id":"GHSA-2xgj-xhgf-ggjv",
            "cwe_id":"{'CWE-120'}",
            "score":3.6,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ba6822bd7b7324ba201a28b2f278c29a98edbef2', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0ab290774f91a23bebe30a358fde4e53ab4876a0'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `BandedTriangularSolve` ### Impact\nAn attacker can trigger a heap buffer overflow in Eigen implementation of `tf.raw_ops.BandedTriangularSolve`:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n  \nmatrix_array = np.array([])\nmatrix_tensor = tf.convert_to_tensor(np.reshape(matrix_array,(0,1)),dtype=tf.float32)\nrhs_array = np.array([1,1])\nrhs_tensor = tf.convert_to_tensor(np.reshape(rhs_array,(1,2)),dtype=tf.float32)\ntf.raw_ops.BandedTriangularSolve(matrix=matrix_tensor,rhs=rhs_tensor)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/eccb7ec454e6617738554a255d77f08e60ee0808\/tensorflow\/core\/kernels\/linalg\/banded_triangular_solve_op.cc#L269-L278) calls `ValidateInputTensors` for input validation but fails to validate that the two tensors are not empty:\n  \n```cc\nvoid ValidateInputTensors(OpKernelContext* ctx, const Tensor& in0, const Tensor& in1) {\n  OP_REQUIRES(\n      ctx, in0.dims() >= 2, \n      errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in0.dims()));\n\n  OP_REQUIRES(\n      ctx, in1.dims() >= 2,\n      errors::InvalidArgument(\"In[1] ndims must be >= 2: \", in1.dims()));\n}\n``` \n\nFurthermore, since `OP_REQUIRES` macro only stops execution of current function after setting `ctx->status()` to a non-OK value, callers of helper functions that use `OP_REQUIRES` must check value of `ctx->status()` before continuing. This doesn't happen [in this op's implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/eccb7ec454e6617738554a255d77f08e60ee0808\/tensorflow\/core\/kernels\/linalg\/banded_triangular_solve_op.cc#L219), hence the validation that is present is also not effective.\n\n### Patches\nWe have patched the issue in GitHub commit [ba6822bd7b7324ba201a28b2f278c29a98edbef2](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ba6822bd7b7324ba201a28b2f278c29a98edbef2) followed by GitHub commit [0ab290774f91a23bebe30a358fde4e53ab4876a0](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0ab290774f91a23bebe30a358fde4e53ab4876a0).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ye Zhang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ba6822bd7b7324ba201a28b2f278c29a98edbef2",
            "commit_sha":"ba6822bd7b7324ba201a28b2f278c29a98edbef2",
            "patch":"MULTI",
            "chain_ord":"['ba6822bd7b7324ba201a28b2f278c29a98edbef2', '0ab290774f91a23bebe30a358fde4e53ab4876a0']",
            "before_first_fix_commit":"{'327ef310be67923824814e85e13007e9699f4e0d'}",
            "last_fix_commit":"0ab290774f91a23bebe30a358fde4e53ab4876a0",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 23:06:54",
            "message":"Fix OOB issue with `tf.raw_ops.SparseSparseMinimum`.\n\nPiperOrigin-RevId: 371005787\nChange-Id: Ib686ccc077836e8b980b8b5a03936d36a8ecaf71",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/sparse_sparse_binary_op_shared.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ba6822bd7b7324ba201a28b2f278c29a98edbef2\/tensorflow%2Fcore%2Fkernels%2Fsparse_sparse_binary_op_shared.cc', 'patch': '@@ -180,6 +180,11 @@ class SparseSparseBinaryOpShared : public OpKernel {\\n                                           \" for dimension \", i));\\n     }\\n \\n+    OP_REQUIRES(\\n+        ctx, a_indices_t->dim_size(1) == b_indices_t->dim_size(1),\\n+        errors::InvalidArgument(\\n+            \"Indices\\' dimensions do not match: got \", a_indices_t->dim_size(1),\\n+            \" and \", b_indices_t->dim_size(1), \" for the second dimension.\"));\\n     const int num_dims = a_indices_t->dim_size(1);\\n     const auto a_indices_mat = a_indices_t->matrix<int64>();\\n     const auto b_indices_mat = b_indices_t->matrix<int64>();'}}",
            "message_norm":"fix oob issue with `tf.raw_ops.sparsesparseminimum`.\n\npiperorigin-revid: 371005787\nchange-id: ib686ccc077836e8b980b8b5a03936d36a8ecaf71",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('oob', 'SECWORD', ''), ('issue', 'FLAW', ''), ('371005787', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_sparse_binary_op_shared.cc'])",
            "num_files":1.0,
            "patch_content":"From ba6822bd7b7324ba201a28b2f278c29a98edbef2 Mon Sep 17 00:00:00 2001\nFrom: Amit Patankar <amitpatankar@google.com>\nDate: Wed, 28 Apr 2021 16:06:54 -0700\nSubject: [PATCH] Fix OOB issue with `tf.raw_ops.SparseSparseMinimum`.\n\nPiperOrigin-RevId: 371005787\nChange-Id: Ib686ccc077836e8b980b8b5a03936d36a8ecaf71\n---\n tensorflow\/core\/kernels\/sparse_sparse_binary_op_shared.cc | 5 +++++\n 1 file changed, 5 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/sparse_sparse_binary_op_shared.cc b\/tensorflow\/core\/kernels\/sparse_sparse_binary_op_shared.cc\nindex 43dc9ae70cd627..9fe42e05d879ee 100644\n--- a\/tensorflow\/core\/kernels\/sparse_sparse_binary_op_shared.cc\n+++ b\/tensorflow\/core\/kernels\/sparse_sparse_binary_op_shared.cc\n@@ -180,6 +180,11 @@ class SparseSparseBinaryOpShared : public OpKernel {\n                                           \" for dimension \", i));\n     }\n \n+    OP_REQUIRES(\n+        ctx, a_indices_t->dim_size(1) == b_indices_t->dim_size(1),\n+        errors::InvalidArgument(\n+            \"Indices' dimensions do not match: got \", a_indices_t->dim_size(1),\n+            \" and \", b_indices_t->dim_size(1), \" for the second dimension.\"));\n     const int num_dims = a_indices_t->dim_size(1);\n     const auto a_indices_mat = a_indices_t->matrix<int64>();\n     const auto b_indices_mat = b_indices_t->matrix<int64>();"
        },
        {
            "index":317,
            "vuln_id":"GHSA-hp4c-x6r7-6555",
            "cwe_id":"{'CWE-369'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d9204be9f49520cdaaeb2541d1dc5187b23f31d9'}",
            "dataset":"osv",
            "summary":"Floating point exception in `SparseDenseCwiseDiv` ### Impact\nThe implementation of `tf.raw_ops.SparseDenseCwiseDiv` is vulnerable to a division by 0 error:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.raw_ops.SparseDenseCwiseDiv( \n  sp_indices=np.array([[4]]),\n  sp_values=np.array([-400]),\n  sp_shape=np.array([647.]),\n  dense=np.array([0]))\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1bc56203f21a5a4995311825ffaba7a670d7747\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc#L56) uses a common class for all binary operations but fails to treat the division by 0 case separately.\n\n### Patches\nWe have patched the issue in GitHub commit [d9204be9f49520cdaaeb2541d1dc5187b23f31d9](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d9204be9f49520cdaaeb2541d1dc5187b23f31d9).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d9204be9f49520cdaaeb2541d1dc5187b23f31d9",
            "commit_sha":"d9204be9f49520cdaaeb2541d1dc5187b23f31d9",
            "patch":"SINGLE",
            "chain_ord":"['d9204be9f49520cdaaeb2541d1dc5187b23f31d9']",
            "before_first_fix_commit":"{'a95743ddba81449601bc32f249d979a944502de6'}",
            "last_fix_commit":"d9204be9f49520cdaaeb2541d1dc5187b23f31d9",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/10\/2021, 01:27:22",
            "message":"Disallow division by zero FPE in tf.raw_ops.SparseDenseCwiseDiv\n\nPiperOrigin-RevId: 383959809\nChange-Id: Ibe88458bdf66a686c93e354b8255dec94285c560",
            "author":"Laura Pak",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 1, 'total': 11}",
            "files":"{'tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc': {'additions': 10, 'deletions': 1, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/d9204be9f49520cdaaeb2541d1dc5187b23f31d9\/tensorflow%2Fcore%2Fkernels%2Fsparse_dense_binary_op_shared.cc', 'patch': '@@ -114,7 +114,10 @@ class SparseDenseBinaryOpShared : public OpKernel {\\n     OP_REQUIRES_OK(\\n         ctx, ctx->allocate_temp(DataTypeToEnum<T>::value, TensorShape({nnz}),\\n                                 &dense_gathered));\\n-\\n+    bool op_is_div = false;\\n+    if (absl::StrContains(ctx->op_kernel().type_string_view(), \"Div\")) {\\n+      op_is_div = true;\\n+    }\\n     \/\/ Pulls relevant entries from the dense side, with reshape and broadcasting\\n     \/\/ *of the dense side* taken into account.  Use a TensorRef to avoid blowing\\n     \/\/ up memory.\\n@@ -143,6 +146,12 @@ class SparseDenseBinaryOpShared : public OpKernel {\\n           errors::InvalidArgument(\"Provided indices are out-of-bounds w.r.t. \" \\\\\\n                                   \"dense side with broadcasted shape\"));       \\\\\\n       dense_gathered_flat(i) = rhs_ref.coeff(idx);                             \\\\\\n+      if (op_is_div) {                                                         \\\\\\n+        OP_REQUIRES(ctx, dense_gathered_flat(i) != 0,                          \\\\\\n+                    errors::InvalidArgument(                                   \\\\\\n+                        \"SparseDenseCwiseDiv cannot divide by zero,\"           \\\\\\n+                        \"but input dense tensor contains zero \"));             \\\\\\n+      }                                                                        \\\\\\n     }                                                                          \\\\\\n     break;                                                                     \\\\\\n   }'}}",
            "message_norm":"disallow division by zero fpe in tf.raw_ops.sparsedensecwisediv\n\npiperorigin-revid: 383959809\nchange-id: ibe88458bdf66a686c93e354b8255dec94285c560",
            "language":"en",
            "entities":"[('division by zero', 'SECWORD', ''), ('fpe', 'SECWORD', ''), ('383959809', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc'])",
            "num_files":1.0,
            "patch_content":"From d9204be9f49520cdaaeb2541d1dc5187b23f31d9 Mon Sep 17 00:00:00 2001\nFrom: Laura Pak <lpak@google.com>\nDate: Fri, 9 Jul 2021 18:27:22 -0700\nSubject: [PATCH] Disallow division by zero FPE in\n tf.raw_ops.SparseDenseCwiseDiv\n\nPiperOrigin-RevId: 383959809\nChange-Id: Ibe88458bdf66a686c93e354b8255dec94285c560\n---\n ...\/core\/kernels\/sparse_dense_binary_op_shared.cc     | 11 ++++++++++-\n 1 file changed, 10 insertions(+), 1 deletion(-)\n\ndiff --git a\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc b\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc\nindex dac4a3d3e6bfcd..dda05dbc3b8cb2 100644\n--- a\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc\n+++ b\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc\n@@ -114,7 +114,10 @@ class SparseDenseBinaryOpShared : public OpKernel {\n     OP_REQUIRES_OK(\n         ctx, ctx->allocate_temp(DataTypeToEnum<T>::value, TensorShape({nnz}),\n                                 &dense_gathered));\n-\n+    bool op_is_div = false;\n+    if (absl::StrContains(ctx->op_kernel().type_string_view(), \"Div\")) {\n+      op_is_div = true;\n+    }\n     \/\/ Pulls relevant entries from the dense side, with reshape and broadcasting\n     \/\/ *of the dense side* taken into account.  Use a TensorRef to avoid blowing\n     \/\/ up memory.\n@@ -143,6 +146,12 @@ class SparseDenseBinaryOpShared : public OpKernel {\n           errors::InvalidArgument(\"Provided indices are out-of-bounds w.r.t. \" \\\n                                   \"dense side with broadcasted shape\"));       \\\n       dense_gathered_flat(i) = rhs_ref.coeff(idx);                             \\\n+      if (op_is_div) {                                                         \\\n+        OP_REQUIRES(ctx, dense_gathered_flat(i) != 0,                          \\\n+                    errors::InvalidArgument(                                   \\\n+                        \"SparseDenseCwiseDiv cannot divide by zero,\"           \\\n+                        \"but input dense tensor contains zero \"));             \\\n+      }                                                                        \\\n     }                                                                          \\\n     break;                                                                     \\\n   }"
        },
        {
            "index":672,
            "vuln_id":"GHSA-w37f-pvvx-wcwm",
            "cwe_id":"{'CWE-682'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/moodle\/moodle\/commit\/59b5858da200f63ecb59a9113af2b99ef1496fe5'}",
            "dataset":"osv",
            "summary":"Incorrect Calculation in moodle A flaw was found in moodle where logic used to count failed login attempts could result in the account lockout threshold being bypassed.",
            "published_date":"2022-05-19",
            "chain_len":1,
            "project":"https:\/\/github.com\/moodle\/moodle",
            "commit_href":"https:\/\/github.com\/moodle\/moodle\/commit\/59b5858da200f63ecb59a9113af2b99ef1496fe5",
            "commit_sha":"59b5858da200f63ecb59a9113af2b99ef1496fe5",
            "patch":"SINGLE",
            "chain_ord":"['59b5858da200f63ecb59a9113af2b99ef1496fe5']",
            "before_first_fix_commit":"{'a0f47c8bc4d6f5971025de7d63f22475701d2f86'}",
            "last_fix_commit":"59b5858da200f63ecb59a9113af2b99ef1496fe5",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/26\/2022, 08:52:20",
            "message":"MDL-73736 core_auth: Fix concurrency issue in login_attempt_failed()\n\nThis patch wraps the login_failed_count logic in a resource lock and\nforces a user preferences cache reload. Each thread must wait for the\nlock and must fetch the current count before incrementing it. This\nensures that login_failed_count is correct across threads and that the\nlockout threshold is correctly honoured.\n\nCo-Authored-By: Sujith Haridasan <sujith@moodle.com>",
            "author":"Jake Dallimore",
            "comments":null,
            "stats":"{'additions': 43, 'deletions': 19, 'total': 62}",
            "files":"{'lib\/authlib.php': {'additions': 43, 'deletions': 19, 'changes': 62, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moodle\/moodle\/raw\/59b5858da200f63ecb59a9113af2b99ef1496fe5\/lib%2Fauthlib.php', 'patch': \"@@ -877,6 +877,7 @@ function login_attempt_valid($user) {\\n \/**\\n  * To be called after failed user login.\\n  * @param stdClass $user\\n+ * @throws moodle_exception\\n  *\/\\n function login_attempt_failed($user) {\\n     global $CFG;\\n@@ -888,30 +889,53 @@ function login_attempt_failed($user) {\\n         return;\\n     }\\n \\n-    $count = get_user_preferences('login_failed_count', 0, $user);\\n-    $last = get_user_preferences('login_failed_last', 0, $user);\\n-    $sincescuccess = get_user_preferences('login_failed_count_since_success', $count, $user);\\n-    $sincescuccess = $sincescuccess + 1;\\n-    set_user_preference('login_failed_count_since_success', $sincescuccess, $user);\\n+    \/\/ Force user preferences cache reload to ensure the most up-to-date login_failed_count is fetched.\\n+    \/\/ This is perhaps overzealous but is the documented way of reloading the cache, as per the test method\\n+    \/\/ 'test_check_user_preferences_loaded'.\\n+    unset($user->preference);\\n+\\n+    $resource = 'user:' . $user->id;\\n+    $lockfactory = \\\\core\\\\lock\\\\lock_config::get_lock_factory('core_failed_login_count_lock');\\n+\\n+    \/\/ Get a new lock for the resource, waiting for it for a maximum of 10 seconds.\\n+    if ($lock = $lockfactory->get_lock($resource, 10)) {\\n+        try {\\n+            $count = get_user_preferences('login_failed_count', 0, $user);\\n+            $last = get_user_preferences('login_failed_last', 0, $user);\\n+            $sincescuccess = get_user_preferences('login_failed_count_since_success', $count, $user);\\n+            $sincescuccess = $sincescuccess + 1;\\n+            set_user_preference('login_failed_count_since_success', $sincescuccess, $user);\\n+\\n+            if (empty($CFG->lockoutthreshold)) {\\n+                \/\/ No threshold means no lockout.\\n+                \/\/ Always unlock here, there might be some race conditions or leftovers when switching threshold.\\n+                login_unlock_account($user);\\n+                $lock->release();\\n+                return;\\n+            }\\n \\n-    if (empty($CFG->lockoutthreshold)) {\\n-        \/\/ No threshold means no lockout.\\n-        \/\/ Always unlock here, there might be some race conditions or leftovers when switching threshold.\\n-        login_unlock_account($user);\\n-        return;\\n-    }\\n+            if (!empty($CFG->lockoutwindow) and time() - $last > $CFG->lockoutwindow) {\\n+                $count = 0;\\n+            }\\n \\n-    if (!empty($CFG->lockoutwindow) and time() - $last > $CFG->lockoutwindow) {\\n-        $count = 0;\\n-    }\\n+            $count = $count + 1;\\n \\n-    $count = $count+1;\\n+            set_user_preference('login_failed_count', $count, $user);\\n+            set_user_preference('login_failed_last', time(), $user);\\n \\n-    set_user_preference('login_failed_count', $count, $user);\\n-    set_user_preference('login_failed_last', time(), $user);\\n+            if ($count >= $CFG->lockoutthreshold) {\\n+                login_lock_account($user);\\n+            }\\n \\n-    if ($count >= $CFG->lockoutthreshold) {\\n-        login_lock_account($user);\\n+            \/\/ Release locks when we're done.\\n+            $lock->release();\\n+        } catch (Exception $e) {\\n+            \/\/ Always release the lock on a failure.\\n+            $lock->release();\\n+        }\\n+    } else {\\n+        \/\/ We did not get access to the resource in time, give up.\\n+        throw new moodle_exception('locktimeout');\\n     }\\n }\"}}",
            "message_norm":"mdl-73736 core_auth: fix concurrency issue in login_attempt_failed()\n\nthis patch wraps the login_failed_count logic in a resource lock and\nforces a user preferences cache reload. each thread must wait for the\nlock and must fetch the current count before incrementing it. this\nensures that login_failed_count is correct across threads and that the\nlockout threshold is correctly honoured.\n\nco-authored-by: sujith haridasan <sujith@moodle.com>",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('issue', 'FLAW', ''), ('ensures', 'ACTION', ''), ('sujith@moodle.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/authlib.php'])",
            "num_files":1.0,
            "patch_content":"From 59b5858da200f63ecb59a9113af2b99ef1496fe5 Mon Sep 17 00:00:00 2001\nFrom: Jake Dallimore <jake@moodle.com>\nDate: Tue, 26 Apr 2022 16:52:20 +0800\nSubject: [PATCH] MDL-73736 core_auth: Fix concurrency issue in\n login_attempt_failed()\n\nThis patch wraps the login_failed_count logic in a resource lock and\nforces a user preferences cache reload. Each thread must wait for the\nlock and must fetch the current count before incrementing it. This\nensures that login_failed_count is correct across threads and that the\nlockout threshold is correctly honoured.\n\nCo-Authored-By: Sujith Haridasan <sujith@moodle.com>\n---\n lib\/authlib.php | 62 ++++++++++++++++++++++++++++++++++---------------\n 1 file changed, 43 insertions(+), 19 deletions(-)\n\ndiff --git a\/lib\/authlib.php b\/lib\/authlib.php\nindex 057bd81f02d1a..54ffa3c044392 100644\n--- a\/lib\/authlib.php\n+++ b\/lib\/authlib.php\n@@ -877,6 +877,7 @@ function login_attempt_valid($user) {\n \/**\n  * To be called after failed user login.\n  * @param stdClass $user\n+ * @throws moodle_exception\n  *\/\n function login_attempt_failed($user) {\n     global $CFG;\n@@ -888,30 +889,53 @@ function login_attempt_failed($user) {\n         return;\n     }\n \n-    $count = get_user_preferences('login_failed_count', 0, $user);\n-    $last = get_user_preferences('login_failed_last', 0, $user);\n-    $sincescuccess = get_user_preferences('login_failed_count_since_success', $count, $user);\n-    $sincescuccess = $sincescuccess + 1;\n-    set_user_preference('login_failed_count_since_success', $sincescuccess, $user);\n+    \/\/ Force user preferences cache reload to ensure the most up-to-date login_failed_count is fetched.\n+    \/\/ This is perhaps overzealous but is the documented way of reloading the cache, as per the test method\n+    \/\/ 'test_check_user_preferences_loaded'.\n+    unset($user->preference);\n+\n+    $resource = 'user:' . $user->id;\n+    $lockfactory = \\core\\lock\\lock_config::get_lock_factory('core_failed_login_count_lock');\n+\n+    \/\/ Get a new lock for the resource, waiting for it for a maximum of 10 seconds.\n+    if ($lock = $lockfactory->get_lock($resource, 10)) {\n+        try {\n+            $count = get_user_preferences('login_failed_count', 0, $user);\n+            $last = get_user_preferences('login_failed_last', 0, $user);\n+            $sincescuccess = get_user_preferences('login_failed_count_since_success', $count, $user);\n+            $sincescuccess = $sincescuccess + 1;\n+            set_user_preference('login_failed_count_since_success', $sincescuccess, $user);\n+\n+            if (empty($CFG->lockoutthreshold)) {\n+                \/\/ No threshold means no lockout.\n+                \/\/ Always unlock here, there might be some race conditions or leftovers when switching threshold.\n+                login_unlock_account($user);\n+                $lock->release();\n+                return;\n+            }\n \n-    if (empty($CFG->lockoutthreshold)) {\n-        \/\/ No threshold means no lockout.\n-        \/\/ Always unlock here, there might be some race conditions or leftovers when switching threshold.\n-        login_unlock_account($user);\n-        return;\n-    }\n+            if (!empty($CFG->lockoutwindow) and time() - $last > $CFG->lockoutwindow) {\n+                $count = 0;\n+            }\n \n-    if (!empty($CFG->lockoutwindow) and time() - $last > $CFG->lockoutwindow) {\n-        $count = 0;\n-    }\n+            $count = $count + 1;\n \n-    $count = $count+1;\n+            set_user_preference('login_failed_count', $count, $user);\n+            set_user_preference('login_failed_last', time(), $user);\n \n-    set_user_preference('login_failed_count', $count, $user);\n-    set_user_preference('login_failed_last', time(), $user);\n+            if ($count >= $CFG->lockoutthreshold) {\n+                login_lock_account($user);\n+            }\n \n-    if ($count >= $CFG->lockoutthreshold) {\n-        login_lock_account($user);\n+            \/\/ Release locks when we're done.\n+            $lock->release();\n+        } catch (Exception $e) {\n+            \/\/ Always release the lock on a failure.\n+            $lock->release();\n+        }\n+    } else {\n+        \/\/ We did not get access to the resource in time, give up.\n+        throw new moodle_exception('locktimeout');\n     }\n }"
        },
        {
            "index":801,
            "vuln_id":"GHSA-455w-gv5p-wgg3",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/665976327ad3c2c87efa2a5a64d696032c0a8109'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in pimcore pimcore is vulnerable to Stored XSS at Name field in the setting tab of the Global Targeting Rules.",
            "published_date":"2022-01-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/pimcore\/pimcore",
            "commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/665976327ad3c2c87efa2a5a64d696032c0a8109",
            "commit_sha":"665976327ad3c2c87efa2a5a64d696032c0a8109",
            "patch":"SINGLE",
            "chain_ord":"['665976327ad3c2c87efa2a5a64d696032c0a8109']",
            "before_first_fix_commit":"{'7f8855719f56c42ee3eda27a84b38ab57890e144'}",
            "last_fix_commit":"665976327ad3c2c87efa2a5a64d696032c0a8109",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/19\/2022, 10:36:40",
            "message":"[Targeting] Escape\/validate names of rules properly (#11205)\n\n* [Targeting] Escape\/validate names of rules properly\r\n\r\n* Update bundles\/AdminBundle\/Controller\/Admin\/TargetingController.php\r\n\r\nCo-authored-by: Jacob Dreesen <j.dreesen@neusta.de>\r\n\r\nCo-authored-by: Jacob Dreesen <j.dreesen@neusta.de>",
            "author":"Bernhard Rusch",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 4, 'total': 15}",
            "files":"{'bundles\/AdminBundle\/Controller\/Admin\/TargetingController.php': {'additions': 11, 'deletions': 4, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/665976327ad3c2c87efa2a5a64d696032c0a8109\/bundles%2FAdminBundle%2FController%2FAdmin%2FTargetingController.php', 'patch': '@@ -37,6 +37,11 @@ class TargetingController extends AdminController implements KernelControllerEve\\n {\\n     \/\/ RULES\\n \\n+    private function correctName(string $name): string\\n+    {\\n+        return preg_replace(\\'\/[#?*:\\\\\\\\\\\\\\\\<>|\"%&@=;+]\/\\', \\'-\\', $name);\\n+    }\\n+\\n     \/**\\n      * @Route(\"\/rule\/list\", name=\"pimcore_admin_targeting_rulelist\", methods={\"GET\"})\\n      *\\n@@ -55,7 +60,7 @@ public function ruleListAction(Request $request)\\n         foreach ($list->load() as $target) {\\n             $targets[] = [\\n                 \\'id\\' => $target->getId(),\\n-                \\'text\\' => $target->getName(),\\n+                \\'text\\' => htmlspecialchars($target->getName()),\\n                 \\'active\\' => $target->getActive(),\\n                 \\'qtip\\' => \\'ID: \\' . $target->getId(),\\n             ];\\n@@ -74,7 +79,7 @@ public function ruleListAction(Request $request)\\n     public function ruleAddAction(Request $request)\\n     {\\n         $target = new Targeting\\\\Rule();\\n-        $target->setName($request->get(\\'name\\'));\\n+        $target->setName($this->correctName($request->get(\\'name\\')));\\n         $target->save();\\n \\n         return $this->adminJson([\\'success\\' => true, \\'id\\' => $target->getId()]);\\n@@ -129,6 +134,7 @@ public function ruleSaveAction(Request $request)\\n         \/** @var Targeting\\\\Rule|Targeting\\\\Rule\\\\Dao $target *\/\\n         $target = Targeting\\\\Rule::getById($request->get(\\'id\\'));\\n         $target->setValues($data[\\'settings\\']);\\n+        $target->setName($this->correctName($target->getName()));\\n         $target->setConditions($data[\\'conditions\\']);\\n         $target->setActions($data[\\'actions\\']);\\n         $target->save();\\n@@ -208,7 +214,7 @@ public function targetGroupListAction(Request $request)\\n         foreach ($list->load() as $targetGroup) {\\n             $targetGroups[] = [\\n                 \\'id\\' => $targetGroup->getId(),\\n-                \\'text\\' => $targetGroup->getName(),\\n+                \\'text\\' => htmlspecialchars($targetGroup->getName()),\\n                 \\'active\\' => $targetGroup->getActive(),\\n                 \\'qtip\\' => $targetGroup->getId(),\\n             ];\\n@@ -230,7 +236,7 @@ public function targetGroupAddAction(Request $request, CoreCacheHandler $cache,\\n     {\\n         \/** @var TargetGroup|TargetGroup\\\\Dao $targetGroup *\/\\n         $targetGroup = new TargetGroup();\\n-        $targetGroup->setName($request->get(\\'name\\'));\\n+        $targetGroup->setName($this->correctName($request->get(\\'name\\')));\\n         $targetGroup->save();\\n \\n         $event = new TargetGroupEvent($targetGroup);\\n@@ -300,6 +306,7 @@ public function targetGroupSaveAction(Request $request, CoreCacheHandler $cache,\\n         \/** @var TargetGroup|TargetGroup\\\\Dao $targetGroup *\/\\n         $targetGroup = TargetGroup::getById($request->get(\\'id\\'));\\n         $targetGroup->setValues($data[\\'settings\\']);\\n+        $targetGroup->setName($this->correctName($targetGroup->getName()));\\n         $targetGroup->save();\\n \\n         $event = new TargetGroupEvent($targetGroup);'}}",
            "message_norm":"[targeting] escape\/validate names of rules properly (#11205)\n\n* [targeting] escape\/validate names of rules properly\r\n\r\n* update bundles\/adminbundle\/controller\/admin\/targetingcontroller.php\r\n\r\nco-authored-by: jacob dreesen <j.dreesen@neusta.de>\r\n\r\nco-authored-by: jacob dreesen <j.dreesen@neusta.de>",
            "language":"en",
            "entities":"[('escape', 'SECWORD', ''), ('validate', 'ACTION', ''), ('#11205', 'ISSUE', ''), ('escape', 'SECWORD', ''), ('validate', 'ACTION', ''), ('update', 'ACTION', ''), ('adminbundle', 'SECWORD', ''), ('admin', 'SECWORD', ''), ('j.dreesen@neusta.de', 'EMAIL', ''), ('j.dreesen@neusta.de', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bundles\/AdminBundle\/Controller\/Admin\/TargetingController.php'])",
            "num_files":1.0,
            "patch_content":"From 665976327ad3c2c87efa2a5a64d696032c0a8109 Mon Sep 17 00:00:00 2001\nFrom: Bernhard Rusch <brusch@users.noreply.github.com>\nDate: Wed, 19 Jan 2022 11:36:40 +0100\nSubject: [PATCH] [Targeting] Escape\/validate names of rules properly (#11205)\n\n* [Targeting] Escape\/validate names of rules properly\n\n* Update bundles\/AdminBundle\/Controller\/Admin\/TargetingController.php\n\nCo-authored-by: Jacob Dreesen <j.dreesen@neusta.de>\n\nCo-authored-by: Jacob Dreesen <j.dreesen@neusta.de>\n---\n ...\/Controller\/Admin\/TargetingController.php      | 15 +++++++++++----\n 1 file changed, 11 insertions(+), 4 deletions(-)\n\ndiff --git a\/bundles\/AdminBundle\/Controller\/Admin\/TargetingController.php b\/bundles\/AdminBundle\/Controller\/Admin\/TargetingController.php\nindex 6da669019aa..c615c7e3811 100644\n--- a\/bundles\/AdminBundle\/Controller\/Admin\/TargetingController.php\n+++ b\/bundles\/AdminBundle\/Controller\/Admin\/TargetingController.php\n@@ -37,6 +37,11 @@ class TargetingController extends AdminController implements KernelControllerEve\n {\n     \/\/ RULES\n \n+    private function correctName(string $name): string\n+    {\n+        return preg_replace('\/[#?*:\\\\\\\\<>|\"%&@=;+]\/', '-', $name);\n+    }\n+\n     \/**\n      * @Route(\"\/rule\/list\", name=\"pimcore_admin_targeting_rulelist\", methods={\"GET\"})\n      *\n@@ -55,7 +60,7 @@ public function ruleListAction(Request $request)\n         foreach ($list->load() as $target) {\n             $targets[] = [\n                 'id' => $target->getId(),\n-                'text' => $target->getName(),\n+                'text' => htmlspecialchars($target->getName()),\n                 'active' => $target->getActive(),\n                 'qtip' => 'ID: ' . $target->getId(),\n             ];\n@@ -74,7 +79,7 @@ public function ruleListAction(Request $request)\n     public function ruleAddAction(Request $request)\n     {\n         $target = new Targeting\\Rule();\n-        $target->setName($request->get('name'));\n+        $target->setName($this->correctName($request->get('name')));\n         $target->save();\n \n         return $this->adminJson(['success' => true, 'id' => $target->getId()]);\n@@ -129,6 +134,7 @@ public function ruleSaveAction(Request $request)\n         \/** @var Targeting\\Rule|Targeting\\Rule\\Dao $target *\/\n         $target = Targeting\\Rule::getById($request->get('id'));\n         $target->setValues($data['settings']);\n+        $target->setName($this->correctName($target->getName()));\n         $target->setConditions($data['conditions']);\n         $target->setActions($data['actions']);\n         $target->save();\n@@ -208,7 +214,7 @@ public function targetGroupListAction(Request $request)\n         foreach ($list->load() as $targetGroup) {\n             $targetGroups[] = [\n                 'id' => $targetGroup->getId(),\n-                'text' => $targetGroup->getName(),\n+                'text' => htmlspecialchars($targetGroup->getName()),\n                 'active' => $targetGroup->getActive(),\n                 'qtip' => $targetGroup->getId(),\n             ];\n@@ -230,7 +236,7 @@ public function targetGroupAddAction(Request $request, CoreCacheHandler $cache,\n     {\n         \/** @var TargetGroup|TargetGroup\\Dao $targetGroup *\/\n         $targetGroup = new TargetGroup();\n-        $targetGroup->setName($request->get('name'));\n+        $targetGroup->setName($this->correctName($request->get('name')));\n         $targetGroup->save();\n \n         $event = new TargetGroupEvent($targetGroup);\n@@ -300,6 +306,7 @@ public function targetGroupSaveAction(Request $request, CoreCacheHandler $cache,\n         \/** @var TargetGroup|TargetGroup\\Dao $targetGroup *\/\n         $targetGroup = TargetGroup::getById($request->get('id'));\n         $targetGroup->setValues($data['settings']);\n+        $targetGroup->setName($this->correctName($targetGroup->getName()));\n         $targetGroup->save();\n \n         $event = new TargetGroupEvent($targetGroup);"
        },
        {
            "index":791,
            "vuln_id":"GHSA-h6ch-v84p-w6p9",
            "cwe_id":"{'CWE-400'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/kpdecker\/jsdiff\/commit\/2aec4298639bf30fb88a00b356bf404d3551b8c0'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service (ReDoS) A vulnerability was found in diff before v3.5.0, the affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks.",
            "published_date":"2019-06-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/kpdecker\/jsdiff",
            "commit_href":"https:\/\/github.com\/kpdecker\/jsdiff\/commit\/2aec4298639bf30fb88a00b356bf404d3551b8c0",
            "commit_sha":"2aec4298639bf30fb88a00b356bf404d3551b8c0",
            "patch":"SINGLE",
            "chain_ord":"['2aec4298639bf30fb88a00b356bf404d3551b8c0']",
            "before_first_fix_commit":"{'a47aca9cb199d558e02ce406e9838356803e204f'}",
            "last_fix_commit":"2aec4298639bf30fb88a00b356bf404d3551b8c0",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/05\/2018, 04:00:42",
            "message":"Optimize parch header parser",
            "author":"Kevin Decker",
            "comments":"{'com_1': {'author': 'mariosanchezgarcia', 'datetime': '07\/30\/2019, 17:32:24', 'body': 'Mario'}}",
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'src\/patch\/parse.js': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/kpdecker\/jsdiff\/raw\/2aec4298639bf30fb88a00b356bf404d3551b8c0\/src%2Fpatch%2Fparse.js', 'patch': '@@ -53,16 +53,16 @@ export function parsePatch(uniDiff, options = {}) {\\n   \/\/ Parses the --- and +++ headers, if none are found, no lines\\n   \/\/ are consumed.\\n   function parseFileHeader(index) {\\n-    const headerPattern = \/^(---|\\\\+\\\\+\\\\+)\\\\s+([\\\\S ]*)(?:\\\\t(.*?)\\\\s*)?$\/;\\n-    const fileHeader = headerPattern.exec(diffstr[i]);\\n+    const fileHeader = (\/^(---|\\\\+\\\\+\\\\+)\\\\s+(.*)$\/).exec(diffstr[i]);\\n     if (fileHeader) {\\n       let keyPrefix = fileHeader[1] === \\'---\\' ? \\'old\\' : \\'new\\';\\n-      let fileName = fileHeader[2].replace(\/\\\\\\\\\\\\\\\\\/g, \\'\\\\\\\\\\');\\n+      const data = fileHeader[2].split(\\'\\\\t\\', 2);\\n+      let fileName = data[0].replace(\/\\\\\\\\\\\\\\\\\/g, \\'\\\\\\\\\\');\\n       if (\/^\".*\"$\/.test(fileName)) {\\n         fileName = fileName.substr(1, fileName.length - 2);\\n       }\\n       index[keyPrefix + \\'FileName\\'] = fileName;\\n-      index[keyPrefix + \\'Header\\'] = fileHeader[3];\\n+      index[keyPrefix + \\'Header\\'] = (data[1] || \\'\\').trim();\\n \\n       i++;\\n     }'}}",
            "message_norm":"optimize parch header parser",
            "language":"en",
            "entities":"[('optimize', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/patch\/parse.js'])",
            "num_files":1.0,
            "patch_content":"From 2aec4298639bf30fb88a00b356bf404d3551b8c0 Mon Sep 17 00:00:00 2001\nFrom: Kevin Decker <kpdecker@gmail.com>\nDate: Sun, 4 Mar 2018 22:00:42 -0600\nSubject: [PATCH] Optimize parch header parser\n\n---\n src\/patch\/parse.js | 8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ndiff --git a\/src\/patch\/parse.js b\/src\/patch\/parse.js\nindex 310e3a94..dd2df2ff 100755\n--- a\/src\/patch\/parse.js\n+++ b\/src\/patch\/parse.js\n@@ -53,16 +53,16 @@ export function parsePatch(uniDiff, options = {}) {\n   \/\/ Parses the --- and +++ headers, if none are found, no lines\n   \/\/ are consumed.\n   function parseFileHeader(index) {\n-    const headerPattern = \/^(---|\\+\\+\\+)\\s+([\\S ]*)(?:\\t(.*?)\\s*)?$\/;\n-    const fileHeader = headerPattern.exec(diffstr[i]);\n+    const fileHeader = (\/^(---|\\+\\+\\+)\\s+(.*)$\/).exec(diffstr[i]);\n     if (fileHeader) {\n       let keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n-      let fileName = fileHeader[2].replace(\/\\\\\\\\\/g, '\\\\');\n+      const data = fileHeader[2].split('\\t', 2);\n+      let fileName = data[0].replace(\/\\\\\\\\\/g, '\\\\');\n       if (\/^\".*\"$\/.test(fileName)) {\n         fileName = fileName.substr(1, fileName.length - 2);\n       }\n       index[keyPrefix + 'FileName'] = fileName;\n-      index[keyPrefix + 'Header'] = fileHeader[3];\n+      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n \n       i++;\n     }"
        },
        {
            "index":541,
            "vuln_id":"GHSA-gf2j-f278-xh4v",
            "cwe_id":"{'CWE-369'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8c6f391a2282684a25cbfec7687bd5d35261a209'}",
            "dataset":"osv",
            "summary":"Division by zero in TFLite ### Impact \nAn attacker can craft a TFLite model that would trigger a division by zero in [`BiasAndClamp` implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/lite\/kernels\/internal\/common.h#L75):\n\n```cc\ninline void BiasAndClamp(float clamp_min, float clamp_max, int bias_size,\n                         const float* bias_data, int array_size,\n                         float* array_data) {\n  \/\/ ...\n  TFLITE_DCHECK_EQ((array_size % bias_size), 0);\n  \/\/ ...\n} \n```\n  \nThere is no check that the `bias_size` is non zero.\n  \n### Patches\nWe have patched the issue in GitHub commit [8c6f391a2282684a25cbfec7687bd5d35261a209](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8c6f391a2282684a25cbfec7687bd5d35261a209).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Wang Xuan of Qihoo 360 AIVul Team.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8c6f391a2282684a25cbfec7687bd5d35261a209",
            "commit_sha":"8c6f391a2282684a25cbfec7687bd5d35261a209",
            "patch":"SINGLE",
            "chain_ord":"['8c6f391a2282684a25cbfec7687bd5d35261a209']",
            "before_first_fix_commit":"{'c8dafc9f9ae6658d922e443e59e0f553167c990b'}",
            "last_fix_commit":"8c6f391a2282684a25cbfec7687bd5d35261a209",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/14\/2021, 21:40:56",
            "message":"[lite] Add check for bias_size is zero to avoid division by zero. This shouldn't happen for properly converted models. Just safety check\n\nPiperOrigin-RevId: 416383645\nChange-Id: If8e508bf696ae8ecfb927e69c139a8ccf7fe60cb",
            "author":"Karim Nosir",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'tensorflow\/lite\/kernels\/internal\/common.h': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8c6f391a2282684a25cbfec7687bd5d35261a209\/tensorflow%2Flite%2Fkernels%2Finternal%2Fcommon.h', 'patch': '@@ -75,6 +75,7 @@ float ActivationFunction(float x) {\\n inline void BiasAndClamp(float clamp_min, float clamp_max, int bias_size,\\n                          const float* bias_data, int array_size,\\n                          float* array_data) {\\n+  if (bias_size == 0) return;\\n   \/\/ Note: see b\/132215220: in May 2019 we thought it would be OK to replace\\n   \/\/ this with the Eigen one-liner:\\n   \/\/   return (array.colwise() + bias).cwiseMin(clamp_max).cwiseMin(clamp_max).'}}",
            "message_norm":"[lite] add check for bias_size is zero to avoid division by zero. this shouldn't happen for properly converted models. just safety check\n\npiperorigin-revid: 416383645\nchange-id: if8e508bf696ae8ecfb927e69c139a8ccf7fe60cb",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('division by zero', 'SECWORD', ''), ('safety check', 'SECWORD', ''), ('416383645', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/internal\/common.h'])",
            "num_files":1.0,
            "patch_content":"From 8c6f391a2282684a25cbfec7687bd5d35261a209 Mon Sep 17 00:00:00 2001\nFrom: Karim Nosir <karimnosseir@google.com>\nDate: Tue, 14 Dec 2021 13:40:56 -0800\nSubject: [PATCH] [lite] Add check for bias_size is zero to avoid division by\n zero. This shouldn't happen for properly converted models. Just safety check\n\nPiperOrigin-RevId: 416383645\nChange-Id: If8e508bf696ae8ecfb927e69c139a8ccf7fe60cb\n---\n tensorflow\/lite\/kernels\/internal\/common.h | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/tensorflow\/lite\/kernels\/internal\/common.h b\/tensorflow\/lite\/kernels\/internal\/common.h\nindex 38fa9167fd9da0..5e8778f183ec33 100644\n--- a\/tensorflow\/lite\/kernels\/internal\/common.h\n+++ b\/tensorflow\/lite\/kernels\/internal\/common.h\n@@ -75,6 +75,7 @@ float ActivationFunction(float x) {\n inline void BiasAndClamp(float clamp_min, float clamp_max, int bias_size,\n                          const float* bias_data, int array_size,\n                          float* array_data) {\n+  if (bias_size == 0) return;\n   \/\/ Note: see b\/132215220: in May 2019 we thought it would be OK to replace\n   \/\/ this with the Eigen one-liner:\n   \/\/   return (array.colwise() + bias).cwiseMin(clamp_max).cwiseMin(clamp_max)."
        },
        {
            "index":856,
            "vuln_id":"GHSA-r8j4-96mx-rjcc",
            "cwe_id":"{'CWE-611'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/skylot\/jadx\/commit\/d22db30166e7cb369d72be41382bb63ac8b81c52'}",
            "dataset":"osv",
            "summary":"Improper Restriction of XML External Entity Reference in skylot\/jadx skylot\/jadx prior to 1.3.2 is vulnerable to Improper Restriction of XML External Entities when a user is tricked into exporting a malicious APK file (via the -e option) containing a crafted AndroidManifest.xml \/ strings.xml to gradle, leading to possible local file disclosure.",
            "published_date":"2022-01-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/skylot\/jadx",
            "commit_href":"https:\/\/github.com\/skylot\/jadx\/commit\/d22db30166e7cb369d72be41382bb63ac8b81c52",
            "commit_sha":"d22db30166e7cb369d72be41382bb63ac8b81c52",
            "patch":"SINGLE",
            "chain_ord":"['d22db30166e7cb369d72be41382bb63ac8b81c52']",
            "before_first_fix_commit":"{'6db61e7a5908db0138a3a15d42c0a46ae787c72c'}",
            "last_fix_commit":"d22db30166e7cb369d72be41382bb63ac8b81c52",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/20\/2022, 11:17:12",
            "message":"fix: use secure xml parser for process manifest",
            "author":"Skylot",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'jadx-core\/src\/main\/java\/jadx\/core\/export\/ExportGradleProject.java': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/skylot\/jadx\/raw\/d22db30166e7cb369d72be41382bb63ac8b81c52\/jadx-core%2Fsrc%2Fmain%2Fjava%2Fjadx%2Fcore%2Fexport%2FExportGradleProject.java', 'patch': '@@ -8,7 +8,6 @@\\n import java.util.Set;\\n \\n import javax.xml.parsers.DocumentBuilder;\\n-import javax.xml.parsers.DocumentBuilderFactory;\\n \\n import org.slf4j.Logger;\\n import org.slf4j.LoggerFactory;\\n@@ -24,6 +23,7 @@\\n import jadx.core.utils.exceptions.JadxRuntimeException;\\n import jadx.core.utils.files.FileUtils;\\n import jadx.core.xmlgen.ResContainer;\\n+import jadx.core.xmlgen.XmlSecurity;\\n \\n public class ExportGradleProject {\\n \\n@@ -139,7 +139,7 @@ private ApplicationParams getApplicationParams(Document androidManifest, Documen\\n \\n \\tprivate Document parseXml(String xmlContent) {\\n \\t\\ttry {\\n-\\t\\t\\tDocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\\n+\\t\\t\\tDocumentBuilder builder = XmlSecurity.getSecureDbf().newDocumentBuilder();\\n \\t\\t\\tDocument document = builder.parse(new InputSource(new StringReader(xmlContent)));\\n \\n \\t\\t\\tdocument.getDocumentElement().normalize();'}}",
            "message_norm":"fix: use secure xml parser for process manifest",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('secure', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['jadx-core\/src\/main\/java\/jadx\/core\/export\/ExportGradleProject.java'])",
            "num_files":1.0,
            "patch_content":"From d22db30166e7cb369d72be41382bb63ac8b81c52 Mon Sep 17 00:00:00 2001\nFrom: Skylot <skylot@gmail.com>\nDate: Thu, 20 Jan 2022 11:17:12 +0000\nSubject: [PATCH] fix: use secure xml parser for process manifest\n\n---\n ...\/src\/main\/java\/jadx\/core\/export\/ExportGradleProject.java   | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/jadx-core\/src\/main\/java\/jadx\/core\/export\/ExportGradleProject.java b\/jadx-core\/src\/main\/java\/jadx\/core\/export\/ExportGradleProject.java\nindex e11ebb4f961..8272bf3a032 100644\n--- a\/jadx-core\/src\/main\/java\/jadx\/core\/export\/ExportGradleProject.java\n+++ b\/jadx-core\/src\/main\/java\/jadx\/core\/export\/ExportGradleProject.java\n@@ -8,7 +8,6 @@\n import java.util.Set;\n \n import javax.xml.parsers.DocumentBuilder;\n-import javax.xml.parsers.DocumentBuilderFactory;\n \n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n@@ -24,6 +23,7 @@\n import jadx.core.utils.exceptions.JadxRuntimeException;\n import jadx.core.utils.files.FileUtils;\n import jadx.core.xmlgen.ResContainer;\n+import jadx.core.xmlgen.XmlSecurity;\n \n public class ExportGradleProject {\n \n@@ -139,7 +139,7 @@ private ApplicationParams getApplicationParams(Document androidManifest, Documen\n \n \tprivate Document parseXml(String xmlContent) {\n \t\ttry {\n-\t\t\tDocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n+\t\t\tDocumentBuilder builder = XmlSecurity.getSecureDbf().newDocumentBuilder();\n \t\t\tDocument document = builder.parse(new InputSource(new StringReader(xmlContent)));\n \n \t\t\tdocument.getDocumentElement().normalize();"
        },
        {
            "index":146,
            "vuln_id":"GHSA-vj9x-w7ch-f46p",
            "cwe_id":"{'CWE-89'}",
            "score":8.3,
            "chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/66281c12479dc01a06258d8533eaddfb1770d5bd'}",
            "dataset":"osv",
            "summary":"pimcore is vulnerable to SQL Injection pimcore is vulnerable to Improper Neutralization of Special Elements used in an SQL Command",
            "published_date":"2022-01-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/pimcore\/pimcore",
            "commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/66281c12479dc01a06258d8533eaddfb1770d5bd",
            "commit_sha":"66281c12479dc01a06258d8533eaddfb1770d5bd",
            "patch":"SINGLE",
            "chain_ord":"['66281c12479dc01a06258d8533eaddfb1770d5bd']",
            "before_first_fix_commit":"{'d8377fc752dc3a42ca72cb49650481191f14ec63'}",
            "last_fix_commit":"66281c12479dc01a06258d8533eaddfb1770d5bd",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/17\/2022, 14:39:43",
            "message":"[Data Object] Classification Store quote filtering",
            "author":"Bernhard Rusch",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassificationstoreController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/66281c12479dc01a06258d8533eaddfb1770d5bd\/bundles%2FAdminBundle%2FController%2FAdmin%2FDataObject%2FClassificationstoreController.php', 'patch': \"@@ -1242,7 +1242,7 @@ public function propertiesGetAction(Request $request)\\n         }\\n \\n         if ($storeId) {\\n-            $conditionParts[] = '(storeId = ' . $storeId . ')';\\n+            $conditionParts[] = '(storeId = '. $db->quote($storeId) . ')';\\n         }\\n \\n         if ($request->get('filter')) {\"}}",
            "message_norm":"[data object] classification store quote filtering",
            "language":"it",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassificationstoreController.php'])",
            "num_files":1.0,
            "patch_content":"From 66281c12479dc01a06258d8533eaddfb1770d5bd Mon Sep 17 00:00:00 2001\nFrom: Bernhard Rusch <bernhard.rusch@elements.at>\nDate: Mon, 17 Jan 2022 15:39:43 +0100\nSubject: [PATCH] [Data Object] Classification Store quote filtering\n\n---\n ...\/Admin\/DataObject\/ClassificationstoreController.php          | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassificationstoreController.php b\/bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassificationstoreController.php\nindex 1f536f3a9d7..c1605533730 100644\n--- a\/bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassificationstoreController.php\n+++ b\/bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassificationstoreController.php\n@@ -1242,7 +1242,7 @@ public function propertiesGetAction(Request $request)\n         }\n \n         if ($storeId) {\n-            $conditionParts[] = '(storeId = ' . $storeId . ')';\n+            $conditionParts[] = '(storeId = '. $db->quote($storeId) . ')';\n         }\n \n         if ($request->get('filter')) {"
        },
        {
            "index":406,
            "vuln_id":"GHSA-3q55-66g3-p8xq",
            "cwe_id":"{'CWE-79'}",
            "score":4.8,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/89200cfcc2cfefe5554721e7fa3cf52f6a2a9120'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in microweber File upload filter bypass leading to stored XSS in GitHub repository microweber\/microweber prior to 1.2.12.",
            "published_date":"2022-03-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/89200cfcc2cfefe5554721e7fa3cf52f6a2a9120",
            "commit_sha":"89200cfcc2cfefe5554721e7fa3cf52f6a2a9120",
            "patch":"SINGLE",
            "chain_ord":"['89200cfcc2cfefe5554721e7fa3cf52f6a2a9120']",
            "before_first_fix_commit":"{'077b1e2d5dda0c6611b65bce849a18a5620c5c98'}",
            "last_fix_commit":"89200cfcc2cfefe5554721e7fa3cf52f6a2a9120",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/11\/2022, 10:04:52",
            "message":"Update Files.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 254, 'deletions': 2, 'total': 256}",
            "files":"{'src\/MicroweberPackages\/Utils\/System\/Files.php': {'additions': 254, 'deletions': 2, 'changes': 256, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/89200cfcc2cfefe5554721e7fa3cf52f6a2a9120\/src%2FMicroweberPackages%2FUtils%2FSystem%2FFiles.php', 'patch': \"@@ -834,10 +834,262 @@ function get_dangerous_files_extentions()\\n             'xqt',        \/\/    SuperCalc Macro File',\\n             'xys',        \/\/    XYplorer Script File',\\n             'zl9',        \/\/    ZoneAlarm Quarantined EXE File\\n-\\n-\\n             'swf',        \/\/    Flash File\\n \\n+            'key',\\n+            'asax',\\n+            'btapp',\\n+            'xd',\\n+            'fwtemplate',\\n+            'crdownload',\\n+            'whtt',\\n+            'ssp',\\n+            'fmp',\\n+            'jspa',\\n+            'obml16',\\n+            'a5w',\\n+            'crt',\\n+            'vrt',\\n+            'website',\\n+            'p7c',\\n+            'dll',\\n+            'php',\\n+            'mjs',\\n+            'dhtml',\\n+            'xul',\\n+            'bml',\\n+            'download',\\n+            'cshtml',\\n+            'vsdisco',\\n+            'codasite',\\n+            'webbookmark',\\n+            'rjs',\\n+            'wsdl',\\n+            'dml',\\n+            'aro',\\n+            'dcr',\\n+            'shtml',\\n+            'dochtml',\\n+            'dwt',\\n+            'spc',\\n+            'a4p',\\n+            'htaccess',\\n+            'ascx',\\n+            'pac',\\n+            'p7b',\\n+            'xhtm',\\n+            'oam',\\n+            'site',\\n+            'kit',\\n+            'aspx',\\n+            'zul',\\n+            'tpl',\\n+            'htm',\\n+            'seam',\\n+            'svr',\\n+            'pem',\\n+            'url',\\n+            'dap',\\n+            'appcache',\\n+            'chm',\\n+            'wbs',\\n+            'htc',\\n+            'ewp',\\n+            'gsp',\\n+            'asr',\\n+            'der',\\n+            'master',\\n+            'stc',\\n+            'ap',\\n+            'html',\\n+            'p12',\\n+            'xpd',\\n+            'fwp',\\n+            'epibrw',\\n+            'strm',\\n+            'xss',\\n+            'node',\\n+            'disco',\\n+            'gsp',\\n+            'pro',\\n+            'rss',\\n+            'gne',\\n+            'sdb',\\n+            'compressed',\\n+            'asp',\\n+            'browser',\\n+            'php2',\\n+            'sites2',\\n+            'dothtml',\\n+            'bok',\\n+            'axd',\\n+            'nzb',\\n+            'vdw',\\n+            'obml',\\n+            'mhtml',\\n+            'ashx',\\n+            'con',\\n+            'rhtml',\\n+            'alx',\\n+            'opml',\\n+            'web',\\n+            'chat',\\n+            'csr',\\n+            'do',\\n+            'sht',\\n+            'asa',\\n+            'cha',\\n+            'h5p',\\n+            'qf',\\n+            'olp',\\n+            'hyperesources',\\n+            'sparkle',\\n+            'razor',\\n+            'php4',\\n+            'cms',\\n+            'mml',\\n+            'jnlp',\\n+            'har',\\n+            'br',\\n+            'webloc',\\n+            'srf',\\n+            'cer',\\n+            'uhtml',\\n+            'pptmhtml',\\n+            'phtml',\\n+            'xbel',\\n+            'cfm',\\n+            'fwtemplateb',\\n+            'jspx',\\n+            'jsp',\\n+            'xfdl',\\n+            'zhtml',\\n+            'stml',\\n+            'jsonl',\\n+            'maff',\\n+            'dbm',\\n+            'aex',\\n+            'crl',\\n+            'mht',\\n+            'wml',\\n+            'sass',\\n+            'xht',\\n+            'awm',\\n+            'page',\\n+            'hdml',\\n+            'webmanifest',\\n+            'itms',\\n+            'sitemap',\\n+            'shtm',\\n+            'wpp',\\n+            'jss',\\n+            'oth',\\n+            'ucf',\\n+            'prf',\\n+            'freeway',\\n+            'edge',\\n+            'iqy',\\n+            'vrml',\\n+            'mvc',\\n+            'wdgt',\\n+            'discomap',\\n+            'psp',\\n+            'hxs',\\n+            'adr',\\n+            'hype',\\n+            'csp',\\n+            'xhtml',\\n+            'webarchive',\\n+            'qbo',\\n+            'jhtml',\\n+            'svc',\\n+            'phtm',\\n+            'rw3',\\n+            'tpl',\\n+            'stl',\\n+            'wbxml',\\n+            'p7',\\n+            'ndjson',\\n+            'ognc',\\n+            'fwtb',\\n+            'muse',\\n+            'vbd',\\n+            'sites',\\n+            'rt',\\n+            'esproj',\\n+            'private',\\n+            'srl',\\n+            'zhtml',\\n+            'vbhtml', \\n+            'hypetemplate',\\n+            'obml15',\\n+            'hypesymbol',\\n+            'pub',\\n+            'ece',\\n+            'mspx',\\n+            'docmhtml',\\n+            'xws',\\n+            'wgp',\\n+            'tvpi',\\n+            'woa',\\n+            'asmx',\\n+            'xbl',\\n+            'webhistory',\\n+            'idc',\\n+            'jws',\\n+            'lbc',\\n+            'att',\\n+            'tvvi',\\n+            'zvz',\\n+            'php3',\\n+            'webarchivexml',\\n+            'widget',\\n+            'swz',\\n+            'qrm',\\n+            'bwp',\\n+            'atom',\\n+            'cdf',\\n+            'map',\\n+            'hdm',\\n+            'php5',\\n+            'rwsw',\\n+            'wgt',\\n+            'nod',\\n+            'rflw',\\n+            'htx',\\n+            'mvr',\\n+            'an',\\n+            'rwp',\\n+            'lasso',\\n+            'vlp',\\n+            'stp',\\n+            'nxg',\\n+            'faces',\\n+            'kcmsf',\\n+            'ptw',\\n+            'less',\\n+            'saveddeck',\\n+            'ccbjs',\\n+            'wn',\\n+            'ppthtml',\\n+            'jcz',\\n+            'jvs',\\n+            'rwtheme',\\n+            'jst',\\n+            'mapx',\\n+            'cpg',\\n+            'wpx',\\n+            'qbx',\\n+            'suck',\\n+            'iwdgt',\\n+            'public',\\n+            'cphd',\\n+            'moz',\\n+            'zfo',\\n+            'stm',\\n+            'fcgi',\\n+            'itpc',\\n+            'cfml'\\n         );\"}}",
            "message_norm":"update files.php",
            "language":"fr",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/Utils\/System\/Files.php'])",
            "num_files":1.0,
            "patch_content":"From 89200cfcc2cfefe5554721e7fa3cf52f6a2a9120 Mon Sep 17 00:00:00 2001\nFrom: Bozhidar Slaveykov <bobi@microweber.com>\nDate: Fri, 11 Mar 2022 12:04:52 +0200\nSubject: [PATCH] Update Files.php\n\n---\n src\/MicroweberPackages\/Utils\/System\/Files.php | 256 +++++++++++++++++-\n 1 file changed, 254 insertions(+), 2 deletions(-)\n\ndiff --git a\/src\/MicroweberPackages\/Utils\/System\/Files.php b\/src\/MicroweberPackages\/Utils\/System\/Files.php\nindex 037f5950017..12b120ab4a8 100644\n--- a\/src\/MicroweberPackages\/Utils\/System\/Files.php\n+++ b\/src\/MicroweberPackages\/Utils\/System\/Files.php\n@@ -834,10 +834,262 @@ function get_dangerous_files_extentions()\n             'xqt',        \/\/    SuperCalc Macro File',\n             'xys',        \/\/    XYplorer Script File',\n             'zl9',        \/\/    ZoneAlarm Quarantined EXE File\n-\n-\n             'swf',        \/\/    Flash File\n \n+            'key',\n+            'asax',\n+            'btapp',\n+            'xd',\n+            'fwtemplate',\n+            'crdownload',\n+            'whtt',\n+            'ssp',\n+            'fmp',\n+            'jspa',\n+            'obml16',\n+            'a5w',\n+            'crt',\n+            'vrt',\n+            'website',\n+            'p7c',\n+            'dll',\n+            'php',\n+            'mjs',\n+            'dhtml',\n+            'xul',\n+            'bml',\n+            'download',\n+            'cshtml',\n+            'vsdisco',\n+            'codasite',\n+            'webbookmark',\n+            'rjs',\n+            'wsdl',\n+            'dml',\n+            'aro',\n+            'dcr',\n+            'shtml',\n+            'dochtml',\n+            'dwt',\n+            'spc',\n+            'a4p',\n+            'htaccess',\n+            'ascx',\n+            'pac',\n+            'p7b',\n+            'xhtm',\n+            'oam',\n+            'site',\n+            'kit',\n+            'aspx',\n+            'zul',\n+            'tpl',\n+            'htm',\n+            'seam',\n+            'svr',\n+            'pem',\n+            'url',\n+            'dap',\n+            'appcache',\n+            'chm',\n+            'wbs',\n+            'htc',\n+            'ewp',\n+            'gsp',\n+            'asr',\n+            'der',\n+            'master',\n+            'stc',\n+            'ap',\n+            'html',\n+            'p12',\n+            'xpd',\n+            'fwp',\n+            'epibrw',\n+            'strm',\n+            'xss',\n+            'node',\n+            'disco',\n+            'gsp',\n+            'pro',\n+            'rss',\n+            'gne',\n+            'sdb',\n+            'compressed',\n+            'asp',\n+            'browser',\n+            'php2',\n+            'sites2',\n+            'dothtml',\n+            'bok',\n+            'axd',\n+            'nzb',\n+            'vdw',\n+            'obml',\n+            'mhtml',\n+            'ashx',\n+            'con',\n+            'rhtml',\n+            'alx',\n+            'opml',\n+            'web',\n+            'chat',\n+            'csr',\n+            'do',\n+            'sht',\n+            'asa',\n+            'cha',\n+            'h5p',\n+            'qf',\n+            'olp',\n+            'hyperesources',\n+            'sparkle',\n+            'razor',\n+            'php4',\n+            'cms',\n+            'mml',\n+            'jnlp',\n+            'har',\n+            'br',\n+            'webloc',\n+            'srf',\n+            'cer',\n+            'uhtml',\n+            'pptmhtml',\n+            'phtml',\n+            'xbel',\n+            'cfm',\n+            'fwtemplateb',\n+            'jspx',\n+            'jsp',\n+            'xfdl',\n+            'zhtml',\n+            'stml',\n+            'jsonl',\n+            'maff',\n+            'dbm',\n+            'aex',\n+            'crl',\n+            'mht',\n+            'wml',\n+            'sass',\n+            'xht',\n+            'awm',\n+            'page',\n+            'hdml',\n+            'webmanifest',\n+            'itms',\n+            'sitemap',\n+            'shtm',\n+            'wpp',\n+            'jss',\n+            'oth',\n+            'ucf',\n+            'prf',\n+            'freeway',\n+            'edge',\n+            'iqy',\n+            'vrml',\n+            'mvc',\n+            'wdgt',\n+            'discomap',\n+            'psp',\n+            'hxs',\n+            'adr',\n+            'hype',\n+            'csp',\n+            'xhtml',\n+            'webarchive',\n+            'qbo',\n+            'jhtml',\n+            'svc',\n+            'phtm',\n+            'rw3',\n+            'tpl',\n+            'stl',\n+            'wbxml',\n+            'p7',\n+            'ndjson',\n+            'ognc',\n+            'fwtb',\n+            'muse',\n+            'vbd',\n+            'sites',\n+            'rt',\n+            'esproj',\n+            'private',\n+            'srl',\n+            'zhtml',\n+            'vbhtml', \n+            'hypetemplate',\n+            'obml15',\n+            'hypesymbol',\n+            'pub',\n+            'ece',\n+            'mspx',\n+            'docmhtml',\n+            'xws',\n+            'wgp',\n+            'tvpi',\n+            'woa',\n+            'asmx',\n+            'xbl',\n+            'webhistory',\n+            'idc',\n+            'jws',\n+            'lbc',\n+            'att',\n+            'tvvi',\n+            'zvz',\n+            'php3',\n+            'webarchivexml',\n+            'widget',\n+            'swz',\n+            'qrm',\n+            'bwp',\n+            'atom',\n+            'cdf',\n+            'map',\n+            'hdm',\n+            'php5',\n+            'rwsw',\n+            'wgt',\n+            'nod',\n+            'rflw',\n+            'htx',\n+            'mvr',\n+            'an',\n+            'rwp',\n+            'lasso',\n+            'vlp',\n+            'stp',\n+            'nxg',\n+            'faces',\n+            'kcmsf',\n+            'ptw',\n+            'less',\n+            'saveddeck',\n+            'ccbjs',\n+            'wn',\n+            'ppthtml',\n+            'jcz',\n+            'jvs',\n+            'rwtheme',\n+            'jst',\n+            'mapx',\n+            'cpg',\n+            'wpx',\n+            'qbx',\n+            'suck',\n+            'iwdgt',\n+            'public',\n+            'cphd',\n+            'moz',\n+            'zfo',\n+            'stm',\n+            'fcgi',\n+            'itpc',\n+            'cfml'\n         );"
        },
        {
            "index":438,
            "vuln_id":"GHSA-m884-279h-32v2",
            "cwe_id":"{'CWE-209'}",
            "score":4.6,
            "chain":"{'https:\/\/github.com\/symfony\/symfony\/commit\/629d21b800a15dc649fb0ae9ed7cd9211e7e45db', 'https:\/\/github.com\/symfony\/symfony\/commit\/cf80224589ac05402d4f72f5ddf80900ec94d5ad'}",
            "dataset":"osv",
            "summary":"Exceptions displayed in non-debug configurations in Symfony Description\n-----------\n\nWhen `ErrorHandler` renders an exception HTML page, it uses un-escaped properties from the related Exception class to render the stacktrace. The security issue comes from the fact that the stacktraces were also displayed in non-`debug` environments.\n\nResolution\n----------\n\nThe `ErrorHandler` class now escapes all properties coming from the related Exception, and the stacktrace is not displayed anymore in non-`debug` environments.\n\nThe patches for this issue are available [here](https:\/\/github.com\/symfony\/symfony\/commit\/cf80224589ac05402d4f72f5ddf80900ec94d5ad) and [here](https:\/\/github.com\/symfony\/symfony\/commit\/629d21b800a15dc649fb0ae9ed7cd9211e7e45db) for branch 4.4.\n\nCredits\n-------\n\nI would like to thank Luka Sikic for reporting & Yonel Ceruto and J\u00e9r\u00e9my Deruss\u00e9 for fixing the issue.",
            "published_date":"2020-03-30",
            "chain_len":2,
            "project":"https:\/\/github.com\/symfony\/symfony",
            "commit_href":"https:\/\/github.com\/symfony\/symfony\/commit\/629d21b800a15dc649fb0ae9ed7cd9211e7e45db",
            "commit_sha":"629d21b800a15dc649fb0ae9ed7cd9211e7e45db",
            "patch":"MULTI",
            "chain_ord":"['cf80224589ac05402d4f72f5ddf80900ec94d5ad', '629d21b800a15dc649fb0ae9ed7cd9211e7e45db']",
            "before_first_fix_commit":"{'3ee39e7468f1cd0b5a88b89aad72d61214e950f4'}",
            "last_fix_commit":"629d21b800a15dc649fb0ae9ed7cd9211e7e45db",
            "chain_ord_pos":2.0,
            "commit_datetime":"02\/04\/2020, 09:49:52",
            "message":"Escape variable in Exception Template",
            "author":"J\u00e9r\u00e9my Deruss\u00e9",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 3, 'total': 6}",
            "files":"{'src\/Symfony\/Component\/ErrorHandler\/Resources\/views\/traces_text.html.php': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/symfony\/symfony\/raw\/629d21b800a15dc649fb0ae9ed7cd9211e7e45db\/src%2FSymfony%2FComponent%2FErrorHandler%2FResources%2Fviews%2Ftraces_text.html.php', 'patch': '@@ -20,15 +20,15 @@\\n                 <?php if ($exception[\\'trace\\']) { ?>\\n                 <pre class=\"stacktrace\">\\n <?php\\n-                    echo $exception[\\'class\\'].\":\\\\n\";\\n+                    echo $this->escape($exception[\\'class\\']).\":\\\\n\";\\n                     if ($exception[\\'message\\']) {\\n-                        echo $exception[\\'message\\'].\"\\\\n\";\\n+                        echo $this->escape($exception[\\'message\\']).\"\\\\n\";\\n                     }\\n \\n                     foreach ($exception[\\'trace\\'] as $trace) {\\n                         echo \"\\\\n  \";\\n                         if ($trace[\\'function\\']) {\\n-                            echo \\'at \\'.$trace[\\'class\\'].$trace[\\'type\\'].$trace[\\'function\\'].\\'(\\'.(isset($trace[\\'args\\']) ? $this->formatArgsAsText($trace[\\'args\\']) : \\'\\').\\')\\';\\n+                            echo $this->escape(\\'at \\'.$trace[\\'class\\'].$trace[\\'type\\'].$trace[\\'function\\']).\\'(\\'.(isset($trace[\\'args\\']) ? $this->formatArgsAsText($trace[\\'args\\']) : \\'\\').\\')\\';\\n                         }\\n                         if ($trace[\\'file\\'] && $trace[\\'line\\']) {\\n                             echo($trace[\\'function\\'] ? \"\\\\n     (\" : \\'at \\').strtr(strip_tags($this->formatFile($trace[\\'file\\'], $trace[\\'line\\'])), [\\' at line \\'.$trace[\\'line\\'] => \\'\\']).\\':\\'.$trace[\\'line\\'].($trace[\\'function\\'] ? \\')\\' : \\'\\');'}}",
            "message_norm":"escape variable in exception template",
            "language":"ro",
            "entities":"[('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Symfony\/Component\/ErrorHandler\/Resources\/views\/traces_text.html.php'])",
            "num_files":1.0,
            "patch_content":"From 629d21b800a15dc649fb0ae9ed7cd9211e7e45db Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?J=C3=A9r=C3=A9my=20Deruss=C3=A9?= <jeremy@derusse.com>\nDate: Tue, 4 Feb 2020 10:49:52 +0100\nSubject: [PATCH] Escape variable in Exception Template\n\n---\n ...\/ErrorHandler\/Resources\/views\/traces_text.html.php       | 6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ndiff --git a\/src\/Symfony\/Component\/ErrorHandler\/Resources\/views\/traces_text.html.php b\/src\/Symfony\/Component\/ErrorHandler\/Resources\/views\/traces_text.html.php\nindex e178fe0fcd413..a7090fbe8909e 100644\n--- a\/src\/Symfony\/Component\/ErrorHandler\/Resources\/views\/traces_text.html.php\n+++ b\/src\/Symfony\/Component\/ErrorHandler\/Resources\/views\/traces_text.html.php\n@@ -20,15 +20,15 @@\n                 <?php if ($exception['trace']) { ?>\n                 <pre class=\"stacktrace\">\n <?php\n-                    echo $exception['class'].\":\\n\";\n+                    echo $this->escape($exception['class']).\":\\n\";\n                     if ($exception['message']) {\n-                        echo $exception['message'].\"\\n\";\n+                        echo $this->escape($exception['message']).\"\\n\";\n                     }\n \n                     foreach ($exception['trace'] as $trace) {\n                         echo \"\\n  \";\n                         if ($trace['function']) {\n-                            echo 'at '.$trace['class'].$trace['type'].$trace['function'].'('.(isset($trace['args']) ? $this->formatArgsAsText($trace['args']) : '').')';\n+                            echo $this->escape('at '.$trace['class'].$trace['type'].$trace['function']).'('.(isset($trace['args']) ? $this->formatArgsAsText($trace['args']) : '').')';\n                         }\n                         if ($trace['file'] && $trace['line']) {\n                             echo($trace['function'] ? \"\\n     (\" : 'at ').strtr(strip_tags($this->formatFile($trace['file'], $trace['line'])), [' at line '.$trace['line'] => '']).':'.$trace['line'].($trace['function'] ? ')' : '');"
        },
        {
            "index":828,
            "vuln_id":"GHSA-8gv3-57p6-g35r",
            "cwe_id":"{'CWE-787', 'CWE-125'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a84358aa12f0b1518e606095ab9cfddbf597c121'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `RaggedTensorToTensor` ### Impact\nAn attacker can cause a heap buffer overflow in `tf.raw_ops.RaggedTensorToTensor`:\n\n```python\nimport tensorflow as tf\n\nshape = tf.constant([10, 10], shape=[2], dtype=tf.int64)\nvalues = tf.constant(0, shape=[1], dtype=tf.int64)\ndefault_value = tf.constant(0, dtype=tf.int64)\nl = [849, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nrow = tf.constant(l, shape=[5, 43], dtype=tf.int64)\nrows = [row]\ntypes = ['ROW_SPLITS']\n\ntf.raw_ops.RaggedTensorToTensor(\n    shape=shape, values=values, default_value=default_value,\n    row_partition_tensors=rows, row_partition_types=types) \n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/d94227d43aa125ad8b54115c03cece54f6a1977b\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc#L219-L222) uses the same index to access two arrays in parallel:\n\n```cc\nfor (INDEX_TYPE i = 0; i < row_split_size - 1; ++i) {\n  INDEX_TYPE row_length = row_split(i + 1) - row_split(i);\n  INDEX_TYPE real_length = std::min(output_size, row_length);\n  INDEX_TYPE parent_output_index_current = parent_output_index[i];\n  ...\n}\n```\n\nSince the user controls the shape of the input arguments, an attacker could trigger a heap OOB access when `parent_output_index` is shorter than `row_split`.\n\n### Patches\nWe have patched the issue in GitHub commit [a84358aa12f0b1518e606095ab9cfddbf597c121](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a84358aa12f0b1518e606095ab9cfddbf597c121).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a84358aa12f0b1518e606095ab9cfddbf597c121",
            "commit_sha":"a84358aa12f0b1518e606095ab9cfddbf597c121",
            "patch":"SINGLE",
            "chain_ord":"['a84358aa12f0b1518e606095ab9cfddbf597c121']",
            "before_first_fix_commit":"{'d94227d43aa125ad8b54115c03cece54f6a1977b'}",
            "last_fix_commit":"a84358aa12f0b1518e606095ab9cfddbf597c121",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/04\/2021, 20:45:57",
            "message":"Fix heap-buffer-overflow issue with `tf.raw_ops.RaggedTensorToTensor`.\n\nPiperOrigin-RevId: 371986929\nChange-Id: I79ab962a22c5867f36f7f45b780a1ac881b1dbdd",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a84358aa12f0b1518e606095ab9cfddbf597c121\/tensorflow%2Fcore%2Fkernels%2Fragged_tensor_to_tensor_op.cc', 'patch': '@@ -313,6 +313,12 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n             output_index_multiplier, output_size, result);\\n         return tensorflow::Status::OK();\\n       case RowPartitionType::ROW_SPLITS:\\n+        if (row_partition_tensor.size() - 1 > parent_output_index.size()) {\\n+          return errors::InvalidArgument(\\n+              \"Row partition size is greater than output size: \",\\n+              row_partition_tensor.size() - 1, \" > \",\\n+              parent_output_index.size());\\n+        }\\n         CalculateOutputIndexRowSplit(\\n             context, row_partition_tensor, parent_output_index,\\n             output_index_multiplier, output_size, result);'}}",
            "message_norm":"fix heap-buffer-overflow issue with `tf.raw_ops.raggedtensortotensor`.\n\npiperorigin-revid: 371986929\nchange-id: i79ab962a22c5867f36f7f45b780a1ac881b1dbdd",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('371986929', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc'])",
            "num_files":1.0,
            "patch_content":"From a84358aa12f0b1518e606095ab9cfddbf597c121 Mon Sep 17 00:00:00 2001\nFrom: Amit Patankar <amitpatankar@google.com>\nDate: Tue, 4 May 2021 13:45:57 -0700\nSubject: [PATCH] Fix heap-buffer-overflow issue with\n `tf.raw_ops.RaggedTensorToTensor`.\n\nPiperOrigin-RevId: 371986929\nChange-Id: I79ab962a22c5867f36f7f45b780a1ac881b1dbdd\n---\n tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc | 6 ++++++\n 1 file changed, 6 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc b\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc\nindex 434c853b63daa4..376d55945d2ce8 100644\n--- a\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc\n+++ b\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc\n@@ -313,6 +313,12 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\n             output_index_multiplier, output_size, result);\n         return tensorflow::Status::OK();\n       case RowPartitionType::ROW_SPLITS:\n+        if (row_partition_tensor.size() - 1 > parent_output_index.size()) {\n+          return errors::InvalidArgument(\n+              \"Row partition size is greater than output size: \",\n+              row_partition_tensor.size() - 1, \" > \",\n+              parent_output_index.size());\n+        }\n         CalculateOutputIndexRowSplit(\n             context, row_partition_tensor, parent_output_index,\n             output_index_multiplier, output_size, result);"
        },
        {
            "index":369,
            "vuln_id":"GHSA-gp67-c7j2-2qg2",
            "cwe_id":"{'CWE-532', 'CWE-319'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/jenkinsci\/mask-passwords-plugin\/commit\/aadefdbf319954cf0c5acbe032637e1c0a924f37'}",
            "dataset":"osv",
            "summary":"Insertion of Sensitive Information into Log File in Jenkins Mask Passwords Plugin Jenkins Mask Passwords Plugin 2.12.0 and earlier transmits globally configured passwords in plain text as part of the configuration form, potentially resulting in their exposure.",
            "published_date":"2022-05-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/jenkinsci\/mask-passwords-plugin",
            "commit_href":"https:\/\/github.com\/jenkinsci\/mask-passwords-plugin\/commit\/aadefdbf319954cf0c5acbe032637e1c0a924f37",
            "commit_sha":"aadefdbf319954cf0c5acbe032637e1c0a924f37",
            "patch":"SINGLE",
            "chain_ord":"['aadefdbf319954cf0c5acbe032637e1c0a924f37']",
            "before_first_fix_commit":"{'3440b0aa5d2553889245327a9d37a006b4b17c3f'}",
            "last_fix_commit":"aadefdbf319954cf0c5acbe032637e1c0a924f37",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/28\/2020, 02:43:19",
            "message":"[SECURITY-157] Fix global mask passwords config\n\nSince the security issue has been public for several months, there's no\nneed to hide proposing the fix.\n\nThis fixes the global configuration page by displaying the encrypted\nvalues of global password variables instead of plaintext within the\npassword form.\n\nSee also:\n\n- [SECURITY-157][SECURITY-157]\n- [security advisory published 2019-08-07][advisory]\n\n[advisory]: https:\/\/jenkins.io\/security\/advisory\/2019-08-07\/#SECURITY-157\n[SECURITY-157]: https:\/\/issues.jenkins-ci.org\/browse\/SECURITY-157",
            "author":"Sam Gleske",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/main\/resources\/com\/michelin\/cio\/hudson\/plugins\/maskpasswords\/MaskPasswordsBuildWrapper\/global.jelly': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/mask-passwords-plugin\/raw\/aadefdbf319954cf0c5acbe032637e1c0a924f37\/src%2Fmain%2Fresources%2Fcom%2Fmichelin%2Fcio%2Fhudson%2Fplugins%2Fmaskpasswords%2FMaskPasswordsBuildWrapper%2Fglobal.jelly', 'patch': '@@ -51,7 +51,7 @@\\n                         <\/td>\\n                         <td width=\"10%\" align=\"right\">${%Password}<\/td>\\n                         <td width=\"30%\">\\n-                            <f:password name=\"globalVarPasswordPair.password\" value=\"${!empty globalVarPasswordPair.password?globalVarPasswordPair.password:\\'\\'}\"\/>\\n+                            <f:password name=\"globalVarPasswordPair.password\" value=\"${!empty globalVarPasswordPair.passwordAsSecret?globalVarPasswordPair.passwordAsSecret.encryptedValue:\\'\\'}\"\/>\\n                         <\/td>\\n                         <td width=\"20%\" align=\"right\"><f:repeatableDeleteButton\/><\/td>\\n                     <\/tr>'}}",
            "message_norm":"[security-157] fix global mask passwords config\n\nsince the security issue has been public for several months, there's no\nneed to hide proposing the fix.\n\nthis fixes the global configuration page by displaying the encrypted\nvalues of global password variables instead of plaintext within the\npassword form.\n\nsee also:\n\n- [security-157][security-157]\n- [security advisory published 2019-08-07][advisory]\n\n[advisory]: https:\/\/jenkins.io\/security\/advisory\/2019-08-07\/#security-157\n[security-157]: https:\/\/issues.jenkins-ci.org\/browse\/security-157",
            "language":"en",
            "entities":"[('security-157', 'SECWORD', ''), ('fix', 'ACTION', ''), ('passwords', 'SECWORD', ''), ('security', 'SECWORD', ''), ('issue', 'FLAW', ''), ('fixes', 'ACTION', ''), ('password', 'SECWORD', ''), ('password', 'SECWORD', ''), ('security-157][security-157', 'SECWORD', ''), ('security', 'SECWORD', ''), ('https:\/\/jenkins.io\/security\/advisory\/2019-08-07\/#security-157', 'SECWORD', ''), ('security-157', 'SECWORD', ''), ('https:\/\/issues.jenkins-ci.org\/browse\/security-157', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/resources\/com\/michelin\/cio\/hudson\/plugins\/maskpasswords\/MaskPasswordsBuildWrapper\/global.jelly'])",
            "num_files":1.0,
            "patch_content":"From aadefdbf319954cf0c5acbe032637e1c0a924f37 Mon Sep 17 00:00:00 2001\nFrom: Sam Gleske <sam.mxracer@gmail.com>\nDate: Mon, 27 Jan 2020 21:43:19 -0500\nSubject: [PATCH] [SECURITY-157] Fix global mask passwords config\n\nSince the security issue has been public for several months, there's no\nneed to hide proposing the fix.\n\nThis fixes the global configuration page by displaying the encrypted\nvalues of global password variables instead of plaintext within the\npassword form.\n\nSee also:\n\n- [SECURITY-157][SECURITY-157]\n- [security advisory published 2019-08-07][advisory]\n\n[advisory]: https:\/\/jenkins.io\/security\/advisory\/2019-08-07\/#SECURITY-157\n[SECURITY-157]: https:\/\/issues.jenkins-ci.org\/browse\/SECURITY-157\n---\n ...\/maskpasswords\/MaskPasswordsBuildWrapper\/global.jelly        | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/src\/main\/resources\/com\/michelin\/cio\/hudson\/plugins\/maskpasswords\/MaskPasswordsBuildWrapper\/global.jelly b\/src\/main\/resources\/com\/michelin\/cio\/hudson\/plugins\/maskpasswords\/MaskPasswordsBuildWrapper\/global.jelly\nindex 64b1877..6bec6cd 100644\n--- a\/src\/main\/resources\/com\/michelin\/cio\/hudson\/plugins\/maskpasswords\/MaskPasswordsBuildWrapper\/global.jelly\n+++ b\/src\/main\/resources\/com\/michelin\/cio\/hudson\/plugins\/maskpasswords\/MaskPasswordsBuildWrapper\/global.jelly\n@@ -51,7 +51,7 @@\n                         <\/td>\n                         <td width=\"10%\" align=\"right\">${%Password}<\/td>\n                         <td width=\"30%\">\n-                            <f:password name=\"globalVarPasswordPair.password\" value=\"${!empty globalVarPasswordPair.password?globalVarPasswordPair.password:''}\"\/>\n+                            <f:password name=\"globalVarPasswordPair.password\" value=\"${!empty globalVarPasswordPair.passwordAsSecret?globalVarPasswordPair.passwordAsSecret.encryptedValue:''}\"\/>\n                         <\/td>\n                         <td width=\"20%\" align=\"right\"><f:repeatableDeleteButton\/><\/td>\n                     <\/tr>"
        },
        {
            "index":327,
            "vuln_id":"GHSA-3xc7-xg67-pw99",
            "cwe_id":"{'CWE-532'}",
            "score":3.5,
            "chain":"{'https:\/\/github.com\/FelixLC\/cli\/commit\/da59652c061a798282e18efad0b6d0afefa15465'}",
            "dataset":"osv",
            "summary":"Sensitive Data Exposure in sequelize-cli Versions of `sequelize-cli` prior to 5.5.0 are vulnerable to Sensitive Data Exposure. The function `filteredURL()` does not properly sanitize the `config.password` value which may cause passwords with special characters to be logged in plain text.\n\n\n## Recommendation\n\nUpgrade to version 5.5.0 or later.",
            "published_date":"2019-06-05",
            "chain_len":1,
            "project":"https:\/\/github.com\/FelixLC\/cli",
            "commit_href":"https:\/\/github.com\/FelixLC\/cli\/commit\/da59652c061a798282e18efad0b6d0afefa15465",
            "commit_sha":"da59652c061a798282e18efad0b6d0afefa15465",
            "patch":"SINGLE",
            "chain_ord":"['da59652c061a798282e18efad0b6d0afefa15465']",
            "before_first_fix_commit":"{'139f854f05b76367a0bb5bfcc5a9cf549879f432'}",
            "last_fix_commit":"da59652c061a798282e18efad0b6d0afefa15465",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/04\/2018, 10:53:36",
            "message":"Bug Fix: Special characters in password are not escaped\n\nhttps:\/\/github.com\/sequelize\/cli\/issues\/172 is stil open when special characters find their way in a password",
            "author":"FelixLC",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/helpers\/config-helper.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/FelixLC\/cli\/raw\/da59652c061a798282e18efad0b6d0afefa15465\/src%2Fhelpers%2Fconfig-helper.js', 'patch': \"@@ -152,7 +152,7 @@ const api = {\\n   },\\n \\n   filteredUrl (uri, config) {\\n-    const regExp = new RegExp(':?' + (config.password || '') + '@');\\n+    const regExp = new RegExp(':?' + _.escapeRegExp(config.password) + '@');\\n     return uri.replace(regExp, ':*****@');\\n   },\"}}",
            "message_norm":"bug fix: special characters in password are not escaped\n\nhttps:\/\/github.com\/sequelize\/cli\/issues\/172 is stil open when special characters find their way in a password",
            "language":"en",
            "entities":"[('bug', 'FLAW', ''), ('password', 'SECWORD', ''), ('escaped', 'SECWORD', ''), ('https:\/\/github.com\/sequelize\/cli\/issues\/172', 'URL', ''), ('password', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/helpers\/config-helper.js'])",
            "num_files":1.0,
            "patch_content":"From da59652c061a798282e18efad0b6d0afefa15465 Mon Sep 17 00:00:00 2001\nFrom: FelixLC <felix.lechevallier@gmail.com>\nDate: Tue, 4 Dec 2018 11:53:36 +0100\nSubject: [PATCH] Bug Fix: Special characters in password are not escaped\n\nhttps:\/\/github.com\/sequelize\/cli\/issues\/172 is stil open when special characters find their way in a password\n---\n src\/helpers\/config-helper.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/src\/helpers\/config-helper.js b\/src\/helpers\/config-helper.js\nindex fe21286f6..10425c89c 100644\n--- a\/src\/helpers\/config-helper.js\n+++ b\/src\/helpers\/config-helper.js\n@@ -152,7 +152,7 @@ const api = {\n   },\n \n   filteredUrl (uri, config) {\n-    const regExp = new RegExp(':?' + (config.password || '') + '@');\n+    const regExp = new RegExp(':?' + _.escapeRegExp(config.password) + '@');\n     return uri.replace(regExp, ':*****@');\n   },"
        },
        {
            "index":372,
            "vuln_id":"GHSA-53m6-44rc-h2q5",
            "cwe_id":"{'CWE-347'}",
            "score":4.8,
            "chain":"{'https:\/\/github.com\/octobercms\/october\/commit\/e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a'}",
            "dataset":"osv",
            "summary":"Missing server signature validation in OctoberCMS ### Impact\n\nThis advisory affects authors of plugins and themes listed on the October CMS marketplace where an end-user will inadvertently expose authors to potential financial loss by entering their private license key into a compromised server.\n\nIt has been disclosed that a project fork of October CMS v1.0 is using a compromised gateway to access the October CMS marketplace service. The compromised gateway captures the personal\/business information of users and authors, including private source code files. It was also disclosed that captured plugin files are freely redistributed to other users without authorization.\n\n1. End-users are provided with a forked version of October CMS v1.0. The provided software is modified to use a compromised gateway server.\n\n2. The user is instructed to enter their October CMS license key into the administration panel to access the October CMS marketplace. The key is sent to the compromised server while appearing to access the genuine October CMS gateway server.\n\n3. The compromised gateway server uses a \"man in the middle\" mechanism that captures information while forwarding the request to the genuine October CMS gateway and relaying the response back to the client.\n\n4. The compromised gateway server stores the license key and other information about the user account including client name, email address and contents of purchased plugins and privately uploaded plugin files. \n\n5. The stored plugin files are made available to other users of the compromised gateway server.\n\n### Patches\n\nThe issue has been patched in Build 475 (v1.0.475) and v1.1.11.\n\n### Workarounds\n\nApply https:\/\/github.com\/octobercms\/october\/commit\/e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a to your installation manually if unable to upgrade to Build 475 or v1.1.11.\n\n### Recommendations\n\nWe recommend the following steps to make sure your account information stays secure:\n\n- Do not share your license key with anyone except October CMS.\n- Check to make sure that your gateway update server has not been modified.\n- Be aware of phishing websites, including other platforms that use the same appearance.\n- For authors, you may contact us for help requesting the removal of affected plugins.\n- Before providing plugin support, verify that the user holds a legitimate copy of the plugin.\n\n### References\n\nCredits for research on this exploit:\n\u2022 Nikita Khaetsky\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Email us at [hello@octobercms.com](mailto:hello@octobercms.com)",
            "published_date":"2022-02-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/octobercms\/october",
            "commit_href":"https:\/\/github.com\/octobercms\/october\/commit\/e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a",
            "commit_sha":"e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a",
            "patch":"SINGLE",
            "chain_ord":"['e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a']",
            "before_first_fix_commit":"{'e6867a5eb69f5c723adb33b6ca97fcda99634446'}",
            "last_fix_commit":"e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/20\/2022, 01:54:45",
            "message":"Checks gateway server has a valid signature",
            "author":"Sam Georges",
            "comments":null,
            "stats":"{'additions': 38, 'deletions': 2, 'total': 40}",
            "files":"{'modules\/system\/classes\/UpdateManager.php': {'additions': 38, 'deletions': 2, 'changes': 40, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/october\/raw\/e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a\/modules%2Fsystem%2Fclasses%2FUpdateManager.php', 'patch': \"@@ -8,6 +8,7 @@\\n use Cache;\\n use Schema;\\n use Config;\\n+use Request;\\n use ApplicationException;\\n use Cms\\\\Classes\\\\ThemeManager;\\n use System\\\\Models\\\\Parameter;\\n@@ -885,6 +886,10 @@ public function requestServerData($uri, $postData = [])\\n             throw new ApplicationException(Lang::get('system::lang.server.response_invalid'));\\n         }\\n \\n+        if (!$this->validateServerSignature($resultData, $result->headers['Rest-Sign'] ?? '')) {\\n+            throw new ApplicationException(Lang::get('system::lang.server.response_invalid') . ' (Bad signature)');\\n+        }\\n+\\n         return $resultData;\\n     }\\n \\n@@ -963,12 +968,13 @@ protected function createServerUrl($uri)\\n      *\/\\n     protected function applyHttpAttributes($http, $postData)\\n     {\\n-        $postData['protocol_version'] = '1.2';\\n-        $postData['client'] = 'october';\\n+        $postData['protocol_version'] = '1.3';\\n+        $postData['client'] = 'October CMS';\\n \\n         $postData['server'] = base64_encode(json_encode([\\n             'php'   => PHP_VERSION,\\n             'url'   => Url::to('\/'),\\n+            'ip'    => Request::ip(),\\n             'since' => PluginVersion::orderBy('created_at')->value('created_at')\\n         ]));\\n \\n@@ -1070,4 +1076,34 @@ protected function printMessages()\\n             }\\n         }\\n     }\\n+\\n+    \/**\\n+     * validateServerSignature checks the server has provided a valid signature\\n+     *\\n+     * @return bool\\n+     *\/\\n+    protected function validateServerSignature($data, $signature)\\n+    {\\n+        if (!$signature) {\\n+            return false;\\n+        }\\n+\\n+        $signature = base64_decode($signature);\\n+\\n+        $pubKey = '-----BEGIN PUBLIC KEY-----\\n+MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt+KwvTXqC8Mz9vV4KIvX\\n+3y+aZusrlg26jdbNVUuhXNFbt1VisjJydHW2+WGsiEHSy2s61ZAV2dICR6f3huSw\\n+jY\/MH9j23Oo\/u61CBpvIS3Q8uC+TLtJl4\/F9eqlnzocfMoKe8NmcBbUR3TKQoIok\\n+xbSMl6jiE2k5TJdzhHUxjZRIeeLDLMKYX6xt37LdhuM8zO6sXQmCGg4J6LmHTJph\\n+96H11gBvcFSFJSmIiDykJOELZl\/aVcY1g3YgpL0mw5Bw1VTmKaRdz1eBi9DmKrKX\\n+UijG4gD8eLRV\/FS\/sZCFNR\/evbQXvTBxO0TOIVi85PlQEcMl4SBj0CoTyNbcAGtz\\n+4wIDAQAB\\n+-----END PUBLIC KEY-----';\\n+\\n+        $pubKey = Config::get('system.update_gateway_key', $pubKey);\\n+\\n+        $data = base64_encode(json_encode($data));\\n+\\n+        return openssl_verify($data, $signature, $pubKey) === 1;\\n+    }\\n }\"}}",
            "message_norm":"checks gateway server has a valid signature",
            "language":"en",
            "entities":"[('server', 'SECWORD', ''), ('signature', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/system\/classes\/UpdateManager.php'])",
            "num_files":1.0,
            "patch_content":"From e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a Mon Sep 17 00:00:00 2001\nFrom: Sam Georges <sam@daftspunk.com>\nDate: Sun, 20 Feb 2022 12:54:45 +1100\nSubject: [PATCH] Checks gateway server has a valid signature\n\n---\n modules\/system\/classes\/UpdateManager.php | 40 ++++++++++++++++++++++--\n 1 file changed, 38 insertions(+), 2 deletions(-)\n\ndiff --git a\/modules\/system\/classes\/UpdateManager.php b\/modules\/system\/classes\/UpdateManager.php\nindex 5375225647..b73f40358b 100644\n--- a\/modules\/system\/classes\/UpdateManager.php\n+++ b\/modules\/system\/classes\/UpdateManager.php\n@@ -8,6 +8,7 @@\n use Cache;\n use Schema;\n use Config;\n+use Request;\n use ApplicationException;\n use Cms\\Classes\\ThemeManager;\n use System\\Models\\Parameter;\n@@ -885,6 +886,10 @@ public function requestServerData($uri, $postData = [])\n             throw new ApplicationException(Lang::get('system::lang.server.response_invalid'));\n         }\n \n+        if (!$this->validateServerSignature($resultData, $result->headers['Rest-Sign'] ?? '')) {\n+            throw new ApplicationException(Lang::get('system::lang.server.response_invalid') . ' (Bad signature)');\n+        }\n+\n         return $resultData;\n     }\n \n@@ -963,12 +968,13 @@ protected function createServerUrl($uri)\n      *\/\n     protected function applyHttpAttributes($http, $postData)\n     {\n-        $postData['protocol_version'] = '1.2';\n-        $postData['client'] = 'october';\n+        $postData['protocol_version'] = '1.3';\n+        $postData['client'] = 'October CMS';\n \n         $postData['server'] = base64_encode(json_encode([\n             'php'   => PHP_VERSION,\n             'url'   => Url::to('\/'),\n+            'ip'    => Request::ip(),\n             'since' => PluginVersion::orderBy('created_at')->value('created_at')\n         ]));\n \n@@ -1070,4 +1076,34 @@ protected function printMessages()\n             }\n         }\n     }\n+\n+    \/**\n+     * validateServerSignature checks the server has provided a valid signature\n+     *\n+     * @return bool\n+     *\/\n+    protected function validateServerSignature($data, $signature)\n+    {\n+        if (!$signature) {\n+            return false;\n+        }\n+\n+        $signature = base64_decode($signature);\n+\n+        $pubKey = '-----BEGIN PUBLIC KEY-----\n+MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt+KwvTXqC8Mz9vV4KIvX\n+3y+aZusrlg26jdbNVUuhXNFbt1VisjJydHW2+WGsiEHSy2s61ZAV2dICR6f3huSw\n+jY\/MH9j23Oo\/u61CBpvIS3Q8uC+TLtJl4\/F9eqlnzocfMoKe8NmcBbUR3TKQoIok\n+xbSMl6jiE2k5TJdzhHUxjZRIeeLDLMKYX6xt37LdhuM8zO6sXQmCGg4J6LmHTJph\n+96H11gBvcFSFJSmIiDykJOELZl\/aVcY1g3YgpL0mw5Bw1VTmKaRdz1eBi9DmKrKX\n+UijG4gD8eLRV\/FS\/sZCFNR\/evbQXvTBxO0TOIVi85PlQEcMl4SBj0CoTyNbcAGtz\n+4wIDAQAB\n+-----END PUBLIC KEY-----';\n+\n+        $pubKey = Config::get('system.update_gateway_key', $pubKey);\n+\n+        $data = base64_encode(json_encode($data));\n+\n+        return openssl_verify($data, $signature, $pubKey) === 1;\n+    }\n }"
        },
        {
            "index":390,
            "vuln_id":"GHSA-q73m-3q7r-fpf7",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/d1c9ed0d77ea5d56f09be0c492361dca8af745bb'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in ShowDoc ShowDoc prior to 2.10.4 is vulnerable to stored cross-site scripting via file upload.",
            "published_date":"2022-03-16",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/d1c9ed0d77ea5d56f09be0c492361dca8af745bb",
            "commit_sha":"d1c9ed0d77ea5d56f09be0c492361dca8af745bb",
            "patch":"SINGLE",
            "chain_ord":"['d1c9ed0d77ea5d56f09be0c492361dca8af745bb']",
            "before_first_fix_commit":"{'56e450c3adf75c707500d7231a78c9fc894c7f13', 'aa41c83e0cc5079fb39e04d9f630571ffb8bbf22'}",
            "last_fix_commit":"d1c9ed0d77ea5d56f09be0c492361dca8af745bb",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/14\/2022, 12:29:34",
            "message":"Merge pull request #1632 from ajaysenr\/master\n\nUpdate AttachmentModel.class.php",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/d1c9ed0d77ea5d56f09be0c492361dca8af745bb\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': \"@@ -325,7 +325,7 @@ public function isAllowedFilename($filename){\\n \\t\\t$allow_array = array(\\n \\t\\t\\t'.jpg','.jpeg','.png','.bmp','.gif','.ico','.webp',\\n \\t\\t\\t'.mp3','.wav','.m4a','.ogg','.webma','.mp4','.flv',\\n-\\t\\t\\t'.mov','.webmv','.m3u8a','.flac','.mkv',\\n+\\t\\t\\t'.mov','.webmv','.flac','.mkv',\\n \\t\\t\\t'.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso','.bz2','.epub',\\n \\t\\t\\t'.pdf','.ofd','.swf','.epub','.xps',\\n \\t\\t\\t'.doc','.docx','.odt','.rtf','.docm','.dotm','.dot','.dotx','.wps','.wpt',\"}}",
            "message_norm":"merge pull request #1632 from ajaysenr\/master\n\nupdate attachmentmodel.class.php",
            "language":"en",
            "entities":"[('#1632', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
            "num_files":1.0,
            "patch_content":"From aa41c83e0cc5079fb39e04d9f630571ffb8bbf22 Mon Sep 17 00:00:00 2001\nFrom: Ajaysen R <40132420+ajaysenr@users.noreply.github.com>\nDate: Mon, 14 Mar 2022 12:24:33 +0000\nSubject: [PATCH] Update AttachmentModel.class.php\n\n---\n server\/Application\/Api\/Model\/AttachmentModel.class.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/server\/Application\/Api\/Model\/AttachmentModel.class.php b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\nindex 3ce94ceaf..ac9666c1f 100644\n--- a\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n+++ b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n@@ -325,7 +325,7 @@ public function isAllowedFilename($filename){\n \t\t$allow_array = array(\n \t\t\t'.jpg','.jpeg','.png','.bmp','.gif','.ico','.webp',\n \t\t\t'.mp3','.wav','.m4a','.ogg','.webma','.mp4','.flv',\n-\t\t\t'.mov','.webmv','.m3u8a','.flac','.mkv',\n+\t\t\t'.mov','.webmv','.flac','.mkv',\n \t\t\t'.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso','.bz2','.epub',\n \t\t\t'.pdf','.ofd','.swf','.epub','.xps',\n \t\t\t'.doc','.docx','.odt','.rtf','.docm','.dotm','.dot','.dotx','.wps','.wpt',"
        },
        {
            "index":556,
            "vuln_id":"GHSA-v592-xf75-856p",
            "cwe_id":"{'CWE-682'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/ethereum\/go-ethereum\/commit\/d990df909d7839640143344e79356754384dcdd0'}",
            "dataset":"osv",
            "summary":"Erroneous Proof of Work calculation in geth ### Impact\nAn ethash mining DAG generation flaw in Geth could cause miners to erroneously calculate PoW in an upcoming epoch (estimated early January, 2021). This happened on the ETC chain on 2020-11-06. This issue is relevant only for miners, non-mining nodes are unaffected.\n\n### Patches\nThis issue is also fixed as of 1.9.24. Thanks to @slavikus for bringing the issue to our attention and writing the fix. \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-ethereum](https:\/\/github.com\/ethereum\/go-ethereum)\n* Email us at [security@ethereum.org](mailto:security@ethereum.org)",
            "published_date":"2021-06-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/ethereum\/go-ethereum",
            "commit_href":"https:\/\/github.com\/ethereum\/go-ethereum\/commit\/d990df909d7839640143344e79356754384dcdd0",
            "commit_sha":"d990df909d7839640143344e79356754384dcdd0",
            "patch":"SINGLE",
            "chain_ord":"['d990df909d7839640143344e79356754384dcdd0']",
            "before_first_fix_commit":"{'27d93c1848846b75d0e67fcac284a0d417acd47c'}",
            "last_fix_commit":"d990df909d7839640143344e79356754384dcdd0",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/11\/2020, 20:13:12",
            "message":"consensus\/ethash: use 64bit indexes for the DAG generation (#21793)\n\n* Bit boundary fix for the DAG generation routine\r\n\r\n* Fix unnecessary conversion warnings\r\n\r\nCo-authored-by: Sergey Pavlov <spavlov@gmail.com>",
            "author":"Slava Karpenko",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 5, 'total': 10}",
            "files":"{'consensus\/ethash\/algorithm.go': {'additions': 5, 'deletions': 5, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ethereum\/go-ethereum\/raw\/d990df909d7839640143344e79356754384dcdd0\/consensus%2Fethash%2Falgorithm.go', 'patch': '@@ -304,16 +304,16 @@ func generateDataset(dest []uint32, epoch uint64, cache []uint32) {\\n \\t\\t\\tkeccak512 := makeHasher(sha3.NewLegacyKeccak512())\\n \\n \\t\\t\\t\/\/ Calculate the data segment this thread should generate\\n-\\t\\t\\tbatch := uint32((size + hashBytes*uint64(threads) - 1) \/ (hashBytes * uint64(threads)))\\n-\\t\\t\\tfirst := uint32(id) * batch\\n+\\t\\t\\tbatch := (size + hashBytes*uint64(threads) - 1) \/ (hashBytes * uint64(threads))\\n+\\t\\t\\tfirst := uint64(id) * batch\\n \\t\\t\\tlimit := first + batch\\n-\\t\\t\\tif limit > uint32(size\/hashBytes) {\\n-\\t\\t\\t\\tlimit = uint32(size \/ hashBytes)\\n+\\t\\t\\tif limit > size\/hashBytes {\\n+\\t\\t\\t\\tlimit = size \/ hashBytes\\n \\t\\t\\t}\\n \\t\\t\\t\/\/ Calculate the dataset segment\\n \\t\\t\\tpercent := size \/ hashBytes \/ 100\\n \\t\\t\\tfor index := first; index < limit; index++ {\\n-\\t\\t\\t\\titem := generateDatasetItem(cache, index, keccak512)\\n+\\t\\t\\t\\titem := generateDatasetItem(cache, uint32(index), keccak512)\\n \\t\\t\\t\\tif swapped {\\n \\t\\t\\t\\t\\tswap(item)\\n \\t\\t\\t\\t}'}}",
            "message_norm":"consensus\/ethash: use 64bit indexes for the dag generation (#21793)\n\n* bit boundary fix for the dag generation routine\r\n\r\n* fix unnecessary conversion warnings\r\n\r\nco-authored-by: sergey pavlov <spavlov@gmail.com>",
            "language":"en",
            "entities":"[('#21793', 'ISSUE', ''), ('fix', 'ACTION', ''), ('warnings', 'FLAW', ''), ('spavlov@gmail.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['consensus\/ethash\/algorithm.go'])",
            "num_files":1.0,
            "patch_content":"From d990df909d7839640143344e79356754384dcdd0 Mon Sep 17 00:00:00 2001\nFrom: Slava Karpenko <slavikus@gmail.com>\nDate: Wed, 11 Nov 2020 21:13:12 +0100\nSubject: [PATCH] consensus\/ethash: use 64bit indexes for the DAG generation\n (#21793)\n\n* Bit boundary fix for the DAG generation routine\n\n* Fix unnecessary conversion warnings\n\nCo-authored-by: Sergey Pavlov <spavlov@gmail.com>\n---\n consensus\/ethash\/algorithm.go | 10 +++++-----\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\ndiff --git a\/consensus\/ethash\/algorithm.go b\/consensus\/ethash\/algorithm.go\nindex e79c702dc8c7..47d7e51b5959 100644\n--- a\/consensus\/ethash\/algorithm.go\n+++ b\/consensus\/ethash\/algorithm.go\n@@ -304,16 +304,16 @@ func generateDataset(dest []uint32, epoch uint64, cache []uint32) {\n \t\t\tkeccak512 := makeHasher(sha3.NewLegacyKeccak512())\n \n \t\t\t\/\/ Calculate the data segment this thread should generate\n-\t\t\tbatch := uint32((size + hashBytes*uint64(threads) - 1) \/ (hashBytes * uint64(threads)))\n-\t\t\tfirst := uint32(id) * batch\n+\t\t\tbatch := (size + hashBytes*uint64(threads) - 1) \/ (hashBytes * uint64(threads))\n+\t\t\tfirst := uint64(id) * batch\n \t\t\tlimit := first + batch\n-\t\t\tif limit > uint32(size\/hashBytes) {\n-\t\t\t\tlimit = uint32(size \/ hashBytes)\n+\t\t\tif limit > size\/hashBytes {\n+\t\t\t\tlimit = size \/ hashBytes\n \t\t\t}\n \t\t\t\/\/ Calculate the dataset segment\n \t\t\tpercent := size \/ hashBytes \/ 100\n \t\t\tfor index := first; index < limit; index++ {\n-\t\t\t\titem := generateDatasetItem(cache, index, keccak512)\n+\t\t\t\titem := generateDatasetItem(cache, uint32(index), keccak512)\n \t\t\t\tif swapped {\n \t\t\t\t\tswap(item)\n \t\t\t\t}"
        },
        {
            "index":819,
            "vuln_id":"GHSA-fx7m-j728-mjw3",
            "cwe_id":"{'CWE-185'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/ua-parser\/uap-core\/commit\/010ccdc7303546cd22b9da687c29f4a996990014', 'https:\/\/github.com\/ua-parser\/uap-core\/commit\/156f7e12b215bddbaf3df4514c399d683e6cdadc'}",
            "dataset":"osv",
            "summary":"Moderate severity vulnerability that affects uap-core An issue was discovered in regex.yaml (aka regexes.yaml) in UA-Parser UAP-Core before 0.6.0. A Regular Expression Denial of Service (ReDoS) issue allows remote attackers to overload a server by setting the User-Agent header in an HTTP(S) request to a value containing a long digit string. (The UAP-Core project contains the vulnerability, propagating to all implementations.)",
            "published_date":"2019-03-06",
            "chain_len":2,
            "project":"https:\/\/github.com\/ua-parser\/uap-core",
            "commit_href":"https:\/\/github.com\/ua-parser\/uap-core\/commit\/010ccdc7303546cd22b9da687c29f4a996990014",
            "commit_sha":"010ccdc7303546cd22b9da687c29f4a996990014",
            "patch":"MULTI",
            "chain_ord":"['156f7e12b215bddbaf3df4514c399d683e6cdadc', '010ccdc7303546cd22b9da687c29f4a996990014']",
            "before_first_fix_commit":"{'764947f552c6fc9ac80759acb5165a83ee746678'}",
            "last_fix_commit":"010ccdc7303546cd22b9da687c29f4a996990014",
            "chain_ord_pos":2.0,
            "commit_datetime":"12\/14\/2018, 07:19:47",
            "message":"0.6.0",
            "author":"commenthol",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'package.json': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ua-parser\/uap-core\/raw\/010ccdc7303546cd22b9da687c29f4a996990014\/package.json', 'patch': '@@ -1,7 +1,7 @@\\n {\\n   \"name\": \"uap-core\",\\n   \"description\": \"The regex file necessary to build language ports of Browserscope\\'s user agent parser.\",\\n-  \"version\": \"0.5.0\",\\n+  \"version\": \"0.6.0\",\\n   \"maintainers\": [\\n     {\\n       \"name\": \"Tobie Langel\",'}}",
            "message_norm":"0.6.0",
            "language":"",
            "entities":"[('0.6.0', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['package.json'])",
            "num_files":1.0,
            "patch_content":"From 010ccdc7303546cd22b9da687c29f4a996990014 Mon Sep 17 00:00:00 2001\nFrom: commenthol <commenthol@gmail.com>\nDate: Fri, 14 Dec 2018 08:19:47 +0100\nSubject: [PATCH] 0.6.0\n\n---\n package.json | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/package.json b\/package.json\nindex b2e86166..f755375a 100644\n--- a\/package.json\n+++ b\/package.json\n@@ -1,7 +1,7 @@\n {\n   \"name\": \"uap-core\",\n   \"description\": \"The regex file necessary to build language ports of Browserscope's user agent parser.\",\n-  \"version\": \"0.5.0\",\n+  \"version\": \"0.6.0\",\n   \"maintainers\": [\n     {\n       \"name\": \"Tobie Langel\","
        },
        {
            "index":698,
            "vuln_id":"GHSA-xfhh-g9f5-x4m4",
            "cwe_id":"{'CWE-400'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/socketio\/socket.io-parser\/commit\/dcb942d24db97162ad16a67c2a0cf30875342d55'}",
            "dataset":"osv",
            "summary":"Resource exhaustion in socket.io-parser The `socket.io-parser` npm package before versions 3.3.2 and 3.4.1 allows attackers to cause a denial of service (memory consumption) via a large packet because a concatenation approach is used.",
            "published_date":"2021-06-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/socketio\/socket.io-parser",
            "commit_href":"https:\/\/github.com\/socketio\/socket.io-parser\/commit\/dcb942d24db97162ad16a67c2a0cf30875342d55",
            "commit_sha":"dcb942d24db97162ad16a67c2a0cf30875342d55",
            "patch":"SINGLE",
            "chain_ord":"['dcb942d24db97162ad16a67c2a0cf30875342d55']",
            "before_first_fix_commit":"{'a5d04354e6e98b5318d5276123b0b5a5e698bf8e'}",
            "last_fix_commit":"dcb942d24db97162ad16a67c2a0cf30875342d55",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/13\/2020, 05:37:32",
            "message":"fix: prevent DoS (OOM) via massive packets (#95)\n\nWhen maxHttpBufferSize is large (1e8 bytes), a payload of length 100MB\r\ncan be sent like so:\r\n\r\n99999991:422222222222222222222222222222222222222222222...\r\n\r\nThis massive packet can cause OOM via building up many many\r\n`ConsOneByteString` objects due to concatenation:\r\n99999989 `ConsOneByteString`s and then converting the massive integer to\r\na `Number`.\r\n\r\nThe performance can be improved to avoid this by using `substring`\r\nrather than building the string via concatenation.\r\n\r\nBelow I tried one payload of length 7e7 as the 1e8 payload took so\r\nlong to process that it timed out before running out of memory.\r\n\r\n```\r\n==== JS stack trace =========================================\r\n\r\n    0: ExitFrame [pc: 0x13c5b79]\r\nSecurity context: 0x152fe7b808d1 <JSObject>\r\n    1: decodeString [0x2dd385fb5d1] [\/node_modules\/socket.io-parser\/index.js:~276] [pc=0xf59746881be](this=0x175d34c42b69 <JSGlobal Object>,0x14eccff10fe1 <Very long string[69999990]>)\r\n    2: add [0x31fc2693da29] [\/node_modules\/socket.io-parser\/index.js:242] [bytecode=0xa7ed6554889 offset=11](this=0x0a2881be5069 <Decoder map = 0x3ceaa8bf48c9>,0x14eccff10fe1 <Very...\r\n\r\nFATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory\r\n 1: 0xa09830 node::Abort() [node]\r\n 2: 0xa09c55 node::OnFatalError(char const*, char const*) [node]\r\n 3: 0xb7d71e v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [node]\r\n 4: 0xb7da99 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [node]\r\n 5: 0xd2a1f5  [node]\r\n 6: 0xd2a886 v8::internal::Heap::RecomputeLimits(v8::internal::GarbageCollector) [node]\r\n 7: 0xd37105 v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::GCCallbackFlags) [node]\r\n 8: 0xd37fb5 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) [node]\r\n 9: 0xd3965f v8::internal::Heap::HandleGCRequest() [node]\r\n10: 0xce8395 v8::internal::StackGuard::HandleInterrupts() [node]\r\n11: 0x1042cb6 v8::internal::Runtime_StackGuard(int, unsigned long*, v8::internal::Isolate*) [node]\r\n12: 0x13c5b79  [node]\r\n```",
            "author":"bcaller",
            "comments":"{'com_1': {'author': 'abergmann', 'datetime': '01\/08\/2021, 09:15:14', 'body': '[CVE-2020-36049](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2020-36049) was assigned to this commit.'}}",
            "stats":"{'additions': 7, 'deletions': 10, 'total': 17}",
            "files":"{'index.js': {'additions': 7, 'deletions': 10, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/socketio\/socket.io-parser\/raw\/dcb942d24db97162ad16a67c2a0cf30875342d55\/index.js', 'patch': \"@@ -286,11 +286,9 @@ function decodeString(str) {\\n \\n   \/\/ look up attachments if type binary\\n   if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\\n-    var buf = '';\\n-    while (str.charAt(++i) !== '-') {\\n-      buf += str.charAt(i);\\n-      if (i == str.length) break;\\n-    }\\n+    var start = i + 1;\\n+    while (str.charAt(++i) !== '-' && i != str.length) {}\\n+    var buf = str.substring(start, i);\\n     if (buf != Number(buf) || str.charAt(i) !== '-') {\\n       throw new Error('Illegal attachments');\\n     }\\n@@ -299,31 +297,30 @@ function decodeString(str) {\\n \\n   \/\/ look up namespace (if any)\\n   if ('\/' === str.charAt(i + 1)) {\\n-    p.nsp = '';\\n+    var start = i + 1;\\n     while (++i) {\\n       var c = str.charAt(i);\\n       if (',' === c) break;\\n-      p.nsp += c;\\n       if (i === str.length) break;\\n     }\\n+    p.nsp = str.substring(start, i);\\n   } else {\\n     p.nsp = '\/';\\n   }\\n \\n   \/\/ look up id\\n   var next = str.charAt(i + 1);\\n   if ('' !== next && Number(next) == next) {\\n-    p.id = '';\\n+    var start = i + 1;\\n     while (++i) {\\n       var c = str.charAt(i);\\n       if (null == c || Number(c) != c) {\\n         --i;\\n         break;\\n       }\\n-      p.id += str.charAt(i);\\n       if (i === str.length) break;\\n     }\\n-    p.id = Number(p.id);\\n+    p.id = Number(str.substring(start, i + 1));\\n   }\\n \\n   \/\/ look up json data\"}}",
            "message_norm":"fix: prevent dos (oom) via massive packets (#95)\n\nwhen maxhttpbuffersize is large (1e8 bytes), a payload of length 100mb\r\ncan be sent like so:\r\n\r\n99999991:422222222222222222222222222222222222222222222...\r\n\r\nthis massive packet can cause oom via building up many many\r\n`consonebytestring` objects due to concatenation:\r\n99999989 `consonebytestring`s and then converting the massive integer to\r\na `number`.\r\n\r\nthe performance can be improved to avoid this by using `substring`\r\nrather than building the string via concatenation.\r\n\r\nbelow i tried one payload of length 7e7 as the 1e8 payload took so\r\nlong to process that it timed out before running out of memory.\r\n\r\n```\r\n==== js stack trace =========================================\r\n\r\n    0: exitframe [pc: 0x13c5b79]\r\nsecurity context: 0x152fe7b808d1 <jsobject>\r\n    1: decodestring [0x2dd385fb5d1] [\/node_modules\/socket.io-parser\/index.js:~276] [pc=0xf59746881be](this=0x175d34c42b69 <jsglobal object>,0x14eccff10fe1 <very long string[69999990]>)\r\n    2: add [0x31fc2693da29] [\/node_modules\/socket.io-parser\/index.js:242] [bytecode=0xa7ed6554889 offset=11](this=0x0a2881be5069 <decoder map = 0x3ceaa8bf48c9>,0x14eccff10fe1 <very...\r\n\r\nfatal error: ineffective mark-compacts near heap limit allocation failed - javascript heap out of memory\r\n 1: 0xa09830 node::abort() [node]\r\n 2: 0xa09c55 node::onfatalerror(char const*, char const*) [node]\r\n 3: 0xb7d71e v8::utils::reportoomfailure(v8::internal::isolate*, char const*, bool) [node]\r\n 4: 0xb7da99 v8::internal::v8::fatalprocessoutofmemory(v8::internal::isolate*, char const*, bool) [node]\r\n 5: 0xd2a1f5  [node]\r\n 6: 0xd2a886 v8::internal::heap::recomputelimits(v8::internal::garbagecollector) [node]\r\n 7: 0xd37105 v8::internal::heap::performgarbagecollection(v8::internal::garbagecollector, v8::gccallbackflags) [node]\r\n 8: 0xd37fb5 v8::internal::heap::collectgarbage(v8::internal::allocationspace, v8::internal::garbagecollectionreason, v8::gccallbackflags) [node]\r\n 9: 0xd3965f v8::internal::heap::handlegcrequest() [node]\r\n10: 0xce8395 v8::internal::stackguard::handleinterrupts() [node]\r\n11: 0x1042cb6 v8::internal::runtime_stackguard(int, unsigned long*, v8::internal::isolate*) [node]\r\n12: 0x13c5b79  [node]\r\n```",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('dos', 'SECWORD', ''), ('#95', 'ISSUE', ''), ('99999989', 'SHA', 'generic_sha'), ('improved', 'ACTION', ''), ('out of memory', 'SECWORD', ''), ('security', 'SECWORD', ''), ('decodestring', 'SECWORD', ''), ('add', 'ACTION', ''), ('decoder', 'SECWORD', ''), ('error', 'FLAW', ''), ('out of memory', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0,
            "patch_content":"From dcb942d24db97162ad16a67c2a0cf30875342d55 Mon Sep 17 00:00:00 2001\nFrom: bcaller <bcaller@users.noreply.github.com>\nDate: Wed, 13 May 2020 06:37:32 +0100\nSubject: [PATCH] fix: prevent DoS (OOM) via massive packets (#95)\n\nWhen maxHttpBufferSize is large (1e8 bytes), a payload of length 100MB\ncan be sent like so:\n\n99999991:422222222222222222222222222222222222222222222...\n\nThis massive packet can cause OOM via building up many many\n`ConsOneByteString` objects due to concatenation:\n99999989 `ConsOneByteString`s and then converting the massive integer to\na `Number`.\n\nThe performance can be improved to avoid this by using `substring`\nrather than building the string via concatenation.\n\nBelow I tried one payload of length 7e7 as the 1e8 payload took so\nlong to process that it timed out before running out of memory.\n\n```\n==== JS stack trace =========================================\n\n    0: ExitFrame [pc: 0x13c5b79]\nSecurity context: 0x152fe7b808d1 <JSObject>\n    1: decodeString [0x2dd385fb5d1] [\/node_modules\/socket.io-parser\/index.js:~276] [pc=0xf59746881be](this=0x175d34c42b69 <JSGlobal Object>,0x14eccff10fe1 <Very long string[69999990]>)\n    2: add [0x31fc2693da29] [\/node_modules\/socket.io-parser\/index.js:242] [bytecode=0xa7ed6554889 offset=11](this=0x0a2881be5069 <Decoder map = 0x3ceaa8bf48c9>,0x14eccff10fe1 <Very...\n\nFATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory\n 1: 0xa09830 node::Abort() [node]\n 2: 0xa09c55 node::OnFatalError(char const*, char const*) [node]\n 3: 0xb7d71e v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [node]\n 4: 0xb7da99 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [node]\n 5: 0xd2a1f5  [node]\n 6: 0xd2a886 v8::internal::Heap::RecomputeLimits(v8::internal::GarbageCollector) [node]\n 7: 0xd37105 v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::GCCallbackFlags) [node]\n 8: 0xd37fb5 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) [node]\n 9: 0xd3965f v8::internal::Heap::HandleGCRequest() [node]\n10: 0xce8395 v8::internal::StackGuard::HandleInterrupts() [node]\n11: 0x1042cb6 v8::internal::Runtime_StackGuard(int, unsigned long*, v8::internal::Isolate*) [node]\n12: 0x13c5b79  [node]\n```\n---\n index.js | 17 +++++++----------\n 1 file changed, 7 insertions(+), 10 deletions(-)\n\ndiff --git a\/index.js b\/index.js\nindex 102615a..ff613cc 100644\n--- a\/index.js\n+++ b\/index.js\n@@ -286,11 +286,9 @@ function decodeString(str) {\n \n   \/\/ look up attachments if type binary\n   if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n-    var buf = '';\n-    while (str.charAt(++i) !== '-') {\n-      buf += str.charAt(i);\n-      if (i == str.length) break;\n-    }\n+    var start = i + 1;\n+    while (str.charAt(++i) !== '-' && i != str.length) {}\n+    var buf = str.substring(start, i);\n     if (buf != Number(buf) || str.charAt(i) !== '-') {\n       throw new Error('Illegal attachments');\n     }\n@@ -299,13 +297,13 @@ function decodeString(str) {\n \n   \/\/ look up namespace (if any)\n   if ('\/' === str.charAt(i + 1)) {\n-    p.nsp = '';\n+    var start = i + 1;\n     while (++i) {\n       var c = str.charAt(i);\n       if (',' === c) break;\n-      p.nsp += c;\n       if (i === str.length) break;\n     }\n+    p.nsp = str.substring(start, i);\n   } else {\n     p.nsp = '\/';\n   }\n@@ -313,17 +311,16 @@ function decodeString(str) {\n   \/\/ look up id\n   var next = str.charAt(i + 1);\n   if ('' !== next && Number(next) == next) {\n-    p.id = '';\n+    var start = i + 1;\n     while (++i) {\n       var c = str.charAt(i);\n       if (null == c || Number(c) != c) {\n         --i;\n         break;\n       }\n-      p.id += str.charAt(i);\n       if (i === str.length) break;\n     }\n-    p.id = Number(p.id);\n+    p.id = Number(str.substring(start, i + 1));\n   }\n \n   \/\/ look up json data"
        },
        {
            "index":660,
            "vuln_id":"GHSA-3w67-q784-6w7c",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8e45822aa0b9f5df4b4c64f221e64dc930a70a9d'}",
            "dataset":"osv",
            "summary":"Division by zero in TFLite's implementation of `GatherNd` ### Impact\nThe reference implementation of the `GatherNd` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0d45ea1ca641b21b73bcf9c00e0179cda284e7e7\/tensorflow\/lite\/kernels\/internal\/reference\/reference_ops.h#L966):\n\n```cc \nret.dims_to_count[i] = remain_flat_size \/ params_shape.Dims(i);\n```\n\nAn attacker can craft a model such that `params` input would be an empty tensor. In turn, `params_shape.Dims(.)` would be zero, in at least one dimension.\n\n### Patches\nWe have patched the issue in GitHub commit [8e45822aa0b9f5df4b4c64f221e64dc930a70a9d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8e45822aa0b9f5df4b4c64f221e64dc930a70a9d).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions. \n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8e45822aa0b9f5df4b4c64f221e64dc930a70a9d",
            "commit_sha":"8e45822aa0b9f5df4b4c64f221e64dc930a70a9d",
            "patch":"SINGLE",
            "chain_ord":"['8e45822aa0b9f5df4b4c64f221e64dc930a70a9d']",
            "before_first_fix_commit":"{'0d45ea1ca641b21b73bcf9c00e0179cda284e7e7'}",
            "last_fix_commit":"8e45822aa0b9f5df4b4c64f221e64dc930a70a9d",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 00:46:10",
            "message":"Handle one more division by 0 in TFLite.\n\nPiperOrigin-RevId: 370800140\nChange-Id: I9ab42e5aaccf02f226d1282611490a54cf7d273e",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/lite\/kernels\/gather_nd.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8e45822aa0b9f5df4b4c64f221e64dc930a70a9d\/tensorflow%2Flite%2Fkernels%2Fgather_nd.cc', 'patch': '@@ -155,6 +155,9 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\\n   TF_LITE_ENSURE_OK(context,\\n                     GetOutputSafe(context, node, kOutputTensor, &output));\\n \\n+  \/\/ Prevent division by 0 in the helper\\n+  TF_LITE_ENSURE(context, NumElements(params) > 0);\\n+\\n   switch (indices->type) {\\n     case kTfLiteInt32:\\n       return EvalGatherNd<int32_t>(context, params, indices, output);'}}",
            "message_norm":"handle one more division by 0 in tflite.\n\npiperorigin-revid: 370800140\nchange-id: i9ab42e5aaccf02f226d1282611490a54cf7d273e",
            "language":"en",
            "entities":"[('division by 0', 'SECWORD', ''), ('370800140', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/gather_nd.cc'])",
            "num_files":1.0,
            "patch_content":"From 8e45822aa0b9f5df4b4c64f221e64dc930a70a9d Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Tue, 27 Apr 2021 17:46:10 -0700\nSubject: [PATCH] Handle one more division by 0 in TFLite.\n\nPiperOrigin-RevId: 370800140\nChange-Id: I9ab42e5aaccf02f226d1282611490a54cf7d273e\n---\n tensorflow\/lite\/kernels\/gather_nd.cc | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/tensorflow\/lite\/kernels\/gather_nd.cc b\/tensorflow\/lite\/kernels\/gather_nd.cc\nindex 11251f2446f19f..3ded771382569e 100644\n--- a\/tensorflow\/lite\/kernels\/gather_nd.cc\n+++ b\/tensorflow\/lite\/kernels\/gather_nd.cc\n@@ -155,6 +155,9 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\n   TF_LITE_ENSURE_OK(context,\n                     GetOutputSafe(context, node, kOutputTensor, &output));\n \n+  \/\/ Prevent division by 0 in the helper\n+  TF_LITE_ENSURE(context, NumElements(params) > 0);\n+\n   switch (indices->type) {\n     case kTfLiteInt32:\n       return EvalGatherNd<int32_t>(context, params, indices, output);"
        },
        {
            "index":330,
            "vuln_id":"GHSA-vjv6-gq77-3mjw",
            "cwe_id":"{'CWE-611'}",
            "score":9.3,
            "chain":"{'https:\/\/github.com\/mapfish\/mapfish-print\/pull\/1397\/commits\/e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e'}",
            "dataset":"osv",
            "summary":"XXE attack in Mapfish Print ### Impact\nA user can do to an XML External Entity (XXE) attack with the provided SDL style.\n\n### Patches\nUse version >= 3.24\n\n### Workarounds\nNo\n\n### References\n* https:\/\/cwe.mitre.org\/data\/definitions\/611.html\n* https:\/\/github.com\/mapfish\/mapfish-print\/pull\/1397\/commits\/e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e\n\n### For more information\nIf you have any questions or comments about this advisory Comment the pull request: https:\/\/github.com\/mapfish\/mapfish-print\/pull\/1397",
            "published_date":"2020-07-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/mapfish\/mapfish-print",
            "commit_href":"https:\/\/github.com\/mapfish\/mapfish-print\/pull\/1397\/commits\/e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e",
            "commit_sha":"e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e",
            "patch":"SINGLE",
            "chain_ord":"['e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e']",
            "before_first_fix_commit":"{'4b59454140e1bd312c728d99d7de82714000c195'}",
            "last_fix_commit":"e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/02\/2020, 14:25:50",
            "message":"See: https:\/\/github.com\/mapfish\/mapfish-print\/security\/code-scanning\/3?query=ref%3Arefs%2Fheads%2Fmaster",
            "author":"St\u00e9phane Brunner",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'core\/src\/main\/java\/org\/mapfish\/print\/map\/style\/SLDParserPlugin.java': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mapfish\/mapfish-print\/raw\/e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e\/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fmapfish%2Fprint%2Fmap%2Fstyle%2FSLDParserPlugin.java', 'patch': '@@ -94,6 +94,7 @@ private Optional<Style> tryLoadSLD(\\n             \/\/ by setting a custom error handler.\\n             DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\\n             dbf.setNamespaceAware(true);\\n+            dbf.setFeature(\"http:\/\/apache.org\/xml\/features\/disallow-doctype-decl\", true);\\n             DocumentBuilder db = dbf.newDocumentBuilder();\\n             db.setErrorHandler(new ErrorHandler());\\n             db.parse(new ByteArrayInputStream(bytes));'}}",
            "message_norm":"see: https:\/\/github.com\/mapfish\/mapfish-print\/security\/code-scanning\/3?query=ref%3arefs%2fheads%2fmaster",
            "language":"en",
            "entities":"[('https:\/\/github.com\/mapfish\/mapfish-print\/security\/code-scanning\/3?query=ref%3arefs%2fheads%2fmaster', 'URL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['core\/src\/main\/java\/org\/mapfish\/print\/map\/style\/SLDParserPlugin.java'])",
            "num_files":1.0,
            "patch_content":"From e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?St=C3=A9phane=20Brunner?= <stephane.brunner@camptocamp.com>\nDate: Thu, 2 Jul 2020 16:25:50 +0200\nSubject: [PATCH] See:\n https:\/\/github.com\/mapfish\/mapfish-print\/security\/code-scanning\/3?query=ref%3Arefs%2Fheads%2Fmaster\n\n---\n ...\/main\/java\/org\/mapfish\/print\/map\/style\/SLDParserPlugin.java   | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/core\/src\/main\/java\/org\/mapfish\/print\/map\/style\/SLDParserPlugin.java b\/core\/src\/main\/java\/org\/mapfish\/print\/map\/style\/SLDParserPlugin.java\nindex fc27e2a518..bab2d95eef 100644\n--- a\/core\/src\/main\/java\/org\/mapfish\/print\/map\/style\/SLDParserPlugin.java\n+++ b\/core\/src\/main\/java\/org\/mapfish\/print\/map\/style\/SLDParserPlugin.java\n@@ -94,6 +94,7 @@ private Optional<Style> tryLoadSLD(\n             \/\/ by setting a custom error handler.\n             DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\n             dbf.setNamespaceAware(true);\n+            dbf.setFeature(\"http:\/\/apache.org\/xml\/features\/disallow-doctype-decl\", true);\n             DocumentBuilder db = dbf.newDocumentBuilder();\n             db.setErrorHandler(new ErrorHandler());\n             db.parse(new ByteArrayInputStream(bytes));"
        },
        {
            "index":354,
            "vuln_id":"GHSA-48mj-p7x2-5jfm",
            "cwe_id":"{'CWE-306'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/esphome\/esphome\/pull\/2409\/commits\/207cde1667d8c799a197b78ca8a5a14de8d5ca1e', 'https:\/\/github.com\/esphome\/esphome\/commit\/be965a60eba6bb769e2a5afdbc8eed132f077a59'}",
            "dataset":"osv",
            "summary":"Basic auth bypass in esphome ### Impact\n\nAnyone with web_server enabled and HTTP basic auth configured on 2021.9.1 or older\n\n`web_server` allows OTA update without checking user defined basic auth username & password\n\n### Patches\n\nPatch released in 2021.9.2\n\n### Workarounds\n\nDisable\/remove `web_server`",
            "published_date":"2021-09-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/esphome\/esphome",
            "commit_href":"https:\/\/github.com\/esphome\/esphome\/pull\/2409\/commits\/207cde1667d8c799a197b78ca8a5a14de8d5ca1e",
            "commit_sha":"207cde1667d8c799a197b78ca8a5a14de8d5ca1e",
            "patch":"MULTI",
            "chain_ord":"['be965a60eba6bb769e2a5afdbc8eed132f077a59', '207cde1667d8c799a197b78ca8a5a14de8d5ca1e']",
            "before_first_fix_commit":"{'be965a60eba6bb769e2a5afdbc8eed132f077a59'}",
            "last_fix_commit":"207cde1667d8c799a197b78ca8a5a14de8d5ca1e",
            "chain_ord_pos":2.0,
            "commit_datetime":"09\/28\/2021, 01:02:04",
            "message":"Fix lint issues in web_server_base",
            "author":"Jesse Hills",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 2, 'total': 5}",
            "files":"{'esphome\/components\/web_server_base\/web_server_base.h': {'additions': 3, 'deletions': 2, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/esphome\/esphome\/raw\/207cde1667d8c799a197b78ca8a5a14de8d5ca1e\/esphome%2Fcomponents%2Fweb_server_base%2Fweb_server_base.h', 'patch': '@@ -3,6 +3,7 @@\\n #ifdef USE_ARDUINO\\n \\n #include <memory>\\n+#include <utility>\\n #include \"esphome\/core\/component.h\"\\n \\n #include <ESPAsyncWebServer.h>\\n@@ -96,8 +97,8 @@ class WebServerBase : public Component {\\n   std::shared_ptr<AsyncWebServer> get_server() const { return server_; }\\n   float get_setup_priority() const override;\\n \\n-  void set_auth_username(std::string auth_username) { credentials_.username = auth_username; }\\n-  void set_auth_password(std::string auth_password) { credentials_.password = auth_password; }\\n+  void set_auth_username(std::string auth_username) { credentials_.username = std::move(auth_username); }\\n+  void set_auth_password(std::string auth_password) { credentials_.password = std::move(auth_password); }\\n \\n   void add_handler(AsyncWebHandler *handler);'}}",
            "message_norm":"fix lint issues in web_server_base",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('issues', 'FLAW', ''), ('web_server_base', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['esphome\/components\/web_server_base\/web_server_base.h'])",
            "num_files":1.0,
            "patch_content":"From 207cde1667d8c799a197b78ca8a5a14de8d5ca1e Mon Sep 17 00:00:00 2001\nFrom: Jesse Hills <3060199+jesserockz@users.noreply.github.com>\nDate: Tue, 28 Sep 2021 14:02:04 +1300\nSubject: [PATCH] Fix lint issues in web_server_base\n\n---\n esphome\/components\/web_server_base\/web_server_base.h | 5 +++--\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\ndiff --git a\/esphome\/components\/web_server_base\/web_server_base.h b\/esphome\/components\/web_server_base\/web_server_base.h\nindex 7afc72b9d246..bc37337ca5f4 100644\n--- a\/esphome\/components\/web_server_base\/web_server_base.h\n+++ b\/esphome\/components\/web_server_base\/web_server_base.h\n@@ -3,6 +3,7 @@\n #ifdef USE_ARDUINO\n \n #include <memory>\n+#include <utility>\n #include \"esphome\/core\/component.h\"\n \n #include <ESPAsyncWebServer.h>\n@@ -96,8 +97,8 @@ class WebServerBase : public Component {\n   std::shared_ptr<AsyncWebServer> get_server() const { return server_; }\n   float get_setup_priority() const override;\n \n-  void set_auth_username(std::string auth_username) { credentials_.username = auth_username; }\n-  void set_auth_password(std::string auth_password) { credentials_.password = auth_password; }\n+  void set_auth_username(std::string auth_username) { credentials_.username = std::move(auth_username); }\n+  void set_auth_password(std::string auth_password) { credentials_.password = std::move(auth_password); }\n \n   void add_handler(AsyncWebHandler *handler);"
        },
        {
            "index":26,
            "vuln_id":"GHSA-vmhh-xh3g-j992",
            "cwe_id":"{'CWE-80', 'CWE-79', 'CWE-116'}",
            "score":7.4,
            "chain":"{'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/bd935320bee3c27cf7548351b1d0f935f116d437'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in the Flamingo theme manager ### Impact\nWe found a possible XSS vector in the `FlamingoThemesCode.WebHomeSheet` wiki page related to the \"newThemeName\" form field.\n\n### Patches\n\nThe issue is patched in versions 12.10.11, 14.0-rc-1, 13.4.7, 13.10.3.\n\n### Workarounds\nThe easiest workaround is to edit the wiki page `FlamingoThemesCode.WebHomeSheet` (with wiki editor) and change the line\n\n```\n<input type=\"hidden\" name=\"newThemeName\" id=\"newThemeName\" value=\"$request.newThemeName\" \/>\n```\n\ninto\n\n```\n<input type=\"hidden\" name=\"newThemeName\" id=\"newThemeName\" value=\"$escapetool.xml($request.newThemeName)\" \/>\n```\n\n### References\n  * https:\/\/jira.xwiki.org\/browse\/XWIKI-19294\n  * https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/bd935320bee3c27cf7548351b1d0f935f116d437\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Jira XWiki](https:\/\/jira.xwiki.org)\n* Email us at [security mailing list](mailto:security@xwiki.org)",
            "published_date":"2022-05-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/xwiki\/xwiki-platform",
            "commit_href":"https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/bd935320bee3c27cf7548351b1d0f935f116d437",
            "commit_sha":"bd935320bee3c27cf7548351b1d0f935f116d437",
            "patch":"SINGLE",
            "chain_ord":"['bd935320bee3c27cf7548351b1d0f935f116d437']",
            "before_first_fix_commit":"{'21906acb5ee2304552f56f9bbdbf8e7d368f7f3a'}",
            "last_fix_commit":"bd935320bee3c27cf7548351b1d0f935f116d437",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/04\/2022, 10:34:49",
            "message":"XWIKI-19294: Fix bad escaping",
            "author":"Thomas Mortagne",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'xwiki-platform-core\/xwiki-platform-flamingo\/xwiki-platform-flamingo-theme\/xwiki-platform-flamingo-theme-ui\/src\/main\/resources\/FlamingoThemesCode\/WebHomeSheet.xml': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/xwiki\/xwiki-platform\/raw\/bd935320bee3c27cf7548351b1d0f935f116d437\/xwiki-platform-core%2Fxwiki-platform-flamingo%2Fxwiki-platform-flamingo-theme%2Fxwiki-platform-flamingo-theme-ui%2Fsrc%2Fmain%2Fresources%2FFlamingoThemesCode%2FWebHomeSheet.xml', 'patch': '@@ -287,7 +287,7 @@\\n       &lt;form action=\"$doc.getURL()\" method=\"post\"&gt;\\n         &lt;input type=\"hidden\" name=\"form_token\" value=\"$services.csrf.token\" \/&gt;\\n         &lt;input type=\"hidden\" name=\"action\" value=\"create\"\/&gt;\\n-        &lt;input type=\"hidden\" name=\"newThemeName\" id=\"newThemeName\" value=\"$request.newThemeName\" \/&gt;\\n+        &lt;input type=\"hidden\" name=\"newThemeName\" id=\"newThemeName\" value=\"$escapetool.xml($request.newThemeName)\" \/&gt;\\n         &lt;input type=\"submit\" value=\"$services.localization.render(\\'platform.flamingo.themes.home.create.confirm\\')\" class=\"button\"\/&gt;\\n       &lt;\/form&gt;\\n     {{\/html}}'}}",
            "message_norm":"xwiki-19294: fix bad escaping",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('escaping', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['xwiki-platform-core\/xwiki-platform-flamingo\/xwiki-platform-flamingo-theme\/xwiki-platform-flamingo-theme-ui\/src\/main\/resources\/FlamingoThemesCode\/WebHomeSheet.xml'])",
            "num_files":1.0,
            "patch_content":"From bd935320bee3c27cf7548351b1d0f935f116d437 Mon Sep 17 00:00:00 2001\nFrom: Thomas Mortagne <thomas.mortagne@gmail.com>\nDate: Tue, 4 Jan 2022 11:34:49 +0100\nSubject: [PATCH] XWIKI-19294: Fix bad escaping\n\n---\n ...\/src\/main\/resources\/FlamingoThemesCode\/WebHomeSheet.xml      | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/xwiki-platform-core\/xwiki-platform-flamingo\/xwiki-platform-flamingo-theme\/xwiki-platform-flamingo-theme-ui\/src\/main\/resources\/FlamingoThemesCode\/WebHomeSheet.xml b\/xwiki-platform-core\/xwiki-platform-flamingo\/xwiki-platform-flamingo-theme\/xwiki-platform-flamingo-theme-ui\/src\/main\/resources\/FlamingoThemesCode\/WebHomeSheet.xml\nindex a71814ef07ef..4fba502601ab 100644\n--- a\/xwiki-platform-core\/xwiki-platform-flamingo\/xwiki-platform-flamingo-theme\/xwiki-platform-flamingo-theme-ui\/src\/main\/resources\/FlamingoThemesCode\/WebHomeSheet.xml\n+++ b\/xwiki-platform-core\/xwiki-platform-flamingo\/xwiki-platform-flamingo-theme\/xwiki-platform-flamingo-theme-ui\/src\/main\/resources\/FlamingoThemesCode\/WebHomeSheet.xml\n@@ -287,7 +287,7 @@\n       &lt;form action=\"$doc.getURL()\" method=\"post\"&gt;\n         &lt;input type=\"hidden\" name=\"form_token\" value=\"$services.csrf.token\" \/&gt;\n         &lt;input type=\"hidden\" name=\"action\" value=\"create\"\/&gt;\n-        &lt;input type=\"hidden\" name=\"newThemeName\" id=\"newThemeName\" value=\"$request.newThemeName\" \/&gt;\n+        &lt;input type=\"hidden\" name=\"newThemeName\" id=\"newThemeName\" value=\"$escapetool.xml($request.newThemeName)\" \/&gt;\n         &lt;input type=\"submit\" value=\"$services.localization.render('platform.flamingo.themes.home.create.confirm')\" class=\"button\"\/&gt;\n       &lt;\/form&gt;\n     {{\/html}}"
        },
        {
            "index":305,
            "vuln_id":"GHSA-fj59-f6c3-3vw4",
            "cwe_id":"{'CWE-78'}",
            "score":5.9,
            "chain":"{'https:\/\/github.com\/sebhildebrandt\/systeminformation\/commit\/bad372e654cdd549e7d786acbba0035ded54c607'}",
            "dataset":"osv",
            "summary":"Command Injection in systeminformation ### Impact\ncommand injection vulnerability\n\n### Patches\nProblem was fixed with a shell string sanitation fix. Please upgrade to version >= 4.26.2\n\n### Workarounds\nIf you cannot upgrade, be sure to check or sanitize service parameter strings that are passed to `is.services()`, `is.inetChecksite()`, `si.inetLatency()`, `si.networkStats()`, `is.services()` and `si.processLoad()`\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [systeminformation](https:\/\/github.com\/sebhildebrandt\/systeminformation)",
            "published_date":"2020-10-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/sebhildebrandt\/systeminformation",
            "commit_href":"https:\/\/github.com\/sebhildebrandt\/systeminformation\/commit\/bad372e654cdd549e7d786acbba0035ded54c607",
            "commit_sha":"bad372e654cdd549e7d786acbba0035ded54c607",
            "patch":"SINGLE",
            "chain_ord":"['bad372e654cdd549e7d786acbba0035ded54c607']",
            "before_first_fix_commit":"{'147550532ab11cac4b609844a519a1d945f5c103'}",
            "last_fix_commit":"bad372e654cdd549e7d786acbba0035ded54c607",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/19\/2020, 15:02:51",
            "message":"improved shell sanitation",
            "author":"Sebastian Hildebrandt",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'lib\/util.js': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sebhildebrandt\/systeminformation\/raw\/bad372e654cdd549e7d786acbba0035ded54c607\/lib%2Futil.js', 'patch': '@@ -503,6 +503,9 @@ function sanitizeShellString(str) {\\n   result = result.replace(\/\\\\$\/g, \"\");\\n   result = result.replace(\/#\/g, \"\");\\n   result = result.replace(\/\\\\\\\\\/g, \"\");\\n+  result = result.replace(\/\\\\t\/g, \"\");\\n+  result = result.replace(\/\\\\n\/g, \"\");\\n+  result = result.replace(\/\\\\\"\/g, \"\");\\n   return result\\n }'}}",
            "message_norm":"improved shell sanitation",
            "language":"en",
            "entities":"[('improved', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/util.js'])",
            "num_files":1.0,
            "patch_content":"From bad372e654cdd549e7d786acbba0035ded54c607 Mon Sep 17 00:00:00 2001\nFrom: Sebastian Hildebrandt <hildebrandt@plus-innovations.com>\nDate: Tue, 19 May 2020 17:02:51 +0200\nSubject: [PATCH] improved shell sanitation\n\n---\n lib\/util.js | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/lib\/util.js b\/lib\/util.js\nindex 19df5e7a..e7a87dc1 100644\n--- a\/lib\/util.js\n+++ b\/lib\/util.js\n@@ -503,6 +503,9 @@ function sanitizeShellString(str) {\n   result = result.replace(\/\\$\/g, \"\");\n   result = result.replace(\/#\/g, \"\");\n   result = result.replace(\/\\\\\/g, \"\");\n+  result = result.replace(\/\\t\/g, \"\");\n+  result = result.replace(\/\\n\/g, \"\");\n+  result = result.replace(\/\\\"\/g, \"\");\n   return result\n }"
        },
        {
            "index":788,
            "vuln_id":"GHSA-c558-5gfm-p2r8",
            "cwe_id":"{'CWE-79'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a'}",
            "dataset":"osv",
            "summary":"JSPUI spellcheck and autocomplete tools vulnerable to Cross Site Scripting ### Impact\nThe JSPUI spellcheck \"Did you mean\" HTML escapes the data-spell attribute in the link, but not the actual displayed text.  Similarly, the JSPUI autocomplete HTML does not properly escape text passed to it. Both are vulnerable to XSS.  This vulnerability only impacts the JSPUI.\n\n_This vulnerability does NOT impact the XMLUI or 7.x._\n\n### Patches\n_DSpace 6.x:_\n* Fixed in 6.4 via two commits: \n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7\n* 6.x patch files available (may be applied manually if an immediate upgrade to 6.4 or above is not possible)\n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d.patch\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7.patch\n\n_DSpace 5.x:_\n* Fixed in 5.11 via two commits: \n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5\n* 5.x patch files available (may be applied manually if an immediate upgrade to 5.11 or 6.4 is not possible)\n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a.patch\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5.patch\n\n#### Apply the patch to your DSpace\nIf at all possible, we recommend upgrading your DSpace site based on the upgrade instructions. However, if you are unable to do so, you can manually apply the above patches as follows:\n1. Download the appropriate patch file to the machine where DSpace is running\n2. From the `[dspace-src]` folder, apply the patch, e.g. `git apply [name-of-file].patch`\n3. Now, update your DSpace site (based loosely on the Upgrade instructions). This generally involves three steps:\n    1. Rebuild DSpace, e.g. `mvn -U clean package`  (This will recompile all DSpace code)\n    2. Redeploy DSpace, e.g. `ant update`  (This will copy all updated WARs \/ configs to your installation directory). Depending on your setup you also may need to copy the updated WARs over to your Tomcat webapps folder.\n    3. Restart Tomcat\n\n### References\nDiscovered & reported by Hassan Bhuiyan (Brunel University London)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@dspace.org",
            "published_date":"2022-08-06",
            "chain_len":4,
            "project":"https:\/\/github.com\/DSpace\/DSpace",
            "commit_href":"https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a",
            "commit_sha":"c89e493e517b424dea6175caba54e91d3847fc3a",
            "patch":"MULTI",
            "chain_ord":"['ebb83a75234d3de9be129464013e998dc929b68d', '35030a23e48b5946f5853332c797e1c4adea7bb7', 'c89e493e517b424dea6175caba54e91d3847fc3a', '6f75bb084ab1937d094208c55cd84340040bcbb5']",
            "before_first_fix_commit":"{'d1dd7d23329ef055069759df15cfa200c8e32e54'}",
            "last_fix_commit":"6f75bb084ab1937d094208c55cd84340040bcbb5",
            "chain_ord_pos":3.0,
            "commit_datetime":"07\/26\/2022, 04:25:18",
            "message":"[DS-4453] Escape spellcheck, autocomplete HTML (JSPUI)",
            "author":"Kim Shepherd",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DSpace\/DSpace\/raw\/c89e493e517b424dea6175caba54e91d3847fc3a\/dspace-jspui%2Fsrc%2Fmain%2Fwebapp%2Fsearch%2Fdiscovery.jsp', 'patch': '@@ -196,7 +196,7 @@\\n                                 <input type=\"text\" size=\"50\" id=\"query\" name=\"query\" value=\"<%= (query==null ? \"\" : Utils.addEntities(query)) %>\"\/>\\n                                 <input type=\"submit\" id=\"main-query-submit\" class=\"btn btn-primary\" value=\"<fmt:message key=\"jsp.general.go\"\/>\" \/>\\n <% if (StringUtils.isNotBlank(spellCheckQuery)) {%>\\n-\\t<p class=\"lead\"><fmt:message key=\"jsp.search.didyoumean\"><fmt:param><a id=\"spellCheckQuery\" data-spell=\"<%= Utils.addEntities(spellCheckQuery) %>\" href=\"#\"><%= spellCheckQuery %><\/a><\/fmt:param><\/fmt:message><\/p>\\n+\\t<p class=\"lead\"><fmt:message key=\"jsp.search.didyoumean\"><fmt:param><a id=\"spellCheckQuery\" data-spell=\"<%= Utils.addEntities(spellCheckQuery) %>\" href=\"#\"><%=Utils.addEntities(spellCheckQuery) %><\/a><\/fmt:param><\/fmt:message><\/p>\\n <% } %>                  \\n                                 <input type=\"hidden\" value=\"<%= rpp %>\" name=\"rpp\" \/>\\n                                 <input type=\"hidden\" value=\"<%= Utils.addEntities(sortedBy) %>\" name=\"sort_by\" \/>'}}",
            "message_norm":"[ds-4453] escape spellcheck, autocomplete html (jspui)",
            "language":"fr",
            "entities":"[('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp'])",
            "num_files":1.0,
            "patch_content":"From c89e493e517b424dea6175caba54e91d3847fc3a Mon Sep 17 00:00:00 2001\nFrom: Kim Shepherd <kim@shepherd.nz>\nDate: Tue, 26 Jul 2022 16:25:18 +1200\nSubject: [PATCH] [DS-4453] Escape spellcheck, autocomplete HTML (JSPUI)\n\n---\n dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp b\/dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp\nindex fe0a64908dd1..ec97afb90fc7 100644\n--- a\/dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp\n+++ b\/dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp\n@@ -196,7 +196,7 @@\n                                 <input type=\"text\" size=\"50\" id=\"query\" name=\"query\" value=\"<%= (query==null ? \"\" : Utils.addEntities(query)) %>\"\/>\n                                 <input type=\"submit\" id=\"main-query-submit\" class=\"btn btn-primary\" value=\"<fmt:message key=\"jsp.general.go\"\/>\" \/>\n <% if (StringUtils.isNotBlank(spellCheckQuery)) {%>\n-\t<p class=\"lead\"><fmt:message key=\"jsp.search.didyoumean\"><fmt:param><a id=\"spellCheckQuery\" data-spell=\"<%= Utils.addEntities(spellCheckQuery) %>\" href=\"#\"><%= spellCheckQuery %><\/a><\/fmt:param><\/fmt:message><\/p>\n+\t<p class=\"lead\"><fmt:message key=\"jsp.search.didyoumean\"><fmt:param><a id=\"spellCheckQuery\" data-spell=\"<%= Utils.addEntities(spellCheckQuery) %>\" href=\"#\"><%=Utils.addEntities(spellCheckQuery) %><\/a><\/fmt:param><\/fmt:message><\/p>\n <% } %>                  \n                                 <input type=\"hidden\" value=\"<%= rpp %>\" name=\"rpp\" \/>\n                                 <input type=\"hidden\" value=\"<%= Utils.addEntities(sortedBy) %>\" name=\"sort_by\" \/>"
        },
        {
            "index":68,
            "vuln_id":"GHSA-f98m-q3hr-p5wq",
            "cwe_id":"{'CWE-915', 'CWE-20'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/locutusjs\/locutus\/commit\/0eb16d8541838e80f3c2340a9ef93ded7c97290f'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in locutus All versions of package locutus prior to version 2.0.12 are vulnerable to Prototype Pollution via the php.strings.parse_str function.",
            "published_date":"2021-05-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/locutusjs\/locutus",
            "commit_href":"https:\/\/github.com\/locutusjs\/locutus\/commit\/0eb16d8541838e80f3c2340a9ef93ded7c97290f",
            "commit_sha":"0eb16d8541838e80f3c2340a9ef93ded7c97290f",
            "patch":"SINGLE",
            "chain_ord":"['0eb16d8541838e80f3c2340a9ef93ded7c97290f']",
            "before_first_fix_commit":"{'3f14dc5d142f5dcbdf36b4271c21a850a4a259da'}",
            "last_fix_commit":"0eb16d8541838e80f3c2340a9ef93ded7c97290f",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/25\/2020, 14:48:03",
            "message":"fixed prototype pollution",
            "author":"Asjid Kalam",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'src\/php\/strings\/parse_str.js': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/locutusjs\/locutus\/raw\/0eb16d8541838e80f3c2340a9ef93ded7c97290f\/src%2Fphp%2Fstrings%2Fparse_str.js', 'patch': \"@@ -74,6 +74,10 @@ module.exports = function parse_str (str, array) { \/\/ eslint-disable-line camelc\\n     key = _fixStr(tmp[0])\\n     value = (tmp.length < 2) ? '' : _fixStr(tmp[1])\\n \\n+    if (key.includes('__proto__') || key.includes('constructor') || key.includes('prototype')) {\\n+      break;\\n+    }\\n+\\n     while (key.charAt(0) === ' ') {\\n       key = key.slice(1)\\n     }\"}}",
            "message_norm":"fixed prototype pollution",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('prototype pollution', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/php\/strings\/parse_str.js'])",
            "num_files":1.0,
            "patch_content":"From 0eb16d8541838e80f3c2340a9ef93ded7c97290f Mon Sep 17 00:00:00 2001\nFrom: Asjid Kalam <asjid.kalam@gmail.com>\nDate: Tue, 25 Aug 2020 20:18:03 +0530\nSubject: [PATCH] fixed prototype pollution\n\n---\n src\/php\/strings\/parse_str.js | 4 ++++\n 1 file changed, 4 insertions(+)\n\ndiff --git a\/src\/php\/strings\/parse_str.js b\/src\/php\/strings\/parse_str.js\nindex db14a01262..d711008c35 100644\n--- a\/src\/php\/strings\/parse_str.js\n+++ b\/src\/php\/strings\/parse_str.js\n@@ -74,6 +74,10 @@ module.exports = function parse_str (str, array) { \/\/ eslint-disable-line camelc\n     key = _fixStr(tmp[0])\n     value = (tmp.length < 2) ? '' : _fixStr(tmp[1])\n \n+    if (key.includes('__proto__') || key.includes('constructor') || key.includes('prototype')) {\n+      break;\n+    }\n+\n     while (key.charAt(0) === ' ') {\n       key = key.slice(1)\n     }"
        },
        {
            "index":839,
            "vuln_id":"GHSA-278g-rq84-9hmg",
            "cwe_id":"{'CWE-20'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d7de67733925de196ec8863a33445b73f9562d1d'}",
            "dataset":"osv",
            "summary":"`CHECK`-fail in `MapStage` ### Impact\nAn attacker can trigger a denial of service via a `CHECK`-fail in `tf.raw_ops.MapStage`:\n\n```python\nimport tensorflow as tf\n  \ntf.raw_ops.MapStage(\n  key=tf.constant([], shape=[0, 0, 0, 0], dtype=tf.int64),\n  indices=tf.constant((0), dtype=tf.int32),\n  values=[tf.constant((0), dtype=tf.int32)],\n  dtypes=[tf.int32,\n  tf.int64],\n  capacity=0,\n  memory_limit=0,\n  container='',\n  shared_name='')\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/map_stage_op.cc#L513) does not check that the `key` input is a valid non-empty tensor.\n  \n### Patches\nWe have patched the issue in GitHub commit [d7de67733925de196ec8863a33445b73f9562d1d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d7de67733925de196ec8863a33445b73f9562d1d).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security  guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d7de67733925de196ec8863a33445b73f9562d1d",
            "commit_sha":"d7de67733925de196ec8863a33445b73f9562d1d",
            "patch":"SINGLE",
            "chain_ord":"['d7de67733925de196ec8863a33445b73f9562d1d']",
            "before_first_fix_commit":"{'102cacf28ad5a9e7f00b5a195d1995ead8870006'}",
            "last_fix_commit":"d7de67733925de196ec8863a33445b73f9562d1d",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/30\/2021, 05:23:46",
            "message":"Prevent a CHECK-fail due to empty tensor input in `map_stage_op.cc`\n\nPiperOrigin-RevId: 387737906\nChange-Id: Idc52df0c71c7ed6e2dd633b651a581932f277c8a",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/map_stage_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/d7de67733925de196ec8863a33445b73f9562d1d\/tensorflow%2Fcore%2Fkernels%2Fmap_stage_op.cc', 'patch': '@@ -527,6 +527,8 @@ class MapStageOp : public OpKernel {\\n     OP_REQUIRES_OK(ctx, ctx->input(\"key\", &key_tensor));\\n     OP_REQUIRES_OK(ctx, ctx->input(\"indices\", &indices_tensor));\\n     OP_REQUIRES_OK(ctx, ctx->input_list(\"values\", &values_tensor));\\n+    OP_REQUIRES(ctx, key_tensor->NumElements() > 0,\\n+                errors::InvalidArgument(\"key must not be empty\"));\\n \\n     \/\/ Create copy for insertion into Staging Area\\n     Tensor key(*key_tensor);'}}",
            "message_norm":"prevent a check-fail due to empty tensor input in `map_stage_op.cc`\n\npiperorigin-revid: 387737906\nchange-id: idc52df0c71c7ed6e2dd633b651a581932f277c8a",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('387737906', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/map_stage_op.cc'])",
            "num_files":1.0,
            "patch_content":"From d7de67733925de196ec8863a33445b73f9562d1d Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Thu, 29 Jul 2021 22:23:46 -0700\nSubject: [PATCH] Prevent a CHECK-fail due to empty tensor input in\n `map_stage_op.cc`\n\nPiperOrigin-RevId: 387737906\nChange-Id: Idc52df0c71c7ed6e2dd633b651a581932f277c8a\n---\n tensorflow\/core\/kernels\/map_stage_op.cc | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/map_stage_op.cc b\/tensorflow\/core\/kernels\/map_stage_op.cc\nindex b575c2d3862e0c..9411792762baab 100644\n--- a\/tensorflow\/core\/kernels\/map_stage_op.cc\n+++ b\/tensorflow\/core\/kernels\/map_stage_op.cc\n@@ -527,6 +527,8 @@ class MapStageOp : public OpKernel {\n     OP_REQUIRES_OK(ctx, ctx->input(\"key\", &key_tensor));\n     OP_REQUIRES_OK(ctx, ctx->input(\"indices\", &indices_tensor));\n     OP_REQUIRES_OK(ctx, ctx->input_list(\"values\", &values_tensor));\n+    OP_REQUIRES(ctx, key_tensor->NumElements() > 0,\n+                errors::InvalidArgument(\"key must not be empty\"));\n \n     \/\/ Create copy for insertion into Staging Area\n     Tensor key(*key_tensor);"
        },
        {
            "index":838,
            "vuln_id":"GHSA-qpgx-64h2-gc3c",
            "cwe_id":"{'CWE-22'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/argoproj\/argo-events\/commit\/d0f66dbce78bc31923ca057b20fc722aa24ca961'}",
            "dataset":"osv",
            "summary":"Insecure path traversal in Git Trigger Source can lead to arbitrary file read ### Impact\nA path traversal issue was found in the (g *GitArtifactReader).Read() API. Read() calls into (g *GitArtifactReader).readFromRepository() that opens and reads the file that contains the trigger resource definition:\n\n```go\nfunc (g *GitArtifactReader) readFromRepository(r *git.Repository, dir string)\n```\n\nNo checks are made on this file at read time, which could lead an attacker to read files anywhere on the system. This could be achieved by either using symbolic links, or putting `..\/` in the path.\n\n### Patches\nA patch for this vulnerability has been released in the following Argo Events version:\n\nv1.7.1\n\n### Credits\nDisclosed by [Ada Logics](https:\/\/adalogics.com\/) in a security audit sponsored by CNCF and facilitated by OSTIF.\n\n### For more information\nOpen an issue in the [Argo Events issue tracker](https:\/\/github.com\/argoproj\/argo-events\/issues) or [discussions](https:\/\/github.com\/argoproj\/argo-events\/discussions)\nJoin us on [Slack](https:\/\/argoproj.github.io\/community\/join-slack) in channel #argo-events",
            "published_date":"2022-06-17",
            "chain_len":1,
            "project":"https:\/\/github.com\/argoproj\/argo-events",
            "commit_href":"https:\/\/github.com\/argoproj\/argo-events\/commit\/d0f66dbce78bc31923ca057b20fc722aa24ca961",
            "commit_sha":"d0f66dbce78bc31923ca057b20fc722aa24ca961",
            "patch":"SINGLE",
            "chain_ord":"['d0f66dbce78bc31923ca057b20fc722aa24ca961']",
            "before_first_fix_commit":"{'e80ab9f9556f7f97346fb393e312f8a689ca21f8'}",
            "last_fix_commit":"d0f66dbce78bc31923ca057b20fc722aa24ca961",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/13\/2022, 03:18:33",
            "message":"fix: git artifactory arbitrary file read issue (#1965)\n\nSigned-off-by: Derek Wang <whynowy@gmail.com>",
            "author":"Derek Wang",
            "comments":null,
            "stats":"{'additions': 34, 'deletions': 2, 'total': 36}",
            "files":"{'sensors\/artifacts\/git.go': {'additions': 34, 'deletions': 2, 'changes': 36, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/argoproj\/argo-events\/raw\/d0f66dbce78bc31923ca057b20fc722aa24ca961\/sensors%2Fartifacts%2Fgit.go', 'patch': '@@ -20,6 +20,8 @@ import (\\n \\t\"fmt\"\\n \\t\"io\/ioutil\"\\n \\t\"os\"\\n+\\t\"path\"\\n+\\t\"strings\"\\n \\n \\t\"github.com\/go-git\/go-git\/v5\"\\n \\t\"github.com\/go-git\/go-git\/v5\/config\"\\n@@ -44,6 +46,8 @@ var (\\n \\t\\t\"refs\/*:refs\/*\",\\n \\t\\t\"HEAD:refs\/heads\/HEAD\",\\n \\t}\\n+\\n+\\tnotAllowedInPath = []string{\"..\", \"~\", \"\\\\\\\\\"}\\n )\\n \\n type GitArtifactReader struct {\\n@@ -52,6 +56,15 @@ type GitArtifactReader struct {\\n \\n \/\/ NewGitReader returns a new git reader\\n func NewGitReader(gitArtifact *v1alpha1.GitArtifact) (*GitArtifactReader, error) {\\n+\\tif gitArtifact == nil {\\n+\\t\\treturn nil, fmt.Errorf(\"nil git artifact\")\\n+\\t}\\n+\\tfor _, na := range notAllowedInPath {\\n+\\t\\tif strings.Contains(gitArtifact.FilePath, na) {\\n+\\t\\t\\treturn nil, fmt.Errorf(\"%q is not allowed in the filepath\", na)\\n+\\t\\t}\\n+\\t}\\n+\\n \\treturn &GitArtifactReader{\\n \\t\\tartifact: gitArtifact,\\n \\t}, nil\\n@@ -176,8 +189,16 @@ func (g *GitArtifactReader) readFromRepository(r *git.Repository, dir string) ([\\n \\t\\t\\treturn nil, fmt.Errorf(\"failed to pull latest updates. err: %+v\", err)\\n \\t\\t}\\n \\t}\\n-\\n-\\treturn ioutil.ReadFile(fmt.Sprintf(\"%s\/%s\", dir, g.artifact.FilePath))\\n+\\tfilePath := fmt.Sprintf(\"%s\/%s\", dir, g.artifact.FilePath)\\n+\\t\/\/ symbol link is not allowed due to security concern\\n+\\tisSymbolLink, err := isSymbolLink(filePath)\\n+\\tif err != nil {\\n+\\t\\treturn nil, err\\n+\\t}\\n+\\tif isSymbolLink {\\n+\\t\\treturn nil, fmt.Errorf(\"%q is a symbol link which is not allowed\", g.artifact.FilePath)\\n+\\t}\\n+\\treturn ioutil.ReadFile(filePath)\\n }\\n \\n func (g *GitArtifactReader) getBranchOrTag() *git.CheckoutOptions {\\n@@ -241,3 +262,14 @@ func (g *GitArtifactReader) Read() ([]byte, error) {\\n \\t}\\n \\treturn g.readFromRepository(r, cloneDir)\\n }\\n+\\n+func isSymbolLink(filepath string) (bool, error) {\\n+\\tfi, err := os.Lstat(path.Clean(filepath))\\n+\\tif err != nil {\\n+\\t\\treturn false, err\\n+\\t}\\n+\\tif fi.Mode()&os.ModeSymlink != 0 {\\n+\\t\\treturn true, nil\\n+\\t}\\n+\\treturn false, nil\\n+}'}}",
            "message_norm":"fix: git artifactory arbitrary file read issue (#1965)\n\nsigned-off-by: derek wang <whynowy@gmail.com>",
            "language":"en",
            "entities":"[('issue', 'FLAW', ''), ('#1965', 'ISSUE', ''), ('whynowy@gmail.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['sensors\/artifacts\/git.go'])",
            "num_files":1.0,
            "patch_content":"From d0f66dbce78bc31923ca057b20fc722aa24ca961 Mon Sep 17 00:00:00 2001\nFrom: Derek Wang <whynowy@gmail.com>\nDate: Thu, 12 May 2022 20:18:33 -0700\nSubject: [PATCH] fix: git artifactory arbitrary file read issue (#1965)\n\nSigned-off-by: Derek Wang <whynowy@gmail.com>\n---\n sensors\/artifacts\/git.go | 36 ++++++++++++++++++++++++++++++++++--\n 1 file changed, 34 insertions(+), 2 deletions(-)\n\ndiff --git a\/sensors\/artifacts\/git.go b\/sensors\/artifacts\/git.go\nindex 6e6d26ed84..0965082a21 100644\n--- a\/sensors\/artifacts\/git.go\n+++ b\/sensors\/artifacts\/git.go\n@@ -20,6 +20,8 @@ import (\n \t\"fmt\"\n \t\"io\/ioutil\"\n \t\"os\"\n+\t\"path\"\n+\t\"strings\"\n \n \t\"github.com\/go-git\/go-git\/v5\"\n \t\"github.com\/go-git\/go-git\/v5\/config\"\n@@ -44,6 +46,8 @@ var (\n \t\t\"refs\/*:refs\/*\",\n \t\t\"HEAD:refs\/heads\/HEAD\",\n \t}\n+\n+\tnotAllowedInPath = []string{\"..\", \"~\", \"\\\\\"}\n )\n \n type GitArtifactReader struct {\n@@ -52,6 +56,15 @@ type GitArtifactReader struct {\n \n \/\/ NewGitReader returns a new git reader\n func NewGitReader(gitArtifact *v1alpha1.GitArtifact) (*GitArtifactReader, error) {\n+\tif gitArtifact == nil {\n+\t\treturn nil, fmt.Errorf(\"nil git artifact\")\n+\t}\n+\tfor _, na := range notAllowedInPath {\n+\t\tif strings.Contains(gitArtifact.FilePath, na) {\n+\t\t\treturn nil, fmt.Errorf(\"%q is not allowed in the filepath\", na)\n+\t\t}\n+\t}\n+\n \treturn &GitArtifactReader{\n \t\tartifact: gitArtifact,\n \t}, nil\n@@ -176,8 +189,16 @@ func (g *GitArtifactReader) readFromRepository(r *git.Repository, dir string) ([\n \t\t\treturn nil, fmt.Errorf(\"failed to pull latest updates. err: %+v\", err)\n \t\t}\n \t}\n-\n-\treturn ioutil.ReadFile(fmt.Sprintf(\"%s\/%s\", dir, g.artifact.FilePath))\n+\tfilePath := fmt.Sprintf(\"%s\/%s\", dir, g.artifact.FilePath)\n+\t\/\/ symbol link is not allowed due to security concern\n+\tisSymbolLink, err := isSymbolLink(filePath)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\tif isSymbolLink {\n+\t\treturn nil, fmt.Errorf(\"%q is a symbol link which is not allowed\", g.artifact.FilePath)\n+\t}\n+\treturn ioutil.ReadFile(filePath)\n }\n \n func (g *GitArtifactReader) getBranchOrTag() *git.CheckoutOptions {\n@@ -241,3 +262,14 @@ func (g *GitArtifactReader) Read() ([]byte, error) {\n \t}\n \treturn g.readFromRepository(r, cloneDir)\n }\n+\n+func isSymbolLink(filepath string) (bool, error) {\n+\tfi, err := os.Lstat(path.Clean(filepath))\n+\tif err != nil {\n+\t\treturn false, err\n+\t}\n+\tif fi.Mode()&os.ModeSymlink != 0 {\n+\t\treturn true, nil\n+\t}\n+\treturn false, nil\n+}"
        },
        {
            "index":104,
            "vuln_id":"GHSA-mw6v-crh8-8533",
            "cwe_id":"{'CWE-190'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d107fee1e4a9a4462f01564798d345802acc2aef'}",
            "dataset":"osv",
            "summary":"Integer Overflow or Wraparound in Google TensorFlow Google TensorFlow 1.7.x and earlier is affected by a Buffer Overflow vulnerability. The type of exploitation is context-dependent.",
            "published_date":"2019-04-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d107fee1e4a9a4462f01564798d345802acc2aef",
            "commit_sha":"d107fee1e4a9a4462f01564798d345802acc2aef",
            "patch":"SINGLE",
            "chain_ord":"['d107fee1e4a9a4462f01564798d345802acc2aef']",
            "before_first_fix_commit":"{'f8acfb01792886274778d9ad7a9d990cbef14141'}",
            "last_fix_commit":"d107fee1e4a9a4462f01564798d345802acc2aef",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/04\/2018, 23:26:25",
            "message":"Check that n + kBlockTrailerSize does not overflow before reading a block\n\nPiperOrigin-RevId: 191666300",
            "author":"Frank Chen",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 0, 'total': 7}",
            "files":"{'tensorflow\/core\/lib\/io\/format.cc': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/d107fee1e4a9a4462f01564798d345802acc2aef\/tensorflow%2Fcore%2Flib%2Fio%2Fformat.cc', 'patch': '@@ -13,6 +13,8 @@ See the License for the specific language governing permissions and\\n limitations under the License.\\n ==============================================================================*\/\\n \\n+#include <limits>\\n+\\n #include \"tensorflow\/core\/lib\/io\/format.h\"\\n \\n #include \"tensorflow\/core\/lib\/core\/coding.h\"\\n@@ -84,6 +86,11 @@ Status ReadBlock(RandomAccessFile* file, const BlockHandle& handle,\\n   \/\/ Read the block contents as well as the type\/crc footer.\\n   \/\/ See table_builder.cc for the code that built this structure.\\n   size_t n = static_cast<size_t>(handle.size());\\n+\\n+  if (kBlockTrailerSize > std::numeric_limits<size_t>::max() - n) {\\n+    return errors::DataLoss(\"handle.size() too big\");\\n+  }\\n+\\n   char* buf = new char[n + kBlockTrailerSize];\\n   StringPiece contents;\\n   Status s = file->Read(handle.offset(), n + kBlockTrailerSize, &contents, buf);'}}",
            "message_norm":"check that n + kblocktrailersize does not overflow before reading a block\n\npiperorigin-revid: 191666300",
            "language":"en",
            "entities":"[('overflow', 'SECWORD', ''), ('191666300', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/lib\/io\/format.cc'])",
            "num_files":1.0,
            "patch_content":"From d107fee1e4a9a4462f01564798d345802acc2aef Mon Sep 17 00:00:00 2001\nFrom: Frank Chen <frankchn@google.com>\nDate: Wed, 4 Apr 2018 16:26:25 -0700\nSubject: [PATCH] Check that n + kBlockTrailerSize does not overflow before\n reading a block\n\nPiperOrigin-RevId: 191666300\n---\n tensorflow\/core\/lib\/io\/format.cc | 7 +++++++\n 1 file changed, 7 insertions(+)\n\ndiff --git a\/tensorflow\/core\/lib\/io\/format.cc b\/tensorflow\/core\/lib\/io\/format.cc\nindex 64852943ad560e..0c24c660a246ea 100644\n--- a\/tensorflow\/core\/lib\/io\/format.cc\n+++ b\/tensorflow\/core\/lib\/io\/format.cc\n@@ -13,6 +13,8 @@ See the License for the specific language governing permissions and\n limitations under the License.\n ==============================================================================*\/\n \n+#include <limits>\n+\n #include \"tensorflow\/core\/lib\/io\/format.h\"\n \n #include \"tensorflow\/core\/lib\/core\/coding.h\"\n@@ -84,6 +86,11 @@ Status ReadBlock(RandomAccessFile* file, const BlockHandle& handle,\n   \/\/ Read the block contents as well as the type\/crc footer.\n   \/\/ See table_builder.cc for the code that built this structure.\n   size_t n = static_cast<size_t>(handle.size());\n+\n+  if (kBlockTrailerSize > std::numeric_limits<size_t>::max() - n) {\n+    return errors::DataLoss(\"handle.size() too big\");\n+  }\n+\n   char* buf = new char[n + kBlockTrailerSize];\n   StringPiece contents;\n   Status s = file->Read(handle.offset(), n + kBlockTrailerSize, &contents, buf);"
        },
        {
            "index":766,
            "vuln_id":"GHSA-c32w-3cqh-f6jx",
            "cwe_id":"{'CWE-640'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/Dolibarr\/dolibarr\/commit\/87f9530272925f0d651f59337a35661faeb6f377'}",
            "dataset":"osv",
            "summary":"Weak Password Recovery Mechanism for Forgotten Password In \u201cDolibarr\u201d application, v2.8.1 to v13.0.2 are vulnerable to account takeover via password reset functionality. A low privileged attacker can reset the password of any user in the application using the password reset link the user received through email when requested for a forgotten password.",
            "published_date":"2021-09-02",
            "chain_len":1,
            "project":"https:\/\/github.com\/Dolibarr\/dolibarr",
            "commit_href":"https:\/\/github.com\/Dolibarr\/dolibarr\/commit\/87f9530272925f0d651f59337a35661faeb6f377",
            "commit_sha":"87f9530272925f0d651f59337a35661faeb6f377",
            "patch":"SINGLE",
            "chain_ord":"['87f9530272925f0d651f59337a35661faeb6f377']",
            "before_first_fix_commit":"{'8b07e99e05a9ed3c57bdc00c6a469fbbaa5672ef'}",
            "last_fix_commit":"87f9530272925f0d651f59337a35661faeb6f377",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/05\/2021, 15:29:10",
            "message":"Fix report by Ahsan Aziz (can reset the password of another user that\ndid not request password reset).",
            "author":"Laurent Destailleur",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'htdocs\/user\/passwordforgotten.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Dolibarr\/dolibarr\/raw\/87f9530272925f0d651f59337a35661faeb6f377\/htdocs%2Fuser%2Fpasswordforgotten.php', 'patch': '@@ -87,14 +87,14 @@\\n \\t\/\/ Validate new password\\n \\tif ($action == \\'validatenewpassword\\' && $username && $passworduidhash) {\\n \\t\\t$edituser = new User($db);\\n-\\t\\t$result = $edituser->fetch(\\'\\', $_GET[\"username\"]);\\n+\\t\\t$result = $edituser->fetch(\\'\\', $username);\\n \\t\\tif ($result < 0) {\\n \\t\\t\\t$message = \\'<div class=\"error\">\\'.dol_escape_htmltag($langs->trans(\"ErrorLoginDoesNotExists\", $username)).\\'<\/div>\\';\\n \\t\\t} else {\\n \\t\\t\\tglobal $dolibarr_main_instance_unique_id;\\n \\n \\t\\t\\t\/\/print $edituser->pass_temp.\\'-\\'.$edituser->id.\\'-\\'.$dolibarr_main_instance_unique_id.\\' \\'.$passworduidhash;\\n-\\t\\t\\tif (dol_verifyHash($edituser->pass_temp.\\'-\\'.$edituser->id.\\'-\\'.$dolibarr_main_instance_unique_id, $passworduidhash)) {\\n+\\t\\t\\tif ($edituser->pass_temp && dol_verifyHash($edituser->pass_temp.\\'-\\'.$edituser->id.\\'-\\'.$dolibarr_main_instance_unique_id, $passworduidhash)) {\\n \\t\\t\\t\\t\/\/ Clear session\\n \\t\\t\\t\\tunset($_SESSION[\\'dol_login\\']);\\n \\t\\t\\t\\t$_SESSION[\\'dol_loginmesg\\'] = $langs->trans(\\'NewPasswordValidated\\'); \/\/ Save message for the session page'}}",
            "message_norm":"fix report by ahsan aziz (can reset the password of another user that\ndid not request password reset).",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('password', 'SECWORD', ''), ('password', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['htdocs\/user\/passwordforgotten.php'])",
            "num_files":1.0,
            "patch_content":"From 87f9530272925f0d651f59337a35661faeb6f377 Mon Sep 17 00:00:00 2001\nFrom: Laurent Destailleur <eldy@destailleur.fr>\nDate: Mon, 5 Jul 2021 17:29:10 +0200\nSubject: [PATCH] Fix report by Ahsan Aziz (can reset the password of another\n user that did not request password reset).\n\n---\n htdocs\/user\/passwordforgotten.php | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/htdocs\/user\/passwordforgotten.php b\/htdocs\/user\/passwordforgotten.php\nindex cb149f1e481e3..63f33b5f8ec7a 100644\n--- a\/htdocs\/user\/passwordforgotten.php\n+++ b\/htdocs\/user\/passwordforgotten.php\n@@ -87,14 +87,14 @@\n \t\/\/ Validate new password\n \tif ($action == 'validatenewpassword' && $username && $passworduidhash) {\n \t\t$edituser = new User($db);\n-\t\t$result = $edituser->fetch('', $_GET[\"username\"]);\n+\t\t$result = $edituser->fetch('', $username);\n \t\tif ($result < 0) {\n \t\t\t$message = '<div class=\"error\">'.dol_escape_htmltag($langs->trans(\"ErrorLoginDoesNotExists\", $username)).'<\/div>';\n \t\t} else {\n \t\t\tglobal $dolibarr_main_instance_unique_id;\n \n \t\t\t\/\/print $edituser->pass_temp.'-'.$edituser->id.'-'.$dolibarr_main_instance_unique_id.' '.$passworduidhash;\n-\t\t\tif (dol_verifyHash($edituser->pass_temp.'-'.$edituser->id.'-'.$dolibarr_main_instance_unique_id, $passworduidhash)) {\n+\t\t\tif ($edituser->pass_temp && dol_verifyHash($edituser->pass_temp.'-'.$edituser->id.'-'.$dolibarr_main_instance_unique_id, $passworduidhash)) {\n \t\t\t\t\/\/ Clear session\n \t\t\t\tunset($_SESSION['dol_login']);\n \t\t\t\t$_SESSION['dol_loginmesg'] = $langs->trans('NewPasswordValidated'); \/\/ Save message for the session page"
        },
        {
            "index":252,
            "vuln_id":"GHSA-2jx8-v4hv-gx3h",
            "cwe_id":"{'CWE-611'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/reportportal\/service-api\/commit\/da4a012abdcc69f02f4255d81466f1f473b7f418'}",
            "dataset":"osv",
            "summary":"XXE vulnerability in Launch import | Release Date | Affected Projects | Affected Versions | Access Vector| Security Risk |\n|--------------|-------------------|-------------------|---------------|---------------|\n| Monday, May 4, 2020| [service-api](https:\/\/github.com\/reportportal\/service-api) | Every version, starting from 3.1.0 | Remote | Medium |\n\n### Impact\nStarting from version 3.1.0 we introduced a new feature of JUnit XML launch import. Unfortunately XML parser was not configured properly to prevent XML external entity (XXE) attacks. This allows a user to import a specifically-crafted XML file that uses external entities for extraction of secrets from Report Portal service-api module or server-side request forgery.\n\nReport Portal versions 4.3.12+ and 5.1.1+ disables external entity resolution for theirs XML parser.\n\nWe advise our users install the latest releases we built specifically to address this issue.\n\n### Patches\nFixed with https:\/\/github.com\/reportportal\/service-api\/pull\/1201\n\n### Binary Download\nhttps:\/\/bintray.com\/epam\/reportportal\/service-api\/5.1.1\nhttps:\/\/bintray.com\/epam\/reportportal\/service-api\/4.3.12\n\n### Docker Container Download\n* RP v4: `docker pull reportportal\/service-api:4.3.12`\n* RP v5: `docker pull reportportal\/service-api:5.1.1`\n\n### Acknowledgement\nThe issue was reported to Report Portal Team by an external security researcher.\nOur Team thanks Julien M. for reporting the issue.\n\n### For more information\nIf you have any questions or comments about this advisory email us: [support@reportportal.io](mailto:support@reportportal.io)",
            "published_date":"2021-06-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/reportportal\/service-api",
            "commit_href":"https:\/\/github.com\/reportportal\/service-api\/commit\/da4a012abdcc69f02f4255d81466f1f473b7f418",
            "commit_sha":"da4a012abdcc69f02f4255d81466f1f473b7f418",
            "patch":"SINGLE",
            "chain_ord":"['da4a012abdcc69f02f4255d81466f1f473b7f418']",
            "before_first_fix_commit":"{'afbd14d404c4084cfdd17d60685f8984949b1350', '74a954601ad9eea14a0650f5c1ae9bd91031e2ba'}",
            "last_fix_commit":"da4a012abdcc69f02f4255d81466f1f473b7f418",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/30\/2020, 21:14:46",
            "message":"Merge pull request #1201 from reportportal\/sax-hotfix\n\nsax vulnerability fix",
            "author":"Pavel Bortnik",
            "comments":null,
            "stats":"{'additions': 18, 'deletions': 1, 'total': 19}",
            "files":"{'src\/main\/java\/com\/epam\/ta\/reportportal\/core\/imprt\/impl\/junit\/XunitParseJob.java': {'additions': 18, 'deletions': 1, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/reportportal\/service-api\/raw\/da4a012abdcc69f02f4255d81466f1f473b7f418\/src%2Fmain%2Fjava%2Fcom%2Fepam%2Fta%2Freportportal%2Fcore%2Fimprt%2Fimpl%2Fjunit%2FXunitParseJob.java', 'patch': '@@ -24,8 +24,10 @@\\n import org.springframework.context.annotation.Scope;\\n import org.springframework.stereotype.Component;\\n import org.xml.sax.SAXException;\\n+import org.xml.sax.XMLReader;\\n \\n import javax.xml.parsers.ParserConfigurationException;\\n+import javax.xml.parsers.SAXParser;\\n import javax.xml.parsers.SAXParserFactory;\\n import java.io.IOException;\\n import java.io.InputStream;\\n@@ -43,7 +45,22 @@ public class XunitParseJob implements Callable<ParseResults> {\\n \\t@Override\\n \\tpublic ParseResults call() {\\n \\t\\ttry {\\n-\\t\\t\\tSAXParserFactory.newInstance().newSAXParser().parse(xmlInputStream, handler);\\n+\\t\\t\\tSAXParserFactory spf = SAXParserFactory.newInstance();\\n+\\t\\t\\tSAXParser saxParser = spf.newSAXParser();\\n+\\t\\t\\tXMLReader reader = saxParser.getXMLReader();\\n+\\n+\\t\\t\\t\/\/ Xerces 1 - http:\/\/xerces.apache.org\/xerces-j\/features.html#external-general-entities\\n+\\t\\t\\t\/\/ Xerces 2 - http:\/\/xerces.apache.org\/xerces2-j\/features.html#external-general-entities\\n+\\n+\\t\\t\\t\/\/ Using the SAXParserFactory\\'s setFeature\\n+\\t\\t\\tspf.setFeature(\"http:\/\/xml.org\/sax\/features\/external-general-entities\", false);\\n+\\t\\t\\t\/\/ Using the XMLReader\\'s setFeature\\n+\\t\\t\\treader.setFeature(\"http:\/\/xml.org\/sax\/features\/external-general-entities\", false);\\n+\\n+\\t\\t\\t\/\/ Xerces 2 only - http:\/\/xerces.apache.org\/xerces-j\/features.html#external-general-entities\\n+\\t\\t\\tspf.setFeature(\"http:\/\/apache.org\/xml\/features\/disallow-doctype-decl\", true);\\n+\\n+\\t\\t\\tsaxParser.parse(xmlInputStream, handler);\\n \\t\\t} catch (SAXException | IOException | ParserConfigurationException e) {\\n \\t\\t\\tthrow new ReportPortalException(ErrorType.PARSING_XML_ERROR, e.getMessage());\\n \\t\\t}'}}",
            "message_norm":"merge pull request #1201 from reportportal\/sax-hotfix\n\nsax vulnerability fix",
            "language":"ca",
            "entities":"[('#1201', 'ISSUE', ''), ('sax', 'SECWORD', ''), ('hotfix', 'ACTION', ''), ('sax', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/com\/epam\/ta\/reportportal\/core\/imprt\/impl\/junit\/XunitParseJob.java'])",
            "num_files":1.0,
            "patch_content":"From afbd14d404c4084cfdd17d60685f8984949b1350 Mon Sep 17 00:00:00 2001\nFrom: pavel_bortnik <pavel_bortnik@epam.com>\nDate: Thu, 30 Apr 2020 19:54:48 +0300\nSubject: [PATCH] sax vulnerability fix\n\n---\n ...\/core\/imprt\/impl\/junit\/XunitParseJob.java  | 19 ++++++++++++++++++-\n 1 file changed, 18 insertions(+), 1 deletion(-)\n\ndiff --git a\/src\/main\/java\/com\/epam\/ta\/reportportal\/core\/imprt\/impl\/junit\/XunitParseJob.java b\/src\/main\/java\/com\/epam\/ta\/reportportal\/core\/imprt\/impl\/junit\/XunitParseJob.java\nindex c6a4f4877a..186074c97f 100644\n--- a\/src\/main\/java\/com\/epam\/ta\/reportportal\/core\/imprt\/impl\/junit\/XunitParseJob.java\n+++ b\/src\/main\/java\/com\/epam\/ta\/reportportal\/core\/imprt\/impl\/junit\/XunitParseJob.java\n@@ -24,8 +24,10 @@\n import org.springframework.context.annotation.Scope;\n import org.springframework.stereotype.Component;\n import org.xml.sax.SAXException;\n+import org.xml.sax.XMLReader;\n \n import javax.xml.parsers.ParserConfigurationException;\n+import javax.xml.parsers.SAXParser;\n import javax.xml.parsers.SAXParserFactory;\n import java.io.IOException;\n import java.io.InputStream;\n@@ -43,7 +45,22 @@ public class XunitParseJob implements Callable<ParseResults> {\n \t@Override\n \tpublic ParseResults call() {\n \t\ttry {\n-\t\t\tSAXParserFactory.newInstance().newSAXParser().parse(xmlInputStream, handler);\n+\t\t\tSAXParserFactory spf = SAXParserFactory.newInstance();\n+\t\t\tSAXParser saxParser = spf.newSAXParser();\n+\t\t\tXMLReader reader = saxParser.getXMLReader();\n+\n+\t\t\t\/\/ Xerces 1 - http:\/\/xerces.apache.org\/xerces-j\/features.html#external-general-entities\n+\t\t\t\/\/ Xerces 2 - http:\/\/xerces.apache.org\/xerces2-j\/features.html#external-general-entities\n+\n+\t\t\t\/\/ Using the SAXParserFactory's setFeature\n+\t\t\tspf.setFeature(\"http:\/\/xml.org\/sax\/features\/external-general-entities\", false);\n+\t\t\t\/\/ Using the XMLReader's setFeature\n+\t\t\treader.setFeature(\"http:\/\/xml.org\/sax\/features\/external-general-entities\", false);\n+\n+\t\t\t\/\/ Xerces 2 only - http:\/\/xerces.apache.org\/xerces-j\/features.html#external-general-entities\n+\t\t\tspf.setFeature(\"http:\/\/apache.org\/xml\/features\/disallow-doctype-decl\", true);\n+\n+\t\t\tsaxParser.parse(xmlInputStream, handler);\n \t\t} catch (SAXException | IOException | ParserConfigurationException e) {\n \t\t\tthrow new ReportPortalException(ErrorType.PARSING_XML_ERROR, e.getMessage());\n \t\t}"
        },
        {
            "index":22,
            "vuln_id":"GHSA-gq77-3r6x-383w",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/818d7fe731f452acccacf731ce47ec27ad68049c'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in ShowDoc ShowDoc version 2.10.3 and prior is vulnerable to stored cross-site scripting. A patch is available and anticipated to be part of version 2.10.4.",
            "published_date":"2022-03-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/818d7fe731f452acccacf731ce47ec27ad68049c",
            "commit_sha":"818d7fe731f452acccacf731ce47ec27ad68049c",
            "patch":"SINGLE",
            "chain_ord":"['818d7fe731f452acccacf731ce47ec27ad68049c']",
            "before_first_fix_commit":"{'85af5ab5a375ce16f991e2acb15466be4b3ba44b'}",
            "last_fix_commit":"818d7fe731f452acccacf731ce47ec27ad68049c",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/08\/2022, 03:48:44",
            "message":"file upload bug",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/818d7fe731f452acccacf731ce47ec27ad68049c\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -301,6 +301,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \".svg\")\\n \\t\\t\\t|| $isDangerStr($filename , \".htm\")\\n \\t\\t\\t|| $isDangerStr($filename , \"%\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}'}}",
            "message_norm":"file upload bug",
            "language":"ro",
            "entities":"[('bug', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
            "num_files":1.0,
            "patch_content":"From 818d7fe731f452acccacf731ce47ec27ad68049c Mon Sep 17 00:00:00 2001\nFrom: star7th <xing7th@gmail.com>\nDate: Tue, 8 Mar 2022 11:48:44 +0800\nSubject: [PATCH] file upload bug\n\n---\n server\/Application\/Api\/Model\/AttachmentModel.class.php | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/server\/Application\/Api\/Model\/AttachmentModel.class.php b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\nindex 3d76105b8..d84898984 100644\n--- a\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n+++ b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n@@ -301,6 +301,7 @@ public function isDangerFilename($filename){\n \t\t\t|| $isDangerStr($filename , \".svg\")\n \t\t\t|| $isDangerStr($filename , \".htm\")\n \t\t\t|| $isDangerStr($filename , \"%\")\n+\t\t\t|| $isDangerStr($filename , \".xml\")\n \t\t) {\n \t\t\treturn true;\n \t\t}"
        }
    ]
}